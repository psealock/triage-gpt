{"prompt":"Incorrect variable name being used in one of the `api-core-tests`\r\nproductId instead of productTagId [here](https:\/\/github.com\/woocommerce\/woocommerce\/blob\/trunk\/plugins\/woocommerce\/tests\/api-core-tests\/tests\/products\/products-crud.test.js#L932)\n\n### Expected behavior\n\ncorrect variable name being used in one of the `api-core-tests`\r\nproductTagId instead of productId [here](https:\/\/github.com\/woocommerce\/woocommerce\/blob\/trunk\/plugins\/woocommerce\/tests\/api-core-tests\/tests\/products\/products-crud.test.js#L932)\n\n### Actual behavior\n\nIncorrect variable name being used in one of the `api-core-tests`\r\nproductId instead of productTagId [here](https:\/\/github.com\/woocommerce\/woocommerce\/blob\/trunk\/plugins\/woocommerce\/tests\/api-core-tests\/tests\/products\/products-crud.test.js#L932)\n\n### Steps to reproduce\n\nIncorrect variable name being used in one of the `api-core-tests`\r\nproductId instead of productTagId [here](https:\/\/github.com\/woocommerce\/woocommerce\/blob\/trunk\/plugins\/woocommerce\/tests\/api-core-tests\/tests\/products\/products-crud.test.js#L932)\n\n\n\n###\n\n","completion":" [5222414669]"}
{"prompt":"Product sections also include an icon to the left side of the title as part of the design.\nCurrently we only support a title and description. This issue would be to add support for an icon, which can be added through the template config.\n\nHave a look at the current implementation of GB for blocks, look at `BlockIcon`.\n\n**Design**\n\n![Image](https:\/\/user-images.githubusercontent.com\/2240960\/225605930-5df567ad-01cc-4a90-b0e4-ff25c9be2b59.png)\n\nAkVNGImLgSqCObTQ3idVn7-fi-10-139\n\n**Acceptance criteria**\n\n- [ ] Product section block should render an icon next to the title if provided with one ( should be optional ).\n\n###\n\n","completion":" [3837257959,4370024739]"}
{"prompt":"We should hide or remove the block inspector that is displayed on the right hand side of the product block editor:\n![Image](https:\/\/user-images.githubusercontent.com\/2240960\/225369985-c8e3e93c-6eb1-4a12-ac8d-b38576884666.png)\n\nI did mention `hide` as an option as it may be beneficial for us and 3PD's to have it show up for debugging. Maybe we only want it to show up in `development` mode?\n\n**Acceptance criteria**\n\n- [ ] Block inspector should not be visible anymore.\n\n###\n\n","completion":" [3837257959,4370024739]"}
{"prompt":"We are currently showing the block breadcrumbs as seen in the image below.\nWe should remove this as this is not part of the design.\n\n![Image](https:\/\/user-images.githubusercontent.com\/2240960\/225286303-bc775c1d-0e40-4d90-8027-2751af298d47.png)\n\n**Acceptance criteria**\n\n- [ ] Block breadcrumbs should not be visible anymore\n\n###\n\n","completion":" [3837257959,4370024739]"}
{"prompt":"## User Story\n\n> As a new merchant that does not want to use WC Pay, \n> I want to see all other payment solutions easily,\n> so that I can setup my store my way.\n\n## Acceptance Criteria\n\n```\nFeature: WC Payments Task \nGiven WC Pay is not installed and in available country\nWhen WC Pay task is opened by the user\nThen Other payments solutions should be visible\n```\n\n## Screenshots\n\n![Image](https:\/\/user-images.githubusercontent.com\/9312929\/224860847-628da37d-eb08-4e0b-98eb-e3a5c7f89404.png)\n\n\n\n###\n\n","completion":" [1527866622,3943424841]"}
{"prompt":"Migrate `tasks\/fills\/woocommerce-payments.js` and `tasks\/fills\/connect.js` to TS\r\n\r\n- [ ] [connect.js](https:\/\/github.com\/woocommerce\/woocommerce\/blob\/trunk\/plugins\/woocommerce-admin\/client\/tasks\/fills\/connect.js)\r\n- [ ] [woocommerce-payments.js](https:\/\/github.com\/woocommerce\/woocommerce\/blob\/trunk\/plugins\/woocommerce-admin\/client\/tasks\/fills\/woocommerce-payments.js)\r\n\r\n\r\n## Acceptance Criteria\r\n\r\n- [ ] *.js files are converted to *.ts or *.tsx\r\n- [ ] Run `pnpm --filter=woocommerce\/client\/admin ts:check` without any errors\r\n- [ ] Not break existing functionalities\r\n\n\n###\n\n","completion":" [3943424841]"}
{"prompt":"The \"Stock status\" field is now displayed as a collection of radio buttons instead of a dropdown. However, if for any reason the number of items inside exceeds three, it should be displayed as a dropdown again.\r\n\r\n<img width=\"547\" alt=\"Screenshot 2023-03-08 at 17 02 53\" src=\"https:\/\/user-images.githubusercontent.com\/1314156\/223835059-d4048b0f-f1e1-46af-be2d-d20b11be307d.png\">\r\n\r\n**Designs:**\r\n[zs56kcy53K7GoGhgyjcQ2R-fi-210%3A30925](https:\/\/href.li\/?https:\/\/www.figma.com\/file\/zs56kcy53K7GoGhgyjcQ2R\/?node-id=210%3A30925)\r\n\r\n```[tasklist]\r\n### Acceptance criteria\r\n- [ ] Show \"Stock status\" as a collection of radio buttons.\r\n- [ ] If the number of items inside exceeds three, it should be displayed as a dropdown again.\r\n- [ ] Add a filter to verify whether the radio buttons will be shown.\r\n```\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"We use the RestAPI, to get orders, products, customers, ... (i will name it \"restitems\") from WooCommerce to a customized order management program.\r\nNow we want have a filter \"AfterID\" on the RestAPI, to get as axample all orders after the ID \"12345\".\r\nTo download all \"restitems\" and find out, in what page (pagination, offset) they requested IDs are, is very slow.\r\n\r\nThe RestAPI filter attribute should work like \"per_page\", \"offset\", and other filter attributes.\r\n\r\nFor example:\r\nhttps:\/\/example.com\/wp-json\/wc\/v3\/orders?FromID=12345\r\n\r\nThe RestAPI now should give back all orders after the order ID 12345.\n\n### Describe alternatives you've considered\n\nLooking for the ID in the downloaded Items in the pagination.\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [2258932484,3837257959]"}
{"prompt":"Blocked by https:\/\/github.com\/woocommerce\/woocommerce\/issues\/36991\n\nYou may want to look at the [navigation block ](https:\/\/github.com\/WordPress\/gutenberg\/tree\/trunk\/packages\/block-library\/src\/navigation) or the [column and columns](https:\/\/github.com\/WordPress\/gutenberg\/tree\/trunk\/packages\/block-library\/src\/columns) blocks for inspiration.\n~~And also consider if it would be worth defining a tab as a template or a pattern (template might be the better fit ).~~\n\n#### Screenshots\n\n![Image](https:\/\/user-images.githubusercontent.com\/2240960\/223374700-6b6b1cf0-0e8a-494d-87b1-6edab8532a25.png)\n\n#### Design\n\n**Note:** The design should be used as a more general look and feel of the component, as the design might still be change a bit. So to not get caught up in the nitty gritty.\nz2spDLDAX5DbMeG4ZTMp06-fi-804%3A165896\n\n#### Acceptance criteria\n\n* [ ] A tab block should be rendered in the product editor template\n* [ ] A tab should have a name\n* [ ] A tab should support nested sections and fields.\n\n###\n\n","completion":" [3837257959,4370024739]"}
{"prompt":"When enabling HPOS on the Features page, the following error shows:\r\n\r\n```\r\nWordPress database error: [Table 'databasename.wp_wc_orders' doesn't exist]\r\nSELECT( ( SELECT COUNT(1) FROM wp_posts posts LEFT JOIN wp_wc_orders orders ON posts.id=orders.id WHERE posts.post_type in ('shop_order', 'shop_order_refund', 'shop_subscription') AND posts.post_status != 'auto-draft' AND orders.id IS NULL) + (SELECT COUNT(1) FROM ( SELECT orders.id FROM wp_wc_orders orders JOIN wp_posts posts on posts.ID = orders.id WHERE posts.post_type IN ('shop_order', 'shop_order_refund', 'shop_subscription') AND orders.date_updated_gmt < posts.post_modified_gmt ) x) ) count\r\n```\r\n\r\nhttps:\/\/i.imgur.com\/YX6sb1k.png\r\n\r\nPossibly related to [#35902](https:\/\/github.com\/woocommerce\/woocommerce\/issues\/35902)\r\n\r\n<details>\r\n  <summary>System Details<\/summary>\r\n\r\n\n\n###\n\n","completion":" [1527868600,3834300886,3837257959]"}
{"prompt":"`ajaxComplete()` does not seem to be triggering anymore in 7.5 beta, for example when the update cart button is used or checkout country is changed, etc...\n\n### Expected behavior\n\nShould trigger when ajax request is done https:\/\/api.jquery.com\/ajaxcomplete\/\r\n\r\n\n\n### Actual behavior\n\nNot triggering\n\n### Steps to reproduce\n\n```js\r\njQuery(document).ajaxComplete(function () {\r\n  console.log('ajax complete')\r\n})\r\n```\n\n\n\n###\n\n","completion":" [3837257959]"}
{"prompt":"[The PR assigner workflow](https:\/\/github.com\/woocommerce\/woocommerce\/blob\/trunk\/.github\/project-community-pr-assigner.yml) currently assigns team Solaris as a reviewer when changes are submitted to older Puppeteer packages. They'd like to keep this that way for now as they haven't been deprecated yet. \r\n\r\nBut now Solaris would also like to be assigned reviewer whenever a change is submitted to the new Playwright test suites -- `e2e`, `api`, and `performance`. The file paths for these are the following: \r\n\r\n- `plugins\/woocommerce\/tests\/e2e-pw`\r\n- `plugins\/woocommerce\/tests\/api-core-tests`\r\n- `plugins\/woocommerce\/tests\/performance`\r\n\n\n###\n\n","completion":" [3844183371]"}
{"prompt":"Blocked by https:\/\/github.com\/woocommerce\/woocommerce\/issues\/36991\n\nTo make testing and follow-up issues easier, we should create an initial field as a block for use in other PRs.  This will make it easier to see hydrated data, verify validation, and make sure edits are persisted.\n\nPrior art for this field can be seen in [this PR](https:\/\/github.com\/woocommerce\/woocommerce\/pull\/36837).\n\nNote that since we don't have a finalized design for this new experience, I think using the existing name field styling as is should be fine.\n\n#### Screenshots\n\nNote: the screenshot is from the POC and not the wireframe.\n![Image](https:\/\/user-images.githubusercontent.com\/10561050\/221972510-81226f5b-259e-4236-9216-f066b993851d.png)\n\n\n#### Design\n\n**Note:** The design should be used as a more general look and feel of the component, as the design might still be change a bit. So to not get caught up in the nitty gritty.\nz2spDLDAX5DbMeG4ZTMp06-fi-806%3A160389 \n\n#### Acceptance criteria\n\n* [ ] A name block should be rendered in the product editor template\n* [ ] The field should store edits inside the entity data store on change (these will not be persisted in this issue)\n* [ ] Name field should roughly reflect the Figma designs\n\n###\n\n","completion":" [3837257959]"}
{"prompt":"I was trying to make a plugin that retrieves some shipping methods from an API and gets its response. I followed the documentation for the Shipping Methods API and Settings API to store the \"client_id\" and \"client_secret\" keys required to communicate with the API. When I tried to use those settings, the code returned empty strings, and when I attempted to save them through the WP dashboard, it said \"your settings have been saved,\" but in reality, they were empty in the database. While looking for the reason behind this, I couldn't see its fields going through POST on the browser, which leads me to believe that there's a bug.\r\n![Captura de tela de 2023-02-28 11-03-56](https:\/\/user-images.githubusercontent.com\/114659096\/221877081-1a084b5a-8246-492b-a3a4-fbef312e9de0.png)\r\n\n\n### Expected behavior\n\nWhen I use \"$this->settings['client_id']\" in the shipping method class that I created, the previously saved strings will be returned.\n\n### Actual behavior\n\nIt returns empty strings and doesn't store the strings I entered on the settings page.\r\n\r\n\r\nvar_dump($this->settings);\r\n![Captura de tela de 2023-02-28 11-12-53](https:\/\/user-images.githubusercontent.com\/114659096\/221879330-761723bb-e5e2-4a5e-bc4b-bce373407d48.png)\r\n\n\n### Steps to reproduce\n\n1. Copy the entire example of the Shipping Method API and override either the $form_fields or init_form_fields function (or both).\r\n2. Go to your plugin's Shipping Method settings on the WP dashboard page and save some fields.\r\n3. Output these variables or try to use them in the code somewhere.\n\n\n\n###\n\n","completion":" [1891051459,2258932484,3837257959]"}
{"prompt":"There is some prior art for the initial editor skeleton and framework in [this POC PR](https:\/\/github.com\/woocommerce\/woocommerce\/pull\/36837).\n\nThis issue will involve adding the base editor components for use with a couple of placeholder blocks.\n\nNote that we can probably combine the add\/edit product pages into a single page\/component this time instead of creating 2 separate `addProductPage` and `editProductPage` components.\n\nUpdating the routes of the current editor will be done as part of this issue: https:\/\/github.com\/woocommerce\/woocommerce\/issues\/36989\n\n#### Acceptance criteria\n\n* [x] The skeleton editor shows some placeholder blocks until the other blocks are ready to be added\n* [x] Visiting the add product page should show the new skeleton editor\n* [x] Visiting the edit product page should show the new skeleton editor\n\n\n###\n\n","completion":" [3837257959]"}
{"prompt":"Updating to WooCommerce 7.4 introduces a bug on variation products. When a product has 5 ( or any value ) of a specific item left instock, the user is able to select more than the 5 items items. This is then presented with an error saying there are only 5 items left instock. Prior to 7.4 this issue wasn't present.\r\n\r\nRelated support tickets:\r\nhttps:\/\/wordpress.org\/support\/topic\/ordering-variations-no-longer-works\/\r\nhttps:\/\/wordpress.org\/support\/topic\/unlimited-number-of-stock-to-select-after-update\/\r\n\r\n### Expected behavior\r\n\r\nWhen a variable product has \"X\" number of products instock a user shouldn't be able to add more than \"X\" via the product quantity input.\r\n\r\n### Actual behavior\r\n\r\nWhen a variable product has \"5\" items instock I can add more than 5 in the input.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a variable product with some variations.\r\n2. Set a variation to \"manage stock\"\r\n3. Set a variations \"Stock quantity\"\r\n4. Set the variation to \"Do not allow\" backorders.\r\n5. View the product from the front end\r\n6. Set the variation you chose about\r\n7. Increase the qty higher than what you set the stock quantity too ( this is the issue )\r\n8. Click add to cart\r\n9. You should then be presented with a notice similar too: \"You cannot add that amount of \"{ variable product name }\" to the cart because there is not enough stock (1 remaining).\"\r\n\r\n\n\n###\n\n","completion":" [1527866622,1891051436,1891051456,1891051461,3837257959]"}
{"prompt":"In `wc_get_account_menu_items()`, the label for `edit-address` is set to `_n( 'Address', 'Addresses', ( 1 + (int) wc_shipping_enabled() ), 'woocommerce' ),`. The singular \"Address\" text will display correctly in the my-account area, but if shipping is enabled, and hence _n() attempts to load the plural form of the word, then a blank string is returned.\n\n### Expected behavior\n\nThe my account area should display the text \"Addresses\"\n\n### Actual behavior\n\nAn empty string is returned, so no label is visible\n\n### Steps to reproduce\n\nEnable en_GB language\r\nEnable WC Shipping\r\nVisit my-account page\n\n\n\n###\n\n","completion":" [3837257959]"}
{"prompt":"I have partners section on my e-shop. Partners are a repeater field created via ACF. One sub field there is logo and it allows to add SVG logo for partner. This is regular image field in ACF. But when i output that SVG logo on website i get error message \"Notice: Undefined index: width in \/app\/cms\/wp-content\/plugins\/woocommerce\/includes\/class-wc-regenerate-images.php on line 276 \r\nNotice: Undefined index: height in \/app\/cms\/wp-content\/plugins\/woocommerce\/includes\/class-wc-regenerate-images.php on line 277\"\r\n\r\nWhat bug's me is that this is just a regular section that is no way related to Woocommerce. So why even Woocommerce try's to do something with my repeater field and image field? \r\n\r\nOnly workaround is to change Return Format for that logo field from \"Image Array\" to \"Image URL\".\r\n\r\nSo two bugs here:\r\na) Why Woocommerce try's to interact images that are added via ACF and meta fields\r\nb) function get_full_size_image_dimensions() should have check for SVG's since SVG's don't have \r\n\r\nSame issue on Woocommerce support forums at Wordpress.org: [https:\/\/wordpress.org\/support\/topic\/woocommerce-regenerating-images-svg-error\/](https:\/\/wordpress.org\/support\/topic\/woocommerce-regenerating-images-svg-error\/)\n\n### Expected behavior\n\nClean image output without notice and without running Woocommerce get_full_size_image_dimensions() function.\n\n### Actual behavior\n\nWoocommerce runs get_full_size_image_dimensions() without reason and results creating notices since it try's to find width and height for SVG.\n\n### Steps to reproduce\n\n1. Install Woocommerce\r\n2. Install Advanced Custom Fields Pro plugin\r\n3. Create repeater field named Partners\r\n4. For that repeater field add sub field Logo as image field\r\n5. Try to echo image and see that notice is outputted\n\n\n\n###\n\n","completion":" [3837257959]"}
{"prompt":"The header slots (`WooHeaderItem` and `WooHeaderPageTitle`) and footer slots (`WooFooterItem`) should be moved to a new package, `@woocommerce\/admin-layout` so that they can be used across packages and within 3rd party plugins.\r\n\r\nEventually, it would be good to move other header and footer components into this package, but for now we can begin with just moving the slots so they can be filled in the product editor.\r\n\r\n**Acceptance Criteria**\r\n* [ ] A new package is created with the name `@woocommerce\/admin-layout`\r\n* [ ] `WooHeaderItem` is exposed via this package\r\n* [ ] `WooHeaderNavigationItem` is exposed via this package\r\n* [ ] `WooHeaderPageTitle` is exposed via this package\r\n* [ ] `WooFooterItem` is exposed via this package\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"This issue scopes making tests in`WC_Tests_CRUD_Meta_Data` and `WC_Tests_CRUD_Orders` classes compatible with HPOS by fixing test or core code, as needed.\r\n\r\nPlease fork from #36650 for workflow to run tests in HPOS context.\r\n\r\nTowards #36376\r\n\r\n\n\n###\n\n","completion":" [3834300886,3837257959]"}
{"prompt":"This issue scopes adding compatibility for unit tests in `WC_Tests_API_Orders` and `WC_Tests_API_Orders_V2` classes by fixing unit tests, or core code as appropriate.\r\n\r\nPlease fork from #36650 for workflow to run tests in HPOS context.\r\n\r\nTowards #36376\n\n###\n\n","completion":" [3834300886,3837257959]"}
{"prompt":"During the setup wizard there is a call made to a custom REST API endpoint on woocommerce.com that contains themes which have either been deleted or changed to Draft status woocommerce.com.\r\n\r\nThose themes are as follows:\r\n* Makoney\r\n* Mugistore\r\n* Solarone\r\n\r\nAnd the REST API endpoint is here: https:\/\/woocommerce.com\/wp-json\/wccom-extensions\/1.0\/search?category=themes\r\n\r\nHere's a screenshot for reference:\r\n\r\n![redirects local_wp_wp-admin_admin php_page=wc-admin path=%2Fsetup-wizard step=theme-min](https:\/\/user-images.githubusercontent.com\/1377956\/215259736-ab8d581c-a707-4c49-9b23-25d27fcce565.png)\r\n\n\n### Expected behavior\n\nAll of the themes in the setup wizard should be able to be installed.\n\n### Actual behavior\n\nIf you click on \"Choose\" on one of the broken themes then after a while you'll see an error message:\r\n\"The requested theme Makoney could not be installed. Theme API call failed.\"\n\n### Steps to reproduce\n\nMake your way through the setup wizard and when you get to step \"5 Theme\" try and install one of the broken themes\n\n\n\n###\n\n","completion":" [641282302,1891051446,3837257959]"}
{"prompt":"In #36280 we introduced the concept of test skipping that satisfied the tests for a given workflow based on the file path.\r\n\r\nWhile the skip-tests are running, they don't appear to be actually satisfying the requirement. I believe this is because the name for the required check needs to be the thing that matches, not the name for the job.\r\n\r\nIt would also be nice to clean this up and move all skip-checking under a single file, and switch to doing this on a username basis for the bot-created PRs.\n\n###\n\n","completion":" [3844183371]"}
{"prompt":"We should create a REST API endpoint to generate a product's slug. The endpoint should take a product name string as a parameter.\n\n## Acceptance criteria\n\n- [ ] REST API endpoint to generate a unique product slug using a supplied product name string as input.\n\n###\n\n","completion":" [2258932484,4370024739,4370026978]"}
{"prompt":"This is a follow-up to https:\/\/github.com\/woocommerce\/woocommerce\/pull\/36519#pullrequestreview-1263028565. We should create a unit test to ensure the filter is able to add\/replace tasklists at will.\n\n###\n\n","completion":" [3837257959,3943196086,3943424887]"}
{"prompt":"\r\nAfter pressing the three dots in the top bar, the menu is covered by the tabs.\r\n![Screenshot 2023-01-20 at 13 17 23](https:\/\/user-images.githubusercontent.com\/1314156\/213749861-9c0caee8-79c2-423d-8a80-38bc22fe21b6.png)\r\n\r\n### Expected behavior\r\n\r\nThe top bar menu should be fully visible\r\n![Screenshot 2023-01-06 at 15 53 57](https:\/\/user-images.githubusercontent.com\/1314156\/211079667-f9f42643-a889-4372-a189-0d258632fdad.png)\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Go to the new product management experience.\r\n2. Press the three dots in the top bar.\r\n3. The menu is covered by the tabs.\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"There is a memory leakage issue\/performance bug in OrderTableDataStore's `filter_raw_meta_data` method, as can be seen in the following `qcachegrind` screenshot:\r\n\r\nFor two memory dumps taken sometime after the other in the request, we can see that memory allocated by `filter_raw_meta_data` will continue to increase and is not de-allocated:\r\n\r\n![Screenshot 2023-01-17 at 4 40 14 PM](https:\/\/user-images.githubusercontent.com\/7571618\/212885855-22f3f54d-3f72-4058-ac7a-a4991fe9539d.png)\r\n\r\nUpon closer look, it looks like we are continue to add keys to `internal_meta_keys` prop of the datastore on every order load but are not clearing it.\r\n\r\nTo reproduce:\r\n\r\nOn a WP shell, execute following command for existing orders with ID id1 and id2:\r\n\r\n```php\r\n$ds = WC_Data_Store::load( 'order' );\r\nwc_get_order( $id1 );\r\ncount( $ds->get_internal_meta_keys() ); \/\/ 85\r\nwc_get_order($id2);\r\ncount( $ds->get_internal_meta_keys() ); \/\/ 118 \r\n```\r\n\r\n**Note**: Make sure that these orders are not cached. Otherwise, they will be loaded directly from cache, bypassing the data_store filter function.\n\n###\n\n","completion":" [472334370,1527866622,3834300886,3837257959]"}
{"prompt":"Continue the work that was initially started as part of https:\/\/github.com\/woocommerce\/woocommerce\/issues\/36073 to create a data store for the product form data.\nWe should add the necessary selectors\/resolvers for retrieving the sections, tabs.\nThis issue may depend on: https:\/\/github.com\/woocommerce\/woocommerce\/issues\/36422 to be finished.\n\n**Acceptance Criteria**\n\n- [ ] A selector should be available to retrieve the sections, tabs\n\n###\n\n","completion":" [3943425992,4370024739]"}
{"prompt":"### Description\n\nIn order to decrease the load on Action Scheduler and improve overall site performance, instead of scheduling actions when a customer is updated (via checkout or other means), we should directly update the Analytics customer data store. The updates to the Analytics data store are not performance intensive and the expected overall performance gains outweigh the slight increase in synchronous processing when customer updates are made.\n\n### Acceptance criteria\n\n- [ ] When a new customer is created (actions: `woocommerce_new_customer`), `CustomersDataStore::update_registered_customer` should be called\n- [ ] When a customer is updated (actions: `woocommerce_update_customer`, `updated_user_meta`), `CustomersDataStore::update_registered_customer` should be called\n- [ ] When a customer is deleted (actions `delete_user`, `remove_user_from_blog`), `CustomersDataStore::delete_customer_by_user_id()` should be called\n- [ ] When personal data is removed from an order (action: `woocommerce_privacy_remove_order_personal_data`), `CustomersScheduler::anonymize()` should be called (see implementation detail below about moving this code)\n\n### Implementation details (as long as AC is met, other approaches may also be valid... take these as suggestions)\n\n- Actions listed above are currently hooked up in `CustomersScheduler` ([source](https:\/\/github.com\/woocommerce\/woocommerce\/blob\/4c236bdc37a8a8be81efe988f48a240041a86379\/plugins\/woocommerce\/src\/Internal\/Admin\/Schedulers\/CustomersScheduler.php#L30))\n- Should probably move where actions are hooked up to in `CustomersDataStore::init()` ([source](https:\/\/github.com\/woocommerce\/woocommerce\/blob\/1ab678c13fed5df393805f0000a8fd0db991772a\/plugins\/woocommerce\/src\/Admin\/API\/Reports\/Customers\/DataStore.php#L86))\n- Should probably move `CustomersScheduler::anonymize()` implementation to `CustomersDataStore::anonymize()` (not sure why this wasn't done initially)\n\n### References \n\n- Original suggestion by @joshuatf: p7bje6-4BB-p2#comment-7613\n\n###\n\n","completion":" [472334370,1527866622,3943425133]"}
{"prompt":"**Depends on #36589**\n\nI noticed that we'd implemented the input field's behavior in the Edit link modal differently from what I intended, but it's actually better. We can improve it further by tweaking the copy.\n\n**Design**\n\n`5sAIeTRd9Yp7nSCT33BAWz-fi-10611%3A207538&t=reVe66hOXCq7FT7t-4`\n\n<img width=\"608\" alt=\"image\" src=\"https:\/\/user-images.githubusercontent.com\/79307566\/211018207-c6b73c5c-42da-4d67-bcef-e31a934b0b8c.png\">\n\nWhat's changed:\n\n- Removed the field's label.\n- Moved the link preview from the label to the field's helper text.\n- Added static text with additional guidance. It is displayed about the field.\n\n**Acceptance criteria**\n\n- [ ] There's a new bit with the additional explanation that appears above the link input field.\n- [ ] The link in the field's helper text updates in real-time as the user types.\n\n###\n\n","completion":" [4370024739,4370026978]"}
{"prompt":"When working on https:\/\/github.com\/woocommerce\/woocommerce\/pull\/36308 I observed that a REST API query like the following (where we order by date, descending) may not work as expected when HPOS is authoritative:\r\n\r\n```\r\n# Implict\r\n\/wp-json\/wc\/v3\/orders\r\n\r\n# Explicit\r\n\/wp-json\/wc\/v3\/orders?orderby=date&order=desc\r\n```\r\n\r\nThis is because:\r\n\r\n- HPOS order queries do not support passing multiple order-by values in a single string (example: `date ID`).\r\n- The above is something we rely on, from within [WC_REST_CRUD_Controller](https:\/\/github.com\/woocommerce\/woocommerce\/blob\/7.2.2\/plugins\/woocommerce\/includes\/rest-api\/Controllers\/Version3\/class-wc-rest-crud-controller.php).\r\n- The reason it works with the CPT order store is that it is built on top of `WP_Query`, which *does* support this convention.\r\n\r\nInternal discussion p1672952839476529-slack-C0E1AV8T0.\n\n###\n\n","completion":" [1527866622,3834300886]"}
{"prompt":"Before today, using the product filters feature on my website would work flawlessly. But I woke up this morning to an Adsense error saying they are unable to show ads on pages that worked before.\r\n\r\nWhen looking into the issue, I noticed when I use the product filters feature on my home page of the woocommerce shop, I’m always redirected to the “Hello World” default post that come with WordPress.\r\n\r\nHowever, if I use the product attribute filter feature while viewing a woocommerce category, then the filters work as they should\r\n\r\nIt’s only when trying to use the attribute filter on the index page of the woocommerce shop, that I’m seeing this redirect issue cropping up now.\r\n\r\nI’ve tried switching my theme back to to the default storefront and the issue still persists.\n\n### Expected behavior\n\nwhen selecting one of the many woocommerce product filter attributes, I normally see a filtered list of products based on the attribute that was selected\n\n### Actual behavior\n\ninstead, if I try to use a product attribute filter on the home page of the woocommerce shop, then I am getting redirected to the hello world post\n\n### Steps to reproduce\n\n1. Visit home page of the website\r\n2. Select a product filter\r\n3. watch as the website redirects you to the hello world post instead of filtering the products\n\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"**Describe the bug:**\r\nWhen the user clicks to edit an individual variation it should be redirected to its general tab. We're redirecting the user to a non-existent tab. \r\n\r\n**Steps to reproduce:**\r\n1. Create a new product using the new experience in the test store: pcQJnU-Lr-p2\r\n2. Create a variation and click to edit the individual variation\r\n3. Confirm that the following screen is an empty tab\r\n\n\n###\n\n","completion":" [1891051456,4370024739]"}
{"prompt":"When reordering items in either the options or attributes list, the attribute copies its data to other attributes making all items look identical.\n\n\n![Image](https:\/\/user-images.githubusercontent.com\/10561050\/209590055-1e7acda5-c098-4c4c-80ae-718428849261.png)\n\n\n### Testing\n\n1. Add some attributes or options to a product\n2. Reorder the attributes\n3. See the duplicate data\n\n### Acceptance criteria\n\n* [ ] Reordering attributes should work as expected\n* [ ] Editing attributes should not cause issues either or corrupt data\n\n###\n\n","completion":" [1891051456,3943104021,4370024739]"}
{"prompt":"Customer contacted me saying the product page of their site was showing \"There has been a critical error on this website. Learn more about troubleshooting WordPress.\" but the site was still running.\r\n\r\nWith debug set to true, the page reports:\r\nFatal error: Uncaught Error: Call to undefined function wp_readonly() line 43 of \/wp-content\/plugins\/woocommerce\/templates\/global\/quantity-input.php as the issue.\r\n\r\nReading the docs wp_readonly() was introduced in WordPress 5.9 https:\/\/developer.wordpress.org\/reference\/functions\/wp_readonly\/\r\n\r\nMy quick fix is to comment out line 43 which restores the page to how it should be: \/\/wp_readonly( $is_readonly );\n\n### Expected behavior\n\n  Product page should work as expected without fatal error appearing after the QTY field\n\n### Actual behavior\n\nBroken product pages with fatal error appearing after the QTY field\n\n### Steps to reproduce\n\nView any product page on a WordPress site running 5.8.6 and WooCommerce 7.2.0\n\n\n\n###\n\n","completion":" [1527804005,3837257959]"}
{"prompt":"**Description**\r\nThis is part of #35953 epic.\r\nWe want to give plugin developers the ability to extend the new product management screen by use of PHP.\r\n\r\n**NOTE: We will support templates in the future, so be aware of how this may impact the workThis issue depends on #36019 being finished.\r\nWe should add a new API endpoint for the form data. Currently we only want to expose fields, but remember that sections and tabs will also be added to this (and potentially other locations as well).\r\nThis entire config may require a `template` param. \r\nWe may want to provide a separate endpoint for each individually and one that contains all of them?\r\n\r\nWe may also want to expose an `action` here, so that plugins only add the necessary field data when the `action` is triggered instead of on every `init` action.\r\nBut this is slightly up for debate, as there could be some use case we need this data outside of the API context (similar to our TaskList API ).\r\n\r\n**Acceptance criteria**\r\n- [ ] There should be an API endpoint available to retrieve the field data added through the function added as part of #36019 \n\n###\n\n","completion":" [3943425992,4370024739,4370026978]"}
{"prompt":"**Description**\r\nThis is part of #35953 epic.\r\nWe want to give plugin developers the ability to extend the new product management screen by use of PHP.\r\nThis issue will be the very first for laying the ground work and adding this support for fields specifically.\r\n\r\n**NOTE: We will support templates in the future, so be aware of how this may impact the workWe should expose a public PHP function that can be triggered within a `init` action, something like `wc_add_product_form_field` (or tag `admin` in there to make it more admin specific. But similar to either the [`add_settings_field`](https:\/\/developer.wordpress.org\/reference\/functions\/add_settings_field\/) or [`add_meta_box`](https:\/\/developer.wordpress.org\/reference\/functions\/add_meta_box\/) functions. We may want to base the implementation of these two examples.\r\n\r\n**Acceptance criteria**\r\n- [ ] `add_product_form_field` should have an `id` and ask for a plugin `id` (will be used later)\r\n- [ ] `add_product_form_field` should provide a location prop for where it should be displayed (should match the location prop within a SlotFill see: https:\/\/github.com\/woocommerce\/woocommerce\/issues\/36014 )\r\n- [ ] `add_product_form_field` should provide `args` for the input field, we may want to expose `type`, `name`, `label` for now (and others if you think they are important) we can always expand on this.\r\n- [ ] Field data should be accessible within data (maybe a global constant? that is what `add_settings_field` uses)\n\n###\n\n","completion":" [3943425992,4370024739]"}
{"prompt":"When entering the new product variation edit screen, we should add the variant options to the header to make it clear which variation we're currently editing.\r\n\r\nBlocked by https:\/\/github.com\/woocommerce\/woocommerce\/issues\/35786\r\n\r\n### Design\r\n\r\nFigma: BaoQ3PGPnhAiJCsJtxgej3-fi-102%3A10092&t=Jsh233onKmJpJYtN-0\r\n\r\n\r\n![Image](https:\/\/user-images.githubusercontent.com\/10561050\/207735029-cf2dfb0e-73e1-4f82-9f08-606c4ac83f63.png)\r\n\r\n\r\n### Acceptance Criteria\r\n\r\n* [ ] The variation options should be SlotFilled into the header as the next level after the parent product name\r\n* [ ] Multiple options should be comma separated\r\n* [ ] Longer option combinations should be truncated with `...`. Users should be able to see the variation name in full on mouse hover.\n\n###\n\n","completion":" [1891051456,4370024739]"}
{"prompt":"The Product Filter widgets don't work when the Shop is displayed on the Homepage - they were working in version 7.0.1.\r\n\r\n### Expected behavior\r\n\r\nShop Archive should display products based on the selected Filters.\r\n\r\n### Actual behavior\r\n\r\nThe Posts Archive template is loaded instead.\r\n\r\n### Steps to reproduce\r\n\r\n1. Set the default WooCommerce Shop Page as the WordPress Homepage via \"Settings > Reading\".\r\n2. Add a filter widget (like \"Filter Products by Attribute\") via \"Appearance > Widgets\".\r\n3. Try using the Filter from the Home\/Shop page.\r\n\r\n\r\n\n\n###\n\n","completion":" [1527866622,1891051461,3837257959]"}
{"prompt":"I would love to see that random order is considered as a filtering and search parameter to show results. I want that from the backend I can make the default value for showing products in random order. Also that the customer has the ability to show products in random order. That makes it great so that all the products in a shop have the opportunity to be seen, not only the most recent,popular etc.\n\n### Describe alternatives you've considered\n\nUntil now the only alternative are code snippets to add that behavior but those are cumbersome for a number of reason, the most important one being I have no idea of programming and maintain up to date that code addition\n\n### Additional context\n\nI sell images, thousands of them and I want to surprise my customers with always new content and not always the same. I also want them to see a broad selection that random gives. If my last images uploaded are japanese plants photos of the XIX century searching for last for 99.9% of clients this will be of no interest at all. Giving random will make product rotation much better\n\n###\n\n","completion":" [3837257959]"}
{"prompt":"We have a problem with some orders that are not correctly charged by Paypal. The system is forcing the change of status from \"pending payment\" to \"completed\" once we send the order status as being completed. We are a fulfillment company and once we fully pack an order we send the order status to WooCommerce.\r\nWe send a PUT request with the following body: {\"status\" : \"completed\"}\r\nWhen we pull orders that need fulfillment, we only pull orders with a status of 'pending' or 'processing'.\r\n![image](https:\/\/user-images.githubusercontent.com\/12591626\/207315794-fc01ec54-9742-42a0-a751-d776a8b20552.png)\r\n\n\n### Expected behavior\n\nWe expect the payment to be processed.\n\n### Actual behavior\n\nThe payment is canceled by a fulfillment status change.\n\n### Steps to reproduce\n\nPayment gateway is paypal standard (PayPal Standard redirects customers to PayPal to enter their payment information.)\r\nExample shop: eatsmallgiants.com\r\nExample order: 8867\r\n\r\n\n\n\n\n###\n\n","completion":" [3837257959]"}
{"prompt":"I've recorded a video demonstrating what I'm seeing:\r\n\r\nhttps:\/\/soapbox.wistia.com\/videos\/nwNM6S3ypX\r\n\r\nThe store is set to GB for the country, which is a VAT country.\r\n\r\nWhen WooCommerce > Settings > Tax > Tax Options > Display Tax Totals == \"Itemized\" then the tax_or_vat hook is never called and the checkout shows `tax` when it should show `vat`.\r\n\r\nIf you change it to \"As a single total\" then the correct `vat` strings are displayed.\r\n\r\nFor reference, here in the checkout it is showing VAT:\r\n\r\n<img width=\"643\" alt=\"image\" src=\"https:\/\/user-images.githubusercontent.com\/1038062\/207167096-f6109fd2-519f-4023-a35f-4f31fbc09675.png\">\r\n\r\nI've also tested switching that setting on and off and it affects the My Account > Orders > View Order page.\n\n### Expected behavior\n\nShow VAT in all places \"Tax\" is displayed when the country is a vat country\n\n### Actual behavior\n\nTax is leaking out in places like the checkout, and my account -> view order, as the vat_or_tax() is never called\n\n### Steps to reproduce\n\n1. Set \"display tax totals\" as \"show single...\"\r\n2. Set the base country to a vat country eg GB (Great Britain \/ United Kingdom)\r\n3. Put a breakpoint on WC_Countries->tax_or_vat() \r\n4. Go to checkout and see that tax_or_vat() is called and `vat` is correctly displayed in the totals\r\n5. Now change \"display tax totals\" to \"itemized\"\r\n6. Revisit the checkout\r\n7. See that the breakpoint is no longer triggered\r\n8. See that the `vat` string now incorrectly says `tax`\n\n\n\n###\n\n","completion":" [3837257959]"}
{"prompt":"Discard button of \"Save changes?\" modal saves the options from \"Industry\" and \"Product Types\" steps for OBW flow.\r\n\r\n### Expected behavior\r\n\r\nOptions should not be saved after selecting the 'Discard' option.\r\n\r\n### Actual behavior\r\n\r\nOptions are saved even after selecting the 'Discard' option.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using the JN site.\r\n2. Install all the required plugins.\r\n3. Navigate to WooCommerce -> Settings -> Help\r\n4. Click Setup Wizard button.\r\n5. Start with OBW.\r\n6. Go to Industry Page. \r\n7. Select some options\r\n8. Click on the next page for 'Product Types'\r\n9. When prompted by 'Save changes?' modal, click 'Discard'\r\n10. Navigate back to Industry page observe the selected options are saved.\r\n\r\n### Video:\r\n\r\nhttps:\/\/user-images.githubusercontent.com\/41110392\/207059380-9106489b-1fb7-48a9-b7f0-e472c4b1f74d.mov\r\n\r\n\n\n###\n\n","completion":" [1891051446,3837257959]"}
{"prompt":"When a variation is created, some of the main product tabs are no longer necessary and should be disabled.\n\n**Design**\n\nBaoQ3PGPnhAiJCsJtxgej3-fi-103%3A42557&t=ocwJn8Uxq8YLDepQ-0\n\n![Image](https:\/\/user-images.githubusercontent.com\/10561050\/204702499-5ca54ac2-f048-418d-b28a-2a2a8bb6d124.png)\n\n**Acceptance criteria**\n\n* [ ] Pricing, inventory, and shipping tabs should be disabled when at least 1 variation exists\n* [ ] When the user hovers over one of the disabled tabs, we show a tooltip reading: Manage individual variation details in the Options tab.\n\n###\n\n","completion":" [1891051456,4370024739]"}
{"prompt":"In preparation for introducing variation management to the new product editing experience, we want to add tabs to the top bar. We'll start small and only accommodate what is needed for the MVP, but the acceptance criteria mention future improvements since they can impact how we structure code from the very start.\r\n\r\n**Tab content (only MVP scope- General\r\n   - Product details\r\n   - Images\r\n   - Attributes\r\n- Pricing\r\n   - Pricing\r\n- Inventory\r\n   - Inventory\r\n- Shipping\r\n   - Shipping\r\n- Options\r\n   - Options\r\n   - Variations\r\n\r\n**Desig`5sAIeTRd9Yp7nSCT33BAWz-fi-5311%3A197937&t=4r3ndH9ltPGnsjGr-4`\r\n\r\n<img width=\"601\" alt=\"image\" src=\"https:\/\/user-images.githubusercontent.com\/79307566\/203767462-e13055e2-a0df-4348-a172-21f0c997849e.png\">\r\n\r\n**Acceptance criteri- [ ] Users can see tabs at the top of the screen. They're part of the top navigation bar.\r\n- [ ] The tabs are fixed at the top of the screen when users scroll up and down the page.\r\n- [ ] On mobile, the tabs scroll horizontally. Design: `5sAIeTRd9Yp7nSCT33BAWz\/%5BMaster%5D-fi-7342%3A344251&t=4r3ndH9ltPGnsjGr-4`\r\n- [ ] The page doesn't reload when users switch between tabs.\r\n- [ ] We don't remember the scroll position when users switch between tabs. They always start at the top.\r\n- [ ] Each tab has multiple states: resting (default), selected (with the `Gutenberg-Blue` underline), and disabled (`Gutenberg-600`, `cursor: not-allowed;`)\r\n- [ ] Each tab can have a suffix element, such as a badge or notification dot (not part of the MVP).\r\n- [ ] Each tab is an identifiable element, and we can target it with the spotlight component.\r\n- [ ] The tab bar can be expanded with custom tabs added by third-party plugins.\n\n###\n\n","completion":" [1527866622,1891051456,4370024739]"}
{"prompt":"\"Facebook for WooCommerce\" extension is visible under extensions suggestions on \"Free Features\" screen when \"Facebook for WooCommerce\" plugin is installed and active.\r\n\r\n### Expected behavior\r\n\r\n\"Facebook for WooCommerce\" extension should not be visible under extensions suggestions on \"Free Features\" screen when \"Facebook for WooCommerce\" plugin is installed and active.\r\n\r\n### Actual behavior\r\n\r\n\"Facebook for WooCommerce\" extension is visible under extensions suggestions on \"Free Features\" screen when \"Facebook for WooCommerce\" plugin is installed and active.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using the JN site.\r\n2. Install all the required plugins.\r\n3. Install and activate \"Facebook for WooCommerce\" plugin.\r\n4. Navigating to WooCommerce -> Settings -> Help\r\n5. Click Setup Wizard button.\r\n6. Start with OBW.\r\n7. Go to Free Features screen. \r\n8. Observe that, \"Facebook for WooCommerce\" extension is visible under extensions suggestions on \"Free Features\" screen.\r\n\r\n### Video:\r\n\r\nhttps:\/\/user-images.githubusercontent.com\/41110392\/203566244-3d486231-a0fc-40a0-9212-56ec5e29d092.mp4\r\n\r\n\n\n###\n\n","completion":" [1527868600,1891051446,3837257959,3943104021]"}
{"prompt":"The summary and description fields can become quite content-heavy, especially with all the blocks. Let's make them fixed height (current values), but let the users resize the fields as they see fit using a handle like the one below.\r\n\r\n<img width=\"126\" alt=\"image\" src=\"https:\/\/user-images.githubusercontent.com\/79307566\/203551681-f3dec272-d734-4360-abe7-c0db65c76fb0.png\">\r\n\r\n**Acceptance criteri- [ ] Summary and Description fields have fixed heights.\r\n- [ ] The user can resize the window vertically using a drag handle in the bottom right corner.\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [4370024739,4370026978]"}
{"prompt":"Community contribution PRs do not have access to make POST requests to Jetpack's Betadownload. We need to disable the build and request to Betadownload in a similar way to Jetpack:\r\n\r\nhttps:\/\/github.com\/Automattic\/jetpack\/blob\/4a3b3a6c7f711eb5485f64ea66dab2dbfb1e9482\/.github\/workflows\/build.yml#L188\r\n\n\n###\n\n","completion":" [3844183371]"}
{"prompt":"While debugging https:\/\/github.com\/Automattic\/woocommerce-payments\/issues\/5073 we've noticed a bug that occur only on WordPress 6.1 due to its `moment` package drop on https:\/\/github.com\/WordPress\/gutenberg\/pull\/43005, all datepickers on WCPay stopped working on WP 6.1 even on old versions and ~it should be happening to all pages and plugins that uses the `DatePicker` component from `@woocommerce\/components` package~ it happens for any use of advanced filtering date selection, such as on the Transactions and Disputes pages of WCPay.\r\n\r\n_Update: This only currently happens for the advanced filtering date selection as found on the Transactions and Disputes pages of WCPay. It does not happen for other usages of `DatePicker`. @mattsherman_\r\n\r\n![](https:\/\/user-images.githubusercontent.com\/41110392\/200596335-49ff344f-6359-4aed-90ca-92cd5a60a1cf.gif)\r\n\r\n### Expected behavior\r\n\r\nChange the dates without any error.\r\n\r\n### Actual behavior\r\n\r\nAn error occur after change dates, also hides the entire page due to React error handling.\r\n\r\n### Steps to reproduce\r\n\r\n1. On WP 6.1, ~find a page that uses WooCommerce DatePicker (or~ install WCPay and use the Date filter on Transactions or Disputes page ~)~.\r\n2. Select a date.\r\n3. Click again on the DatePicker, a error should be shown hiding the entire page.\r\n\r\n\n\n###\n\n","completion":" [3943185990,3943425133,3943425720,3943425903]"}
{"prompt":"There are a few sections that should have more tracks events.\r\n\r\nThe sections that need more tracks events recorded are:\r\n- Attributes\r\n- Shipping\r\n- Images\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [3837257959,3943425133]"}
{"prompt":"\"Business details\" and \"Free features\" options fails to display on Business details step while OBW when Gutenberg plugin is active.\r\n\r\n### Expected behavior\r\n\r\n\"Business details\" and \"Free features\" options should be displayed on Business details step while OBW when Gutenberg plugin is active.\r\n\r\n### Actual behavior\r\n\r\n\"Business details\" and \"Free features\" options fails to display on Business details step while OBW when Gutenberg plugin is active.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using Jurassic Ninja or Atomic site.\r\n2. Install and activate all the required plugins.\r\n3. Install and activate Gutenberg plugin.\r\n4. Navigate to WooCommerce -> Settings -> Help, and press the Setup Wizard button.\r\n5. Enter Store details and click Continue.\r\n6. On Product Types step checkoff some options and click continue.\r\n7. Observe that, \"Business details\" and \"Free features\" options fails to display on Business details step.\r\n\r\n### Video:\r\nhttps:\/\/user-images.githubusercontent.com\/41110392\/199031895-dc5af33c-fafb-4724-83d1-a73b24eed74d.mp4\r\n\r\n\n\n###\n\n","completion":" [1891051446]"}
{"prompt":"Migrate the Link component to TS\r\n\r\n### Acceptance Criteria\r\n- [ ] All `*.js` files are converted to `*.ts` or `*.tsx`\r\n- [ ] Run `pnpm --filter=@woocommerce\/components build` without any errors\r\n- [ ] Run `pnpm --filter=woocommerce\/client\/admin ts:check` without any errors\r\n\r\n### Describe alternatives you've considered\r\n\r\n_No response_\r\n\r\n### Additional context\r\n\r\n_No response_\n\n###\n\n","completion":" [3943185990]"}
{"prompt":"Migrate the Section component to TS\r\n\r\n### Acceptance Criteria\r\n- [ ] All `*.js` files are converted to `*.ts` or `*.tsx`\r\n- [ ] Run `pnpm --filter=@woocommerce\/components build` without any errors\r\n- [ ] Run `pnpm --filter=woocommerce\/client\/admin ts:check` without any errors\r\n\r\n### Describe alternatives you've considered\r\n\r\n_No response_\r\n\r\n### Additional context\r\n\r\n_No response_\n\n###\n\n","completion":" [3943185990]"}
{"prompt":"PHPCS was [recently changed](https:\/\/github.com\/woocommerce\/woocommerce\/pull\/35237) to remove usage of [an action](https:\/\/github.com\/thenabeel\/action-phpcs) that was limiting our control and causing issues. The problem is this action restricted failures to violations found in changed lines as opposed to the entire file.\r\n\r\nThat causes difficulties when reviewing simple fixes, often times [contributions from the community](https:\/\/github.com\/woocommerce\/woocommerce\/pull\/35329).\r\n\n\n###\n\n","completion":" [3844183371]"}
{"prompt":":**\nWhen migrating orders created with WC Smooth Generator, the migration works great in both senses (WP table -> WC table and vice versa). However, I noticed a scenario where it doesn’t work.\n\n**Steps to reproduce:**\n\n1. Create several orders with WC Smooth Generator.\n2. Enable HPOS and sync tables.\n3. Confirm that the Orders page shows the same number of orders no matter if we use WP or WC table.\n4. With the WP table marked as authoritative, create an order manually (with or without products, it doesn’t affect the outcome) and without entering user details (no customer info and no billing info).\n5. Check the Orders page now shows an extra order.\n6. Now mark the WC table as authoritative.\n7. Head again to the Orders page\n\n**Expected result:**\n\nThe custom order tables settings page doesn’t mention that there are orders pending migration, and the new order is shown in `WooCommerce > Orders`. \n\n**Actual result:**\nThis new order created when the WP table was used is not listed on the `WooCommerce > Orders` page when the WC table is used. \n\nPlease find video below:\n\nhttps:\/\/d.pr\/v\/RYbSU0\n\n**Additional comments:**\nI could check that it works fine if we create the order when using WC table and then switch to the WP table, but it fails when we create it when using WP table and switch to WC table. This is why I think it might be an issue and would be worth debugging.\n\n**Severity\/Priority assessment:**\n- **Impact on the application:** reduced, as this only affects to orders, not the entire system.\n- **Impact on the business:** high, I think orders are one of the most important entities in WooCommerce because they are directly related to the merchant’s revenue and shopper’s payments, so an issue like this might have serious consequences for our customers.\n- **Priority:** Considering the business’s impact, I think we should address it as soon as possible. I think we should reach the highest degree of confidence with order migrations (considering we can’t achieve 100% confidence, as we can’t prove a system is bug-free).\n\n\n###\n\n","completion":" [1527866622,3834300886,3837257959]"}
{"prompt":"In the edit product page in WooCommerce, the short description window is collapsed as the default when I get into the product page requiring that I expand it and enlarge it every time I go to a product. This changed since the last update and up until then, the default for this window upon opening a the edit product page, was an expanded pane or window. I work with this all day long so have to deal with it constantly. On the other hand, all the other windows that I use on a regular basis default to the expanded or open status.\n\n### Expected behavior\n\nI expect the short description pane or window to be open or expanded by default every time I go into a product without having to expand it manually.\n\n### Actual behavior\n\nBy default, the product short description pane or window is collapsed upon entering or opening the edit product page for any and every product.\n\n### Steps to reproduce\n\nI can't give you these steps to walk through since you don't have an account with our company to access our products, but here is a screen shot.\r\n\r\n![image](https:\/\/user-images.githubusercontent.com\/116667491\/197834590-60882f74-56d3-43bf-baae-a0d010963fd9.png)\r\n\n\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"Hello! I run a project called WC stubs. It excludes internal stuff as that should not be used by WC extension developers.\r\n\r\nIn this class an internal trait is used.\r\nhttps:\/\/github.com\/woocommerce\/woocommerce\/blob\/1925cfa80eb754a4727eaf66b3336c0f77a7bb05\/plugins\/woocommerce\/includes\/class-wc-query.php#L17-L19\r\n\r\nThis brakes my stubs.\r\nPlease help me.\r\n\r\n\r\n### Expected behavior\r\n\r\nNo internal stuff used in non-internal code.\r\n\r\n### Actual behavior\r\n\r\nInternal stuff is used in non-internal code.\r\n\r\n### Steps to reproduce\r\n\r\n1. See my CI https:\/\/app.travis-ci.com\/github\/php-stubs\/woocommerce-stubs\/jobs\/585388538\r\n\r\n\n\n###\n\n","completion":" [3837257959]"}
{"prompt":"When adding entries corresponding to the new order in `wp_wc_order_stats` with the synchronization with the posts tables is disabled, the entry in wp_wc_order_stats is not created when sync_order() is called because the order type is shop_order_placehold and thus the check below fails:\r\nhttps:\/\/github.com\/woocommerce\/woocommerce\/blob\/trunk\/plugins\/woocommerce\/src\/Admin\/API\/Reports\/Orders\/Stats\/DataStore.php#L477\r\n\r\nThis issue scopes fixing this and making sure order stats are synced as expected\n\n###\n\n","completion":" [1527866622,3834300886]"}
{"prompt":"**Description:** in #33660 we've added a message to include helpful guidance about product image size\/format for new users. However, we received feedback that the message is sometimes distracting and unnecessary (#33660). We'll make some changes to focus the tooltip on new users.\r\n\r\n**Acceptance criteria:**\r\n- [ ] Add a help tip next to the button and only show the message when the user hovers the tip\r\n<img width=\"476\" alt=\"image (4)\" src=\"https:\/\/user-images.githubusercontent.com\/3380168\/194869624-cff5b6fd-bc8f-486a-8e2e-d0c19e66b5ba.png\">\r\n\r\n- [ ] Only show the tip when the box is empty\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"For the new product pages, we need a tooltip like this one that displays a message on hover:\r\n\r\n<img width=\"273\" alt=\"Screen Shot 2022-10-07 at 9 18 40 AM\" src=\"https:\/\/user-images.githubusercontent.com\/10561050\/194600982-9803a63d-fd51-4b9f-afd3-4436cc3409b6.png\">\r\n\r\nA component like this exists inside of the `EnrichedLabel` component, but needs to be extracted for use not in labels.\r\n\r\nhttps:\/\/github.com\/woocommerce\/woocommerce\/blob\/trunk\/packages\/js\/components\/src\/enriched-label\/enriched-label.tsx\n\n### Describe alternatives you've considered\n\nWe could create a new component, but it seems there's a good bit of overlap with the pre-existing component.\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [3943425720]"}
{"prompt":"For the `Form` component `getInputProps`, we occasionally have to override an event like `onBlur`.\r\n\r\n```\r\n<TextControl\r\n  { ...getInputProps( 'field_name' ) }\r\n  onBlur={ myOnBlurHandler }\r\n\/>\r\n```\r\n\r\nThe problem is that this overrides the default `getInputProps` `onBlur` method and now manually needs to be called:\r\n\r\n```\r\n<TextControl\r\n  { ...getInputProps( 'field_name' ) }\r\n  onBlur={ () => {\r\n    myOnBlurHandler();\r\n    getInputProps( 'field_name' ).onBlur();\r\n  }\r\n\/>\r\n```\r\n\r\nTo make things a bit easier on consumers, we could consider an optional second argument that adds props to the event without overriding the `Form`'s handlers.  E.g.,\r\n\r\n```\r\n<TextControl\r\n  { ...getInputProps( 'field_name', { onBlur: myOnBlurHandler } ) }\r\n\/>\r\n```\n\n### Describe alternatives you've considered\n\nManually calling the input form's handler is the current way of handling this, but it is more prone to errors and more cumbersome to write.\r\n\r\n`getInputProps( 'field_name' ).onBlur();`\n\n### Additional context\n\nThe new product management experience has been creating utils like `getTextControlProps` and `getInputControlProps` that handle specific items like classes.  It would be good to move some of this logic back to the `Form` package.\n\n###\n\n","completion":" [3943425720]"}
{"prompt":"We are using the wc_get_order function in order to receive the order data. But, it is returning false.\r\nThis is because the get_class_name_for_order_id() function in get_order function(mentioned below) of the woocommerce repository returns false.\r\n\r\npublic static function get_order( $order_id = false ) {\r\n$order_id = self::get_order_id( $order_id );\r\n\r\nif ( ! $order_id ) {\r\nreturn false;\r\n}\r\n\r\n$classname = self::get_class_name_for_order_id( $order_id );\r\nif ( ! $classname ) {\r\nreturn false;\r\n}\r\n\r\ntry {\r\nreturn new $classname( $order_id );\r\n} catch ( Exception $e ) {\r\nwc_caught_exception( $e, __FUNCTION__, array( $order_id ) );\r\nreturn false;\r\n}\r\n}\r\n\r\nWe have checked and the $order_id is coming correct. Need to know why valid $classname is not returned.\r\nNeed your help regarding this.\n\n### Expected behavior\n\nWe should get the order data after calling wc_get_order function.\n\n### Actual behavior\n\nwc_get_order function is returning false.\n\n### Steps to reproduce\n\n1. We use our plugin DTDC Econnect 1.0.10.\r\n2.After activating the plugin, we go to the orders section.\r\n3. When we click the sync order button, it is giving error at this point.\r\n4. Internally this sync order feature uses wc_get_order function in order to receive the order data. But it is returning false.Because of which the error.\r\n\n\n\n\n###\n\n","completion":" [3837257959]"}
{"prompt":"Discovered during testing for 7.0.0, it seems like when a (COT or HPOS) order is restored from the trash, it may not be restored to the expected status. Internal link: pb22l9-1xy-p2#comment-1580 \r\n\r\nFrom the original discussion:\r\n\r\n1. Change the status of Completed order to Processing.\r\n2. Now send the order to the Trash.\r\n3. Restore the order from the Trash.\r\n\r\nAt this point, I expect the order to have the status Processing, as it was the most recent status it had before being moved to the trash, but it turned out to be restored with the status Completed. Related video:\r\n\r\n[📹 Screencast](https:\/\/href.li\/?https:\/\/d.pr\/v\/OM5BLv)\r\n\n\n###\n\n","completion":" [1527866622]"}
{"prompt":"**Description:** we show up to 25 notifications on the Inbox panel. This volume of messages makes it difficult to parse all the information and we don't offer an easy way to see older messages. The users need to delete messages to see older messages, which is a poor user experience. \r\n\r\n**Acceptance criteria- [x] Change the Inbox messages limit from 25 to 5\r\n- [x] Display the 5 most recent messages with a \"Show older\" CTA at the bottom of the panel\r\n- [x] Load 10 messages when the user clicks \"Show older\" and change the CTA copy to \"Show more\"\r\n- [x] The \"Show more\" CTA always loads the next 10 messages and it's displayed at the bottom until all messages are loaded\r\n\r\n![MVP -_ Default](https:\/\/user-images.githubusercontent.com\/3380168\/193565553-2b707a91-0c78-40ca-a731-ea077126a4ec.png)\r\n![MVP -_ Expanded](https:\/\/user-images.githubusercontent.com\/3380168\/193565571-18cc221d-3110-42c3-b7a1-292d8ce67840.png)\r\n\r\n\r\n**Event Tracking:**\r\nWe should add a new event to track the new CTA interactions.\n\n###\n\n","completion":" [3943424960]"}
{"prompt":"If any meta value that is going to be printed in the \"Custom Fields\" section of an order screen (\/wp-admin\/admin.php?page=wc-orders&id=(ID)&action=edit) is not a string, then a TypeError exception (and crash, being uncaught) will occur because the variable is passed to `htmlspecialchars()` as-is, without having been turned back to a string.\r\n\r\nN.B. https:\/\/woocommerce.github.io\/code-reference\/classes\/WC-Data.html#method_update_meta_data shows that it is valid to store non-strings as meta-values.\r\n\r\n### Actual behavior\r\n\r\n```\r\nPHP Fatal error:  Uncaught TypeError: htmlspecialchars(): Argument #1 ($string) must be of type string, stdClass given in wp-includes\/formatting.php:4604\r\nStack trace:\r\n#0 wp-includes\/formatting.php(4604): htmlspecialchars()\r\n#1 wp-admin\/includes\/template.php(643): esc_textarea()\r\n#2 wp-admin\/includes\/template.php(600): _list_meta_row()\r\n#3 wp-content\/plugins\/woocommerce\/src\/Internal\/Admin\/Orders\/MetaBoxes\/CustomMetaBox.php(74): list_meta()\r\n#4 wp-content\/plugins\/woocommerce\/src\/Internal\/Admin\/Orders\/MetaBoxes\/CustomMetaBox.php(60): Automattic\\WooCommerce\\Internal\\Admin\\Orders\\MetaBoxes\\CustomMetaBox->render_custom_meta_form()\r\n#5 wp-content\/plugins\/woocommerce\/src\/Internal\/Admin\/Orders\/Edit.php(172): Automattic\\WooCommerce\\Internal\\Admin\\Orders\\MetaBoxes\\CustomMetaBox->output()\r\n#6 wp-admin\/includes\/template.php(1402): Automattic\\WooCommerce\\Internal\\Admin\\Orders\\Edit->render_custom_meta_box()\r\n#7 wp-content\/plugins\/woocommerce\/src\/Internal\/Admin\/Orders\/Edit.php(251): do_meta_boxes()\r\n#8 wp-content\/plugins\/woocommerce\/src\/Internal\/Admin\/Orders\/Edit.php(180): Automattic\\WooCommerce\\Internal\\Admin\\Orders\\Edit->render_meta_boxes()\r\n#9 wp-content\/plugins\/woocommerce\/src\/Internal\/Admin\/Orders\/PageController.php(163): Automattic\\WooCommerce\\Internal\\Admin\\Orders\\Edit->display()\r\n#10 wp-includes\/class-wp-hook.php(307): Automattic\\WooCommerce\\Internal\\Admin\\Orders\\PageController->output()\r\n#11 wp-includes\/class-wp-hook.php(331): WP_Hook->apply_filters()\r\n#12 wp-includes\/plugin.php(476): WP_Hook->do_action()\r\n#13 wp-admin\/admin.php(259): do_action()\r\n#14 {main}\r\n  thrown in wp-includes\/formatting.php on line 4604\r\n```\r\n\r\n### Steps to reproduce\r\n\r\nIn this example, order ID 1234 is an existing order.\r\n\r\n```\r\n# php80 -a\r\n> require 'wp-load.php';\r\n> $order = wc_get_order(1234); \/\/ Some existing order\r\n> $thing = new stdClass;\r\n> $thing->value = 'anything';\r\n> $order->update_meta_data('any_key', $thing);\r\n> $order->save();\r\n> exit;\r\n```\r\n\r\nThen visit the order page - \/wp-admin\/admin.php?page=wc-orders&id=1234&action=edit\r\n\r\n\n\n###\n\n","completion":" [1527866622,3834300886,3837257959]"}
{"prompt":"In the post-table implementation, all the column rendering methods are called via hooks, which is not the case anymore with HPOS. In HPOS, they are called directly. Therefore there is no option to modify the values in the columns (Or insert values before\/after).\r\n\r\nThis issue tracks rendering column values via action so that extensibility parity is maintained with the posts list.\n\n###\n\n","completion":" [3834300886,3837257959]"}
{"prompt":" “Set up payments” task is displayed while they’re already fully onboarded with WC Pay.\r\n\r\n<img width=\"787\" alt=\"Screenshot 2022-09-29 at 09 53 05\" src=\"https:\/\/user-images.githubusercontent.com\/4344253\/193181519-fd5831e1-0b7b-4654-9474-bf29f4748005.png\">\r\n\n\n### Expected behavior\n\n “Set up payments” task is hidden when they’re already fully onboarded with WC Pay.\n\n### Actual behavior\n\n “Set up payments” task is displayed while they’re already fully onboarded with WC Pay.\n\n### Steps to reproduce\n\n1. Go to OBW\r\n2. Choose US as store country in the step 1\r\n3. Complete OBW with WCPay installed.\r\n4. Go to WooCommerce > Home\r\n5. Complete \"Set up WooCommerce Payments\" task\r\n6. Complete the remaining tasks on task list\r\n7. When you complete all tasks, observe that \"Set up payments task\" is displayed.\n\n\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"When the HPOS data-store is in use, a newly created order may be stored with the wrong creation date: this should be GMT, but it seems possible for it to be stored in whatever the WP timezone is.\r\n\r\n### Steps to replicate\r\n\r\n1. Enable COT\/HPOS.\r\n2. Via **Settings ▸ General** set your WP timezone to `America\/Vancouver` or some other non-GMT timezone.\r\n3. As a customer, create a new order.\r\n4. As an admin user, promptly visit **WooCommerce ▸ Orders** and look at the new entry in the list table. In the date column, we could reasonably expect to see something like *\"Created 10 seconds ago\"* but in fact we will see a displacement such as *\"Created 7 hours ago\"* (if you were to select `America\/Vancouver`, at least):\r\n\r\n<img width=\"650\" alt=\"hpos-cot-order-date-created\" src=\"https:\/\/user-images.githubusercontent.com\/3594411\/192921571-db7bf5ac-0fea-47d9-9921-8fb6458f2c52.png\">\r\n\r\n6. Similarly, if you inspect the corresponding row of the `wp_wc_orders` table, you will see the entry in the `date_created_gmt` column is close to the current time as per the WP timezone setting.\n\n###\n\n","completion":" [1527866622]"}
{"prompt":"Make it possible to check if COT is in use via the System Status Report.\r\n\r\n<img width=\"764\" alt=\"mock-hpos-ssr\" src=\"https:\/\/user-images.githubusercontent.com\/3594411\/192859651-313f38b0-1e3c-4592-8434-1f924e5a5f4e.png\">\r\n\r\n☝🏽 Perhaps something like this mock, though it's just an idea. Perhaps it would make more sense to specify the data-store class (which would also surface custom data-stores).\n\n###\n\n","completion":" [1527868600]"}
{"prompt":"_This task is framed in the context of the COT\/HPOS project but the implementation will be useful for any future new feature as well_\r\n\r\nAfter https:\/\/github.com\/woocommerce\/woocommerce\/pull\/34727 is merged we need to do something when there are plugins that are incompatible with one or more of the existing features.\r\n\r\nTo start with, we decide that a given plugin is incompatible with a given feature if either:\r\n\r\n1. It explicitly declares incompatibility with the feature using the `FeaturesController` class introduced in the mentioned pull request; or\r\n2. It has a `WC tested up to` header but does _not_ declare compatibility with the feature.\r\n\r\nNow, the \"something\" to do is:\r\n\r\n1. In the WordPress plugins page, show a warning under the plugin name, indicating that the plugin is incompatible with one or more features. Similar to this, but the message will be more like \"Incompatible with X existing features, click here to manage WooCommerce features\"\r\n\r\n![image](https:\/\/user-images.githubusercontent.com\/937723\/192739534-4ea573f4-c7a5-4745-a00d-6fa72f15745f.png)\r\n\r\n2. Additionally, if at least one of the features is enabled, it won't be possible to activate the plugin:\r\n\r\n![image](https:\/\/user-images.githubusercontent.com\/937723\/192740050-6e96fc99-3d51-47f1-86f9-40e1b9a882fd.png)\r\n\r\n3. Disallow enabling a feature if at least one incompatible plugin is active.\r\n\r\n4. Under each disabled feature show a warning with the count of incompatible plugins, together with a link to a list of the plugins that are incompatible with the feature.\r\n\r\n![image](https:\/\/user-images.githubusercontent.com\/937723\/192745051-93d642f6-fd29-43b7-823d-16f8f64fdb11.png)\r\n\r\n6. The list of plugins incompatible with a given feature will be implemented as a new section in the WordPress plugins page, the section will only be visible when accessed via the said link:\r\n\r\n![image](https:\/\/user-images.githubusercontent.com\/937723\/192742540-dd79007d-04c1-4338-895d-b1c5aa8993ba.png)\r\n\r\ncc @jarekmorawski\n\n###\n\n","completion":" [3834300886,3837257959]"}
{"prompt":"Beginning september 15th google search console started flagging some products schema _Invalid value in field \"priceSpecification\" (in \"offers\")_. In their docs google specifies \"If you choose to use both offers.price and offers.priceSpecification properties, and there's a conflict between the two (for example, a different price or priceCurrency), Google will use the price information that's provided at the offers.price level.\" ([doc](https:\/\/developers.google.com\/search\/docs\/appearance\/structured-data\/product)). \r\nSeems to be occurring for simple products only and not for variations.\r\n\r\nIf I remove the priceSpecification the error resolves.\r\n`\r\nadd_filter( 'woocommerce_structured_data_product', 'nt_woocommerce_structured_data_product_offer', 10, 2 );\r\nfunction nt_woocommerce_structured_data_product_offer( $markup, $product ) {\r\nunset($markup['offers'][0]['priceSpecification']);\r\nreturn $markup;\r\n}\r\n`\r\n\r\n### Expected behavior\r\n\r\nIf working to meet Googles specification _price_ and _priceSpecification_ should not be together in offers.\r\n\r\n### Actual behavior\r\n\r\nNote price is included generally in the offer along with a _priceSpecification_.\r\n`\"offers\":[{\r\n\"@type\":\"Offer\",\r\n\"price\":\"27.50\",\r\n\"priceValidUntil\":\"2023-12-31\",\r\n\"priceSpecification\":{\"price\":\"27.50\",\"priceCurrency\":\"USD\",\"valueAddedTaxIncluded\":\"false\"},\r\n\"priceCurrency\":\"USD\",\"availability\":\"http:\\\/\\\/schema.org\\\/OutOfStock\",\"url\":\"https:\\\/\\\/vitaminb12direct.com\\\/product\\\/syringes-30-gauge-x-5-16-monoject\\\/\",\r\n\"seller\":{\"@type\":\"Organization\",\"name\":\"Vitamin B12 Direct\",\"url\":\"https:\\\/\\\/vitaminb12direct.com\"}\r\n}]`\r\n\r\n### Steps to reproduce\r\n\r\n<img width=\"1224\" alt=\"Screen Shot 2022-09-24 at 8 52 11 AM\" src=\"https:\/\/user-images.githubusercontent.com\/3494902\/192107266-6c74f2be-cae5-4ed1-9856-8eb55a9ddb12.png\">\r\n\r\n\r\n\n\n###\n\n","completion":" [3837257959]"}
{"prompt":"When there’s an error with sending the magic link, we already show We just sent you the magic link which I think is premature. There’s a toast message to let users know it erred, but this could also confuse some users. I think having a loading indicator and showing success\/failure in modal would be a great improvement.\r\n\r\nIf possible, we’d add a loading state to the ✨️ Send the sign-in link button, much like in the Jetpack installation step.\r\n\r\n![image](https:\/\/user-images.githubusercontent.com\/27843274\/191898944-55cec699-b548-4072-bef9-6add309552c5.png)\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"\"Industry\" options fails to save in the Industry step after reloading the page for OBW.\r\n\r\n### Expected behavior\r\n\r\n\"Industry\" options should be saved in the Industry step after reloading the page for OBW.\r\n\r\n### Actual behavior\r\n\r\n\"Industry\" option fails to save in the Industry step after reloading the page for OBW.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site.\r\n2. Install and activate all the required plugins.\r\n3. Install and activate WooCommerce 7.0 Beta.\r\n4. Go to Woocommerce > Setting.\r\n5. Click on \"Help\".\r\n6. Click on \"Setup wizard\".\r\n7. Click on \"Setup wizard\".\r\n9. Fill store details and click on \"continue\" button.\r\n10. On \"Industry\" tab select one or more option and click on \"continue\" button.\r\n11. Click on previous \"Industry\" tab.\r\n12. Reload the page\r\n13. Observe that, \"Industry\" options fails to save in the Industry step after reloading the page for OBW.\r\n\r\n### Video:\r\n\r\nhttps:\/\/user-images.githubusercontent.com\/41110392\/191537481-6eebbd60-92ff-470f-8abe-025c53fa6a24.mp4\r\n\r\n\n\n###\n\n","completion":" [1527868600,1891051446,3837257959,3943424887]"}
{"prompt":"For Atomic site, \"Setup Check List\" gets hidden after reloading the page and displays \"You've completed store setup\" on \"Woocommerce > Home\" page.\r\n\r\n### Expected behavior\r\n\r\nFor Atomic site, \"Setup Check List\" should be displayed after reloading the page on \"Woocommerce > Home\" page.\r\n\r\n### Actual behavior\r\n\r\nFor Atomic site, \"Setup Check List\" gets hidden after reloading the page and displays \"You've completed store setup\" on \"Woocommerce > Home\" page\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using the Atomic site.\r\n2. Install and activate all the required plugins.\r\n3. Install and activate WooCommerce 7.0 Beta.\r\n4. Complete OBW.\r\n5. Go to Woocommerce > Home.\r\n6. Complete Setup Check List.\r\n7. Click on show Setup Check List.\r\n8. Reload the page\r\n9. Observe that, For Atomic site, displays \"You've completed store setup\" on \"Woocommerce > Home\" page\r\n\r\n### Video:\r\n\r\nhttps:\/\/user-images.githubusercontent.com\/41110392\/191287866-e55ed611-f6d1-4cee-afff-e424d2e862d5.mp4\r\n\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"Similar to how our previous `SelectControl` component functioned, there should be an option to move the selected items beneath the input box as opposed to inline tags:\n\n**Current**\n\n![Image](https:\/\/user-images.githubusercontent.com\/10561050\/190463484-d1dffb5f-9161-4d94-b509-fc28be642749.png)\n\n\n**Outside (not inline)**\n\n![Image](https:\/\/user-images.githubusercontent.com\/10561050\/190463537-be251fb6-4f77-4c7b-9e24-ddb4d6e41437.png)\n\n**Acceptance criteria**\n* [ ] Tags should be rendered outside when provided a given prop\n\n###\n\n","completion":" [3943185990]"}
{"prompt":"This is related to the epic issue https:\/\/github.com\/woocommerce\/woocommerce\/issues\/33895.\r\n\r\nWhen users use the current release of WooCommerce plugins (without the UI revamp for marketing page feature), the recommended extensions would come from calling `GET https:\/\/woocommerce.com\/wp-json\/wccom\/marketing-tab\/1.1\/recommendations.json` API.\r\n\r\nhttps:\/\/github.com\/woocommerce\/woocommerce\/blob\/996e56898704fafbb4cba4e566f82f3716276cf2\/plugins\/woocommerce\/src\/Internal\/Admin\/Marketing.php#L194-L215\r\n\r\nThe API response will be stored in the `RECOMMENDED_PLUGINS_TRANSIENT = 'wc_marketing_recommended_plugins'`, for a duration of 3 days.\r\n\r\nWhen users update the WooCommerce plugin with the UI revamp for marketing page feature, the recommended extensions should come from calling `GET https:\/\/woocommerce.com\/wp-json\/wccom\/marketing-tab\/1.2\/recommendations.json` API. Note that the version is changed from \"1.1\" to \"1.2\" in the URL.\r\n\r\nHowever, because we have the data from version 1.1 still cached in the transient, the above API version 1.2 won't be called until the transient is expired or deleted.\r\n\r\nWhen users view the normal Marketing page, there won't be an issue. However, when users enable the multichannel marketing feature in WC Settings and view the new beta multichannel Marketing page, there will be a UI error, because the page is expecting data from version 1.2, but it receives data from version 1.1 cached in the transient:\r\n\r\n<img width=\"1665\" alt=\"image\" src=\"https:\/\/user-images.githubusercontent.com\/417342\/189933507-c57d0da2-8529-4649-8575-fc0707ca0903.png\">\r\n\r\n## Possible solutions\r\n\r\nI can think of two solutions. \r\n\r\nSolution 1: We delete the transient when users enable \/ disable the multichannel marketing feature in WC Settings. I think this may be done in https:\/\/github.com\/woocommerce\/woocommerce\/blob\/cf25f5d9961955bb4f2d787fa5cd6b6bbb083550\/plugins\/woocommerce\/src\/Admin\/Features\/MultichannelMarketing\/Init.php. \r\n\r\nSolution 2: We delete the transient when users update the WooCommerce plugin. See https:\/\/github.com\/woocommerce\/woocommerce\/blob\/996e56898704fafbb4cba4e566f82f3716276cf2\/plugins\/woocommerce\/includes\/wc-update-functions.php for some prior art examples. I think this may be the better solution.\r\n\r\nThe code for this work should be based on the [`feature\/33895-marketing-page\/main`](https:\/\/github.com\/woocommerce\/woocommerce\/tree\/feature\/33895-marketing-page\/main) branch, or the `trunk` branch after PR https:\/\/github.com\/woocommerce\/woocommerce\/pull\/34642 is merged.\r\n\n\n###\n\n","completion":" [4327454247]"}
{"prompt":"Ellipsis menu for \"Setup Check List\" fails to display on \"Woocommerce > Home\" page.\r\n\r\n### Expected behavior\r\n\r\nEllipsis menu for \"Setup Check List\" should be displayed on \"Woocommerce > Home\" page.\r\n\r\n### Actual behavior\r\n\r\nEllipsis menu for \"Setup Check List\" fails to display on \"Woocommerce > Home\" page.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using the JN site.\r\n2. Install and activate all the required plugins.\r\n3. Install and activate WooCommerce 6.9.0.\r\n4. Complete OBW. \r\n5. Go to the \"Woocommerce > Home\" page.\r\n6. Observe that, Ellipsis menu for \"Setup Check List\" fails to display.\r\n\r\n### Screenshot:\r\n\r\n![#34639 1](https:\/\/user-images.githubusercontent.com\/41110392\/189685698-71f85a64-22f9-4a72-b227-dd60fa44e4ad.jpg)\r\n\r\n![#34639 2](https:\/\/user-images.githubusercontent.com\/41110392\/189685715-483c5f8a-4554-4051-88f4-679affcc6d4c.jpg)\r\n\r\n![#34639 3](https:\/\/user-images.githubusercontent.com\/41110392\/189685717-fa0628ff-0c50-4948-bd5e-7bade34f3f95.jpg)\r\n\r\n\n\n###\n\n","completion":" [3837257959,3943424887,3943426545]"}
{"prompt":"I'm using automattic\/woocommerce and trying to download product data. On few products fetching information doesn't working as expected.\n\n### Expected behavior\n\nNo errors when fetching product data.\n\n### Actual behavior\n\nPackage automattic\/woocommerce throwing HttpClientException of JSON ERROR.\n\n### Steps to reproduce\n\n1. Install automattic\/woocommerce\r\n2. Create client\r\n```php\r\n$client = new Client($storeUrl, $consumerKey, $consumerSecret);\r\n```\r\n3. Try to fetch product data\r\n```php\r\n$product = $client->get('products\/' . $lineItem->product_id);\r\n```\r\n4. See exception i log file.\r\n```\r\n[2022-09-11 10:30:37] stg.DEBUG: App\\Services\\Woocommerce\\Orders\\Import::updateOrCreateOrderLine {\"exception\":\"[object] (Automattic\\\\WooCommerce\\\\HttpClient\\\\HttpClientException(code: 502): JSON ERROR: Syntax error at \/var\/www\/awesome-page\/vendor\/automattic\/woocommerce\/src\/WooCommerce\/HttpClient\/HttpClient.php:411)\r\n[stacktrace]\r\n#0 \/var\/www\/awesome-page\/vendor\/automattic\/woocommerce\/src\/WooCommerce\/HttpClient\/HttpClient.php(455): Automattic\\\\WooCommerce\\\\HttpClient\\\\HttpClient->processResponse()\r\n#1 \/var\/www\/awesome-page\/vendor\/automattic\/woocommerce\/src\/WooCommerce\/Client.php(82): Automattic\\\\WooCommerce\\\\HttpClient\\\\HttpClient->request()\r\n\/\/\r\n```\n\n\n\n###\n\n","completion":" [2258932484,3837257959]"}
{"prompt":"Today when using WooCommerce I noticed that I get a 'No orders found' result, when I click on any customer's 'View other orders →\" link from an order page. I tested this on 3+ orders and all came back with zero results. This just started happening after the recent update 3-5 days ago.\n\n### Expected behavior\n\nTypically you see the orders (even if it's just one single order) from the customer on this page, with their email in the filter.\n\n### Actual behavior\n\nNow there is no filter and all orders show the 'No orders found' message.\n\n### Steps to reproduce\n\n1. Go to Orders in WooCommerce\r\n2. Click an order to view it.\r\n3. Click the link button for 'View other orders →\" \r\n4. See the 'no orders found' message.\n\n\n\n###\n\n","completion":" [1891051458,3837257959]"}
{"prompt":"**User stor- As a merchant,\r\n- I want to enter accurate shipping information\r\n- So that I don’t overcharge my customers\r\n\r\nThe create new shipping class logic will be done as part of https:\/\/github.com\/woocommerce\/woocommerce\/issues\/34657\r\n\r\n**Design**\r\n5sAIeTRd9Yp7nSCT33BAWz-fi-6499%3A290914\r\n\r\n**Acceptance criteri- [x] Users can view and select any existing shipping class.\r\n- [x] In addition to user-created shipping classes, it also contains additional options: `No shipping class` \/ `Standard shipping`\r\n- [x] The field’s helper text link opens `WooCommerce > Settings > Shipping > Shipping classes` in a new tab.\n\n###\n\n","completion":" [4370026978]"}
{"prompt":"## User Story\r\n\r\n> As a new merchant, I want to install the Facebook extension, to grow my store.\r\n\r\n## Acceptance Criteria\r\n\r\n```\r\nFeature: Onboarding Wizard\r\n\r\n  Scenario: User navigates to Free Features\r\n    When the User navigates to Free Features\r\n    Then the Facebook extension should be listed\r\n    And the description should be `List products and create ads on Facebook and Instagram with <a href=\"https:\/\/woocommerce.com\/products\/facebook\/\">Facebook for WooCommerce<\/a>`\r\n\r\nFeature: Marketing Task\r\n\r\n  Scenario: User clicks to Marketing Task\r\n    When the User clicks to the Marketing Task\r\n    Then the Facebook extension should be listed under the Grow section\r\n    And the the description should be `List products and create ads on Facebook and Instagram.`\r\n    And the logo should match the one found at https:\/\/woocommerce.com\/wp-content\/uploads\/2017\/04\/fb-woodotcom.png\r\n```\r\n\n\n###\n\n","completion":" [3943424887]"}
{"prompt":"\"Invalid order\" error displayed for downloadable product after clicking \"Product download\" button on \"My Accounts > Downloads\" page.\r\n\r\n\r\n### Expected behavior\r\n\r\nOrder should be downloaded after clicking \"Product download\" button on \"My Accounts > Downloads\" page.\r\n\r\n\r\n### Actual behavior\r\n\r\n\"Invalid order\" error displayed for downloadable product after clicking \"Product download\" button on \"My Accounts > Downloads\" page.\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using the JN site.\r\n2. Install and activate all the required plugins.\r\n3. Install and activate WooCommerce.\r\n4. Go to WooCommerce > Settings > Advanced > Custom Data Stores.\r\n5. Choose Custom Order Tables Enabled (without sync).\r\n6. Go to the store page, add a product to the cart and proceed to checkout.\r\n7. Set the above Order as completed from \"Woocommerce > Orders\" page.\r\n8. Go to the My account > Downloads.\r\n9. Click on the download order button.\r\n10. Observe that \"Invalid order\" error is displayed for downloadable products after clicking \"Product download\" button.\r\n\r\n### Screenshot and video:\r\n\r\n![#34285_1](https:\/\/user-images.githubusercontent.com\/41110392\/184141784-e64784e3-2161-4233-8cf2-241ae9d22383.png)\r\n\r\nhttps:\/\/user-images.githubusercontent.com\/41110392\/184140883-ec4ea289-260f-44e2-803d-93d6ac7aec9c.mp4\r\n\r\n\n\n###\n\n","completion":" [1527866622,3834300886,3837257959]"}
{"prompt":"We have updated the marketing task to the user in the marketing task after installing an extension in https:\/\/github.com\/woocommerce\/woocommerce\/pull\/34241\r\n\r\nHowever, because we call the `invalidateResolutionForStoreSelector( 'getTaskLists' );`, the placeholder flashes shortly after a plugin is installed.\r\n\r\nIt would be great if we could improve it to not show the placeholder after a plugin is installed.\r\n\r\nSee also: https:\/\/github.com\/woocommerce\/woocommerce\/pull\/34241#pullrequestreview-1069074564\n\n###\n\n","completion":" [3837257959,3943104021,3943424887]"}
{"prompt":"Additional instructions around product image upload is displayed twice after uploading \"Product Image\" tab on \"Add new product\" page.\r\n\r\n### Expected behavior\r\n\r\nAdditional instructions around product image upload should disappear after uploading \"Product Image\" tab on \"Add new product\" page.\r\n\r\n### Actual behavior\r\n\r\nAdditional instructions around product image upload is displayed twice after uploading \"Product Image\" tab on \"Add new product\" page.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using the JN site.\r\n2. Install and activate all the required plugins.\r\n3. Install and activate WooCommerce.\r\n4. Go to \"Products > Add new\".\r\n5. Click on \"Set product image\" under \"Product Image\" tab.\r\n6. Upload any image from \"Media Library\".\r\n7. Observe that additional instructions around product image upload is displayed twice after uploading \"Product Image\" tab.\r\n\r\n### Actual Result:\r\nAdditional instructions around product image upload is displayed twice after uploading \"Product Image\" tab on \"Add new product\" page.\r\n\r\n### Expected Result:\r\nAdditional instructions around product image upload should disappear after uploading \"Product Image\" tab on \"Add new product\" page.\r\n\r\n### Video:\r\n\r\nhttps:\/\/user-images.githubusercontent.com\/41110392\/183914133-9559f48f-d280-4c2e-9f88-2b7e108182e7.mp4\r\n\r\n### Related to this pull request:\r\n#33660 \r\n\r\n\n\n###\n\n","completion":" [3837257959]"}
{"prompt":"In going through previous final release posts, it appears we used to include relevant PR numbers when highlighting important changes. These weren't included in Code Analyzer's original spec because it was a CLI tool, but since the output is used to automatically generate release posts now, we should include PR numbers in the output.\r\n\r\n<img width=\"865\" alt=\"image\" src=\"https:\/\/user-images.githubusercontent.com\/1922453\/183801281-50e0eff2-36ba-4666-9f9d-9473707404f4.png\">\r\n\r\nThis issue has two parts:\r\n\r\n- [ ] Enhance Code Analyzer to output PR links\r\n- [ ] Update developer blog post creation tools to output resulting PRs number from Code Analyzer\r\n\r\n\n\n###\n\n","completion":" [3844183371]"}
{"prompt":"In WC_Order, the function `get_edit_order_url` also should be adopted to return the correct link regardless of the authoritative data source.\r\n\r\nIn `OrderUtils`, utility methods should be called `get_order_admin_edit_url` and `get_order_admin_new_url` respectively. We also need to add a function for generating delete links.\r\n\r\n\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"In [35726811](35726811-hc) the merchant encountered a fatal error when a null value was passed to `wc_add_number_precision` during an add-to-cart operation.\r\n\r\nThe merchant carried out a workaround and returned the check for null removed [here](https:\/\/github.com\/woocommerce\/woocommerce\/commit\/a1279e67c6c2506dcaac30d65bab611bf03c50fa).\r\n\r\n> I did put the float back and checked for null in `wc_add_number_precision_deep` and if it was null, set $value = 0.0 and it is also working now.\n\n### Expected behavior\n\nA `null` value should be checked for\n\n### Actual behavior\n\nNull creates a fatal error\n\n### Steps to reproduce\n\nPass a null value [here](https:\/\/github.com\/woocommerce\/woocommerce\/blob\/4fcbcb1a48e3ed8fe2c68fb76189d473aa27faf8\/plugins\/woocommerce\/includes\/wc-core-functions.php#L1918)\n\n\n\n###\n\n","completion":" [1527866622,3837257959]"}
{"prompt":"When there is no plugin recommendation listed under `Add recommended business features to my site`, `Free features` tab is still visible\r\n\r\n<img width=\"645\" alt=\"Screen Shot 2022-07-14 at 3 45 17 PM\" src=\"https:\/\/user-images.githubusercontent.com\/4723145\/179121013-443edae8-8f30-4ce8-ad50-8e3008ba4b58.png\">\r\n \r\n\r\n### Expected behavior\r\n\r\n`Free features` should be hidden when there is no plugin listed.\r\n\r\n### Actual behavior\r\n\r\n`Free features` is still rendered \r\n\r\n### Steps to reproduce\r\n\r\n1. Start with a fresh install\r\n2. Start OBW and use the following selections and click Continue\r\n\r\nStore Details.country\/region: Afghanistan\r\nIndustry: Food and drink\r\nProduct Types: Physical products\r\nBusiness Details[how many products do you plan to display]: 1-10\r\nBusiness Details[currently selling else where?]: Yes, on another platform\r\nBusiness Details[How many employees do you have]: <10\r\nBusiness Details[What's your current annual revenue?]: Up to 3.000\r\nBusiness Details[Which platform is the store using?] BigCommerce\r\n\r\n3. On the `Free features` tab, make a note of the plugins. You should see `MailPoet` and `Google Listings and Ads` only.\r\n4. Open a new tab and install and active the plugins listed on `Free features` manually.\r\n5. Refresh `Free features` tab\r\n6. There is no recommendation anymore, but the tab is still rendered.\r\n \r\n\r\n\n\n###\n\n","completion":" [1891051446,3837257959,3943104021]"}
{"prompt":"The entire point of using Turborepo is to take advantage of task caching. We need to integrate this caching into our CI so that we can speed it up.\r\n\r\n* Use a branch-specific cache key\r\n* Cache `.turbo` directories in each package, likely using our composite install\/build action\r\n  * We can take this opportunity to make sure all of the workflows are using this too!\n\n###\n\n","completion":" [3844183371]"}
{"prompt":"As per the requirement I need, I need to disable some attributes from variation selection.\r\nFor that I have used hook ‘woocommerce_get_product_attributes’.\r\n\r\nBelow is the code I have used\r\n\r\nadd_filter('woocommerce_get_product_attributes','k_data_attributes');\r\nfunction k_data_attributes($atts) {\r\n   $existing_array = $atts['pa_size']->get_options();\r\n   if (($key = array_search(102, $existing_array)) !== false) {\r\n      unset($existing_array[$key]);\r\n   }\r\n   $atts['pa_size']->set_options($existing_array);\r\n\/\/$atts['pa_size']->set_options(); working proper\r\n   return $atts;\r\n}\r\n\r\nHere I was able to set updated array. But then also 102 term is displaying in variation selection.\n\n### Expected behavior\n\nHook woocommerce_get_product_attributes should filter out variations displayed at single product page. \n\n### Actual behavior\n\nHook woocommerce_get_product_attributes is not filtering out variations displayed at single product page. \n\n### Steps to reproduce\n\n1. create variable product with 2 variations.\r\n2. Use woocommerce_get_product_attributes hook to filter out variations. \r\n3. Check single product page.\n\n\n\n###\n\n","completion":" [3837257959]"}
{"prompt":"Invalid change file affect some of the automations that we've put in place tied to the release and create more manual work in the process of creating the release. We should add a pre-push hook that validates both that a change file is present in a PR (if required), and that the change file is valid.\n\n###\n\n","completion":" [3844183371]"}
{"prompt":"This is an epic issue to keep track of our UI revamp on marketing page in WooCommerce Admin.\r\n\r\n## Designs\r\n\r\nThis is how the current Marketing page looks like:\r\n\r\n![image](https:\/\/user-images.githubusercontent.com\/417342\/179001079-8b429aa3-68e9-4d8f-b9b9-d79ebbcce294.png)\r\n\r\nThis is the design for the new Marketing page:\r\n\r\n![image](https:\/\/user-images.githubusercontent.com\/417342\/179001195-b01b7f44-96a9-4329-8e85-adb3dd4dbe39.png)\r\n\r\n## Tasks\r\n\r\nTasks related to this epic:\r\n\r\n- [x] #33896\r\n- [x] #34025\r\n- [x] #34107\r\n- [x] #34108\r\n- [x] #34431\r\n- [x] #34655\r\n- [x] #34732\r\n\r\nNote that this epic does not include the \"Channels\" card and the \"Campaigns\" card in the new design. \r\n\r\nUpdate: Note that the top banner card is now out of scope of this epic issue. For more info, see pe2C5g-hG-p2.\r\n\r\n## Notes\r\n\r\nInternal P2 project thread: pe2C5g-bH-p2\n\n###\n\n","completion":" [4327454247]"}
{"prompt":"Add support for `meta_query` similar to `WP_Query`.\n\n###\n\n","completion":" [3834300886,3837257959]"}
{"prompt":"After creating a new product via API (successful) trying to update that same product later with more and other details but still the same SKU, it returns an error as below. \r\nI'm not creating a new product, I'm just updating the existing product with the same SKU. \r\n\r\n{\"code\":\"product_invalid_sku\",\"message\":\"Ongeldig of dubbel artikelnummer.\",\"data\":{\"status\":400,\"resource_id\":361069}}\r\n\r\nI can't remember this behavior was like this before. Did something change in one of the last WooCommerce updates that is causing this behavior? \n\n### Expected behavior\n\nJust update the existing product with the same SKU instead of throwing an error. \n\n### Actual behavior\n\nI create a new product via API, example SKU \"SKU1\" with some meta data for title and description. \r\nIt returns ID example 1234\r\n\r\nAfter this process I want to update the product with ID 1234 and pass meta data for price and category and the same SKU \"SKU1\". \r\nAPI returns an error {\"code\":\"product_invalid_sku\",\"message\":\"Ongeldig of dubbel artikelnummer.\",\"data\":{\"status\":400,\"resource_id\":1234}}\r\n\r\nSo this results in impossible to update the price or any other fields because the SKU is \"the same\"? \r\nWhen I remove the SKU field from the PUT body, it works fine. \r\nIf I put a DIFFERENT SKU via PUT body, it also works fine!\r\n\r\nSo clearly there is something off going on that does not accept the same SKU for the same product ID it already has. \n\n### Steps to reproduce\n\n1. create a new product via API, example SKU \"SKU1\" with some meta data for title and description. \r\n2. It returns ID example 1234\r\n\r\n3. update the product with ID 1234 and pass meta data for price and category and the same SKU \"SKU1\". \r\n4. API returns an error {\"code\":\"product_invalid_sku\",\"message\":\"Ongeldig of dubbel artikelnummer.\",\"data\":{\"status\":400,\"resource_id\":1234}}\r\n\n\n\n\n###\n\n","completion":" [3837257959]"}
{"prompt":"### Prerequisites\r\n\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [ ] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\nI’m getting the message below when I try to access a download file\r\n\r\n```\r\nInvalid download link. Go to shop\r\n\r\nThis message was triggered by woocommerce.\r\n\r\nCall stack:\r\n\r\nwp_die()\r\nwp-content\/plugins\/woocommerce\/includes\/class-wc-download-handler.php:680\r\nWC_Download_Handler::download_error()\r\nwp-content\/plugins\/woocommerce\/includes\/class-wc-download-handler.php:49\r\nWC_Download_Handler::download_product()\r\nwp-includes\/class-wp-hook.php:307\r\ndo_action('init')\r\nwp-settings.php:598\r\nQuery Monitor\r\n```\r\n\r\nThanks\r\n\r\n### Expected behavior\r\n\r\nAvailable download the link\r\n\r\n### Actual behavior\r\n\r\nGetting error message \"Invalid download link\"\r\n\r\nWe did a troubleshooting of the code and I found out that the problem is releated with this commit https:\/\/github.com\/woocommerce\/woocommerce\/commit\/99f85a55d5318401a13ff1076e7ce08e465c24eb#diff-3eeadff624dc3b301a8f6b78952ca64eb86d8fecb81b6437f727468b505d2ed2L38 line 38\r\n\r\nOur site is filing on line 46 and 47\r\n\r\n### Steps to reproduce\r\n\r\nn\/a\r\n\r\n\n\n###\n\n","completion":" [3837257959]"}
{"prompt":"I used to be able to query WC attribute terms in the block editor, but it's apparently it's not possible anymore.\r\n\r\nIt works for `product_cat` and `product_tag` though with the steps below (actually now there's no need to expose them to the api anymore)\n\n### Expected behavior\n\nExpose the attribute to the rest API\r\n\r\n```\r\n$pa_my_attribute                          = get_taxonomy( 'pa_my_attribute');\r\n$pa_my_attribute->show_in_rest  = true;\r\n```\r\n\r\nAnd then access the terms in the block editor:\r\n\r\n```\r\ntaxTerms: select( 'core' ).getEntityRecords( 'taxonomy', 'pa_my_attribute' , queryParams )\r\n```\n\n### Actual behavior\n\nInstead of loading a list of terms I get a console error:\r\n\r\n`GET http:\/\/shop.lovelanghe.test\/wp-json\/false\/pa_denomination?context=edit&per_page=100&_locale=user 404 (Not Found)`\n\n### Steps to reproduce\n\nexpose an attribute to the API\r\n```\r\n$pa_your_attribute                          = get_taxonomy( 'pa_your_attribute');\r\n$pa_your_attribute ->show_in_rest  = true;\r\n```\r\n\r\nAnd then try to query its terms in the block editor\r\n\r\n```\r\ntaxTerms: select( 'core' ).getEntityRecords( 'taxonomy', 'pa_your_attribute ' , queryParams )\r\n```\n\n\n\n###\n\n","completion":" [3837257959]"}
{"prompt":"Set `shipping-smart-defaults` values in `core.json` and `development.json` to true if we've confirmed everything is ready to go prior 6.8 code freeze.\n\nPotentially, also set `shipping-setting-tour` to true if it's ready.\n\n###\n\n","completion":" [3837257959,3943104021,3943424841]"}
{"prompt":"In experiment pbxNRc-1wQ-p2, it's found that header task variant (experiment 1) performed better. In this issue, we should deploy the experiment by replacing the call to ExPlat with hardcoded reference to choose experiment 1 variant. \r\n\r\nWe're aiming to get this in before WC 6.8 code freeze. No cleaning up is necessary in this task since we should handle it in the upcoming cycle.\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [3837257959,3943104021,3943424841]"}
{"prompt":"Outdated design of the payments page after clicking on `Install` WCPayments in the payments settings table\n\n### Expected behavior\n\nWe should display a consistent version of the Payments Overview hero, as in this [Figma design](https:\/\/www.figma.com\/file\/e428PXC0QyEwYqtX48lLq0\/%5BWCPay%5D-Positioning-and-Conversion?node-id=12830%3A94658)\n\n### Actual behavior\n\nThe version of the payments screen is outdated:\r\n![Uploading Screenshot 2022-06-24 at 18.25.18.png…]()\r\n\r\n\n\n### Steps to reproduce\n\n1. Onboard to WooCommerce from a WCPay eligible country **BUT** during onboarding opt out from installing WCPay\r\n2. Go to Payments Settings\r\n\n\n\n\n###\n\n","completion":" [1891051449,3837257959,3943104021]"}
{"prompt":"\"Cannot read properties of undefined\" notification displayed after clicking \"Download\" button for date range \"Quarter to date\" and \"Year to date\" on \"Analytics > Revenue\" page.\r\n\r\n### Expected behavior\r\n\r\nCSV file should be downloaded or emailed after clicking \"Download\" button for date range \"Quarter to date\" and \"Year to date\" on \"Analytics > Revenue\" page.\r\n\r\n### Actual behavior\r\n\r\n\"Cannot read properties of undefined\" notification displayed after clicking \"Download\" button for date range \"Quarter to date\" and \"Year to date\" on \"Analytics > Revenue\" page.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using JN site.\r\n2. Install and activate all the required plugins.\r\n3. Install and activate WooCommerce.\r\n4. Complete the setup wizard.\r\n5. Go to Analytic > Revenue page..\r\n6. Select \"Quarter to date\" or \"Year to date\" as date range .\r\n7. Click on \"Download\" csv button.\r\n8. Observe that \"Cannot read properties of undefined\" notification displayed after clicking \"Download\" button for date range \"Quarter to date\" and \"Year to date\".\r\n\r\n### Screenshot:\r\n\r\n![#33583](https:\/\/user-images.githubusercontent.com\/41110392\/175326350-a87b76cd-6d94-45a5-aecd-2a57a50fd513.jpg)\r\n\r\n\n\n###\n\n","completion":" [3837257959,3943104021,3943425133]"}
{"prompt":"**Description:** the \"add media\" and \"add contact form\" CTA can be misleading and make the users think that this is the path they need to take to add product images. \r\n\r\n**Acceptance criteria- [x] Improve the CTA copy to make sure users understand that the media or form will be added to the description: \"Add media to description\" and \"Add contact form to the description\"\nOr\r\n- [ ] Change the layout to make it clear that the CTAs are part of the long description - similar to what we have for the short description\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"Ideally we don't need to include both `@woocommerce\/eslint-plugin` and `@wordpress\/eslint-plugin` in woo admin package.json.\r\n\r\nBut it doesn't work when we removed `@woocommerce\/eslint-plugin`. \r\n\r\n```\r\nOops! Something went wrong! :(\r\n\r\nESLint: 8.11.0\r\n\r\nError: .eslintrc.js » plugin:@woocommerce\/recommended » plugin:@wordpress\/recommended » \/Users\/chihsuan\/Projects\/woocommerce\/node_modules\/.pnpm\/@wordpress+eslint-plugin@11.0.1_45b6e6918fb11850d1105a4fd2c5fed3\/node_modules\/@wordpress\/eslint-plugin\/configs\/recommended-with-formatting.js » \/Users\/chihsuan\/Projects\/woocommerce\/node_modules\/.pnpm\/@wordpress+eslint-plugin@11.0.1_45b6e6918fb11850d1105a4fd2c5fed3\/node_modules\/@wordpress\/eslint-plugin\/configs\/esnext.js » \/Users\/chihsuan\/Projects\/woocommerce\/node_modules\/.pnpm\/@wordpress+eslint-plugin@11.0.1_45b6e6918fb11850d1105a4fd2c5fed3\/node_modules\/@wordpress\/eslint-plugin\/configs\/es5.js » \/Users\/chihsuan\/Projects\/woocommerce\/node_modules\/.pnpm\/@wordpress+eslint-plugin@11.0.1_45b6e6918fb11850d1105a4fd2c5fed3\/node_modules\/@wordpress\/eslint-plugin\/configs\/jsdoc.js:\r\n\tConfiguration for rule \"jsdoc\/check-line-alignment\" is invalid:\r\n\tValue [\"always\",{\"tags\":[\"param\",\"arg\",\"argument\",\"property\",\"prop\"],\"preserveMainDescriptionPostDelimiter\":true}] should NOT have more than 1 items.\r\n\r\n    at ConfigValidator.validateRuleOptions (\/Users\/chihsuan\/Projects\/woocommerce\/node_modules\/.pnpm\/@eslint+eslintrc@1.2.1\/node_modules\/@eslint\/eslintrc\/dist\/eslintrc.cjs:2027:23)\r\n    at \/Users\/chihsuan\/Projects\/woocommerce\/node_modules\/.pnpm\/@eslint+eslintrc@1.2.1\/node_modules\/@eslint\/eslintrc\/dist\/eslintrc.cjs:2082:18\r\n    at Array.forEach (<anonymous>)\r\n    at ConfigValidator.validateRules (\/Users\/chihsuan\/Projects\/woocommerce\/node_modules\/.pnpm\/@eslint+eslintrc@1.2.1\/node_modules\/@eslint\/eslintrc\/dist\/eslintrc.cjs:2079:34)\r\n    at ConfigValidator.validateConfigArray (\/Users\/chihsuan\/Projects\/woocommerce\/node_modules\/.pnpm\/@eslint+eslintrc@1.2.1\/node_modules\/@eslint\/eslintrc\/dist\/eslintrc.cjs:2205:18)\r\n    at CascadingConfigArrayFactory._finalizeConfigArray (\/Users\/chihsuan\/Projects\/woocommerce\/node_modules\/.pnpm\/@eslint+eslintrc@1.2.1\/node_modules\/@eslint\/eslintrc\/dist\/eslintrc.cjs:3947:23)\r\n    at CascadingConfigArrayFactory.getConfigArrayForFile (\/Users\/chihsuan\/Projects\/woocommerce\/node_modules\/.pnpm\/@eslint+eslintrc@1.2.1\/node_modules\/@eslint\/eslintrc\/dist\/eslintrc.cjs:3753:21)\r\n    at FileEnumerator._iterateFilesRecursive (\/Users\/chihsuan\/Projects\/woocommerce\/node_modules\/.pnpm\/eslint@8.11.0\/node_modules\/eslint\/lib\/cli-engine\/file-enumerator.js:482:49)\r\n    at _iterateFilesRecursive.next (<anonymous>)\r\n    at FileEnumerator.iterateFiles (\/Users\/chihsuan\/Projects\/woocommerce\/node_modules\/.pnpm\/eslint@8.11.0\/node_modules\/eslint\/lib\/cli-engine\/file-enumerator.js:297:49)\r\n ELIFECYCLE  Command failed with exit code 2.\r\n ELIFECYCLE  Command failed with exit code 1.\r\n```\r\n\r\nWe should investigate it more and see if we can remove it. \r\n\n\n###\n\n","completion":" [3837257959,3943104021]"}
{"prompt":"Hi,\r\n\r\nThere are lots of cases where a variant can have attributes that differs from the parent, but are not defining the variant. Obvious cases like UPC\/EAN\/GTIN etc are of course there, but these can be solved with meta data (even though it is kind of not-great for end users).\r\n\r\n### Real life examples\r\n**Life jackets**\r\nLife jackets are typically sized by a interval of heights of the user - \"20 - 30 kg\", \"25 - 40 kg\". By adding `20,21,...30` to the former and `25,26,...40` on an attibute \"Fits weights\" to the latter we can enable a very nice filter on category pages where the customer can pick their weight and see all life jackets that fits them. Since every product has more than one value (20-30 is obviously 10 values) we can not use it for variants. \r\n\r\n**Bike tires**\r\nTires are variantized by it's dimensions (width and height). Wide tires **fits for** mountainbikes, while narrow tires **fits for** racing bikes. To allow customers to (in the category \"Bike tires\") filter by Suitable for (mountainbike|racing bike), we would need to assign that attribute to the variants. If we assign both values to the parent, the filter will be wrong as soon as one of the variants are out of stock (or hidden by any other setting such as visibility, unpublished etc).\r\n\r\nI can go on forever, but I think the uses cases should be clear. Magento and most other platforms have solved this. It would make the PIM part of WooCommerce a great deal more flexible.\r\n\r\nFrom a database perspective, I can not see why this should be very hard to implement. Most of the functionality is actually already there (thanks to the `wp_wc_product_attributes_lookup` table). Since the variants are in fact stored as separate products (posts) it should be fairly straight forward.\r\n\r\nIs there a reason\/decision taken why this is not possible? If not, would it be of interest if i tried to take a stab at an implementation?\r\n\r\n### Describe alternatives you've considered\r\n\r\n_No response_\r\n\r\n### Additional context\r\n\r\n_No response_\n\n###\n\n","completion":" [1891051456,3837257959]"}
{"prompt":"Investigate what needs to be tested on the higher and lower levels, For example:\r\n\r\n```\r\n- Merchant can create virtual product\r\n  - Merchant can log in\r\n  - Merchant can create virtual product\r\n  - Merchant can verify that virtual product was created\r\n```\r\n\r\nAcceptance criteria\r\n\r\nUpdate AC for the following tasks:\r\n\r\n- [x] https:\/\/github.com\/woocommerce\/woocommerce\/issues\/33472\r\n- [x] https:\/\/github.com\/woocommerce\/woocommerce\/issues\/33473\r\n- [x] https:\/\/github.com\/woocommerce\/woocommerce\/issues\/33474\n- [x] https:\/\/github.com\/woocommerce\/woocommerce\/issues\/33475\r\n- [x] https:\/\/github.com\/woocommerce\/woocommerce\/issues\/33476\r\n- [x] https:\/\/github.com\/woocommerce\/woocommerce\/issues\/33477\r\n- [x] https:\/\/github.com\/woocommerce\/woocommerce\/issues\/33478\r\n\n\n###\n\n","completion":" [3837257959,3943104021,3943424887]"}
{"prompt":"### Description\r\n\r\nThe products data store should be able to create product tags. It would be nice to also support updates, but that's not critical for the product page, which is the context for this work.\r\n\r\n_For now, this should be marked as experimental\/internal as we iterate on the API so that it is clear that this is incomplete and subject to change_.\r\n\r\n#### _Properties_\r\n\r\n| Attribute | Type | Description | |\r\n| --------- | --------- | --------- | --------- |\r\n| id | integer | Unique identifier for the resource. | READ-ONLY |\r\n| name | string | Tag name. | MANDATORY |\r\n| slug | string | An alphanumeric identifier for the resource unique to its type. | |\r\n| description | string | HTML description of the resource. | |\r\n| count | integer | Number of published products for the resource. | READ-ONLY |\r\n\r\n_Most of our create operations will specify only the name, and as stated above, update functionality is just a nice-to-have at this point._\r\n\r\n**Reference**\r\n> https:\/\/woocommerce.github.io\/woocommerce-rest-api-docs\/#product-tag-properties\r\n\r\n#### _Create_\r\n**HTTP Request**\r\n> **POST** `\/wp-json\/wc\/v3\/products\/tags`\r\n\r\n**Reference**\r\n> https:\/\/woocommerce.github.io\/woocommerce-rest-api-docs\/#create-a-product-tag\r\n\r\n#### _Update_\r\n**HTTP Request**\r\n> **PUT** `\/wp-json\/wc\/v3\/products\/tags\/<id>`\r\n\r\n**Reference**\r\n> https:\/\/woocommerce.github.io\/woocommerce-rest-api-docs\/#update-a-product-tag\r\n\r\n### Acceptance criteria\r\n- [ ] Data store updates\r\n- [ ] Unit tests\r\n- [ ] Documentation with examples\n\n###\n\n","completion":" [2190477857,3837257959,3943104021]"}
{"prompt":"### Description\r\n\r\nAdd the code to be able to get the shipping classes through the products data store.\r\n\r\n_For now, this should be marked as experimental\/internal as we iterate on the API so that it is clear that this is incomplete and subject to change_.\r\n\r\n#### _Get_\r\n**Description**\r\n> This API lets you retrieve a shipping class by ID.\r\n\r\n**HTTP Request**\r\n> **GET** `\/wp-json\/wc\/v3\/products\/shipping_classes\/<id>`\r\n\r\n**Reference**\r\n> https:\/\/woocommerce.github.io\/woocommerce-rest-api-docs\/#retrieve-a-shipping-class\r\n\r\n#### _List all_\r\n**Description**\r\n> This API lets you retrieve all shipping classes.\r\n\r\n**HTTP Request**\r\n> **GET** `\/wp-json\/wc\/v3\/products\/shipping_classes`\r\n\r\n**Properties**\r\nParameter | Type | Description\r\n--------- | -------- | --------\r\ncontext | string | Scope under which the request is made; determines fields present in response. Options: view and edit. Default is view.\r\npage | integer | Current page of the collection. Default is 1.\r\nper_page | integer | Maximum number of items to be returned in result set. Default is 10.\r\nsearch | string | Limit results to those matching a string.\r\nexclude | array | Ensure result set excludes specific ids.\r\ninclude | array | Limit result set to specific ids.\r\noffset | integer | Offset the result set by a specific number of items.\r\norder | string | Order sort attribute ascending or descending. Options: asc and desc. Default is asc.\r\norderby | string | Sort collection by resource attribute. Options: id, include, name, slug, term_group, description and count. Default is name.\r\nhide_empty | boolean | Whether to hide resources not assigned to any products. Default is false.\r\nproduct | integer | Limit result set to resources assigned to a specific product.\r\nslug | string | Limit result set to resources with a specific slug.\r\n\r\n\r\n**Reference**\r\n> https:\/\/woocommerce.github.io\/woocommerce-rest-api-docs\/#list-all-shipping-classes\r\n\r\n### Acceptance criteria\r\n- [ ] Data store updates\r\n- [ ] Unit tests\r\n- [ ] Documentation with examples\r\n\n\n###\n\n","completion":" [2190477857,3837257959,3943104021]"}
{"prompt":"### Description\r\n\r\nAdd the code to be able to get the product attribute terms through the products data store.\r\n\r\n_For now, this should be marked as experimental\/internal as we iterate on the API so that it is clear that this is incomplete and subject to change_.\r\n\r\n#### _Get_\r\n**Description**\r\n> This API lets you retrieve a product attribute term by ID.\r\n\r\n**HTTP Request**\r\n> **GET** `\/wp-json\/wc\/v3\/products\/attributes\/<attribute_id>\/terms\/<id>`\r\n\r\n**Reference**\r\n> https:\/\/woocommerce.github.io\/woocommerce-rest-api-docs\/#retrieve-an-attribute-term\r\n\r\n#### _List all_\r\n**Description**\r\n> This API lets you retrieve all terms from a product attribute.\r\n\r\n**HTTP Request**\r\n> **GET** `\/wp-json\/wc\/v3\/products\/attributes\/<attribute_id>\/terms`\r\n\r\n**Properties**\r\n| Parameter | Type | Description |\r\n| --------- | -------- | -------- |\r\n| `context` | string | Scope under which the request is made; determines fields present in response. Options: `view` and `edit`. Default is `view`. |\r\n| `page` | integer | Current page of the collection. Default is `1`. |\r\n| `per_page` | integer | Maximum number of items to be returned in result set. Default is `10`. |\r\n| `search` | string | Limit results to those matching a string. |\r\n| `exclude` | array | Ensure result set excludes specific ids. |\r\n| `include` | array | Limit result set to specific ids. |\r\n| `order` | string | Order sort attribute ascending or descending. Options: `asc` and `desc`. Default is `asc`. |\r\n| `orderby` | string | Sort collection by resource attribute. Options: `id`, `include`, `name`, `slug`, `term_group`, `description` and `count`. Default is `name`. |\r\n| `hide_empty` | boolean | Whether to hide resources not assigned to any products. Default is `false`. |\r\n| `parent` | integer | Limit result set to resources assigned to a specific parent. |\r\n| `product` | integer | Limit result set to resources assigned to a specific product. |\r\n| `slug` | string | Limit result set to resources with a specific slug. |\r\n\r\n\r\n**Reference**\r\n> https:\/\/woocommerce.github.io\/woocommerce-rest-api-docs\/#list-all-attribute-terms\r\n\r\n### Acceptance criteria\r\n- [ ] Data store updates\r\n- [ ] Unit tests\r\n- [ ] Documentation with examples\r\n\n\n###\n\n","completion":" [2190477857,3837257959,3943104021]"}
{"prompt":"I have people to manage with difference task such as Order, Product Editor\r\n\r\nIt's would be better if WC has role feature to allow such as \r\n\r\nOrder -> they can only read product order from customer\r\n\r\nProduct Editor -> they can only log and see only WC products and edit all product to sell not others setting like edit WC setting payment or shipping setting\r\n\r\n\r\n\r\n\r\n### Describe alternatives you've considered\r\n\r\nI have use WP Role Capabilities plugin to manage those above my scenario but if I allow only a user to edit product they will see other WC setting such shipping or payment setting.\r\n\r\n### Additional context\r\n\r\nI have use WP User Role Editor to manage above scenario but not help, if I allow this capability a user in product will see other setting like payment or shipping setting, if I don't allow this capability that user won't be able to use WC dashboard to edit product.\r\n\r\n<img width=\"273\" alt=\"image\" src=\"https:\/\/user-images.githubusercontent.com\/17005582\/173278561-241f7372-af24-4e54-bb94-f56c65cacace.png\">\r\n\n\n###\n\n","completion":" [3837257959]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have checked that my issue type is not listed here https:\/\/github.com\/woocommerce\/woocommerce\/issues\/new\/choose\r\n- [x] My issue is not a security issue, support request, bug report, enhancement or feature request (Please use the link above if it is).\r\n\r\nCurrently the PHP linter runs on a [pre-commit hook](https:\/\/github.com\/woocommerce\/woocommerce\/blob\/trunk\/.husky\/pre-commit#L4). This means if there are any linter violations, even in unrelated code in the same file, you get blocked from completing your commit. I find this disruptive when I'm \"in the flow\" and this has sometimes caused me to resort to committing with `--no-verify`, which is obviously not a great habit to get into. For new contributors, this can be confusing and discouraging ([example](https:\/\/github.com\/woocommerce\/woocommerce\/issues\/33135#issuecomment-1147334703)).\r\n\r\nI would like to propose that the linter check instead happen on the pre-push hook.\r\n\r\n* Better supports the habit of making atomic commits. Fixing linting violations can happen in a separate commit.\r\n* Doesn't break your \"flow\".\r\n* Still ensures that new linting violations aren't introduced to the codebase.\n\n###\n\n","completion":" [3844183371]"}
{"prompt":"**User story:**\r\nAs a new merchant\r\nI want to focus on the most important setup tasks\r\nSo I can review some details later\r\n\r\n**Description:**\r\nWith Jetpack installed and connected, alongside WCS, we have the opportunity to set things up on the users' behalf, and ask them to review and confirm, rather than start from scratch and think.\r\n\r\n**Design overview (with new spotlight component):**\r\ncJQeyyhx9PraQrY3YAtCGM-fi-705%3A80783\r\n\r\n**Acceptance Criteria- [ ] This new flow requires embedding an iFrame to avoid sending users to the external Jetpack page. It's feasible on all browsers apart from Safari; we'll keep the current flow (external Jetpack page) for this specific browser.\r\n\r\n\r\n<img width=\"1444\" alt=\"WooCommerce _ Home _ Set up Shipping _ Enable WooCommerce Shipping\" src=\"https:\/\/user-images.githubusercontent.com\/4344253\/172816546-00a47749-bb99-4402-a0e9-de33b70bf249.png\">\r\n<img width=\"1444\" alt=\"WooCommerce _ Home _ Set up Shipping _ Enable WooCommerce Shipping (1)\" src=\"https:\/\/user-images.githubusercontent.com\/4344253\/172816530-96f1cebd-dbb0-4529-bdc1-6428a687e6f5.png\">\r\n<img width=\"1444\" alt=\"WooCommerce _ Home _ Set up Shipping _ Enable WooCommerce Shipping (2)\" src=\"https:\/\/user-images.githubusercontent.com\/4344253\/172816521-bc6e9e81-bb12-4983-b90c-f60366bc438c.png\">\r\n<img width=\"1440\" alt=\"WooCommerce _ Settings (1)\" src=\"https:\/\/user-images.githubusercontent.com\/4344253\/172816509-08226676-9448-45cb-a8f9-553e94f3a22f.png\">\r\n\r\nref https:\/\/github.com\/woocommerce\/woocommerce\/issues\/32318\n\n###\n\n","completion":" [3837257959,3943104021]"}
{"prompt":"**User story:**\r\nAs a new merchant\r\nI want to focus on the most important setup tasks\r\nSo I can review some details later\r\n\r\n**Description:**\r\n~With Jetpack installed and connected, alongside WCS, we have the opportunity to set things up on the users' behalf, and ask them to review and confirm, rather than start from scratch and think.~\r\n\r\n**Design overview (with new spotlight component):**\r\ncJQeyyhx9PraQrY3YAtCGM-fi-705%3A80783\r\n\r\n**Acceptance Criteria- [ ] If the store is located in the UK, Australia or Canada:\r\n- [ ] Same flow as now with a few optimizations in terms of copy and visual.\r\n\r\nhttps:\/\/user-images.githubusercontent.com\/98944206\/161233363-b71277bc-82f1-48ef-bb25-151b7bc4ac09.mov\r\n\r\nref https:\/\/github.com\/woocommerce\/woocommerce\/issues\/32318\n\n###\n\n","completion":" [3837257959,3943104021]"}
{"prompt":"**User story:**\r\nAs a new merchant\r\nI want to focus on the most important setup tasks\r\nSo I can review some details later\r\n\r\n**Description:**\r\nWith Jetpack installed and connected, alongside WCS, we have the opportunity to set things up on the users' behalf, and ask them to review and confirm, rather than start from scratch and think.\r\n\r\n**Design overview (with new spotlight component):**\r\ncJQeyyhx9PraQrY3YAtCGM-fi-705%3A80783\r\n\r\n**Acceptance Criteria- [ ] Display intro tooltips in Shipping Settings: Shipping zones, shipping methods when a user from shipping task \r\n- [ ] Display intro tooltips in WCS tab If the store sells physical products, has JP and WCS installed and connected, and is located in the US\r\n\r\n![https:\/\/user-images.githubusercontent.com\/98944206\/159504026-16f514c4-4c39-4b87-aeac-3a91f4c91628.gif](https:\/\/user-images.githubusercontent.com\/98944206\/159504026-16f514c4-4c39-4b87-aeac-3a91f4c91628.gif)\r\n\r\n\r\nref: https:\/\/github.com\/woocommerce\/woocommerce\/issues\/32318\r\n\n\n###\n\n","completion":" [3837257959,3943104021]"}
