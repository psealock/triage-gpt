{"prompt":"undefinedThe [Run tests against trunk after PR merge](https://github.com/woocommerce/woocommerce/actions/workflows/smoke-test-pr-merge.yml) workflow uses an incorrect workflow input to upload Allure reports. The input should be corrected from `destination-dir` to `artifact-name`.\r\n\r\n<img width=\"920\" alt=\"yHx0Q4Cmxr\" src=\"https://user-images.githubusercontent.com/4509348/227239356-c050a8a2-5457-4145-96b1-f6705f24d29b.png\">\r\n\r\n\r\n\n\n###\n\n","completion":" [3845016070,5222414669,5222415782]"}
{"prompt":"Incorrect variable name being used in one of the `api-core-tests`\r\nproductId instead of productTagId [here](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/tests/api-core-tests/tests/products/products-crud.test.js#L932)\n\n### Expected behavior\n\ncorrect variable name being used in one of the `api-core-tests`\r\nproductTagId instead of productId [here](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/tests/api-core-tests/tests/products/products-crud.test.js#L932)\n\n### Actual behavior\n\nIncorrect variable name being used in one of the `api-core-tests`\r\nproductId instead of productTagId [here](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/tests/api-core-tests/tests/products/products-crud.test.js#L932)\n\n### Steps to reproduce\n\nIncorrect variable name being used in one of the `api-core-tests`\r\nproductId instead of productTagId [here](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/tests/api-core-tests/tests/products/products-crud.test.js#L932)\n\n\n\n###\n\n","completion":" [5222414669]"}
{"prompt":"The console now shows errors that core blocks have already been registered.  I suspect that this may be related to setting up the editor server-side first and that manual registration of core blocks client-side is no longer necessary.\n\n### Testing\n\n1. Visit the product block editor\n2. See the errors in your console\n\n### Screenshots\n\n\n![Image](https://user-images.githubusercontent.com/10561050/226727371-54c53ffa-8185-4de0-85e7-04ddc83db29c.png)\n\n\n\n### Acceptance criteria\n\n* [ ] No errors show regarding previously registered blocks in the console\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"I always used $order->update_status('completed'); it hasnt been working since last Woocommerce update.\n\n### Expected behavior\n\nUpdate order status to complete.\n\n### Actual behavior\n\nGet error Call to undefined method stdClass::update_status()\n\n### Steps to reproduce\n\n1. Try to use method update_status in an order, it wont work.\n\n\n\n###\n\n","completion":" [1891051458]"}
{"prompt":"flag acceptance of the terms and conditions it should be before payment methods and that field should be a little more visible\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [1891051440]"}
{"prompt":"As requested in [this comment](https://github.com/woocommerce/woocommerce/pull/37064#discussion_r1130713116):\n>Instead of separating this logic into two separate (ultimately 3) components would it be worth just moving the product logic into a custom hook, that either returns a new auto draft product or an existing product?\n\n>That way you can just call const product = useProductEntityRecord( productId ) and pass that straight into the Editor.\nOnly suggesting this, cause otherwise I think we are better off splitting this into separate files again (but we were actually trying to avoid that).\n\nThese changes will be made in the `product-page.tsx` file that is the router to the product block editor.\n\n\n```[tasklist]\n### Tasks\n- [x] Replace components with hook\n```\n\n\n###\n\n","completion":" [4370026978,5232776504]"}
{"prompt":"Product sections also include an icon to the left side of the title as part of the design.\nCurrently we only support a title and description. This issue would be to add support for an icon, which can be added through the template config.\n\nHave a look at the current implementation of GB for blocks, look at `BlockIcon`.\n\n**Design**\n\n![Image](https://user-images.githubusercontent.com/2240960/225605930-5df567ad-01cc-4a90-b0e4-ff25c9be2b59.png)\n\nAkVNGImLgSqCObTQ3idVn7-fi-10-139\n\n**Acceptance criteria**\n\n- [ ] Product section block should render an icon next to the title if provided with one ( should be optional ).\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"Currently, WooCommerce only supports the PUT method for updating resources. However, there are situations where a more granular update of a resource is required, without having to send the entire resource in the request. This is where the PATCH method comes in handy.\r\n\r\nFor example, let's say you have a product in WooCommerce with multiple attributes such as title, description, price, etc. If you wanted to update just the price of the product, you would have to send the entire product object in the request body using the PUT method. This can be inefficient, especially if the product object is large.\r\n\r\nWith the PATCH method, you can send only the fields that need to be updated in the request body, thus reducing the amount of data being sent over the network. This can lead to improved performance and reduced network latency.\r\n\r\nIn addition, the PATCH method allows for partial updates of a resource, which can be useful in scenarios where you need to update only certain fields of a resource, without affecting the others.\r\n\r\nTherefore, adding support for the PATCH method in WooCommerce would provide more flexibility and efficiency in updating resources, and would align with RESTful best practices for API design.\n\n### Describe alternatives you've considered\n\nUsing the PUT method with the entire resource: While not as efficient as the PATCH method, using the PUT method with the entire resource would still allow for updating of the resource. This method may be sufficient for smaller resources, but could be inefficient for larger resources.\r\n\r\nCreating custom endpoints: Instead of using the existing endpoints in WooCommerce, custom endpoints could be created to support the PATCH method. This would require additional development effort but would provide more granular control over the API.\r\n\r\nUsing third-party plugins: There may be third-party plugins available that add support for the PATCH method in WooCommerce. However, using third-party plugins can introduce additional dependencies and potential security risks.\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"The woocommerce-it_IT.po translation file contains the following fragment;\r\n\r\n`#. translators: %s: regen thumbs url\r\n#: includes/customizer/class-wc-shop-customizer.php:535\r\nmsgid \"After publishing your changes, new image sizes may not be shown until you <a href=\\\"%s\\\" target=\\\"_blank\\\">Regenerate Thumbnails</a>.\"\r\nmsgstr \"Dopo aver pubblicato le modifiche, le nuove dimensioni dell'immagine non saranno utilizzate finch√© non avrai utilizzato <a href=\\\"%2$s\\\" target=\\\"_blank\\\">Rigenera miniature</a>.\"\r\n`\r\nYou need to replace **%2$s** with **%s** otherwise a fatal error occurs on the site under certain conditions.\r\n\n\n### Expected behavior\n\nCorrect translation into Italian\n\n### Actual behavior\n\nThe translation file contains an error\n\n### Steps to reproduce\n\n1. Activate Storefront theme.\r\n2. Turn on the Italian language on the site. The backend language should also be Italian.\r\n3. Download all Translations in Dashboard->Update. \r\n4. Add the following code to the child or main theme `add_filter( 'woocommerce_background_image_regeneration', '__return_false' );`\r\n5. Disable the Jetpack plugin if you have one.\r\n6. Go to Appearance -> Customizer and you will see this fatal error: `Fatal error: Uncaught ArgumentCountError: 3 arguments are required, 2 given in  /wp-content/plugins/woocommerce/includes/customizer/class-wc-shop-customizer.php:535`\n\n\n\n###\n\n","completion":" [702347761]"}
{"prompt":"The product editor includes areas that can be toggled to collapse or expand to show additional settings.\n\nThe [collapsible content component ](https://github.com/woocommerce/woocommerce/blob/trunk/packages/js/components/src/collapsible-content/collapsible-content.tsx)currently does this, so we may just need a thin wrapper block around this component.\n\nWe may need to consider if side effects are needed in nested blocks at the moment as collapsing this content in the current component completely stops those children from being rendered.\n\n### Screenshots\n\n\n![Image](https://user-images.githubusercontent.com/10561050/225427223-afb59d1e-fe99-4074-8fdc-6863de509434.png)\n![Image](https://user-images.githubusercontent.com/10561050/225427222-e97982f2-ee11-4d48-aad4-479245e3e20d.png)\n\n\n### Acceptance criteria\n\n* [ ] A new block that is collapsible/expandable\n* [ ] The block should render child blocks when expanded\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"The CES data store that currently is found in the `woocommerce/admin/client` package should be moved to the `@woocommerce/customer-effort-score` package.\r\n\r\nLocation of data store files: `plugins/woocommerce/admin/client/customer-effort-score-tracks/data`\r\n\r\n## Acceptance criteria\r\n\r\n- [ ] Exports from `@woocommerce/customer-effort-score` are updated to allow `woocommerce/admin/client` to continue to build and use CES\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"We should hide or remove the block inspector that is displayed on the right hand side of the product block editor:\n![Image](https://user-images.githubusercontent.com/2240960/225369985-c8e3e93c-6eb1-4a12-ac8d-b38576884666.png)\n\nI did mention `hide` as an option as it may be beneficial for us and 3PD's to have it show up for debugging. Maybe we only want it to show up in `development` mode?\n\n**Acceptance criteria**\n\n- [ ] Block inspector should not be visible anymore.\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"We are currently showing the block breadcrumbs as seen in the image below.\nWe should remove this as this is not part of the design.\n\n![Image](https://user-images.githubusercontent.com/2240960/225286303-bc775c1d-0e40-4d90-8027-2751af298d47.png)\n\n**Acceptance criteria**\n\n- [ ] Block breadcrumbs should not be visible anymore\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"## Description\r\n\r\nWhen a customer's user profile is updated in Users (`/wp-admin/users.php`), the WooCommerce > Customers report (`/wp-admin/admin.php?page=wc-admin&path=%2Fcustomers`) is not updated with the latest changes. It is updated with the previous changes.\r\n\r\nThis is because the action hook used is [`edit_user_profile_update`](https://developer.wordpress.org/reference/hooks/edit_user_profile_update/), which fires before the user has been saved to the database (before `edit_user()` is called).\r\n\r\nThe correct action hook to use is [`profile_update`](https://developer.wordpress.org/reference/hooks/profile_update/), which fires immediately after the user has been saved to the database.\r\n\r\n## How to reproduce\r\n\r\n1. Make a change to the last name of a customer user profile at Users\r\n2. Go to the Customers report at WooCommerce > Customers\r\n\r\n## Expected result\r\n\r\n- The updated last name is displayed\r\n\r\n## Actual result\r\n\r\n- The previous last name is displayed\r\n\r\n_Note: You can see that things are being updated, though not correctly by making another to the last name in the user profile at Users and then returning to WooCommerce > Customers and seeing that the first update is now reflected._\r\n\r\n## Additional information\r\n\r\nFound while working on https://github.com/woocommerce/woocommerce/issues/36330\n\n###\n\n","completion":" [3943425133]"}
{"prompt":"I am using Meta Pixel in my website. I observed that even if I have registered only PageView pixel event, AddToCart is triggered as well when pressing Add to Cart button. Tracking down the issue I've identified that the woocommerce-ro_RO.mo is causing this behaviour.\r\n\r\n\r\n\r\n\r\nI was not able to identify any strings which would lead to a fbq function call.\r\nLet me know if other inputs are required.\n\n### Expected behavior\n\nAddToCart pixel should not be sent unless explicity requested.\n\n### Actual behavior\n\nAddToCart pixel is sent without being triggered explicitly.\n\n### Steps to reproduce\n\n1. Have a default WooCommerce website\r\n2. Install a Facebook/Meta Pixel only with PageView event\r\n3. Press add to cart button (eg. on a variable product w/o choosing a variation) -> no additional event seen\r\n4. Switch the website to Romanian language and update the translations\r\n5. Repeat step 3 -> AddToCart event seen\n\n\n\n###\n\n","completion":" [1891051436]"}
{"prompt":"## Description\r\n\r\nThe Analytics Variations report does not correctly filter by variation attributes when using the advanced filter. Variations on the same order as a matching variation, yet not matching themselves, are included.\r\n\r\n## How to reproduce\r\n\r\n### Store data configuration\r\n\r\n- Variable product \"Hoodie\"\r\n    - Attribute (used for variations): `Color` (global, with three values `Blue`, `Green`, `Red`)\r\n    - Three variations (all with price of $23)\r\n        - \"Hoodie - Blue\"\r\n        - \"Hoodie - Green\"\r\n        - \"Hoodie - Red\"\r\n\r\n- Order 1\r\n    - Hoodie - Blue\r\n    - Hoodie - Green\r\n- Order 2\r\n    - Hoodie - Red\r\n- Order 3\r\n    - Hoodie - Blue\r\n\r\n### Steps\r\n\r\n1. Set up store data as shown above\r\n2. Go to Analytics > Variations\r\n3. Show: Advanced filters\r\n4. Add a filter: Attribute is Color = Blue\r\n5. Click Filter\r\n\r\n### Expected\r\n\r\n- Items sold: 2\r\n- Net sales: $46\r\n- Orders: 2\r\n- Variations listed:\r\n    - Hoodie - Blue\r\n\r\n<img width=\"1385\" alt=\"Screenshot 2023-03-14 at 15 34 42\" src=\"https://user-images.githubusercontent.com/2098816/225117562-f8e26eff-25c4-4347-b9a8-3c04726f7126.png\">\r\n\r\n### Actual\r\n\r\n- Items sold: 3\r\n- Net sales: $69\r\n- Orders: 2\r\n- Variations listed:\r\n    - Hoodie - Blue\r\n    - Hoodie - Green\r\n\r\n<img width=\"1385\" alt=\"Screenshot 2023-03-14 at 15 35 15\" src=\"https://user-images.githubusercontent.com/2098816/225117600-2a1346aa-9e7d-4dd3-ad4b-3475d4d9db3c.png\">\r\n\r\n\n\n###\n\n","completion":" [3943425133]"}
{"prompt":"The original tests created orders with a ‚Äòdummy‚Äô product_id as one of the lineitems\r\n\r\nWhen testing in QIT against some extensions pull the product which evaluates to false. They probably made the assumption that a product will always exist for an order and this caused the test to fail.\r\n\r\nWe therefore need to update the tests accordingly\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [5222414669]"}
{"prompt":"2 tests have issues when executing against QIT\r\n\r\n- can view all payment gateways\r\n- can retrieve all shipping methods\r\n\r\nNumerous tests for extensions that add a shipping method will always break both those tests because they expect the site to only have 3 shipping methods available.\r\n\r\nWe therefore need to update the tests to accommodate 3 or more shipping types\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [5222414669]"}
{"prompt":"## User Story\n\n> As a new merchant that does not want to use WC Pay, \n> I want to see all other payment solutions easily,\n> so that I can setup my store my way.\n\n## Acceptance Criteria\n\n```\nFeature: WC Payments Task \nGiven WC Pay is not installed and in available country\nWhen WC Pay task is opened by the user\nThen Other payments solutions should be visible\n```\n\n## Screenshots\n\n![Image](https://user-images.githubusercontent.com/9312929/224860847-628da37d-eb08-4e0b-98eb-e3a5c7f89404.png)\n\n\n\n###\n\n","completion":" [3943424841]"}
{"prompt":"undefinedMigrate `tasks/fills/woocommerce-payments.js` and `tasks/fills/connect.js` to TS\r\n\r\n- [ ] [connect.js](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce-admin/client/tasks/fills/connect.js)\r\n- [ ] [woocommerce-payments.js](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce-admin/client/tasks/fills/woocommerce-payments.js)\r\n\r\n\r\n## Acceptance Criteria\r\n\r\n- [ ] *.js files are converted to *.ts or *.tsx\r\n- [ ] Run `pnpm --filter=woocommerce/client/admin ts:check` without any errors\r\n- [ ] Not break existing functionalities\r\n\n\n###\n\n","completion":" [3943424841]"}
{"prompt":"This is a follow up to https://github.com/woocommerce/woocommerce/pull/37044#issuecomment-1463474414:\r\n\r\n> > > 4. After installing or activating an extension in `MarketingOverviewMultichannel`, the [`refetch`](https://github.com/woocommerce/woocommerce/blob/97ed1d2a7d25a6511535e60edfb8edc26b066cc2/plugins/woocommerce-admin/client/marketing/overview-multichannel/MarketingOverviewMultichannel.tsx#L54) doesn't trigger the data refetching for `getRegisteredChannels`.\r\n> > >    - The current result:\r\n> > > \r\n> > >       https://user-images.githubusercontent.com/17420811/223719204-b6fdda37-8290-488b-b00d-a68992b3d342.mp4\r\n> > >    - I guess the expected result is like this:\r\n> > > \r\n> > >       https://user-images.githubusercontent.com/17420811/223719243-3227ba6b-89d4-48fc-93c9-d3b45a626fb2.mp4\r\n> > \r\n> > \r\n> > I couldn't reproduce this, it works as expected for me.\r\n> \r\n> Just realized it's because of different WP versions. See [#37044 (comment)](https://github.com/woocommerce/woocommerce/pull/37044#discussion_r1132062493) and [#37044 (comment)](https://github.com/woocommerce/woocommerce/pull/37044#discussion_r1132097171).\r\n> \r\n> Considering [the latest WC still states it supports WP 5.9](https://github.com/woocommerce/woocommerce/blob/7.5.0-rc.1/plugins/woocommerce/woocommerce.php?rgh-link-date=2023-03-10T08%3A53%3A28Z#L11), I guess it would still need to add the second parameter to the `invalidateResolution` call in `useRegisteredChannels` at this moment.\r\n\r\nWe should check the multichannel marketing code base to make sure we have the above covered.\r\n\r\n\n\n###\n\n","completion":" [4327454247]"}
{"prompt":"In https://github.com/woocommerce/woocommerce/pull/37044#pullrequestreview-1330049691, it is mentioned: \r\n\r\n> 1. It will show a \"0\" when no campaigns.\r\n   - https://github.com/woocommerce/woocommerce/blob/97ed1d2a7d25a6511535e60edfb8edc26b066cc2/plugins/woocommerce-admin/client/marketing/overview-multichannel/Campaigns/Campaigns.tsx#L185\r\n   ![image](https://user-images.githubusercontent.com/17420811/223672358-2695e6e7-d41a-44c9-9682-21dd076761ef.png)\r\n\r\nWe also had a related issue https://github.com/woocommerce/woocommerce/issues/37083 that we fixed recently.\r\n\r\nAccording to https://reactjs.org/docs/jsx-in-depth.html?#booleans-null-and-undefined-are-ignored and https://beta.reactjs.org/learn/conditional-rendering#logical-and-operator-, we should make sure the expression before `&&` is always a boolean.\r\n\r\nThis issue is to look into the multichannel marketing code and fix the issue.\r\n\n\n###\n\n","completion":" [4327454247]"}
{"prompt":"Setting your site language under **Settings -> General** to Korean breaks the styling of **WooCommerce -> Extensions**.\n\n### Expected behavior\n\nThe styling for WooCommerce -> Extensions should not be different between Korean and any other languages selected.\n\n### Actual behavior\n\nThe WooCommerce -> Extensions seems to show an issue with styling:\r\n\r\n![Markup 2023-03-10 at 14 22 09](https://user-images.githubusercontent.com/104560284/224324677-1cf3ed6e-8eb0-42d9-a123-d7c49f13e79f.png)\n\n### Steps to reproduce\n\n1. Go to **Setting -> General**\r\n2. Select ÌïúÍµ≠Ïñ¥ (Korean) as your `Site Language`\r\n3. Navigate to **WooCommerce -> Extensions**\r\n4. Styling errors should be present\r\n\r\n* There are some inconsistencies if you select Korean as a Site Language, but WooCommerce settings are still in English. To reliably trigger the styling bug, you need to make sure WooCommerce Settings are all in Korean like this:\r\n\r\n![STtNZv.png](https://user-images.githubusercontent.com/104560284/224325936-aaa2e831-f9b5-441f-873c-8e8a5904836f.png)\n\n\n\n###\n\n","completion":" [1891051447,468434635]"}
{"prompt":"If I'm creating an order for a customer in Admin on the phone, it would be great if I could just collect payment right then and there.\r\nI could just ask for their credit card information and then we could pay for the order without me having to log into his account. Please let me know if this is already in development. I know their are third party apps that do this, but WooCommerce itself not having it is very odd to me.\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [1891051449]"}
{"prompt":"Add tracks events to the inventory layout when:\r\n- The [store settings link is displayed](https://github.com/woocommerce/woocommerce/issues/37115) when store-wide inventory tracking is disabled.\r\n- The \"Track stock quantity for this product\" is toggled.\r\n- The \"Learn more\" link in the message displayed at the top of the form (for variable products) [is clicked](https://github.com/woocommerce/woocommerce/issues/37119).\r\n\r\n```[tasklist]\r\n### Acceptance criteria\r\n- [ ] The store settings link displayed when store-wide inventory tracking is disabled.\r\n- [ ] The \"Track stock quantity for this product\" toggle.\r\n- [ ] The \"Learn more\" link in the message displayed at the top of the form (for variable products).\r\n```\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"The attributes of the quantity input field, min and max, are not updated when changing variation. \r\n\r\nThe bug is located in the `VariationForm.prototype.onFoundVariation` method of the `assets/frontend/add-to-cart-variation.js` file.  Here, the $qty selector has changed, and instead of selecting the layer with the \"quantity\" class, as it did before, it selects the input:\r\n\r\n`$qty = form.$singleVariationWrap.find( '.quantity input[name=\"quantity\"]' ),`\r\n\r\nFor this reason the selection of the input, which is done later, does not work:\r\n\r\n`var $qty_input = $qty.find( 'input.qty' )`\r\n\r\nSince he is looking for himself ;)\r\n\r\nFor the later logic to work, the initial $qty selector must be changed to the way it was in the previous version, ie:\r\n\r\n`$qty = form.$singleVariationWrap.find( '.quantity' ),`\r\n\r\n\r\n### Expected behavior\r\n\r\nQuantity input min and max attributes are updated on change of variance with stock restrictions.\r\n\r\n### Actual behavior\r\n\r\nThe min and max attributes of the quantity input are NOT updated when changing variations with stock constraints, since the quantity input selector in the js file is incorrect.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a product with variations for some attribute.\r\n2. Manage stock for variations with different stock limits.\r\n3. In frontend, change attribute/variation option.\r\n4. The quantity input does not take into account the stock restrictions of each variation\r\n\r\n\n\n###\n\n","completion":" [1891051436]"}
{"prompt":"We want the product block work set behind a feature flag for now, but not one that can be enabled by a merchant yet as the editor is not in a working state yet. \r\nOnce in a working state this will be replaced by an official feature flag (shown in the features settings page) as part of this issue: #36989\r\n\r\nThis new feature flag will be toggleable through the WooCommerce Beta tester plugin.\r\n\r\nCurrent logic:\r\n**No features enabled** -> Displays legacy product editor\r\n**New Product Editor** (enabled through **Settings > Advanced > Features**) -> Displays new product editor (non block version)\r\n**Block editor feature enabled** -> Displays the new product block editor ( trumps both the above ).\r\n\r\n**Acceptance criteria**\r\n\r\n- [x] A new key should be available for the product block work in both `core.json` & `development.json` here: https://github.com/woocommerce/woocommerce/tree/trunk/plugins/woocommerce/client/admin/config (enabled in `development`)\n- [x] If the new block feature is enabled it should load the product block editor\n- [x] If the block feature is disabled it should show the old editor, or the first iteration of the product editor if the feature is enabled within WooCommerce settings\n- [x] This feature should be toggleable through the beta tester features tab.\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"In the Channels card, we have a list of recommended marketing channels. Some channels may not have registered itself as a marketing channel. We use Pinterest as an example scenario below.\r\n\r\n![image](https://user-images.githubusercontent.com/417342/223775650-19b15265-de1e-4867-aabf-f032eb761cc4.png)\r\n\r\nIf we install such a channel, then after the installation and activation complete, the channel will not show up in the page. It does not show up in the Channels card because it has not registered itself as a marketing channel.\r\n\r\n![image](https://user-images.githubusercontent.com/417342/223776694-eff919bf-4431-4fa7-a85a-bc4053007633.png)\r\n\r\nIf we refresh the page, the channel would show up under the \"Installed extensions\" card. \r\n\r\n![image](https://user-images.githubusercontent.com/417342/223777341-3b51e0b6-fa18-4498-a823-9c71f0861e8c.png)\r\n\r\nTo fix / work around this, we shall reload the \"Installed extensions\" card after installing a recommended channel in the Channels card.\r\n\n\n###\n\n","completion":" [4327454247]"}
{"prompt":"We should hydrate the product editor settings, because currently we are passing in an empty object.\n\nCurrently WP does this by adding an inline script and initializing the editor that way: https://github.com/WordPress/wordpress-develop/blob/trunk/src/wp-admin/site-editor.php#L94-L100\n\nFor now we can do something similar, but we will not want to call initializeEditor within the script, but only expose the editor settings for now.\n\nThere will be a follow up issue to make use of an API to get these settings.\n\n### Acceptance criteria\n\n- [ ] Product Editor should be hydrated with the correct settings object\n- [ ] The Product Editor should have an initial template to render the blocks.\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"For variable products, we show an additional message at the top of the inventory tab form. It reads `Settings below apply to all variations without manual stock management enabled. Learn more`. The `Learn more` part links to https://woocommerce.com/document/variable-product/.\r\n\r\n<img width=\"703\" alt=\"Screenshot 2023-03-07 at 23 00 55\" src=\"https://user-images.githubusercontent.com/1314156/223600076-42531d62-93e5-46ad-bfad-9c3f6c4b32b5.png\">\r\n\r\n**Designs:**\r\n[zs56kcy53K7GoGhgyjcQ2R-fi-210%3A30925](https://href.li/?https://www.figma.com/file/zs56kcy53K7GoGhgyjcQ2R/?node-id=210%3A30925)\r\n\r\n```[tasklist]\r\n### Acceptance criteria\r\n- [ ] Show an additional message for variable products.\r\n- [ ] The `Learn more` link points to https://woocommerce.com/document/variable-product/.\r\n```\r\n\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"Display \"Allow backorders?\" as a collection of radio buttons instead of a dropdown.\r\n\r\n ![screenshot-user-images githubusercontent com-2023 03 07-22_00_02 (3)](https://user-images.githubusercontent.com/1314156/223598221-8492ad0e-7653-4303-a6f5-2d2723807817.png)\r\n\r\n**Designs:**\r\n[zs56kcy53K7GoGhgyjcQ2R-fi-210%3A30925](https://href.li/?https://www.figma.com/file/zs56kcy53K7GoGhgyjcQ2R/?node-id=210%3A30925)\r\n\r\n```[tasklist]\r\n### Acceptance criteria\r\n- [ ] Convert \"Allow backorders?\" into radio buttons\r\n- [ ] Add a filter to verify whether the radio buttons will be shown.\r\n```\r\n\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"When stock tracking is enabled for the first time, we default to quantity=1 (now we default to 0, which creates lots of issues).\r\n\r\n![screenshot-user-images githubusercontent com-2023 03 07-22_00_02 (2)](https://user-images.githubusercontent.com/1314156/223597881-d7f92068-e136-40d2-aaa8-12ed3b2a2637.png)\r\n\r\n\r\n**Designs:**\r\n[zs56kcy53K7GoGhgyjcQ2R-fi-210%3A30925](https://href.li/?https://www.figma.com/file/zs56kcy53K7GoGhgyjcQ2R/?node-id=210%3A30925)\r\n\r\n```[tasklist]\r\n### Acceptance criteria\r\n- [ ] Set quantity = 1 when stock tracking is enabled for the first time.\r\n- [ ] Rename stock quantity label from `Stock quantity` to `Quantity`.\r\n```\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"The \"Stock status\" field is now displayed as a collection of radio buttons instead of a dropdown. However, if for any reason the number of items inside exceeds three, it should be displayed as a dropdown again.\r\n\r\n<img width=\"547\" alt=\"Screenshot 2023-03-08 at 17 02 53\" src=\"https://user-images.githubusercontent.com/1314156/223835059-d4048b0f-f1e1-46af-be2d-d20b11be307d.png\">\r\n\r\n**Designs:**\r\n[zs56kcy53K7GoGhgyjcQ2R-fi-210%3A30925](https://href.li/?https://www.figma.com/file/zs56kcy53K7GoGhgyjcQ2R/?node-id=210%3A30925)\r\n\r\n```[tasklist]\r\n### Acceptance criteria\r\n- [ ] Show \"Stock status\" as a collection of radio buttons.\r\n- [ ] If the number of items inside exceeds three, it should be displayed as a dropdown again.\r\n- [ ] Add a filter to verify whether the radio buttons will be shown.\r\n```\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"If stock management is disabled in `WooCommerce > Settings > Products > Inventory`, we show a message in the `Stock management section`. It reads `Disabled in store settings`. The `store settings` part links to `WooCommerce > Settings > Products > Inventory`.\r\n\r\n<img width=\"547\" alt=\"Screenshot 2023-03-08 at 17 02 53\" src=\"https://user-images.githubusercontent.com/1314156/223835059-d4048b0f-f1e1-46af-be2d-d20b11be307d.png\">\r\n\r\n\r\nIf stock management is enabled, we show this toggle with a tweaked label: ‚ÄúManage stock level (quantity)‚Äù to ‚ÄúTrack stock quantity for this product‚Äù.\r\n\r\n![screenshot-user-images githubusercontent com-2023 03 07-22_00_02 (1)](https://user-images.githubusercontent.com/1314156/223594570-d1bcc20e-2ec2-4e61-8612-d52f7e41f566.png)\r\n\r\n**Designs:**\r\n[zs56kcy53K7GoGhgyjcQ2R-fi-210%3A30925](https://href.li/?https://www.figma.com/file/zs56kcy53K7GoGhgyjcQ2R/?node-id=210%3A30925)\r\n\r\n```[tasklist]\r\n### Acceptance criteria\r\n- [ ] When stock management is disabled, show the message `Disabled in store settings`.\r\n- [ ] When stock management is enabled, show the text `Track stock quantity for this product` instead of `Manage stock level (quantity)`.\r\n```\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"The `Manage stock?` section header title now reads `Stock management`.\r\n\r\n![screenshot-user-images githubusercontent com-2023 03 07-22_00_02](https://user-images.githubusercontent.com/1314156/223591802-88caa7cc-bbfe-4dfe-bf9b-1956e7d8b833.png)\r\n\r\n**Designs:**\r\n[zs56kcy53K7GoGhgyjcQ2R-fi-210%3A30925](https://href.li/?https://www.figma.com/file/zs56kcy53K7GoGhgyjcQ2R/?node-id=210%3A30925)\r\n\r\n```[tasklist]\r\n### Acceptance criteria\r\n- [ ] The `Manage stock?` section header title now reads `Stock management`.\r\n```\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"When using wp-json to fetch product data the taxonomies from woocommerce are no longer available to filter the result\n\n### Expected behavior\n\nWhen a (taxonomy) filter is passed to wp-json it should filter the results\n\n### Actual behavior\n\nThe (taxonomy) filter in wp-json/wp/v2/product is ignored. per_page, page & orderby etc. do seem to work. \n\n### Steps to reproduce\n\n1. Create a custom product attribute (wp-admin/edit.php?post_type=product&page=product_attributes) with a custom sort order\r\n2. Create Product, add it to a category and attach a custom product_attribute\r\n3. Visit [your domain]/wp-json/wp/v2/product?per_page=9&page=1&orderby=title&order=asc\r\n4. Add &product_cat=[any id]  or &[your_custom_product_attribute]=[any value] to the url. \r\n5. The values in step 4 no longer have any influence. This does work in woocommerce 7.3.0 but no longer works in 7.4.1\n\n\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"We should create a summary field and add this to the product form.\nWe will want to use the paragraph block for this field, because of the product form dependency this might require a new block that wraps around the Paragraph block.\n\n#### Design\n\n![Image](https://user-images.githubusercontent.com/2240960/223423302-b237222a-caf5-494d-916a-ee8bfa48dcb7.png)\n\nAkVNGImLgSqCObTQ3idVn7-fi-202%3A20155\n\n#### Acceptance criteria\n\n* [ ] A summary field should be rendered in the product editor template within the basic details section (if the details section has been added already).\n* [ ] The summary field should act the same as a Paragraph block.\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"We use the RestAPI, to get orders, products, customers, ... (i will name it \"restitems\") from WooCommerce to a customized order management program.\r\nNow we want have a filter \"AfterID\" on the RestAPI, to get as axample all orders after the ID \"12345\".\r\nTo download all \"restitems\" and find out, in what page (pagination, offset) they requested IDs are, is very slow.\r\n\r\nThe RestAPI filter attribute should work like \"per_page\", \"offset\", and other filter attributes.\r\n\r\nFor example:\r\nhttps://example.com/wp-json/wc/v3/orders?FromID=12345\r\n\r\nThe RestAPI now should give back all orders after the order ID 12345.\n\n### Describe alternatives you've considered\n\nLooking for the ID in the downloaded Items in the pagination.\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"We should create a list price product field block to be displayed within the Basic details section.\n\n#### Design\n\n![Image](https://user-images.githubusercontent.com/2240960/223400103-3d155da8-4a78-43a2-8ddf-ab0b75da5048.png)\n\nAkVNGImLgSqCObTQ3idVn7-fi-205%3A21590\n\n#### Acceptance criteria\n\n* [ ] A list price block should be rendered in the product editor template within the basic details section (if the details section has been added already).\n* [ ] The field should allow a user to change the list price and persist correctly\n* [ ] The list price field should contain helper text with a link to the pricing settings screen.\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"Blocked until https://github.com/woocommerce/woocommerce/issues/37005 is merged.\n\nWe want to move the more menu (3 dots) with the **Share Feedback** and **Use classic editor** options to the new block editor header.\n\nMake use of the existing more menu that comes with the Editor toolbar (slot fills?)\n\n![Image](https://user-images.githubusercontent.com/2240960/223397063-0b3209ac-9746-4cdc-b75f-157500baae53.png)\n\n### Design\n\n![Image](https://user-images.githubusercontent.com/2240960/223398122-ff498d05-c63f-4506-8edd-773b52a205b1.png)\n\n\nAkVNGImLgSqCObTQ3idVn7-fi-15%3A198\n\nAkVNGImLgSqCObTQ3idVn7-fi-201%3A37558 (note this includes the **Welcome guide** option, that will be added in a future issue).\n\n### Acceptance criteria\n\n- [ ] More menu should be present in header\n- [ ] More menu should include the **Share Feedback** and **Use the classic editor** options\n- [ ] **Share Feedback** option should trigger CES\n- [ ] **Use the classic editor** should direct users to the classic editor (similar to how it works in the current editor)\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"Blocked by https://github.com/woocommerce/woocommerce/issues/36991\n\nYou may want to look at the [navigation block ](https://github.com/WordPress/gutenberg/tree/trunk/packages/block-library/src/navigation) or the [column and columns](https://github.com/WordPress/gutenberg/tree/trunk/packages/block-library/src/columns) blocks for inspiration.\n~~And also consider if it would be worth defining a tab as a template or a pattern (template might be the better fit ).~~\n\n#### Screenshots\n\n![Image](https://user-images.githubusercontent.com/2240960/223374700-6b6b1cf0-0e8a-494d-87b1-6edab8532a25.png)\n\n#### Design\n\n**Note:** The design should be used as a more general look and feel of the component, as the design might still be change a bit. So to not get caught up in the nitty gritty.\nz2spDLDAX5DbMeG4ZTMp06-fi-804%3A165896\n\n#### Acceptance criteria\n\n* [ ] A tab block should be rendered in the product editor template\n* [ ] A tab should have a name\n* [ ] A tab should support nested sections and fields.\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"If I run this it works:\r\n\r\n`wp wc customer list --field=billing --user=admin --format=csv`\r\n\r\nbut this isn¬¥t:\r\n\r\n`wp wc customer list --field=billing.postcode --user=admin --format=csv`\r\n\r\nI searched in the documentation and the only information I found about how to access any field within billing was in the legacy:\r\n\r\nhttps://github.com/woocommerce/woocommerce/wiki/Legacy-CLI-commands-(v2.6-and-below)\r\n\r\nwhere it says these fields are accesable:\r\n\r\nbilling_address.first_name\r\nbilling_address.last_name\r\nbilling_address.company\r\nbilling_address.address_1\r\nbilling_address.address_2\r\nbilling_address.city\r\nbilling_address.state\r\nbilling_address.postcode\r\nbilling_address.country\r\nbilling_address.email\r\nbilling_address.phone\r\n\r\nbut neither billing_address.postcode or billing.postcode works\n\n### Expected behavior\n\nList of fields from billing array field\n\n### Actual behavior\n\nDoesn¬¥t work\n\n### Steps to reproduce\n\nSee above\n\n\n\n###\n\n","completion":" [1891051460]"}
{"prompt":"In the multichannel marketing page, when there are no registered channels or no recommended channels, users would see a literal `0` on the page.\r\n\r\nThe following screenshot shows an example of the `0` at the top of the page:\r\n\r\n![image](https://user-images.githubusercontent.com/417342/223178341-99b38331-4d15-44ea-904e-6cf78e7e4a75.png)\r\n\r\nThis issue is reproducible in the trunk branch. It is introduced in [`177fc59` (#36541)](https://github.com/woocommerce/woocommerce/pull/36541/commits/177fc59deac5f5277ee4c8469cc5424bd2320912).\r\n\r\nThis issue happens because in the following code, we are using short-circuit evaluation on arrays. When the array lengths are 0, they will be rendered as literal `0` in the page.\r\n\r\nhttps://github.com/woocommerce/woocommerce/blob/deb1d131add8d90fa4fda42ceaf573a38887d02a/plugins/woocommerce-admin/client/marketing/overview-multichannel/MarketingOverviewMultichannel.tsx#L47-L56\r\n\r\nMore references in the following links:\r\n\r\n- https://reactjs.org/docs/jsx-in-depth.html?#booleans-null-and-undefined-are-ignored\r\n- https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Logical_AND#short-circuit_evaluation\r\n- [Why \"0\" is rendered on short-circuit evaluation of `array.length && ...`](https://stackoverflow.com/q/60652656/379641)\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nWhen there are no registered channels or recommended channels, there should be no literal `0` printed in the page.\r\n\r\n### Actual behavior\r\n\r\nWhen there are no registered channels or recommended channels, there is literal `0` printed in the page.\r\n\r\n### Steps to reproduce\r\n\r\nPre-condition:\r\n\r\n- Enable WooCommerce Multichannel Marketing experience in WooCommerce Settings > Advanced > Features (`/wp-admin/admin.php?page=wc-settings&tab=advanced&section=features`).\r\n\r\nSetting up test data in code: \r\n\r\n- To ease testing, you can modify the following two hooks so that they return sample test data to reproduce the issue.\r\n\r\n1. Replace this:\r\n\r\nhttps://github.com/woocommerce/woocommerce/blob/deb1d131add8d90fa4fda42ceaf573a38887d02a/plugins/woocommerce-admin/client/marketing/hooks/useRecommendedChannels.ts#L22-L48\r\n\r\nwith this: \r\n\r\n```js\r\nexport const useRecommendedChannels = (): UseRecommendedChannels => {\r\n\treturn {\r\n\t\tloading: false,\r\n\t\tdata: [],\r\n\t};\r\n};\r\n```\r\n\r\n2. Replace this: \r\n\r\nhttps://github.com/woocommerce/woocommerce/blob/deb1d131add8d90fa4fda42ceaf573a38887d02a/plugins/woocommerce-admin/client/marketing/hooks/useRegisteredChannels.ts#L62-L81\r\n\r\nwith this: \r\n\r\n```js\r\nexport const useRegisteredChannels = (): UseRegisteredChannels => {\r\n\treturn {\r\n\t\tloading: false,\r\n\t\tdata: [],\r\n\t\trefetch: () => {},\r\n\t};\r\n};\r\n```\r\n\r\nTest steps: \r\n\r\n1. Go to Marketing page at `/wp-admin/admin.php?page=wc-admin&path=%2Fmarketing`.\r\n2. You should see literal `0` (two `0`s if you modified both hooks) printed at the top of the page.\r\n\r\n\n\n###\n\n","completion":" [4327454247]"}
{"prompt":"Blocked by https://github.com/woocommerce/woocommerce/issues/36991\r\n\r\nPrior art for a section can be seen in [this PR](https://github.com/woocommerce/woocommerce/pull/36837): https://github.com/woocommerce/woocommerce/pull/36837/files#diff-72b15466b194b12100a60da2ba4b5e5bfd5169b885791b42fad51d89466bb486 \r\n\r\nYou may want to look at the [navigation block ](https://github.com/WordPress/gutenberg/tree/trunk/packages/block-library/src/navigation) for inspiration.\r\n~~And also consider if it would be worth defining a section as a template or a pattern (template might be the better fit ).~~\r\n\r\n#### Screenshots\r\n\r\nNote: The separator bar at the bottom, this may not be needed as part of a section as there is already a separator block available which we may want to make use off.\r\n![Image](https://user-images.githubusercontent.com/2240960/223164533-074a66a6-40d1-4fb9-80ae-59c97f43fcc2.png)\r\n\r\n#### Design\r\n\r\n**Note:** The design should be used as a more general look and feel of the component, as the design might still be change a bit. So to not get caught up in the nitty gritty.\r\nz2spDLDAX5DbMeG4ZTMp06-fi-804%3A165896\r\n\r\n#### Acceptance criteria\r\n\r\n* [ ] A section block should be rendered in the product editor template\r\n* [ ] A section should have a title and description (description could include links)\r\n* [ ] A section should support nested blocks to render fields.\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"Since update 7.4.0, there has been an issue with the cart.php template. Since the update, on the cart page the the quantity is blank for products that are set to be 'sold individually'. Before the update it displayed a fixed quantity of 1 for products set as 'sold individually', which is much more useful as it confirms to customers that they have just the one product in their basket. The mini-cart & the checkout both still display a fixed quantity of one, so I assume that when the cart.php file was updated in 7.4.0, the code to display the quantity as 1 was accidentally deleted.\r\n\r\nI have already brought this issue up on the Woocommerce community forum, where it was confirmed that the issue was also present on your testing site (using Storefront) with WooCommerce versions 7.4.0 and 7.4.1\r\n\r\nThank you very much,\r\nBonnie\n\n### Expected behavior\n\nThe quantity to be fixed and display as '1' in the cart page for products set as 'sold individually'\n\n### Actual behavior\n\nThe quantity field being blank in the cart page for products set as 'sold individually'\n\n### Steps to reproduce\n\nSet a product as 'sold individually'.\r\nAdd that item to basket.\r\nGo to basket page and look at quantity field.\n\n\n\n###\n\n","completion":" [1891051436]"}
{"prompt":"When enabling HPOS on the Features page, the following error shows:\r\n\r\n```\r\nWordPress database error: [Table 'databasename.wp_wc_orders' doesn't exist]\r\nSELECT( ( SELECT COUNT(1) FROM wp_posts posts LEFT JOIN wp_wc_orders orders ON posts.id=orders.id WHERE posts.post_type in ('shop_order', 'shop_order_refund', 'shop_subscription') AND posts.post_status != 'auto-draft' AND orders.id IS NULL) + (SELECT COUNT(1) FROM ( SELECT orders.id FROM wp_wc_orders orders JOIN wp_posts posts on posts.ID = orders.id WHERE posts.post_type IN ('shop_order', 'shop_order_refund', 'shop_subscription') AND orders.date_updated_gmt < posts.post_modified_gmt ) x) ) count\r\n```\r\n\r\nhttps://i.imgur.com/YX6sb1k.png\r\n\r\nPossibly related to [#35902](https://github.com/woocommerce/woocommerce/issues/35902)\r\n\r\n<details>\r\n  <summary>System Details</summary>\r\n\r\n\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"Recently, our daily smoke tests had been reporting failures in the `merchant/create-variable-product.spec.js:44 ‚Ä∫ Add New Variable Product Page ‚Ä∫ can create product, attributes and variations` test. This issue aims to fix this.\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [3845073088,5222415782]"}
{"prompt":"woocommerce\\includes\\class-wc-ajax.php:103\r\n\r\nAdd in add_ajax_events() method action to reduce amount in cart or set exact amount. This amount can be returned in fragments via ajax as well.\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [1891051436]"}
{"prompt":"Currently, the daily k6 performance tests are [failing](https://github.com/woocommerce/woocommerce/actions/runs/4278972225/jobs/7449263300#step:5:344) because the environment variable `UPDATE_WC` should be set to a WooCommerce release tag instead of a boolean.\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [3845073088]"}
{"prompt":"Values return from the filter `woocommerce_order_list_table_prepare_items_query_args` are stored in `$order_query_args` variable. But the variable was overridden by the new filter introduced in version 7.3.0 \r\n\r\nThe new filter: `woocommerce_shop_order_list_table_prepare_items_query_args`\r\n\r\n\n\n### Expected behavior\n\nThe return value from `woocommerce_order_list_table_prepare_items_query_args` filter must be supplied as argument for the new filter. So the value will not override.\r\n\r\n\n\n### Actual behavior\n\n<img width=\"1011\" alt=\"image\" src=\"https://user-images.githubusercontent.com/42467480/222413425-b52d07c3-630b-484f-9f03-f3cdf2eb3e1c.png\">\r\n****\r\nIf I altered the query argument by adding `id` or `post__in` value. I am expecting the result will be based on the new argument.\n\n### Steps to reproduce\n\n1. Add a code snippet to filter `woocommerce_order_list_table_prepare_items_query_args`\r\n2. Alter the $args argument by adding an `id` parameter to that array\r\n3. Expecting the the query result will process the newly added parameter\r\n4. But the parameter was overridden by the new filter just below the above filter.\n\n\n\n###\n\n","completion":" [1891051458]"}
{"prompt":"–í –ö–∞—Ç–∞–ª–æ–≥–µ –º–∞–≥–∞–∑–∏–Ω–∞ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ —Å—Ç–æ–∏—Ç \"–í—ã–±—Ä–∞—Ç—å\", –Ω–æ –∫–æ–≥–¥–∞ –≤—ã–±–∏—Ä–∞–µ—à—å –≤–∞—Ä–∏–∞—Ç–∏–≤–Ω—ã–π —Ç–æ–≤–∞—Ä —Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫, —ç—Ç–æ –æ—á–µ–Ω—å –º–µ—à–∞–µ—Ç\n\n### Expected behavior\n\n–ö–∞–∫ –æ—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –Ω–∞ —è–∑—ã–∫–µ –∫–æ—Ç–æ—Ä—ã–π –º–Ω–µ –Ω—É–∂–µ–Ω?\n\n### Actual behavior\n\n![Screenshot_3](https://user-images.githubusercontent.com/97180855/222251101-55df9f8f-1cc7-468b-89b7-fe752040d1bf.png)\r\n![Screenshot_4](https://user-images.githubusercontent.com/97180855/222251108-59de20f8-a238-4050-b241-c9f1f2cf1da2.png)\r\n–ù–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞—Ö –≤–∏–¥–Ω–æ –∫–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç –∫–Ω–æ–ø–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ –≤ –∫–∞—Ç–∞–ª–æ–≥ –∏ –∫–∞–∫–æ–π –æ–Ω–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –≤–∞—Ä–∏–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–∞\n\n### Steps to reproduce\n\n—è –≤—ã—à–µ —É–∂–µ –æ–ø–∏—Å–∞–ª–∞ –≤—Å—é –ø—Ä–æ–±–ª–µ–º—É\n\n\n\n###\n\n","completion":" [468434635]"}
{"prompt":"When creating a product, under the Attributes tab, we don't check if the form is empty when pressing the `Save attribute` button. So it's possible to send empty values to the action `woocommerce_save_attributes`.\r\n\r\nWe should add a check like [this](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/client/legacy/js/admin/meta-boxes-product-variation.js#L62-L64) to [this method](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/client/legacy/js/admin/meta-boxes-product.js#L745-L829).\r\n\r\nWe should mark these fields as required, disable the Save button, and show a help message.\r\n\r\n### Steps to reproduce\r\n\r\n- Add a global attribute through the new dropdown\r\n- Don't add any terms and click **Save attributes**\r\n- The request is being sent after pressing **Save attributes**\r\n\r\n![Screen Capture on 2023-03-01 at 16-46-28](https://user-images.githubusercontent.com/1314156/222249127-976c35ed-4573-4bbb-8ff9-f43013437949.gif)\r\n\r\n**Acceptance criteria**\r\n- [ ] Add a check like [this](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/client/legacy/js/admin/meta-boxes-product-variation.js#L62-L64) to [this method](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/client/legacy/js/admin/meta-boxes-product.js#L745-L829).\r\n- [ ] Mark these fields as required, disable the Save button, and show a help message.\n\n###\n\n","completion":" [1891051461,4370024739]"}
{"prompt":"After adding a global attribute, deleting it, and adding it again, it's being shown twice.\r\n\r\n### Steps to reproduce\r\n\r\n- Add a global attribute and **add some terms** and click **Save attributes**\r\n- Remove the just added global attributes\r\n- Add the same global attribute back in and **add terms**\r\n- Click **Save attributes** and notice how it shows two rows of the global attribute\r\n\r\n![Screenshot 2023-03-01 at 16 38 41](https://user-images.githubusercontent.com/1314156/222246424-5dc6b7f3-1ff4-4904-9d85-8c0c43460f9c.png)\r\n\r\n- Click **Remove** on one and notice the placeholder is back but it shows the other global attribute at the bottom.\r\n<img width=\"863\" alt=\"Screenshot 2023-03-01 at 9 42 16 AM\" src=\"https://user-images.githubusercontent.com/2240960/222088189-0893624c-2767-4441-8510-c36e4bba31d7.png\">\r\n\n\n###\n\n","completion":" [1891051461,4370024739]"}
{"prompt":"The product editor will need to be hydrated with a product prior to initializing the editor.  The editor requires a product and the entity configuration to be loaded prior to being able to load edits (dirty state) into its state.\r\n\r\nWhile [core hydrates this server-side](https://github.com/WordPress/wordpress-develop/blob/6a9e92dc76e397737cdf5f2322c2540eacaf0c45/src/wp-admin/edit-form-blocks.php#L249-L253), we are a bit more restricted since we are using React router and may not initally load the add product page, meaning we need to dynamically create the product when visiting this path.\r\n\r\nThis might look something like this for the add product page, while the edit product page should fetch the product by the provided product ID.\r\n\r\nDepends on #36991 being finished.\r\n\r\n```js\r\nconst { saveEntityRecord } = useDispatch( 'core' );\r\nconst [ product, setProduct ] = useState< Product | undefined >(\r\n    undefined\r\n);\r\n \r\nuseEffect( () => {\r\n    saveEntityRecord( 'postType', 'product', {\r\n        title: AUTO_DRAFT_NAME,\r\n    } ).then( ( autoDraftProduct: Product ) => {\r\n        setProduct( autoDraftProduct );\r\n    } );\r\n}, [] );\r\n \r\nif ( ! product ) {\r\n    return <Spinner />;\r\n}\r\n \r\nreturn <Editor product={ product } settings={ {} } />;\r\n```\r\n\r\n#### Acceptance criteria\r\n\r\n* [ ] The add product page makes a network request to create a new auto-draft product\r\n* [ ] The add product page renders the editor\r\n* [ ] The edit product page fetches the product by product ID\r\n* [ ] The edit product page renders the editor\r\n* [ ] Create a follow up issue on how to clean up auto draft products that aren't saved.\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"I was trying to make a plugin that retrieves some shipping methods from an API and gets its response. I followed the documentation for the Shipping Methods API and Settings API to store the \"client_id\" and \"client_secret\" keys required to communicate with the API. When I tried to use those settings, the code returned empty strings, and when I attempted to save them through the WP dashboard, it said \"your settings have been saved,\" but in reality, they were empty in the database. While looking for the reason behind this, I couldn't see its fields going through POST on the browser, which leads me to believe that there's a bug.\r\n![Captura de tela de 2023-02-28 11-03-56](https://user-images.githubusercontent.com/114659096/221877081-1a084b5a-8246-492b-a3a4-fbef312e9de0.png)\r\n\n\n### Expected behavior\n\nWhen I use \"$this->settings['client_id']\" in the shipping method class that I created, the previously saved strings will be returned.\n\n### Actual behavior\n\nIt returns empty strings and doesn't store the strings I entered on the settings page.\r\n\r\n\r\nvar_dump($this->settings);\r\n![Captura de tela de 2023-02-28 11-12-53](https://user-images.githubusercontent.com/114659096/221879330-761723bb-e5e2-4a5e-bc4b-bce373407d48.png)\r\n\n\n### Steps to reproduce\n\n1. Copy the entire example of the Shipping Method API and override either the $form_fields or init_form_fields function (or both).\r\n2. Go to your plugin's Shipping Method settings on the WP dashboard page and save some fields.\r\n3. Output these variables or try to use them in the code somewhere.\n\n\n\n###\n\n","completion":" [1891051459,2258932484]"}
{"prompt":"undefinedCurrently, the `Smoke test release` workflow does not support testing of `woocommerce.zip` files in draft releases. This task will enable such support.\r\n\n\n###\n\n","completion":" [3845073088]"}
{"prompt":"2 Partners layout:\n\n![Image](https://user-images.githubusercontent.com/27843274/221520615-ace5c980-23a7-430a-96fa-406bb14ce218.png)\n\n1. Align the description headers (\"All-in-one shipping tool\", \"Powerful ...\")\n2. Add space between the buttons and the list by making the height of the panel taller\n\n1 Partner layout:\n\n\n\n![Image](https://user-images.githubusercontent.com/27843274/221521081-dbc265c2-d216-459a-b1de-895ec267e369.png)\n\nAdd some spacing between the image and the list, possibly by making the text smaller if necessary\n\n###\n\n","completion":" [3943104021,3943424841,3943424887]"}
{"prompt":"When updating a store from 7.2.3, the Address endpoint for Australia (AU) translations is blank. E.g. on the My Account page, the address link is there, but the actual text is missing. Note I am only aware of this issue when the language is set to English (Australia).\r\n\r\nStrangely, this only happens when updating from 7.2.3. When doing a fresh install and installing the latest WC version, it shows fine, but if I downgrade that version and upgrade, it is gone.\r\n\r\nIf I switch the language to US or similar, the endpoint shows as expected.\r\n\r\nI tested this on a few production sites and a new, vanilla install using storefront and no other plugins. \r\n\r\n### Expected behavior\r\n\r\nWhen upgrading a store from 7.2.2/3 the address endpoint text should not disappear when using English (Australia)\r\n\r\n### Actual behavior\r\n\r\nWhen updating WC from 7.2.X while using English (Australia) as the language the endpoint text for Address disappears.\r\n\r\n\r\n### Steps to reproduce\r\n\r\nSet store to English (Australia) language while on 7..2.X\r\nUpdate to 7.3/4\r\nNotice the endpoint Address text is gone\r\n\r\nImage of 7.2.X\r\n<img width=\"827\" alt=\"7 2 X\" src=\"https://user-images.githubusercontent.com/1361803/221369285-aa483664-2baa-455d-8141-069d9b4a1ae4.png\">\r\n\r\nImage after updating\r\n<img width=\"848\" alt=\"Upgraded 7 3 or 4\" src=\"https://user-images.githubusercontent.com/1361803/221369296-5b7f0618-0f94-4ff2-9b1c-c357e01929c4.png\">\r\n\r\n\r\n\r\n\n\n###\n\n","completion":" [468434635]"}
{"prompt":"I try to create an extension with `create-wc-extension` command. \r\nAfter a fresh new install of this monorepo, I run this command in `plugins/woocommerce-admin` directory \r\n\r\n` npm run create-wc-extension` \r\n\r\nThe I got this:\r\n```\r\n> woocommerce/client/admin@3.3.0 create-wc-extension\r\n> node ./bin/starter-pack/starter-pack.js\r\n\r\nnode:internal/modules/cjs/loader:1024\r\n  throw err;\r\n  ^\r\n\r\nError: Cannot find module '/var/www/xxx/woocommerce/plugins/woocommerce-admin/bin/starter-pack/starter-pack.js'\r\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:1021:15)\r\n    at Function.Module._load (node:internal/modules/cjs/loader:866:27)\r\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\r\n    at node:internal/main/run_main_module:22:47 {\r\n  code: 'MODULE_NOT_FOUND',\r\n  requireStack: []\r\n}\r\n\r\n```\r\n\n\n### Expected behavior\n\nShould be run out of the box. \n\n### Actual behavior\n\nas described as above\n\n### Steps to reproduce\n\n1. cd plugins/woocommerce-admin\r\n2.  npm run create-wc-extension\n\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"There is a hook in every payment method class that puts the payment method information to the Thank you page. For example for the cash on delivery method it looks like this: \r\n\r\nhttps://github.com/woocommerce/woocommerce/blob/3b58651bd6c174aa932f789247f3d92db401fb98/plugins/woocommerce/includes/gateways/cod/class-wc-gateway-cod.php#L46\r\n\n\n### Expected behavior\n\nAble to remove this from the thank you page. \n\n### Actual behavior\n\nI am unable to remove this action from the Thank you page. \n\n### Steps to reproduce\n\nAdd this to your functions.php file. \r\n\r\n```php\r\n$wc_gateway_cod = new WC_Gateway_COD();\r\nremove_action( 'woocommerce_thankyou_cod', array( $wc_gateway_cod, 'thankyou_page' ) );\r\n```\r\nor this\r\n```php\r\nglobal $WC_Gateway_COD;\r\nremove_action( 'woocommerce_thankyou_cod', array( $WC_Gateway_COD, 'thankyou_page' ) );\r\n```\n\n\n\n###\n\n","completion":" [1891051449]"}
{"prompt":"undefinedI'm testin in 7.4 ver Woocommerce new experimental product editor.\r\nGood, light, better than the old version.\r\nI have some recommendation:\r\n\r\n- Now, the \"div class=\"product-form-layout\"  has max width 1032px. It is funny narrow not only in my 4K monitor, or FullHD laptop. If i change it max-width: inherit it will be GREAT!\r\n- The product descriptions dont have any 1, 2, 3 or more columns option. It is a huge mistake. :-(\r\n- The text moduls (heading and paragraphs) dont have any options, like text color or size.\r\n- Dont like the new editor the ACF attributes\r\n\r\n\r\n### Describe alternatives you've considered\r\n\r\n_No response_\r\n\r\n### Additional context\r\n\r\n_No response_\n\n###\n\n","completion":" [4370026978]"}
{"prompt":"### Prerequisites\r\n\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\nUpdating to WooCommerce 7.4 introduces a bug on variation products. When a product has 5 ( or any value ) of a specific item left instock, the user is able to select more than the 5 items items. This is then presented with an error saying there are only 5 items left instock. Prior to 7.4 this issue wasn't present.\r\n\r\nRelated support tickets:\r\nhttps://wordpress.org/support/topic/ordering-variations-no-longer-works/\r\nhttps://wordpress.org/support/topic/unlimited-number-of-stock-to-select-after-update/\r\n\r\n### Expected behavior\r\n\r\nWhen a variable product has \"X\" number of products instock a user shouldn't be able to add more than \"X\" via the product quantity input.\r\n\r\n### Actual behavior\r\n\r\nWhen a variable product has \"5\" items instock I can add more than 5 in the input.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a variable product with some variations.\r\n2. Set a variation to \"manage stock\"\r\n3. Set a variations \"Stock quantity\"\r\n4. Set the variation to \"Do not allow\" backorders.\r\n5. View the product from the front end\r\n6. Set the variation you chose about\r\n7. Increase the qty higher than what you set the stock quantity too ( this is the issue )\r\n8. Click add to cart\r\n9. You should then be presented with a notice similar too: \"You cannot add that amount of \"{ variable product name }\" to the cart because there is not enough stock (1 remaining).\"\r\n\r\n\n\n###\n\n","completion":" [1891051436,1891051456,1891051461]"}
{"prompt":"The wp-admin/admin.php?page=wc-admin&task=payments&id=bacs screen looks different between WP 6.1.1 and 6.2-beta2. The former shows the \"Add your bank details\" form as expected by the E2E tests, but the latter does not. It shows a different screen instead\r\n<img width=\"1291\" alt=\"jLjtVJ47e5\" src=\"https://user-images.githubusercontent.com/4509348/218975643-f4224a29-fd93-40f3-b3fe-f5d732553afa.png\">\r\n\n\n### Expected behavior\n\nThe page should show the \"Add your bank details\" form.\n\n### Actual behavior\n\nThe page doesn't show the \"Add your bank details\" form. Instead, it shows the message \"Configure you Direct bank transfer account.\"\n\n### Steps to reproduce\n\n1. Create a WP 6.2 site (currently in Beta 2).\r\n2. Install & activate WC 7.4.\r\n3. Go to WooCommerce > Home.\r\n4. Skip the store set up.\r\n5. Navigate to `wp-admin/admin.php?page=wc-admin&task=payments&id=bacs`\n\n\n\n###\n\n","completion":" [3943104021,3943424841]"}
{"prompt":"### Prerequisites\r\n\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\nIn WP 6.2-beta2, in the \"Set up payments\" onboarding screen, these 2 elements look different from WP 6.1.1:\r\n\r\n1. The nav header text is Home in 6.2-beta2. It is Set up payments in 6.1.1\r\n2. The button beside \"Direct bank transfer\" is labeled with \"Enable\" in 6.2-beta2. In 6.1.1, it's labeled \"Get started\"\r\n\r\nScreenshot: p1676436431351619/1676436413.491279-slack-C01BWDDTGKX\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\n1. The \"Back\" button text should be \"Set up payments\".\r\n2. The button beside \"Direct bank transfer\" should be labeled \"Get started\".\r\n\r\n\r\n### Actual behavior\r\n\r\n1. The \"Back\" button text is \"Home\" in 6.2-beta2. \r\n2. The button beside \"Direct bank transfer\" was labeled with \"Enable\" in 6.2-beta2.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a WP 6.2 site (currently in Beta 2).\r\n2. Install & activate WooCommerce 7.4 (although this issue is also happening on other WC versions like 7.3).\r\n3. Go to WooCommerce > Home.\r\n4. Skip store set up.\r\n5. In the Home task list, click \"Set up payments\".\r\n6. Notice that the \"Back\" button text is \"Home\".\r\n7. Expand the \"Other payment providers\" section.\r\n8. Notice that the button beside \"Direct bank transfer\" was labeled with \"Enable\"\r\n\r\n\n\n###\n\n","completion":" [3943104021,3943424841]"}
{"prompt":"This is a follow-up issue for https://github.com/Automattic/wp-calypso/issues/72043\r\n\r\nThe issue doesn't happen in a hosted-site, but it's still worth removing ID column to prevent overriding. \r\n\r\nHaving an I.D column can prevent duplication in case customers import twice, but it is also dangerous at the same time. It can override existing products with the same I.D and there is no way to recover data. \r\n\r\n\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"Add products task icons are not consistent, some of the icons follow the site's theme (i.e: Grouped and External product in screenshot), while some are blue. I think the colours are passed to SVG's class, thus we should fix the affected icons.\r\n\r\n<img width=\"400\" alt=\"image\" src=\"https://user-images.githubusercontent.com/3747241/218662584-29cefc01-7e03-47c3-9dd2-ee8fa14d58da.png\">\r\n\r\n**To reproduce**\r\n\r\n1. In a fresh site, set the user's profile color in Users > Profile to something vastly different like orange or red\r\n2. Go to WooCommerce > Home > Add products task\r\n3. Observe the affected icons are in a different color\r\n\r\n**Acceptance criteria**\r\n\r\n1. Grouped and External icons should respect the site theme color\n\n###\n\n","completion":" [3943104021,3943424841]"}
{"prompt":"The current impl. of [ExperimentalCollapsibleList](https://github.com/woocommerce/woocommerce/blob/trunk/packages/js/experimental/src/experimental-list/collapsible-list/index.tsx) component only support opening the items from the top (first screenshot). It would be nice to support opening the content from the bottom (second screenshot)\r\n\r\n![Screen Shot 2023-02-09 at 10 55 05 AM](https://user-images.githubusercontent.com/4723145/217910117-a1ae92fc-55c1-40d5-a192-4a602a9c6768.jpg)\r\n\r\n\r\n\r\n![Screen Shot 2023-02-09 at 10 55 58 AM](https://user-images.githubusercontent.com/4723145/217910301-eb8c4919-e1f3-4dd0-99b0-798f632f80df.jpg)\r\n\r\nLooking at the code, it would be as simple as moving this [block](https://github.com/woocommerce/woocommerce/blob/trunk/packages/js/experimental/src/experimental-list/collapsible-list/index.tsx#L291) to the first array item\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"in the Woocommerce refund email... the line\r\nmsgid \"Order fully refunded.\"\r\ngets translated to \"main site language\" even if English i choosen.\n\n### Expected behavior\n\nIt should print in english if english language is active\n\n### Actual behavior\n\nIn the example Swedish is main language, and it shows the Swedish translation even if English is the order language in.\r\nIt is the string msgid \"Order fully refunded.\" in 'woocommerce_email_order_details'\r\n\r\nSame thing happens with ''woocommerce_email_order_meta' when used. that comes out after\n\n### Steps to reproduce\n\n[Image-3 (kopia).pdf](https://github.com/woocommerce/woocommerce/files/10694600/Image-3.kopia.pdf)\r\n\r\nUse a different langauge the English by default.\r\nMake an order in English\r\nRefund the order\r\nThe refund email prints out above (.pdf) in Swedish\n\n\n\n###\n\n","completion":" [468434635]"}
{"prompt":"For WP 6.2 Beta, User navigates to blank page upon clicking \"Add (Paid Product Type) to my store\" option from Task list on \"Woocommerce > Home\" page.\r\n\r\n### Expected behavior\r\n\r\nAll content should be display after clicking on \"Add (Paid Product Type) to my store\" option from Task list on \"Woocommerce > Home\" page.\r\n\r\n### Actual behavior\r\n\r\nFor WP 6.2 Beta, User navigates to blank page upon clicking \"Add (Paid Product Type) to my store\" option from Task list on \"Woocommerce > Home\" page.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using Jurassic Ninja.\r\n2. Install and activate all the required plugins.\r\n3. Install and activate Woocommerce.\r\n4. Start with OBW.\r\n5. Go to Product Types step.\r\n6. Select any Paid Product Type and Click Continue.\r\n7. Complete OBW.\r\n8. Go to \"Woocommerce > Home\" page\r\n9. Click on \"Add (Paid Product Type) to my store\" option from Task list.\r\n10. Observe that for WP 6.2 Beta, user is navigated to a Blank page.\r\n\r\n### Screenshot:\r\n\r\n![#36793](https://user-images.githubusercontent.com/41110392/217538195-2f9abb33-c599-4ce9-bed0-73bae859f363.gif)\r\n\r\n\n\n###\n\n","completion":" [3943104021,3943424887,3943426545]"}
{"prompt":"The return type of some shipping and discount getter methods (`get_shipping_total()`, `get_shipping_tax()`, `get_discount_total()`, and `get_discount_tax()`) are not proper. So, those methods generate errors in some special cases. For example, if the `post_status` is `auto-draft`. Then, using those methods throw fatal errors.\r\n\r\nSuppose, we have an order with `auto-draft` status. The order ID is 1347. By running the following code will generate fatal error.\r\n```\r\n$order   = wc_get_order( 1347 );\r\n$earning = $order->get_total_shipping() - $order->get_total_shipping_refunded();\r\n\r\necho $earning;\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe return type of the above-mentioned methods in the `WC_Abstract_Order` class should be `float`, instead of `string`. \r\n1. `get_shipping_total()`\r\n2. `get_shipping_tax()`\r\n3. `get_discount_total()`\r\n4. `get_discount_tax()`\r\n\r\n### Actual behavior\r\n\r\nRight now, the return type of the following methods in the `WC_Abstract_Order` class is `string`, which may generate a fatal error in some specific cases.\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Go to `WooCommerce` > `Orders` > `Add Order`.\r\n2. It will generate an order with an ID.\r\n3. Leave the order creation page without clicking the `Create` button. So, the order's `post_status` will be `auto-draft`.\r\n4. Now, get the order using the `wc_get_order()` method.\r\n5. Try to do some calculations using any of the above-mentioned methods as per below codes. It will throw fatal errors.\r\n```\r\n$order   = wc_get_order( 1347 );\r\n$earning = $order->get_total_shipping() - $order->get_total_shipping_refunded();\r\n\r\necho $earning;\r\n```\r\n\r\n\n\n###\n\n","completion":" [1891051437,1891051453,1891051459]"}
{"prompt":"P2: p73Jol-1C5-p2#comment-6785\n\n![Image](https://user-images.githubusercontent.com/3747241/216605164-3e3cfd2b-3d12-4e0d-9dde-3536e61aba0c.png)\n\nUpdate Avalara's tax task CTA since \"Enable & set up\" does not make sense when we're actually opening up in a new tab.\n\n### Acceptance criteria\n\n1. Replace `Enable & set up` to `Download`\n\n\n\n###\n\n","completion":" [3943104021,3943424841]"}
{"prompt":"The `usePreventLeavingPage` hook currently exists under `client/hooks/`.  This is a useful hook that might be best moved under `@woocommerce/navigation` for reuse.\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"The header slots (`WooHeaderItem` and `WooHeaderPageTitle`) and footer slots (`WooFooterItem`) should be moved to a new package, `@woocommerce/admin-layout` so that they can be used across packages and within 3rd party plugins.\r\n\r\nEventually, it would be good to move other header and footer components into this package, but for now we can begin with just moving the slots so they can be filled in the product editor.\r\n\r\n**Acceptance Criteria**\r\n* [ ] A new package is created with the name `@woocommerce/admin-layout`\r\n* [ ] `WooHeaderItem` is exposed via this package\r\n* [ ] `WooHeaderNavigationItem` is exposed via this package\r\n* [ ] `WooHeaderPageTitle` is exposed via this package\r\n* [ ] `WooFooterItem` is exposed via this package\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"The utils under `plugins/woocommerce-admin/client/products/utils` should be moved to the `@woocommerce/product-editor` package for reuse.\n\nAfter moving the utils, the components, we'll need to hook up the components in the client products pages to the new utils location.\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"In #36517, `node_modules/@wordpress/base-styles/colors.native` was included in `@woocommerce/components` base style sheet.\n\nUnfortunately, this results in two conflicting `$gray-100` SCSS variables, one from that file, and one from `nodule_modules/@wordpress/base-styles/_colors.scss`.\n\nThe end result of this is broken styles on the `SelectControl` (and maybe other `@woocommerce/components`)\n\n## Result\n\n\n![Image](https://user-images.githubusercontent.com/2098816/216082479-4d17ffa9-2420-4a9f-b956-51209feeda5b.png)\n\n\n## Expected\n\n\n\n![Image](https://user-images.githubusercontent.com/2098816/216082513-c06925be-a45d-412e-95ab-0e677f88623a.png)\n\n\n\n###\n\n","completion":" [3943425720,4370024739,4370026978]"}
{"prompt":"Blank Screen is displayed after clicking \"Continue\" on \"Business Details\" step while completing OBW flow.\r\n\r\n### Expected behavior\r\n\r\nAfter clicking \"Continue\" on \"Business Details\" step it should navigate to Themes tab.\r\n\r\n### Actual behavior\r\n\r\nBlank Screen is displayed after clicking \"Continue\" on \"Business Details\" step while completing OBW flow.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a test site using Jurassic Ninja (ensure to check the box for WP Downgrade).\r\n2. [Downgrade](https://globalstepp2.wordpress.com/how-to-change-wordpress-version-in-jurassic-ninja/) the version of WP to 5.9 \r\n2. Install and activate all the required plugins.\r\n3. Install and activate Woocommerce.\r\n4. Start with OBW.\r\n5. Go to Business Details > Free feature step.\r\n6. Click Continue.\r\n7. Observe that, Blank Screen is displayed.\r\n\r\n### Note: \r\nAfter changing the theme from \"Appearance > Theme\" and starting the OBW flow again then we are able navigate on Theme step.\r\n\r\n### Screenshot:\r\n\r\n![#36711 1](https://user-images.githubusercontent.com/41110392/216070189-4cea2b51-8b17-4f4e-bdfc-acb1f3949608.gif)\r\n\r\n![#36711 2](https://user-images.githubusercontent.com/41110392/216070204-51cde860-f929-4a55-b696-eddee334f5b5.jpg)\r\n\r\n\n\n###\n\n","completion":" [1891051446]"}
{"prompt":"When developing custom filters for the shop sidebar, 3rd party developers should be able to add their own entries to the \"active filters\" widget.\r\n\r\nIn the following example, I set a color/attribute filter and min and max price, as well as two other filters that I developed:\r\n<img width=\"437\" alt=\"image\" src=\"https://user-images.githubusercontent.com/6853605/215855649-44ebd42b-6bc2-4617-951f-b2bd49ae633b.png\">\r\n\r\nIn the same way we can use the `woocommerce_widget_get_current_page_url` filter to add our URL arguments to other filter widgets so that our filter status remains when applying a non-custom filter, we should be able to add our own entries to the \"active filters\" widget.\r\n\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [3943425968]"}
{"prompt":"This issue scopes making tests in `WC_Webhook_Test` class compatible with HPOS by fixing test or core code, as needed.\r\n\r\nPlease fork from #36650 for workflow to run tests in HPOS context.\r\n\r\nTowards #36376\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"This issue scopes making tests in `WC_Tests_WC_Order_Query`, `WC_Abstract_Order_Test` and `WC_Order_Data_Store_CPT_Test` classes compatible with HPOS by fixing test or core code, as needed.\r\n\r\nPlease fork from #36650 for workflow to run tests in HPOS context.\r\n\r\nTowards #36376\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"This issue scopes making tests in `WC_Tests_Customer_Functions` and `WC_Tests_Order_Functions` classes compatible with HPOS by fixing test or core code, as needed.\r\n\r\nPlease fork from #36650 for workflow to run tests in HPOS context.\r\n\r\nTowards #36376\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"This issue scopes making tests in`WC_Tests_CRUD_Meta_Data` and `WC_Tests_CRUD_Orders` classes compatible with HPOS by fixing test or core code, as needed.\r\n\r\nPlease fork from #36650 for workflow to run tests in HPOS context.\r\n\r\nTowards #36376\r\n\r\n\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"This issue scopes adding compatibility for unit tests in `WC_Tests_Admin_Dashboard` with HPOS by fixing unit tests or code code, as appropriate.\r\n\r\nPlease fork from #36650 for workflow to run tests in HPOS context.\r\n\r\nTowards #36376\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"This issue scopes making tests in `WC_Gateway_Paypal_Test` class compatible with HPOS by fixing test or core code, as needed.\r\n\r\nPlease fork from #36650 for workflow to run tests in HPOS context.\r\n\r\nTowards #36376\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"This issue scopes adding compatibility for unit tests in `WC_Tests_API_Orders` and `WC_Tests_API_Orders_V2` classes by fixing unit tests, or core code as appropriate.\r\n\r\nPlease fork from #36650 for workflow to run tests in HPOS context.\r\n\r\nTowards #36376\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"Currently, some unit test in class `WC_Tests_Admin_Report`, `WC_Admin_Tests_API_Reports_Import`, `WC_Admin_Tests_Reports_Customer` and `WC_Tests_Report_sales_by_date` fails when run in HPOS context. This issue scopes fixing unit tests (or core code, as appropriate) so that they work with HPOS.\r\n\r\nPlease fork from #36650 for workflow to run tests in HPOS context.\r\n\r\nTowards #36376\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"After merging [this PR](https://github.com/woocommerce/woocommerce/pull/36606), we will show the attribute creation form when there are no attributes.\r\n\r\n![screenshot-user-images githubusercontent com-2023 01 28-10_45_50](https://user-images.githubusercontent.com/1314156/215269843-231f732d-6f6c-4413-addb-7d5a45587ea0.png)\r\n\r\n**Acceptance criteria- [ ] Remove [the product attribute selector](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/includes/admin/meta-boxes/views/html-product-data-attributes.php#L39-L58) when there are no attributes.\r\n- [ ] Once the user adds the first attribute using the fields, they will see the regular interface with the selector, the button, and the attribute list.\r\n\n\n###\n\n","completion":" [1891051461,4370024739]"}
{"prompt":"During the setup wizard there is a call made to a custom REST API endpoint on woocommerce.com that contains themes which have either been deleted or changed to Draft status woocommerce.com.\r\n\r\nThose themes are as follows:\r\n* Makoney\r\n* Mugistore\r\n* Solarone\r\n\r\nAnd the REST API endpoint is here: https://woocommerce.com/wp-json/wccom-extensions/1.0/search?category=themes\r\n\r\nHere's a screenshot for reference:\r\n\r\n![redirects local_wp_wp-admin_admin php_page=wc-admin path=%2Fsetup-wizard step=theme-min](https://user-images.githubusercontent.com/1377956/215259736-ab8d581c-a707-4c49-9b23-25d27fcce565.png)\r\n\n\n### Expected behavior\n\nAll of the themes in the setup wizard should be able to be installed.\n\n### Actual behavior\n\nIf you click on \"Choose\" on one of the broken themes then after a while you'll see an error message:\r\n\"The requested theme Makoney could not be installed. Theme API call failed.\"\n\n### Steps to reproduce\n\nMake your way through the setup wizard and when you get to step \"5 Theme\" try and install one of the broken themes\n\n\n\n###\n\n","completion":" [1891051446,641282302]"}
{"prompt":"In the old experience, when creating a variable product.\r\nUsers who navigate to the `Variations` tab without creating any attributes should see this form as an empty state. It will let them quickly create a variation-specific attribute, which will then show up under `Attributes` with the `Used for variations` box checked. They can uncheck it if needed, but the goal is to make it super easy to create variation attributes without clicking around.\r\n\r\n<img width=\"1103\" alt=\"image\" src=\"https://user-images.githubusercontent.com/79307566/214624354-abcf47ae-0122-43f7-b628-90bb7ffd9fa0.png\">\r\n\r\nFrom issue [#35115](https://github.com/woocommerce/woocommerce/issues/35115). More context [here](https://github.com/woocommerce/woocommerce/issues/35115#issuecomment-1403910659).\n\n###\n\n","completion":" [1891051461,4370024739]"}
{"prompt":"In the old experience, when creating a variable product.\r\nThe `Used for variations` box should be checked and disabled when:\r\n\r\n- the product doesn't have any variations AND\r\n- the product doesn't have any attributes with the `Used for variations` box checked AND\r\n- the user navigates to the `Variations` tab\r\n\r\n<img width=\"888\" alt=\"image\" src=\"https://user-images.githubusercontent.com/79307566/205013424-5011b44e-0c20-4f3b-91ce-380d7dfa3a82.png\">\r\n\r\nFrom issue [#35115](https://github.com/woocommerce/woocommerce/issues/35115). More context [here](https://github.com/woocommerce/woocommerce/issues/35115#issuecomment-1403910659).\r\n\r\n## UPDATE\r\nMaybe we should add another prop [here](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/includes/admin/class-wc-admin-assets.php#L357-L423) to know when we should [disable the checkbox](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/client/legacy/js/admin/meta-boxes-product.js). \r\n\r\n**Acceptance criteria- [ ] Disable `Used for variations` box.\n\n###\n\n","completion":" [1891051461,4370024739]"}
{"prompt":"Woocommerce importer doesn't work properly.\r\nIf I try to update 1,929 products using a basic csv file, whose columns are just SKU and Stock, after running the importer I get the message\r\n\r\nImport complete! 1,920 products updated.\r\n\r\n9 products are skipped without a valid reasons.\r\nNote that 1,929 products are all in the database with their unique sku.\r\n\r\nWoocommerce Plugin Support replicated the issue and suggested to report a bug here on GitHub.\r\nHere is the thread https://wordpress.org/support/topic/import-issue-19/\n\n### Expected behavior\n\nI expect 1,929 products to be updated, with the message\r\n\r\nImport complete! 1,929 products updated.\n\n### Actual behavior\n\nI get only 1,920 products updated, with the message\r\n\r\nImport complete! 1,920 products updated.\n\n### Steps to reproduce\n\nFirst set up a csv file as explained above, than follow usual import steps\r\n1. Go to Products > All Products > Import\r\n3. Uplad your csv file\r\n4. Check the checkbox labeled Existing products that match by ID or SKU will be updated. Products that do not exist will be skipped\r\n5. Click on Continue\r\n6. Check that Column names are associated with their related Product Fields \r\n7. Click on Run the importer\r\n8. Wait until the message Your products are now being imported... disappears.\r\n9. You will now see the message Import complete! 1,920 products updated. as screenshot below\r\n\r\n![import-screenshot](https://user-images.githubusercontent.com/123632125/214817608-3ebd20ea-1b22-43a3-a9fb-f1c55eadda5c.png)\r\n\n\n\n\n###\n\n","completion":" [1891051450]"}
{"prompt":"Right now the `createOrderedChildren()` within the components package -> utils.tsx file needs work:\r\n- It is doing a lot more than ordering children, serving as a catch-all to mutate fills\r\n- It is confusing, accepting various types of props without a lot of clarity in how they're used. Some props are made so they're available within the Slot (for ordering/etc), and others are injected into the fill. \r\n- It is not working quite right, as (among other things) it's resulting in injecting props into standard dom elements. For example, with the following fill:\r\n```js\r\n<WooProductFieldItem\r\n\tid=\"details/name\"\r\n\tsections={ [ { name: 'section/test', order: 1 } ] }\r\n\tpluginId={ PLUGIN_ID }\r\n>\r\n\t<div>Test field</div>\r\n</WooProductFieldItem>\r\n```\r\nIt is attempting to inject props into that standard DOM element `<div />` resulting in console errors.\r\n\r\n**Acceptance criteria**\r\n- Restructure props with greater clarity in how they're used, so it's clearer if you're adding props for use in the fill or the slot. \r\n- Perhaps rename or restructure function to be more single-purpose, since this is not just used for ordering.\r\n- Avoid side-effects such as injecting props into dom elements.\r\n\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"Dependent on https://github.com/woocommerce/woocommerce/issues/36609 which adds support for targeting multiple slots with the same fill. \r\n\r\nUse this to add support for variations to be targeted for extensibility separately than the general product sections.\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"\r\nRight now the `WooProductFieldItem` and `WooSectionFieldItem` component accept only a single ID of a location (field -> section, and section -> tab) to fill. We'll need to support multiple.\r\n\r\n**Acceptance Criteria**\r\n- Change the property names to make them plural (ie section -> sections)\r\n- These properties should now accept an array of objects, with each object including a `name` and `order`\r\n\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"When I have items in the cart before logging in, they overwrite the accounts cart.\r\n\r\nAs an example:\r\nI am logged in an there is 5 x Item1 in my accounts cart. \r\nI decide to add another. So I go to the shop site and add 1 x Item1. Now the cart contains 6 x Item1. \r\nThis seems right to me.  \r\nNow i log out and decide to add another 2 x item1, so I add them to the chart. During checkout I get asked to log in. I do that and now I expect the 2 x Item1 to be added to the 6 x Item1 that are in the cart of my account. \r\nBut now there are only 2 x Item1, instead of 8.\r\n\r\n### Expected behavior\r\n\r\nWhen the items from the logged-out cart get merged into the logged-in cart, items that occur in both carts should be added up.\r\n\r\ncart:\r\n3 x Item1\r\n1 x Item2\r\n\r\nlogged out\r\nadd 2 x Item1 to cart\r\nlog in\r\n\r\ncart:\r\n5 x Item1\r\n1 x Item2\r\n\r\n### Actual behavior\r\n\r\nWhen the items from the logged-out cart get merged into the logged-in cart, the number of the items that occur in both carts are replaced by the logged-out cart.\r\n\r\ncart:\r\n3 x Item1\r\n1 x Item2\r\n\r\nlogged out\r\nadd 2 x Item1 to cart\r\nlog in\r\n\r\ncart:\r\n2 x Item1 (should be 5)\r\n1 x Item2\r\n\r\nNote, that only the number of Item1 is affected\r\n\r\n### Steps to reproduce\r\n\r\nOn a minimal site with just one kind of item to choose from:\r\n\r\n**Logged in**\r\n1. have some items in the cart\r\n2. add item to the cart\r\n3. go to checkout\r\n4. go to cart\r\n\r\nThere should now be _one more_ item in the cart.\r\n\r\n**Logged out**\r\n1. have some items in the cart\r\n6. log out\r\n7. add item to the cart\r\n8. go to checkout\r\n9. login\r\n10. go to cart\r\n\r\nThere should now be _one_ item in the cart, regardless of how many there have been before.\r\n\r\n\n\n###\n\n","completion":" [1891051436]"}
{"prompt":"1. [ ] Turn on/off the new editing experience: \r\n       - activate via WooCommerce > Settings and confirm it is active on the Products > Add New tab\r\n       - deactivate via \"use the classic editor\" menu option, and confirm the action.\r\n\r\n2. [ ] Create a simple product\r\n3. [ ] Product editing\n\n###\n\n","completion":" [4370026978]"}
{"prompt":"We should create a REST API endpoint to generate a product's slug. The endpoint should take a product name string as a parameter.\n\n## Acceptance criteria\n\n- [ ] REST API endpoint to generate a unique product slug using a supplied product name string as input.\n\n###\n\n","completion":" [2258932484,4370024739,4370026978]"}
{"prompt":"We should create a few initial e2e tests for the new product management experience.\r\n\r\n## Acceptance criteria\r\n\r\n- [ ] An e2e test that enables/disables the new product management experience.\r\n    - Activate via ~WooCommerce > Settings~ e2e configuration and confirm it is active via Products > Add New\r\n    - Deactivate via \"Use the classic editor\" menu option and confirm old editor is active\r\n- ~[ ] An e2e test that adds a new simple product using the new product management experience.~\r\n- ~[ ] An e2e test that edits a simple product using the new product management experience.~\r\n\r\n## Implementation notes\r\n\r\n- Make sure slug is unique (use microtime)\n\n###\n\n","completion":" [4370024739,4370026978]"}
{"prompt":"When using Bootstrap 5 there is conflict of classes name: Since class='col-1' is Bootstrap registrated class for styling.\n\n### Expected behavior\n\nshows full with form\n\n### Actual behavior\n\nsince Bootstrap understand class 'col-1' and 'col-2' form looks like 1/12 of width and 2/12 of width.\n\n### Steps to reproduce\n\n1. Install bootstrap\r\n2. go to checkout page\n\n\n\n###\n\n","completion":" [33006876]"}
{"prompt":"When the orders table is authoritative and orders sync is off, deleting an order also deletes it from the orders table as if sync was on.\r\n\r\n### Steps to reproduce\r\n\r\n1. Set the orders table as authoritative (Settings - Advanced - Custom data stores) with sync on.\r\n2. Create an order, verify that it exists in both the posts table and in `wc_orders`.\r\n3. Turn sync off.\r\n4. Trash and then delete the order.\r\n5. Verify that the order has been deleted from `wc_orders` (expected) but also from posts (that shouldn't happen).\r\n\r\nThe opposite case (posts authoritative) works fine: when deleting an order with sync off the order still stays in `wc_orders`.\r\n\r\nRelated: https://github.com/woocommerce/woocommerce/issues/36580\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"When COT is authoritative and an order is deleted the order records in `wp_wc_order_tax_lookup` and `wp_wc_order_stats` aren't.\r\n\r\n### Steps to reproduce\r\n\r\n1. Set the orders table as authoritative (Settings - Advanced - Custom data stores).\r\n2. Create an order that has line items with taxes.\r\n3. Verify that records exist for the order in `wp_wc_order_tax_lookup` and `wp_wc_order_stats`.\r\n4. Trash the order, then delete it.\r\n5. Verify that the order has been deleted from `wp_wc_orders`, but the records in `wp_wc_order_tax_lookup` and `wp_wc_order_stats` still exist.\r\n\r\nWorth noting that when the posts table is authoritative, deleting an order also deletes the order records in `wp_wc_order_tax_lookup` and `wp_wc_order_stats`, both with sync on and with sync off. There's probably some code that hooks into the post deletion and deletes the records, this should be changed so that these deletions happen in the orders data store.\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"In Iran, the order of address fields for the checkout page is different from the default. users are currently using plugins to fix this order but this can easily be fixed by using the default \"get_country_locale\" method.\r\n\r\nI have fixed and asked to merge this issue in #36491\n\n### Expected behavior\n\nit's expected from checkout fields to have the order below in IR locale:\r\n\r\n![Screenshot 2023-01-21 at 17-44-50 Checkout ‚Äì Level Rod](https://user-images.githubusercontent.com/6337624/213870867-62971bb3-e0fb-4558-9696-ffdcf34de8ea.png)\r\n\r\nthe convention of addressing in Iran is as described below:\r\n\r\n1. country\r\n2. state\r\n3. city \r\n4. destination address\r\n5. postcode\r\n\n\n### Actual behavior\n\nthe current default order of address fields for Iran is as shown in the image below:\r\n\r\n![Screenshot 2023-01-21 at 17-41-05 Checkout ‚Äì Level Rod](https://user-images.githubusercontent.com/6337624/213870689-baccadfd-cce9-432e-90e7-cc68d541bd3b.png)\r\n\r\n\n\n### Steps to reproduce\n\n1. install woocommerce \r\n2. set the selling country to Iran or have Iran on the list of selling countries\r\n3. go to the checkout page\r\n4. as you can see the order of address fields is not as the conventional way people use in Iran\n\n\n\n###\n\n","completion":" [468434635]"}
{"prompt":"This is a follow-up to https://github.com/woocommerce/woocommerce/pull/36519#pullrequestreview-1263028565. We should create a unit test to ensure the filter is able to add/replace tasklists at will.\n\n###\n\n","completion":" [3943424887]"}
{"prompt":"\r\nAfter pressing the three dots in the top bar, the menu is covered by the tabs.\r\n![Screenshot 2023-01-20 at 13 17 23](https://user-images.githubusercontent.com/1314156/213749861-9c0caee8-79c2-423d-8a80-38bc22fe21b6.png)\r\n\r\n### Expected behavior\r\n\r\nThe top bar menu should be fully visible\r\n![Screenshot 2023-01-06 at 15 53 57](https://user-images.githubusercontent.com/1314156/211079667-f9f42643-a889-4372-a189-0d258632fdad.png)\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Go to the new product management experience.\r\n2. Press the three dots in the top bar.\r\n3. The menu is covered by the tabs.\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"If you add a custom column based on some meta data to Order table With HPOS enabled you can not do the sorting based on that custom column\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nSorting of the order table should be allowd based on the custom columns\r\n\r\n### Actual behavior\r\n\r\nIn the wp_post based orders this feature was working we could sort the orders based on meta data \r\n\r\n### Steps to reproduce\r\n\r\nSteps to creae the issue:\r\n\r\nYou should have HPOS enabled on the site \r\n\r\nstep 1: create a custom meta data for order in this we ahave a meta data random_date that stores random date\r\n\r\n\r\nstep 2: add this mata data as a column to order table and set this column as sortable\r\n\r\nstep 3: sorting do not work on this columns\r\n\r\nhere is the test code add this code in your theme functions.php file, after adding this code place 3 test order\r\nthis code will add custom meta data random_date to those order and it will add the column Random date to order table and make it sortable as well and you can see sorting do not work based on meta data value\r\n\r\n[class-hops-sortable-bug.txt](https://github.com/woocommerce/woocommerce/files/10464572/class-hops-sortable-bug.txt)\r\n\r\n\r\nI have found that this is hpening due to this function sanitize_order_orderby()  in src\\Internal\\DataStores\\Orders\\OrdersTableQuery.php\r\n\r\n\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"Currently the `AttributesControl` component houses logic around variations.  We should remove this from the attribute control and allow consumers to control the type of attributes.\n\n**Acceptance criteria**\n\n* [ ] We should remove the `attributeType` prop\n* [ ] Copy/text specific to variations should be modifiable via props\n* [ ] `onEdit`, `onCancel` and any other events where consumers need to plug in to custom hooks should be available via props\n\n###\n\n","completion":" [1891051456,3943104021,4370024739]"}
{"prompt":"Following the merge of [PR#36282](https://github.com/woocommerce/woocommerce/pull/36282), visiting the order editor when HPOS is enabled (and authoritative) results in a number of notice-level errors:\r\n\r\n```\r\nAttempt to read property \"ID\" on null\r\nplugins/woocommerce/includes/admin/class-wc-admin-post-types.php:128\r\n```\r\n\r\nThe problem is that the [global `$post` object](https://github.com/woocommerce/woocommerce/blob/2bf9f577952d7a225365fe7728b3187b5be7b701/plugins/woocommerce/includes/admin/class-wc-admin-post-types.php#L123) is not set under these conditions, and therefore [attempts to get the `$post->ID`](https://github.com/woocommerce/woocommerce/blob/2bf9f577952d7a225365fe7728b3187b5be7b701/plugins/woocommerce/includes/admin/class-wc-admin-post-types.php#L128) (there are multiple cases of this, in this block of code) will fail. \r\n\r\nSolving this for `$messages['products']` is probably trivial, but we can see a [similar problem in `$messages['shop_order']`](https://github.com/woocommerce/woocommerce/blob/2bf9f577952d7a225365fe7728b3187b5be7b701/plugins/woocommerce/includes/admin/class-wc-admin-post-types.php#L158-L162). To solve that part elegantly, we may wish to first solve https://github.com/woocommerce/woocommerce/issues/35561.\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"There is a memory leakage issue/performance bug in OrderTableDataStore's `filter_raw_meta_data` method, as can be seen in the following `qcachegrind` screenshot:\r\n\r\nFor two memory dumps taken sometime after the other in the request, we can see that memory allocated by `filter_raw_meta_data` will continue to increase and is not de-allocated:\r\n\r\n![Screenshot 2023-01-17 at 4 40 14 PM](https://user-images.githubusercontent.com/7571618/212885855-22f3f54d-3f72-4058-ac7a-a4991fe9539d.png)\r\n\r\nUpon closer look, it looks like we are continue to add keys to `internal_meta_keys` prop of the datastore on every order load but are not clearing it.\r\n\r\nTo reproduce:\r\n\r\nOn a WP shell, execute following command for existing orders with ID id1 and id2:\r\n\r\n```php\r\n$ds = WC_Data_Store::load( 'order' );\r\nwc_get_order( $id1 );\r\ncount( $ds->get_internal_meta_keys() ); // 85\r\nwc_get_order($id2);\r\ncount( $ds->get_internal_meta_keys() ); // 118 \r\n```\r\n\r\n**Note**: Make sure that these orders are not cached. Otherwise, they will be loaded directly from cache, bypassing the data_store filter function.\n\n###\n\n","completion":" [3834300886,472334370]"}
{"prompt":"As part of #36394 we will be creating a slot fill component to add new tabs to the product page. **Description:**\r\nPart of the https://github.com/woocommerce/woocommerce/issues/35952 epic.\r\nThis currently is not very doable with our current implementation of tabs. Currently our use of [`TabPanel`](https://github.com/WordPress/gutenberg/tree/trunk/packages/components/src/tab-panel) relies on having nested children with the `ProductFormTab` component which won't be possible with the SlotFills as fills will be wrapped by the Slot component.\r\n\r\nAlso note that the `TabPanel` component requires the tab name, title, and className as standalone data.\r\n\r\nThere could be a couple options (part of this issue is determining the best approach):\r\n- Refactor our current use of `TabPanel` within [ProductFormLayout](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce-admin/client/products/layout/product-form-layout.tsx#L15) to integrate fills, we can make use of the `useSlot` hooks for these and retrieve the necessary data from there. \r\n- Integrate tabs directly with the `WooProductFormTabItem` fill component as part #36394, asking for the additional title, name data.\r\n- Make use of a React provider within our use of `TabPanel` in [ProductFormLayout](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce-admin/client/products/layout/product-form-layout.tsx#L15) and instead of relying on Children we have `ProductFormTab` register within the provider. This way it doesn't matter if tabs are direct children and we can more freely use the SlotFill component for this.\r\n\r\n**Acceptance criteria**\r\n- [ ] Our product form tabs should be easily extendable by the use of slot fills.\r\n- [ ] The product form tabs should work and look the same as they do now.\r\n\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"There is a bug in woocommerce that appears in the Hebrew language.\r\n\r\ni notice to bugs in Hebrew:\r\n1.WooCommerece -> Setting ->Shipping -> Shipping zones |Shipping options |Shipping classes ; not working as should be,\r\nmean not show information as its need to show\r\nwhen i switch to English i see the shipping classes and everything.\r\n\r\n2.WooCommerece -> Status -> Get system report/copy system report; not working\r\n\r\n*i also tested this issues in Hebrew on Fresh Install using Twenty Twenty-Three theme\n\n### Expected behavior\n\n1.Should show Shipping information.\r\n2. Should give Website Status and option to copy.\n\n### Actual behavior\n\n1.Shipping zones |Shipping options |Shipping classes ; not working as should be, mean not show information as its need to show\r\n2.Status -> not working, cant copy and dont produces information to copy\n\n### Steps to reproduce\n\n1. your website must be in Hebrew and your WooCommerece plugin itself(the issue dont appear when WooCommerece in English)\r\n2.WooCommerece -> Setting ->Shipping -> Shipping zones |Shipping options |Shipping classes\r\n3.WooCommerece -> Status -> Get system report/copy system report; not working\r\n\n\n\n\n###\n\n","completion":" [468434635]"}
{"prompt":"Continue the work that was initially started as part of https://github.com/woocommerce/woocommerce/issues/36073 to create a data store for the product form data.\nWe should add the necessary selectors/resolvers for retrieving the sections, tabs.\nThis issue may depend on: https://github.com/woocommerce/woocommerce/issues/36422 to be finished.\n\n**Acceptance Criteria**\n\n- [ ] A selector should be available to retrieve the sections, tabs\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"We currently have a helper PHP function for adding new fields, subsections, and sections to the product form.\nWe will also want to ability for users to add new tabs\nThese should be added in a similar format as the current [ProductForm](https://github.com/woocommerce/woocommerce/tree/trunk/plugins/woocommerce/src/Internal/Admin/ProductForm) sections and fields.\n\n**Acceptance criteria**\n\n- [ ] An `add_tab` function should be available within the `FormFactory` for users to add new tabs and templates to the product form.\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"Similar to what is done in this PR: https://github.com/woocommerce/woocommerce/pull/36368 we want to move the shipping section and field out of the product form and have it added by a Slot fill instead.\nWe should also add a correct order separated by two from the slot fill above, this will be 1, given its the first item.\n\nThis issue should also add the initial slot item for the shipping tab -> `tab/shipping`\n\n**Acceptance criteria**\n\n- [ ] Shipping section and field should be added by the `tab/shipping` section fill.\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"Similar to what is done in this PR: https://github.com/woocommerce/woocommerce/pull/36368 we want to move the inventory section and field out of the product form and have it added by a Slot fill instead.\nWe should also add a correct order separated by two from the slot fill above, this will be 1, given its the first item.\n\nThis issue should also add the initial slot item for the inventory tab -> `tab/inventory`\n\n**Acceptance criteria**\n\n- [ ] Inventory section and field should be added by the `tab/inventory` section fill.\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"Similar to what is done in this PR: https://github.com/woocommerce/woocommerce/pull/36368 we want to move the pricing section and field out of the product form and have it added by a Slot fill instead.\nWe should also add a correct order separated by two from the slot fill above, this will probably be `1` as pricing is the first section within the pricing tab.\nAs part of this issue we should also add the Slot component to the pricing tab -> `tab/pricing`.\n\n**Acceptance criteria**\n\n- [ ] Pricing section and field should be added by the `tab/pricing` section fill.\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"Similar to what is done in this PR: https://github.com/woocommerce/woocommerce/pull/36368 we want to move the attributes section and field out of the product form and have it added by a Slot fill instead.\nWe should also add a correct order separated by two from the slot fill above (so 5 most likely if the details section is 1)\n\n**Acceptance criteria**\n\n- [ ] Attributes section and field should be added by the `tab/general` section fill.\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"Similar to what is done in this PR: https://github.com/woocommerce/woocommerce/pull/36368 we want to move the images section and field out of the product form and have it added by a Slot fill instead.\nWe should also add a correct order separated by two from the slot fill above (so 3 most likely if the details section is 1)\n\n**Acceptance criteria**\n\n- [ ] Images section and field should be added by the `tab/general` section fill.\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"### Context\r\n\r\nIn Rukib team, we are maintaining the [WooCommerce Blocks](https://github.com/woocommerce/woocommerce-blocks) plugin! Couple of months ago we did a research spike (pdFofs-mB-p2) about managing extensions that don't support the Cart & Checkout Blocks. One of our propositions was to declare (in)compatibility with the C&C Blocks (pdFofs-mB-p2#declare-in-compatibility-with-the-cart-checkout-blocks) using the same approach in [HPOS compatibility declaration](https://github.com/woocommerce/woocommerce/wiki/High-Performance-Order-Storage-Upgrade-Recipe-Book#declaring-extension-incompatibility). During one of our pair programming and brainstorming sessions (pca54o-4NP-p2#declaring-in-compatibly-with-the-c-c-blocks) we worked in creating a prouf of concept for declaring (in)compatibility with the Cart & Checkout Blocks feature.\r\n\r\nDeclaring (in)compatibility is simple:\r\n- Declare WC tested up to in the main plugin file(s)\r\n- Add the correct code snippet to the main plugin file(s)\r\n\r\nThe code snippet used for declaring (in)compatibility with [HPOS](https://github.com/woocommerce/woocommerce/wiki/High-Performance-Order-Storage-Upgrade-Recipe-Book#declaring-extension-incompatibility):\r\n\r\n```PHP\r\nadd_action( 'before_woocommerce_init', function() {\r\n    if ( class_exists( '\\Automattic\\WooCommerce\\Utilities\\FeaturesUtil' ) ) {\r\n        \\Automattic\\WooCommerce\\Utilities\\FeaturesUtil::declare_compatibility( 'custom_order_tables', __FILE__, true );\r\n    }\r\n} );\r\n```\r\n\r\nSo, the function of interest is: `declare_compatibility( 'custom_order_tables', FILE, true );`, see [function definition](https://href.li/?https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/src/Utilities/FeaturesUtil.php#L45-L67):\r\n\r\nhttps://github.com/woocommerce/woocommerce/blob/c3d62f113addbbf820ed5e8103a0a052092efc00/plugins/woocommerce/src/Utilities/FeaturesUtil.php#L45-L67\r\n\r\nIn theory, we want to replace the `custom_order_tables` feature_id by a C&C Blocks feature_id (e.g., `cart_checkout_blocks`). During our research, we realized that only the WooCommerce features in `WooCommerce -> Settings -> Advanced -> Features` can use the `declare_compatibility` function:\r\n\r\n![image](https://user-images.githubusercontent.com/14235870/212312501-2ee56ff3-b78e-4f53-93bc-675947ed8071.png)\r\n\r\nIn other words, the current implementation of the `declare_compatibility` function doesn‚Äôt work for the Cart & Checkout Blocks feature.\r\n\r\n### Solutions\r\n\r\nI this case, we have two options:\r\n\r\n- In Woo Blocks, create the compatibility declaration API from scratch. This, I believe, is a bad idea: we will duplicate the same feature, and we will not have a single source of truth!\r\n- Add support for the Cart & Checkout Blocks in the declaring compatibility feature\r\n\r\nWe eventually chose to go with the second solution!\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"On the webhook for product update, can you please add the product category to the data it sends? The product category is sent when a new product is created, but when a product is updated, the category does not seem to be sent. Even if the product category is not changed, we‚Äôd like to still be sent the product category.\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [2046308337]"}
{"prompt":"**Description**\n3PD's may want to create a section from scratch and still make use of some of our fields, like category, summary, and description field. We should expose these through a package, so they can be easily re-used.\n\nAdditional info:\nThe initial `product-editor` library has been merged in ( https://github.com/woocommerce/woocommerce/pull/36600 ) so this is not blocked anymore. \n\n**Acceptance Criteria**\n\n- [ ] Name, category, feature, summary, description field components should be available through `woocommerce/components` or a similar package.\n- [ ] Each field should have the standard `value` & `onChange` props available for easy re-use.\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"**Description:**\n**Dependent on: [#36446](https://github.com/woocommerce/woocommerce/issues/36446)**\nPart of the https://github.com/woocommerce/woocommerce/issues/35952 epic.\n\nCreate a new React component `WooProductFormTabItem` that wraps a SlotFill. We can follow a similar format as the wrappers created as part of: #36015 & #36014\nThis issue depends on the outcome of #36446\n\nThe slot component should have a unique `id` for potential filtering, a `location`/`template` for when it should be displayed. Also an `order` prop to assign a specific order, and lastly a plugin id to identify where the tab came from. `order` can be optional.\nFeel free to add support for other props if you think that be useful. We can always expand on this in the future.\n\n**Acceptance criteria**\n- [ ] `Fill` wrapper component should allow consumer to provide location or a template.\n- [ ]  The id, location, and plugin id should be required for the Fill component.\n- [ ] `Slot` wrapper should sort fill items depending on `sort` property.\n- [ ] Component should be available through `@woocommerce/components` or another public package.\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"Whilst going through the test documentation I noticed that some of the variable names don't appear to have been filled in correctly.\r\nA couple of examples are:\r\n[cot_status](https://github.com/woocommerce/woocommerce/tree/trunk/plugins/woocommerce/tests/performance#test-environment:~:text=using%20order%20tables-,yes%20__ENV.C_PW,-admin_orders_base_url) should be __ENV.COT? and\r\n[admin_acc_login](https://github.com/woocommerce/woocommerce/tree/trunk/plugins/woocommerce/tests/performance#test-environment:~:text=yes-,__ENV.A_PW,-customer_username) should be __ENV.A_ACC_LOGIN?\r\n\r\nThis task is to check all variables listed and update accordingly\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [3845016070]"}
{"prompt":"This issue scopes adding another variation of unit test workflow to run it with HPOS enabled by default.\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"This issue scopes migrating queries defined in class `ReserveStock` to support HPOS data tables, specifically in function `get_query_for_reserved_stock` and `reserve_stock_for_product`.\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"Run e2e, API, and performance tests on PR merge to trunk. \n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [3845016070]"}
{"prompt":"Modify the entry points to the new experience.\r\n\r\n**Remove sidebar link**\r\nRemove the link `Products` > `Add New (MVP)` [here](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/src/Admin/Features/Navigation/CoreMenu.php#L220) and [here](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/includes/admin/class-wc-admin-menus.php#L428).\r\n\r\n**Modify links**\r\nThe following links should point to the new experience:\r\n- `Products` > `Add New`.\r\n- The `Add New` button under `Products` > `All Products`.\r\n- Product edition, after clicking on a product under `Products` > `All Products`. This only will be changed for simple products.\r\n- The edit button after hovering a product under `Products` > `All Products`. This only will be changed for simple products.\r\n\r\nThis [PR has](https://github.com/woocommerce/woocommerce/pull/34115) part of the logic we will need for the first 2 points.\r\n\r\n**Acceptance criteria:**\r\n- [ ] `Products` > `Add New` should point to the new experience.\r\n- [ ] The `Add New` button under `Products` > `All Products` should point to the new experience.\r\n- [ ] Product edition. Send the user to the new experience of the product edition after clicking on a simple product (under `Products` > `All Products`).\r\n- [ ] Product edition. Send the user to the new experience of the product edition after clicking on a simple product edit button (it's visible after hovering over a product under `Products` > `All Products`).\n\n###\n\n","completion":" [4370024739,4370026978]"}
{"prompt":"\nIn order to enable others to extend the product editor, we'll need to make several components available in packages:\n- Slot fills\n- Utilities for slot fills\n- `<ProductSectionLayout />`\n- Others needed for building fields and sections.\n\nContext: pcQJnU-X5-p2#comment-1166\n\n**Acceptance criteria:**\n- [ ] A package has been created (ie `@woocommerce/product-editor`).\n- [ ] The above listed components have been relocated to that package.\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"In order to decrease the load on Action Scheduler and improve overall site performance, instead of scheduling actions when a customer is updated (via checkout or other means), we should directly update the Analytics customer data store. The updates to the Analytics data store are not performance intensive and the expected overall performance gains outweigh the slight increase in synchronous processing when customer updates are made.\n\n### Acceptance criteria\n\n- [ ] When a new customer is created (actions: `woocommerce_new_customer`), `CustomersDataStore::update_registered_customer` should be called\n- [ ] When a customer is updated (actions: `woocommerce_update_customer`, `updated_user_meta`), `CustomersDataStore::update_registered_customer` should be called\n- [ ] When a customer is deleted (actions `delete_user`, `remove_user_from_blog`), `CustomersDataStore::delete_customer_by_user_id()` should be called\n- [ ] When personal data is removed from an order (action: `woocommerce_privacy_remove_order_personal_data`), `CustomersScheduler::anonymize()` should be called (see implementation detail below about moving this code)\n\n### Implementation details (as long as AC is met, other approaches may also be valid... take these as suggestions)\n\n- Actions listed above are currently hooked up in `CustomersScheduler` ([source](https://github.com/woocommerce/woocommerce/blob/4c236bdc37a8a8be81efe988f48a240041a86379/plugins/woocommerce/src/Internal/Admin/Schedulers/CustomersScheduler.php#L30))\n- Should probably move where actions are hooked up to in `CustomersDataStore::init()` ([source](https://github.com/woocommerce/woocommerce/blob/1ab678c13fed5df393805f0000a8fd0db991772a/plugins/woocommerce/src/Admin/API/Reports/Customers/DataStore.php#L86))\n- Should probably move `CustomersScheduler::anonymize()` implementation to `CustomersDataStore::anonymize()` (not sure why this wasn't done initially)\n\n### References \n\n- Original suggestion by @joshuatf: p7bje6-4BB-p2#comment-7613\n\n###\n\n","completion":" [3943425133,472334370]"}
{"prompt":"Add a description field to the feedback modal that we show after pressing `Share feedback` in the bottom bar.\r\n\r\n<img width=\"929\" alt=\"Captura de ecraÃÉ 2022-10-17, aÃÄs 16 29 58\" src=\"https://user-images.githubusercontent.com/3380168/196220119-4850d6a3-a0aa-4360-abb8-e6a88ce1142f.png\">\r\n\r\n**Description textarea**\r\n`Title`: How is this screen useful to you? What features would you add or change?\r\n`Placeholder`: Optional, but much appreciated. We love reading your feedback!\r\n`Design`: lj4AUMJnpMtUe7XqyvOONq-fi-501%3A6361&t=7PveV6YsBsObVtis-1\r\n\r\nAcceptance criteria:\r\n- [ ] Add a description textarea to the feedback modal that we show after pressing `Share feedback` in the bottom bar.\n\n###\n\n","completion":" [3943104021,4370024739,4370026978]"}
{"prompt":"When the new user enters the new experience for the first time, we should show them an intro modal.\r\n\r\n**Modal**\r\n`Title`: Meet the product editing form\r\n`Body`: Let us show you how to navigate the form and create this product from start to finish in no time.\r\n`Primary button`: Show me around (10 s)\r\n`Secondary button`: I‚Äôll explore on my own\r\n\r\n`Desing`: lj4AUMJnpMtUe7XqyvOONq-fi-501%3A7172&t=7PveV6YsBsObVtis-1\r\n\r\n\r\nIf the user selects \"Show me around (10 s)\", we enable the spotlight tour with the five steps shown below.\r\nDesigns: lj4AUMJnpMtUe7XqyvOONq-fi-501%3A7372&t=npEAXmnjXwQbZ97A-0\r\n\r\n- Step 1\r\n`Design`: lj4AUMJnpMtUe7XqyvOONq-fi-501%3A7372&t=7PveV6YsBsObVtis-1\r\n`Tooltip title`: üì£  Tell a story about your product\r\n`Tooltip body`: The product form will help you describe your product field by field‚Äîfrom basic details like name and description to attributes the customers can use to find it on your store.\r\n\r\n- Step 2\r\n`Design`: lj4AUMJnpMtUe7XqyvOONq-fi-501%3A7248&t=7PveV6YsBsObVtis-1\r\n`Tooltip title`: ‚úçÔ∏è  Set up pricing & more\r\n`Tooltip body`: When done, use the tabs to switch between other details and settings. In the future, you‚Äôll also find here extensions and plugins.\r\n\r\n- Step 3\r\n`Design`: lj4AUMJnpMtUe7XqyvOONq-fi-501%3A7474&t=7PveV6YsBsObVtis-1\r\n`Tooltip title`: üîç  Preview and publish\r\n`Tooltip body`: With all the details in place, use the buttons at the top to easily preview and publish your product. Click the arrow button for more options.\r\n\r\n- Step 4\r\n`Design`: lj4AUMJnpMtUe7XqyvOONq-fi-501%3A7614&t=7PveV6YsBsObVtis-1\r\n`Tooltip title`: ‚öôÔ∏è  Looking for more?\r\n`Tooltip body`: If the form doesn‚Äôt yet have all the features you need‚Äîit‚Äôs still in development‚Äîyou can switch to the classic editor anytime.\r\n\r\n- Step 5\r\n`Design`: lj4AUMJnpMtUe7XqyvOONq-fi-501%3A7716&t=7PveV6YsBsObVtis-1\r\n`Tooltip title`: üõü  We‚Äôre here to help\r\n`Tooltip body`: Check out the help panel for useful tips and links to step-by-step guides‚Äîor reach out to us with any questions.\r\n\r\n\r\n**Bottom bar**\r\nWe will display [a bar at the bottom](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce-admin/client/customer-effort-score-tracks/product-mvp-ces-footer.tsx) that will allow the user to share feedback or disable the new experience. The bar will be shown if one of the following conditions is met:\r\n- Closes the `Meet the product editing form` modal.\r\n- Selects the \"I‚Äôll explore on my own\" option in the modal\r\n- After the user completes the spotlight tour.\r\n- After the user closes the spotlight tour without finishing it.\r\n\r\nThe bar should be displayed permanently unless it's closed by the user.\r\n\r\n<img width=\"929\" alt=\"Captura de ecraÃÉ 2022-10-17, aÃÄs 16 29 58\" src=\"https://user-images.githubusercontent.com/3380168/196220119-4850d6a3-a0aa-4360-abb8-e6a88ce1142f.png\">\r\n\r\n**Acceptance criteria:**\r\n- [ ] Show an intro modal when the new user enters the new experience for the first time.\r\n- [ ] The modal is composed of the image, title, body, and buttons described above and in the design lj4AUMJnpMtUe7XqyvOONq-fi-501%3A7172&t=7PveV6YsBsObVtis-1\r\n- [ ] If the user presses \"Show me around (10 s)\", we will enable the spotlight tour with the five steps described above.\r\n- [ ] We will show the bottom bar if the user:\r\n   - [ ] Closes the `Meet the product editing form` modal.\r\n   - [ ] Selects the \"I‚Äôll explore on my own\" option in the modal.\r\n   - [ ] Completes the spotlight tour.\r\n   - [ ] Closes the spotlight tour without finishing it.\n\n###\n\n","completion":" [4370024739,4370026978]"}
{"prompt":"Enable the new experience when a new user selects the \"Physical product\" option in the \"Add products\" task.\r\n\r\n**Acceptance criteria- [ ] Enable the new experience after selecting \"Physical product\" in the \"Add products\" task.\r\n- [ ] The rest of the users should get the current experience.\r\n- [ ] Redirect the user to the new experience instead of the old one.\r\n- [ ] Add Tracks events.\r\n\n\n###\n\n","completion":" [4370024739,4370026978]"}
{"prompt":"**Depends on #36589**\n\nI noticed that we'd implemented the input field's behavior in the Edit link modal differently from what I intended, but it's actually better. We can improve it further by tweaking the copy.\n\n**Design**\n\n`5sAIeTRd9Yp7nSCT33BAWz-fi-10611%3A207538&t=reVe66hOXCq7FT7t-4`\n\n<img width=\"608\" alt=\"image\" src=\"https://user-images.githubusercontent.com/79307566/211018207-c6b73c5c-42da-4d67-bcef-e31a934b0b8c.png\">\n\nWhat's changed:\n\n- Removed the field's label.\n- Moved the link preview from the label to the field's helper text.\n- Added static text with additional guidance. It is displayed about the field.\n\n**Acceptance criteria**\n\n- [ ] There's a new bit with the additional explanation that appears above the link input field.\n- [ ] The link in the field's helper text updates in real-time as the user types.\n\n###\n\n","completion":" [4370024739,4370026978]"}
{"prompt":"When working on https://github.com/woocommerce/woocommerce/pull/36308 I observed that a REST API query like the following (where we order by date, descending) may not work as expected when HPOS is authoritative:\r\n\r\n```\r\n# Implict\r\n/wp-json/wc/v3/orders\r\n\r\n# Explicit\r\n/wp-json/wc/v3/orders?orderby=date&order=desc\r\n```\r\n\r\nThis is because:\r\n\r\n- HPOS order queries do not support passing multiple order-by values in a single string (example: `date ID`).\r\n- The above is something we rely on, from within [WC_REST_CRUD_Controller](https://github.com/woocommerce/woocommerce/blob/7.2.2/plugins/woocommerce/includes/rest-api/Controllers/Version3/class-wc-rest-crud-controller.php).\r\n- The reason it works with the CPT order store is that it is built on top of `WP_Query`, which *does* support this convention.\r\n\r\nInternal discussion p1672952839476529-slack-C0E1AV8T0.\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"Before today, using the product filters feature on my website would work flawlessly. But I woke up this morning to an Adsense error saying they are unable to show ads on pages that worked before.\r\n\r\nWhen looking into the issue, I noticed when I use the product filters feature on my home page of the woocommerce shop, I‚Äôm always redirected to the ‚ÄúHello World‚Äù default post that come with WordPress.\r\n\r\nHowever, if I use the product attribute filter feature while viewing a woocommerce category, then the filters work as they should\r\n\r\nIt‚Äôs only when trying to use the attribute filter on the index page of the woocommerce shop, that I‚Äôm seeing this redirect issue cropping up now.\r\n\r\nI‚Äôve tried switching my theme back to to the default storefront and the issue still persists.\n\n### Expected behavior\n\nwhen selecting one of the many woocommerce product filter attributes, I normally see a filtered list of products based on the attribute that was selected\n\n### Actual behavior\n\ninstead, if I try to use a product attribute filter on the home page of the woocommerce shop, then I am getting redirected to the hello world post\n\n### Steps to reproduce\n\n1. Visit home page of the website\r\n2. Select a product filter\r\n3. watch as the website redirects you to the hello world post instead of filtering the products\n\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"We're working to make the attributes components reusable, specifically for the options work.  The attributes components have become a little complex and prone to bugs.\n\nThis was partially refactored in https://github.com/woocommerce/woocommerce/pull/35997 into smaller components.\n\nThis issue will involve continuing to break down these components and remove data fetching and manipulation outside of this component.\n\n### Acceptance Criteria\n\n* [ ] Callbacks for various events should be available as props to the consumer.  `onAdd`, `onEdit`, etc.\n* [ ] Data fetching should occur outside of this component so consumers can decide what attributes to pass in\n* [ ] Components should be more easily tested without the need to mock data stores or other fetching utils\n\n###\n\n","completion":" [1891051456,3943104021,4370024739]"}
{"prompt":"**Describe the bug:**\r\nWhen the user is editing a variation and clicks to return to the main product, he's redirected to the respective tab in the parent product. I think it makes more sense to redirect the user to the Options tab, where he has access to all variations. \r\n\r\n**Steps to reproduce:**\r\n1. Create a new product using the new experience in the test store: pcQJnU-Lr-p2\r\n2. Create at least one variation and edit the variation\r\n3. Visit one of the tabs (Pricing, General, etc) and click \"return to the main product\"\r\n4. Confirm that you're redirected to the respective tab in the parent product\r\n\n\n###\n\n","completion":" [1891051456,4370024739]"}
{"prompt":"**Describe the bug:**\r\nWhen the user clicks to edit an individual variation it should be redirected to its general tab. We're redirecting the user to a non-existent tab. \r\n\r\n**Steps to reproduce:**\r\n1. Create a new product using the new experience in the test store: pcQJnU-Lr-p2\r\n2. Create a variation and click to edit the individual variation\r\n3. Confirm that the following screen is an empty tab\r\n\n\n###\n\n","completion":" [1891051456,4370024739]"}
{"prompt":"**Describe the bug:**\r\nThe variations are created in the admin but it looks like the product is saved as simple product.\r\n\r\n**Steps to reproduce:**\r\n1. Create a new product using the new experience in the test store: pcQJnU-Lr-p2\r\n2. Fill in the product title and add at least 1 variation\r\n3. Add the price to each variation\r\n4. Publish the product\r\n5. Check the product page and confirm that it doesn't include the variations\r\n6. Open the product using the current experience and confirm that it was saved as simple product\n\n###\n\n","completion":" [1891051456,4370024739]"}
{"prompt":"**Describe the bug:**\r\nI noticed that it was not possible to publish a simple product while I was testing the new variations flow:\r\n\r\n\r\nhttps://user-images.githubusercontent.com/3380168/210580040-d206cad6-c4b0-407c-9723-49464d5c1717.mp4\r\n\r\n**Steps to reproduce:**\r\n1. Create a new product using the new experience in the test store: pcQJnU-Lr-p2\r\n2. Fill all the fields, except the fields available in the options tab\r\n3. Try to publish the product\r\n4. See the error\n\n###\n\n","completion":" [1891051456,4370024739]"}
{"prompt":"This is a follow-up to https://github.com/woocommerce/woocommerce/issues/36248.\r\n\r\nThe objective of this task is to add a remote API endpoint for displaying shipping partners in the marketing task. This is to be hosted on WooCommerce.com, similar to `obw-free-extensions`. The data hosted are as follows:\r\n\r\n1. Shipping partner logo\r\n1. Plugin name\r\n1. Plugin slug\r\n1. Countries supported\r\n1. Learn more link\r\n1. Other copies depending on the confirmed design\r\n\r\nWe'd also need the image to be hosted on WooCommerce.com\r\n\r\n## Acceptance Criteria\r\n\r\n1. Add the ability for a remote endpoint to enable or disable the featured partners (p73Jol-1C5-p2#comment-6419)\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"we plan to start testing the simple physical product MVP with users very soon. We should add a feature flag to hide all the variations that's currently in development, as it's still not ready for external testing. \r\n\r\n\r\n**Acceptance criteria:**\r\n- [ ] Introduce a feature flag to hide the variations management flow in progress whenever we need it: options tab and all the features/fields in this tab. \r\n\n\n###\n\n","completion":" [1891051456,4370024739]"}
{"prompt":"I‚Äôve found an issue on the recent versions of Woocommerce which displays the quantity input even though I checked the Sold Individually checkbox on the Inventory tab: https://snipboard.io/i1tDQS.jpg\n\n### Expected behavior\n\nQuantity field should be hidden if Sold Individually option is enabled\n\n### Actual behavior\n\nThe quantity field is showing which is confusing as customers do not understand why they can‚Äôt hit + and change it to 2 or 3???\n\n### Steps to reproduce\n\n1.) Woocommerce edit product\r\n2.) enable \"Sold Individually\" checkbox.\r\n\n\n\n\n###\n\n","completion":" [1891051436]"}
{"prompt":"In order edit page with HPOS enabled, on successfully updating an order, no message is displayed.\r\n\r\nIn the posts page, this used to be displayed:\r\n\r\n<img width=\"1310\" alt=\"Screenshot 2023-01-03 at 6 16 23 PM\" src=\"https://user-images.githubusercontent.com/7571618/210360190-39267e6e-98c5-4717-9df5-b618749e28da.png\">\r\n\r\nThis issue scopes adding similar message box for HPOS screen as well (including the filter `post_updated_messages`).\n\n###\n\n","completion":" [1891051458,3834300886]"}
{"prompt":"undefinedRecently, the `can save industry changes when navigating back to \"Store Details\"` became flaky both in the nightly smoke test site and wp-env localhost. Notice from the Allure report below (generated on Dec. 30) that this test last passed on Dec 29th but started failing since Dec. 30.\r\n<img width=\"1243\" alt=\"Screen Shot 2023-01-02 at 7 14 06 PM\" src=\"https://user-images.githubusercontent.com/4509348/210271691-e53febc3-64d8-4d29-934e-945b77eb790a.png\">\r\n\n\n###\n\n","completion":" [3845073088]"}
{"prompt":"In the `Attributes` section, reordering the first list item also moves the cover image.\r\n\r\n![Screen Capture on 2023-01-02 at 11-31-33](https://user-images.githubusercontent.com/1314156/210245334-2ba8abc8-af5e-420f-bad0-2d8dee81792c.gif)\r\n\r\n### Steps to reproduce\r\n\r\n1. Add a couple of attributes and a cover image to a product.\r\n2. Reorder the attributes, grab the first item and move it.\r\n3. The cover image will move with the draggable item.\r\n\n\n###\n\n","completion":" [1891051456,3943104021,4370024739]"}
{"prompt":"There is a problem when reordering items in attributes/options lists. Reordering items in one list removes every item in the other list.\r\n\r\n![Screen Capture on 2023-01-04 at 16-10-34](https://user-images.githubusercontent.com/1314156/210631235-5b5cefb2-b0c3-402b-a1a9-40ad74e7b06c.gif)\r\n\r\n### Expected behavior\r\n\r\nReordering items in one list shouldn't affect the other list.\r\n\r\n### Steps to reproduce\r\n\r\n1. Add some attributes and options to a product.\r\n2. Reorder the attributes.\r\n3. Go to the `Options` section and verify that the list is empty now.\r\n\n\n###\n\n","completion":" [1891051456,3943104021,4370024739]"}
{"prompt":"P2: p73Jol-1C5-p2#comment-6601\nFigma: cJQeyyhx9PraQrY3YAtCGM-fi-4001%3A345877\n\nIncorporate new shipping partners into the shipping task. The partners will be displayed dynamically based on the store's country, and the design will be modified depending on whether one or two partners are featured.\n\nExample 2-partners: France & Germany, Sendcloud & Packlink\n\n![Image](https://user-images.githubusercontent.com/3747241/215959009-56d6f507-24f0-48ce-b6c7-e6b671ee401a.png)\n\nExample 1-partner (existing ShipStation): Packlink\n\n![Image](https://user-images.githubusercontent.com/3747241/215959076-bcfdc11b-e9e7-42e0-9d19-c1c92d4c7993.png)\n\n\n## Acceptance Criteria\n\n1. Dynamically feature partners for countries based on the provided list (p73Jol-1C5-p2#comment-6601)\n1. When featuring a single partner, add their logo to the existing shipping task cJQeyyhx9PraQrY3YAtCGM-fi-4001%3A345877\n1. When featuring two partners, use a new design cJQeyyhx9PraQrY3YAtCGM-fi-4001%3A345877\n1. Currently Envia and Skydropx plugins are not available on wp.org. Replace the CTAs with opening up URLs instead and copy is `Download`\n\n## Other details\n\nFollowing are the countries with 2 partners displayed. Left-right ordering is important (p73Jol-1C5-p2#comment-6695):\n\n- France & Germany: Sendcloud & Packlink\n- Spain & Italy: Packlink & Sendcloud\n- UK: Sendcloud & Shipstation\n\nPlugin URLs:\n\n1. Sendcloud: https://wordpress.org/plugins/sendcloud-shipping/\n3. Packlink: https://wordpress.org/plugins/packlink-pro-shipping/\n4. Envia: **Opens in new URL** https://woocommerce.com/products/envia-shipping-and-fulfillment/\n5. Skydropx: https://wordpress.org/plugins/skydropx-cotizador-y-envios/\n\n###\n\n","completion":" [3943104021,3943424841]"}
{"prompt":"When navigating to a product variation, the `tab` is initially set to `options` so nothing is shown since this tab does not exist under variations.\n\n### Screenshot\n\n\n\n![Image](https://user-images.githubusercontent.com/10561050/210014703-7dada45b-c951-412d-843f-8f2defc8de0f.png)\n\n\n\n### Testing\n\n1. Create a product with a variation\n2. Navigate to the new product experience `admin.php?page=wc-admin&path=/{product_id}`\n3. Navigate to the variation by using the `edit` button under the variations section in the \"Options\" tab\n4. Note that a blank screen is shown\n\n###\n\n","completion":" [1891051456,3943104021,4370024739]"}
{"prompt":"Based on https://github.com/woocommerce/woocommerce/pull/35873#pullrequestreview-1226829517:\r\n\r\nRun the API tests first, and then run e2e tests as well as the matrix of tests. If an API test fails, it will fail faster, and will probably be indicative that something else is wrong so we could skip running the e2e tests then.\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [3845073088]"}
{"prompt":"Post data store currently support sorting by passing a list of ids in the `post__in` param using the `includes` param as order by field. This issue scopes supporting it for HPOS as well.\n\n###\n\n","completion":" [2258932484,3834300886]"}
{"prompt":"When searching and having HPOS enabled, REST API will only return the first 10 results.\n\n###\n\n","completion":" [2258932484,3834300886]"}
{"prompt":"The new product header has a couple of styling conflicts:\n1. The \"more\" dropdown menu needs a higher z-index to be shown above the navigation\n2. The reminder bar upsets product (variation) actions\n\n### Screenshots\n\n\n\n![Image](https://user-images.githubusercontent.com/10561050/209744900-584b5574-e295-46c7-bccd-6a38483857b6.png)\n\n\n\n![Image](https://user-images.githubusercontent.com/10561050/209744908-4a43be44-78ab-4b90-858c-785c4f65c3f9.png)\n\n\n\n### Acceptance Criteria\n\n* [ ] The reminder bar should not conflict with header actions or change their position\n* [ ] The \"more\" menu should appear above the navigation when opened\n\n###\n\n","completion":" [1891051456,3943104021,4370024739]"}
{"prompt":"When updating the product variation description in the new experience, the legacy editor does not interpret the GB tags as expected.\n\nSimilarly, updating the description in the legacy editor does not properly set the description on mount in the new experience.\n\nIt's likely that the variation description is being sanitized by `wp_kses` on the backend, removing the necessary tags.  I also suspect that using the `edit` context may be a part of this issue.\n\n\n### Screenshot\n\n\n\n![Image](https://user-images.githubusercontent.com/10561050/209743691-af4484b3-5620-4c55-b287-eb2419ae1849.png)\n\n\n\n### Acceptance Criteria\n\n* [ ] Editing a product variation in the new experience should persist\n* [ ] Editing a product variation in the new experience should show correctly in the legacy experience\n* [ ] Editing a product variation in the legacy experience should show correctly in the new experience\n\n###\n\n","completion":" [1891051456,3943104021,4370024739]"}
{"prompt":"When navigating between product tabs, the unsaved work warning is triggered.  Since the tabs are not a true navigation away from the page, they should be navigable without this prompt.\n\n### Screenshot\n\n![Image](https://user-images.githubusercontent.com/10561050/209742633-b3afd067-3f8c-48b8-9d8a-eaf96861b543.png)\n\n\n### Acceptance criteria\n\n* [ ] Navigating between tabs should not trigger the warning\n* [ ] Navigating to other pages away from the form should still trigger the warning\n\n###\n\n","completion":" [1891051456,3943104021,4370024739]"}
{"prompt":"Creating some options and variations appears to convert a product to a variable product automatically on the back-end.  However, deleting all options/variations does not convert this back to a simple product.\n\n### Screenshot\n\n![Image](https://user-images.githubusercontent.com/10561050/209742091-ea9a1e77-092c-4b6e-8fdc-63b3ea5166be.png)\n\n### Acceptance Criteria\n\n* [ ] Deleting all options should convert the product back to a simple product\n* [ ] Product data should be correctly shown (since a `variable` product type currently does not have some data including price)\n\n\n###\n\n","completion":" [1891051456,4370024739]"}
{"prompt":"When posts are active, orders are sorted in DESC order for ID by default. While not necessarily exactly a breaking change, this is unexpected and both API should behave consistently.\n\n###\n\n","completion":" [2258932484,3834300886]"}
{"prompt":"When reordering items in either the options or attributes list, the attribute copies its data to other attributes making all items look identical.\n\n\n![Image](https://user-images.githubusercontent.com/10561050/209590055-1e7acda5-c098-4c4c-80ae-718428849261.png)\n\n\n### Testing\n\n1. Add some attributes or options to a product\n2. Reorder the attributes\n3. See the duplicate data\n\n### Acceptance criteria\n\n* [ ] Reordering attributes should work as expected\n* [ ] Editing attributes should not cause issues either or corrupt data\n\n###\n\n","completion":" [1891051456,3943104021,4370024739]"}
{"prompt":"When dispatching an action from one component, it's difficult to check in another component if a dispatched action has completed.\n\nFor example:\n\n```\nconst ComponentA = () => {\n  const { updateProduct } = useDispatch( STORE_NAME );\n  ...\n  updateProduct( args );\n  ...\n}\nconst ComponentB = () => {\n  if ( isResolvingAction( 'updateProduct', [ args ] ) ) {\n    return <Spinner />\n  }\n}\n```\n\nSome prior art exists in the older data stores to draw inspiration from.\n\n**Acceptance criteria**\n* [ ] Checking if an action has resolved should return a boolean reflecting the current status\n* [ ] The data structure should be flexible to allow adding and checking more (custom) action names\n\n###\n\n","completion":" [1891051456,4370024739]"}
{"prompt":"This is part of #35953 epic.\r\nWe want to give plugin developers the ability to extend the new product management screen by use of PHP.\r\n\r\n**NOTE: We will support templates in the future, so be aware of how this may impact the work.**\r\n\r\nThis issue depends on #36019 being finished.\r\nWe should add a new API endpoint for the form data. Currently we only want to expose fields, but remember that sections and tabs will also be added to this (and potentially other locations as well).\r\nThis entire config may require a `template` param. \r\nWe may want to provide a separate endpoint for each individually and one that contains all of them?\r\n\r\nWe may also want to expose an `action` here, so that plugins only add the necessary field data when the `action` is triggered instead of on every `init` action.\r\nBut this is slightly up for debate, as there could be some use case we need this data outside of the API context (similar to our TaskList API ).\r\n\r\n**Acceptance criteria**\r\n- [ ] There should be an API endpoint available to retrieve the field data added through the function added as part of #36019 \n\n###\n\n","completion":" [4370024739,4370026978]"}
{"prompt":"This is part of #35953 epic.\r\nWe want to give plugin developers the ability to extend the new product management screen by use of PHP.\r\nThis issue will be the very first for laying the ground work and adding this support for fields specifically.\r\n\r\n**NOTE: We will support templates in the future, so be aware of how this may impact the work.**\r\n\r\nWe should expose a public PHP function that can be triggered within a `init` action, something like `wc_add_product_form_field` (or tag `admin` in there to make it more admin specific. But similar to either the [`add_settings_field`](https://developer.wordpress.org/reference/functions/add_settings_field/) or [`add_meta_box`](https://developer.wordpress.org/reference/functions/add_meta_box/) functions. We may want to base the implementation of these two examples.\r\n\r\n**Acceptance criteria**\r\n- [ ] `add_product_form_field` should have an `id` and ask for a plugin `id` (will be used later)\r\n- [ ] `add_product_form_field` should provide a location prop for where it should be displayed (should match the location prop within a SlotFill see: https://github.com/woocommerce/woocommerce/issues/36014 )\r\n- [ ] `add_product_form_field` should provide `args` for the input field, we may want to expose `type`, `name`, `label` for now (and others if you think they are important) we can always expand on this.\r\n- [ ] Field data should be accessible within data (maybe a global constant? that is what `add_settings_field` uses)\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"\r\nThis issue is dependant on #36015  \r\nAdd the `WooProductFormSectionItem` slot component to the top of the sections where the ProductDetails section is currently rendered.\r\nRemove the `ProductDetails` section component and have it render by wrapping it in a `WooProductFormSectionItem` Fill component.\r\n\r\nYou may have to create a separate component that adds the `Fill` wrapper for the product details section.\r\nSimilar to #36016, we may want to add an order to the section with a gap of 1. and make sure the `WooFormProductSectionItem` sort default is 10 or 20.\r\n\r\n**Acceptance criteria:**\r\n- [ ] `ProductDetails` section should be added through Slotfills\r\n- [ ] `ProductDetails` section should look and act the exact same.\r\n\r\n**Event tracking:**\r\nTBD\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"\nThis issue is dependent on #36014 \nRemove the fields from the `ProductDetails` section component and replace it with a single `WooFormFieldItem` slot item.\n\nCreate a separate component that adds a `Fill` wrapper for each individual field with the product details section.\nWe may want to add an order to each field already with a gap of 1. and make sure the `WooFormProductFieldItem` sort default is 10 or 20.\n\n**Acceptance criteria:**\n- [ ] Fields in `ProductDetails` section should be added through Slotfills\n- [ ] `ProductDetails` section should look and act the exact same.\n\n**Event tracking:**\nTBD\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"**Description:**\r\nPart of the https://github.com/woocommerce/woocommerce/issues/35952 epic.\r\n\r\nCreate a new React component `WooProductFormSectionItem` that wraps a SlotFill. We can follow a similar format as this extensibility example: https://github.com/woocommerce/woocommerce/blob/research/extensibility/packages/js/components/src/woo-product-section-item/woo-product-section-item.tsx\r\n\r\nThe slot component should have a unique `id` for potential filtering, a `location` for which `tab` or `page` it should be added to, and an `order` to assign a specific order, and lastly a plugin id to identify where the section came from. `order` can be optional.\r\nFeel free to add support for other props if you think that be useful. We can always expand on this in the future.\r\n\r\n**Acceptance criteria**\r\n- [ ] `Fill` wrapper component should allow consumer to provide location.\r\n- [ ]  The id, location, and plugin id should be required for the Fill component.\r\n- [ ] `Slot` wrapper should sort fill items depending on `sort` property.\r\n- [ ] Component should be available through `@woocommerce/components` or another public package.\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"**Description:**\r\nPart of the https://github.com/woocommerce/woocommerce/issues/35952 epic.\r\n\r\nCreate a new React component `WooProductFormFieldItem` that wraps a SlotFill. We can follow a similar format as this extensibility example: https://github.com/woocommerce/woocommerce/blob/research/extensibility/packages/js/components/src/woo-product-field-item/woo-product-field-item.tsx\r\n\r\nThe slot component should have a unique `id` for potential filtering, a `location` for which `section` it should be added to, and a `order` to assign a specific order, and lastly a `plugin_id` that we may use later to identify fields added by specific plugins. `order` can be optional.\r\nFeel free to add support for other props if you think that be useful. We can always expand on this in the future.\r\n\r\nThere may be some benefit of exposing the `formContext` within the `Fill`, but I think we should skip that to keep this simple. We can always provide a higher order functional component that exposes the formContext (for ease of use).\r\n\r\n**Acceptance criteria**\r\n- [ ] `Fill` wrapper component should allow consumer to provide location.\r\n- [ ] The id, location, and plugin id should be required for the `Fill` component.\r\n- [ ] `Slot` wrapper should sort fill items depending on `sort` property.\r\n- [ ] Component should be available through `@woocommerce/components` or another public package.\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"Currently in `trunk` when you do these steps manually:\r\n\r\n1. Go to Add Product page\r\n2. Select Variable as the product type\r\n3. Click \"Attributes\" tab\r\n4. Add 1 or more attributes and check their \"Used for variations\" boxes\r\n5. Click \"Variations\" tab\r\n6. Variations were immediately and automatically being populated right after going to the Variations tab. This is not the case in 7.2.\r\n\r\nThe test will then attempt to interact with the wrong dropdown boxes because there were already so many automatically created variations\r\n\r\n\n\n###\n\n","completion":" [3845073088]"}
{"prompt":"The tooltips and dropdown menus in the product header render under the navigation tabs.\n\n### Expected behavior\n\nThe tooltips and dropdown menus in the product header should render on top of the navigation tabs.\n\n### Actual behavior\n\nThe tooltips and dropdown menus in the product header render under the navigation tabs.\r\n\r\n<img width=\"1135\" alt=\"Screenshot 2022-12-14 at 21 38 22\" src=\"https://user-images.githubusercontent.com/2098816/207760780-970e8c31-c398-4f62-8167-82ddb975c57d.png\">\r\n<img width=\"1135\" alt=\"Screenshot 2022-12-14 at 21 38 13\" src=\"https://user-images.githubusercontent.com/2098816/207760781-4769f5e3-20a5-4ca9-adaa-fe36ba3f304e.png\">\r\n<img width=\"1135\" alt=\"Screenshot 2022-12-14 at 21 36 27\" src=\"https://user-images.githubusercontent.com/2098816/207760783-ad4b4505-0d87-4b56-aeb4-06dfe1cc015b.png\">\r\n<img width=\"1135\" alt=\"Screenshot 2022-12-14 at 21 36 33\" src=\"https://user-images.githubusercontent.com/2098816/207760782-b28c1144-72aa-4fdc-8f1f-1323221e5c13.png\">\r\n\n\n### Steps to reproduce\n\n1. Edit a product in the new product experience (/wp-admin/admin.php?page=wc-admin&path=/product/PRODUCT_ID_GOES_HERE)\r\n2. Hover and click on split button next to Update, or the ellipsis (...)\r\n3. See that tooltips and dropdown menus render under the navigation tabs\n\n\n\n###\n\n","completion":" [1891051461,4370024739,4370026978]"}
{"prompt":"If the product variation form is in a dirty state with unsaved changes, the user should be prompted before leaving the page.\n\nMost of this should already be taken care of by `usePreventLeavingPage` which is utilized in the product form, but may or may not need minor tweaking to work with the variation.\n\nBlocked by https://github.com/woocommerce/woocommerce/issues/35987 or https://github.com/woocommerce/woocommerce/issues/35988\n\n### Design\n\nFigma: BaoQ3PGPnhAiJCsJtxgej3-fi-102%3A10092&t=Jsh233onKmJpJYtN-0\n\n\n![Image](https://user-images.githubusercontent.com/10561050/207737091-56986b61-ae5b-43c5-968a-894c8b9b3519.png)\n\n### Acceptance Criteria\n\n* [ ] A confirmation modal should be shown to users who attempt to navigate away from a variation with unsaved changes\n* [ ] Using the variation navigation component to switch between variations should trigger the same modal\n\n###\n\n","completion":" [1891051456,4370024739]"}
{"prompt":"Fixed to the bottom of product variation screens, the variation navigation component will allow navigation between variants or returning to the main product.\n\nBlocked by https://github.com/woocommerce/woocommerce/issues/35786\n\n### Design\n\nFigma: BaoQ3PGPnhAiJCsJtxgej3-fi-102%3A10092&t=Jsh233onKmJpJYtN-0\n\n![Image](https://user-images.githubusercontent.com/10561050/207735973-f27da8c0-b2ac-4b61-8629-f05b7754de7d.png)\n\n### Acceptance Criteria\n\n* [x] The navigation should be fixed to the bottom of the screen at all times but should not block other elements (verify on smaller viewports)\n* [x] Clicking the left or right arrows should navigate to the previous or next variation\n* [x] When no more variations exist before or after the current, the arrow should be disabled\n* [x] Clicking \"Return to main product\" should return to the main product\n\n###\n\n","completion":" [1891051456,4370024739]"}
{"prompt":"When entering the new product variation edit screen, we should add the variant options to the header to make it clear which variation we're currently editing.\r\n\r\nBlocked by https://github.com/woocommerce/woocommerce/issues/35786\r\n\r\n### Design\r\n\r\nFigma: BaoQ3PGPnhAiJCsJtxgej3-fi-102%3A10092&t=Jsh233onKmJpJYtN-0\r\n\r\n\r\n![Image](https://user-images.githubusercontent.com/10561050/207735029-cf2dfb0e-73e1-4f82-9f08-606c4ac83f63.png)\r\n\r\n\r\n### Acceptance Criteria\r\n\r\n* [ ] The variation options should be SlotFilled into the header as the next level after the parent product name\r\n* [ ] Multiple options should be comma separated\r\n* [ ] Longer option combinations should be truncated with `...`. Users should be able to see the variation name in full on mouse hover.\n\n###\n\n","completion":" [1891051456,4370024739]"}
{"prompt":"Each variation should inherit data from its parent product.  For example, a description will contain the same description as its parent unless overwritten.\n\nBlocked by https://github.com/woocommerce/woocommerce/issues/35786\n\n### Design\n\nFigma: BaoQ3PGPnhAiJCsJtxgej3-fi-102%3A10092&t=Jsh233onKmJpJYtN-0\n\n\n![Image](https://user-images.githubusercontent.com/10561050/207732313-e5965d8e-174d-47f8-8629-47a667d382fd.png)\n\n\n### Acceptance Criteria\n\n* [x] Pricing, stock status, sku, and dimensions should all inherit these properties from parents and show placeholders for these items\n* [x] Before toggling the \"Manage stock\" property, the stock should follow the parent (omit it from the variation update if set to `parent`)\n* [x] Updating any of these properties should use the newly added value, overriding the parent\n* [x] The shipping class dropdown should include a \"Same as parent\" option that inherits the parent property when not changed\n* [x] SKU field should not be included in update until overridden (defaults to parent SKU which causes a duplicate SKU error).\n\n###\n\n","completion":" [1891051456,4370024739]"}
{"prompt":"This issue will involve adding the remaining tab content to match the parent product's tab contents for Pricing, Inventory, and Shipping.\n\nNote that the General tab is being handled separately since it includes a new field.\n\nBlocked by https://github.com/woocommerce/woocommerce/issues/35786\n\n### Design\n\nFigma: BaoQ3PGPnhAiJCsJtxgej3-fi-102%3A10092&t=Jsh233onKmJpJYtN-0\n\n\n![Image](https://user-images.githubusercontent.com/10561050/207730885-b5fe5e29-c653-41dd-882f-f6994ddfa2af.png)\n\n\n\n### Acceptance Criteria\n\n* [x] Each tab (Pricing, Inventory, and Shipping) should display the same fields as the parent\n* [ ] All fields should persist on save and refresh\n* [x] This issue does NOT require the additional fee and shipping radio buttons shown in the Shipping section\n* [x] This issue does NOT require the \"Same as parent\" dropdown option for Shipping classes\n* [x] This issue does NOT require the new sales tax section to be added\n\n###\n\n","completion":" [1891051456,4370024739]"}
{"prompt":"On the new product variation screen, we need to add the General tab content.  This should include the \"Variant Details\" section and the \"Images\" sections.\n\nBlocked by https://github.com/woocommerce/woocommerce/issues/35786\n\n### Design\n\nFigma: BaoQ3PGPnhAiJCsJtxgej3-fi-102%3A10092&t=Jsh233onKmJpJYtN-0\n\n![Image](https://user-images.githubusercontent.com/10561050/207727344-7fc32736-767f-4892-b758-3427e3fabc0b.png)\n\n### Acceptance Criteria\n\n* [ ] Opening a product variant should display the respective sections with the copy in Figma\n* [ ] The images section should look and behave similarly to the parent product page's image section\n* [ ] The variant details section should include a \"Description\" section\n* [ ] The variant details section should include a visibility toggle that controls the `variable_enabled` property for the variation\n* [ ] All fields should persist on refresh\n\n###\n\n","completion":" [1891051456,4370024739]"}
{"prompt":"The Product Filter widgets don't work when the Shop is displayed on the Homepage - they were working in version 7.0.1.\r\n\r\n### Expected behavior\r\n\r\nShop Archive should display products based on the selected Filters.\r\n\r\n### Actual behavior\r\n\r\nThe Posts Archive template is loaded instead.\r\n\r\n### Steps to reproduce\r\n\r\n1. Set the default WooCommerce Shop Page as the WordPress Homepage via \"Settings > Reading\".\r\n2. Add a filter widget (like \"Filter Products by Attribute\") via \"Appearance > Widgets\".\r\n3. Try using the Filter from the Home/Shop page.\r\n\r\n\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"I noticed that the CES modal looks squeezed when the user opens it from the snack bar that shows up after they add the first attribute in the `Attributes` screen.\n\n### Expected behavior\n\nThe modal would be displayed in full width.\n\n### Actual behavior\n\n<img width=\"582\" alt=\"Screenshot 2022-12-12 at 13 04 50\" src=\"https://user-images.githubusercontent.com/79307566/207563150-328acc5a-0e1a-4548-b420-40fb6a5c9076.png\">\r\n\n\n### Steps to reproduce\n\n1. Create a fresh WooCommerce site\r\n2. Go to Attributes\r\n3. Create and save a global attribute\r\n4. Click the feedback snack bar that shows up in the bottom left corner\n\n\n\n###\n\n","completion":" [3943426309]"}
{"prompt":"This issue is part of the epic https://github.com/woocommerce/woocommerce/issues/34548.\r\n\r\nAs part of the multichannel marketing feature, we implemented a light framework/library in the core that other marketing extensions can use and give us access to their data through a unified method. This library was implemented in PR https://github.com/woocommerce/woocommerce/pull/35099 and is currently merged to the feature branch for MCM Backend ([feature/34548-multichannel-marketing-backend](https://github.com/woocommerce/woocommerce/tree/feature/34548-multichannel-marketing-backend))\r\n\r\nAfter some discussion with @ecgan, I realized there should be a distinction between \"marketing channels\" and \"marketing extensions\". We also decided to keep the library open for third parties instead of limiting it to a predetermined list of extensions returned by the recommendations API (`GET https://woocommerce.com/wp-json/wccom/marketing-tab/1.2/recommendations.json`). More details in pe2C5g-zO-p2.\r\n\r\n**Tasks**\r\n\r\n- [ ] Remove the validation check before registering marketing channels, allowing any extension to register as a marketing channel.\r\n- [ ] Fetch the \"marketing extensions\" list from the recommendations API and return them separately from the marketing channels. Note that the marketing extension properties like name and description should also come from the API; this includes their \"manage\" or \"getting started\" URL.\r\n- [ ] Change the name of method `MarketingChannelInterface::get_error_no` to `get_error_count` (referrene: pe2C5g-zb-p2)\r\n\r\n\n\n###\n\n","completion":" [4327454247]"}
{"prompt":"The country list dropdown on the store details step returns incorrect search results as shown below.\r\n\r\n![206674492-d371bafb-a866-451c-9290-9bff727d186c](https://user-images.githubusercontent.com/4723145/207166094-7d678362-36a9-48cb-b555-04498330a48c.png)\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe search result should return only matching results.\n\n###\n\n","completion":" [1891051446]"}
{"prompt":"Discard button of \"Save changes?\" modal saves the options from \"Industry\" and \"Product Types\" steps for OBW flow.\r\n\r\n### Expected behavior\r\n\r\nOptions should not be saved after selecting the 'Discard' option.\r\n\r\n### Actual behavior\r\n\r\nOptions are saved even after selecting the 'Discard' option.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using the JN site.\r\n2. Install all the required plugins.\r\n3. Navigate to WooCommerce -> Settings -> Help\r\n4. Click Setup Wizard button.\r\n5. Start with OBW.\r\n6. Go to Industry Page. \r\n7. Select some options\r\n8. Click on the next page for 'Product Types'\r\n9. When prompted by 'Save changes?' modal, click 'Discard'\r\n10. Navigate back to Industry page observe the selected options are saved.\r\n\r\n### Video:\r\n\r\nhttps://user-images.githubusercontent.com/41110392/207059380-9106489b-1fb7-48a9-b7f0-e472c4b1f74d.mov\r\n\r\n\n\n###\n\n","completion":" [1891051446]"}
{"prompt":"When a variation is created, some of the main product tabs are no longer necessary and should be disabled.\n\n**Design**\n\nBaoQ3PGPnhAiJCsJtxgej3-fi-103%3A42557&t=ocwJn8Uxq8YLDepQ-0\n\n![Image](https://user-images.githubusercontent.com/10561050/204702499-5ca54ac2-f048-418d-b28a-2a2a8bb6d124.png)\n\n**Acceptance criteria**\n\n* [ ] Pricing, inventory, and shipping tabs should be disabled when at least 1 variation exists\n* [ ] When the user hovers over one of the disabled tabs, we show a tooltip reading:¬†Manage individual variation details in the Options tab.\n\n###\n\n","completion":" [1891051456,4370024739]"}
{"prompt":"When at least one option is created, we should automatically create variations from all options.\r\n\r\nSince doing this on the backend could affect existing (legacy) product flows, this should only occur on option changes within the new product management experience on the client-side.'\r\n\r\nBlocked by https://github.com/woocommerce/woocommerce/issues/35770.\r\n\r\n\r\n![Image](https://user-images.githubusercontent.com/10561050/204701137-eaa67d30-f776-46e1-98ab-12a48ffcf20e.png)\r\n\r\n\r\n**Acceptance criteria**\r\n\r\n* [ ] Adding a new option or value should automatically create all possible variations from the existing options\r\n* [ ] Removing an option or option value should remove any variations with those options\r\n* [ ] The following data should be copied from the parent product to each variations (if exists): regular price, sale price, weight, dimensions, shipping class, tax class, and manage stock options. The product should be transformed into a variable product.\n\n###\n\n","completion":" [1891051456,4370024739]"}
{"prompt":"There seems to be a style issue with the days of the week and the monthly arrows for Custom date setting under Analytics. The arrows are large and the days of the week are not aligned horizontally.\n\n### Expected behavior\n\nI would expect a small arrow and the days of the week to be horizontal\n\n### Actual behavior\n\nThe arrows are large and not very usable\n\n### Steps to reproduce\n\nTry to set a custom date in Analytics\n\n\n\n###\n\n","completion":" [3943425133]"}
{"prompt":"Activating WooCommerce results in various notices/warnings being emitted, relating to HPOS (note the empty `IN()` clause):\r\n\r\n```\r\nWordPress database error You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')\r\n\t\t  AND orders.date_updated_gmt > posts.post_modified_gmt\r\n\t) x)\r\n) count' at line 13 for query\r\nSELECT(\r\n\t(\r\nSELECT COUNT(1) FROM wp_posts posts\r\nINNER JOIN wp_wc_orders orders ON posts.id=orders.id\r\nWHERE posts.post_type = 'shop_order_placehold'\r\n AND orders.status not in ( 'auto-draft' )\r\n)\r\n\t+\r\n\t(SELECT COUNT(1) FROM (\r\n\t\tSELECT orders.id FROM wp_wc_orders orders\r\n\t\tJOIN wp_posts posts on posts.ID = orders.id\r\n\t\tWHERE\r\n\t\t  posts.post_type IN ()\r\n\t\t  AND orders.date_updated_gmt > posts.post_modified_gmt\r\n\t) x)\r\n) count made by \r\nactivate_plugin, \r\ndo_action('activate_woocommerce/woocommerce.php'), \r\nWP_Hook->do_action, \r\nWP_Hook->apply_filters, \r\nWC_Install::install, \r\nWC_Install::create_options, \r\nWC_Settings_Page->get_settings, \r\nWC_Settings_Page->get_settings_for_section, \r\napply_filters('woocommerce_get_settings_advanced'), \r\nWP_Hook->apply_filters, Automattic\\WooCommerce\\Internal\\DataStores\\Orders\\CustomOrdersTableController->__call, call_user_func_array, Automattic\\WooCommerce\\Internal\\DataStores\\Orders\\CustomOrdersTableController->get_settings, Automattic\\WooCommerce\\Internal\\DataStores\\Orders\\DataSynchronizer->get_sync_status, \r\nAutomattic\\WooCommerce\\Internal\\DataStores\\Orders\\DataSynchronizer->get_total_pending_count, \r\nAutomattic\\WooCommerce\\Internal\\DataStores\\Orders\\DataSynchronizer->get_current_orders_pending_sync_count\r\n```\r\n\r\nWe should investigate and resolve. Related internal chats: \r\n\r\n- p1669725882058759/1669725648.971299-slack-C9QDV4TL4\r\n- p1669742383945139-slack-C0E1AV8T0\r\n\r\n**Steps to replicate**\r\n\r\n- Start with latest `trunk`\r\n- Enable HPOS\r\n- Via WP CLI, deactivate WooCommerce (`wp plugin deactivate woocommerce`)\r\n- Then reactive (`wp plugin activate woocommerce`)\r\n- Observe errors\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"The variations for a product should be displayed beneath the options.\n\nNote that some prior art exists for this with the attributes field, but we should evaluate whether or not it's worth it to separate and reuse that component or if we should just recreate a component specific to variations since the UI differs slightly.\n\nhttps://github.com/woocommerce/woocommerce/blob/185d3337cac78ba12a4dd6c0384a82df32629cb2/plugins/woocommerce-admin/client/products/fields/attribute-field/attribute-field.tsx#L234-L289\n\nDesign:  BaoQ3PGPnhAiJCsJtxgej3-fi-103%3A42557&t=Jsh233onKmJpJYtN-0\n\n![Image](https://user-images.githubusercontent.com/10561050/204644213-bd7b5b4a-be43-4e70-a79d-cb533003b016.png)\n\n* [ ] A new form section for variations should be added with the appropriate text from the design\n* [ ] All the product variations should appear in a sortable list\n* [ ] Variation chips, price, and quantity should be shown in each item.  Other information such as the checkbox, visibility, and edit buttons will added in a separate issue\n* [ ] A spinner should be shown when variations are loading\n\n###\n\n","completion":" [1891051456,4370024739]"}
{"prompt":"In order to show the product variations in the new product management experience, we need to create a data store to retrieve product variations. \n\nWe can use the crud data store generator to quickly set this up and type out the [properties for use in variations](https://woocommerce.github.io/woocommerce-rest-api-docs/#product-variation-properties). \n\nhttps://github.com/woocommerce/woocommerce/blob/185d3337cac78ba12a4dd6c0384a82df32629cb2/packages/js/data/src/crud/README.md\n\n![Image](https://user-images.githubusercontent.com/10561050/204642627-cfbef68f-d72e-48c6-8fc0-0b32c68fa677.png)\n\n\n\n###\n\n","completion":" [1891051456,4370024739]"}
{"prompt":"Under the hood, attributes and options are nearly identical with the exception of the `variation` flag.\r\n\r\nThe attributes flow has already been created and configured to work in the new product management experience.  We should reuse those components with some small tweaks to allow them to be used for options as well.\r\n\r\nhttps://github.com/woocommerce/woocommerce/blob/b186c77cbc61572d2a6e607d6faadf80226e0b1f/plugins/woocommerce-admin/client/products/fields/attribute-field/attribute-field.tsx#L24\r\n\r\nNote that `variation` (\"used for variation\") does not appear to be a property in the [REST API](https://woocommerce.github.io/woocommerce-rest-api-docs/#product-attributes) and could be problematic if we can't use this flag to distinguish between options and attributes.  We may need to add that to the endpoint before tackling this issue.\r\n\r\nhttps://github.com/woocommerce/woocommerce/blob/185d3337cac78ba12a4dd6c0384a82df32629cb2/plugins/woocommerce/includes/class-wc-product-attribute.php#L254\r\n\r\n\r\n\r\n![Image](https://user-images.githubusercontent.com/10561050/204642027-6aaf958a-3db9-417a-8ebf-8412ff01c87c.png)\r\n\r\n\r\n\r\n**Acceptance criteria**\r\n\r\n* [ ] Add a prop to distinguish between options and attributes on the `AttributeField` component\r\n* [ ] Render the component under the \"options\" tab\r\n* [ ] Make sure on localized strings use the word \"option\" instead of \"attribute\" when the options prop is set\r\n* [ ] Limit fetched and shown options to those that have\n\n###\n\n","completion":" [1891051456,4370024739]"}
{"prompt":"Currently the logic in `add-product-page.tsx` and `edit-product-page.tsx` is mostly duplicated.  To avoid further duplication and making it easier to miss bugs in the future, we should combine the logic into a single file if possible.\n\nhttps://github.com/woocommerce/woocommerce/blob/b186c77cbc61572d2a6e607d6faadf80226e0b1f/plugins/woocommerce-admin/client/products/add-product-page.tsx#L30-L50\n\nhttps://github.com/woocommerce/woocommerce/blob/b186c77cbc61572d2a6e607d6faadf80226e0b1f/plugins/woocommerce-admin/client/products/edit-product-page.tsx#L123-L138\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"undefinedRelated to #35601 and open PR #35658\r\n\r\nWhen using  [Custom Order Types HPOS Screens](https://github.com/woocommerce/woocommerce/pull/35658), extensions like [WooCommerce Subscriptions](https://github.com/Automattic/woocommerce-subscriptions-core) should be able to add custom filters in the [ListTable](https://github.com/woocommerce/woocommerce/blob/38295542ab9a153acebdca562c6e177d1118da31/plugins/woocommerce/src/Internal/Admin/Orders/ListTable.php) class.\r\n\r\nWooCommerce Subscriptions [currently attach](https://github.com/Automattic/woocommerce-subscriptions-core/blob/8b6ca338e1f1b010d0363407c82dd6b088875fb2/includes/admin/class-wcs-admin-post-types.php#L78-L80) to the `restrict_manage_posts`hook when using CPT.\r\n\r\nAdding [this hook](https://github.com/WordPress/WordPress/blob/master/wp-admin/includes/class-wp-posts-list-table.php#L574-L589) before `submit_button` in `extra_tablenav()` would allow for drop-in replacement.\r\nhttps://github.com/woocommerce/woocommerce/blob/38295542ab9a153acebdca562c6e177d1118da31/plugins/woocommerce/src/Internal/Admin/Orders/ListTable.php#L531-L536\r\n\r\n### Describe alternatives you've considered\r\n\r\n_No response_\r\n\r\n### Additional context\r\n\r\n**CPT**\r\n![Screenshot 2022-11-29 at 1 59 36 PM](https://user-images.githubusercontent.com/57298/204412644-f9857c59-57cd-44ec-949a-2fc6d05093d5.png \"CPT ListTable screen showing filters\")\r\n**HPOS**\r\n![Screenshot 2022-11-29 at 2 00 56 PM](https://user-images.githubusercontent.com/57298/204412653-37094cad-8338-409f-b407-0963b2d492a0.png \"HPOS ListTable screen showing filters\")\r\n\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"Related to #35601 and open PR #35658\r\n\r\nUsing the [Custom Order Types HPOS Screens](https://github.com/woocommerce/woocommerce/pull/35658) PR when viewing a filtering a custom order type, the `page` hidden input attribute is using the wrong value.\r\n\r\n![image](https://user-images.githubusercontent.com/57298/204402614-dc491a6d-a062-4ea7-834f-d95231dc54d5.png)\r\n\r\n\r\n### Expected behavior\r\n\r\nA user should be able to filter by date or customer of a custom order type and the relevant results would be shown.\r\n\r\n### Actual behavior\r\n\r\nThe page is redirected and the filters are applied to the orders rather than the custom order type.\r\n\r\n### Steps to reproduce\r\n\r\n1. With HPOS on and enabled using PR https://github.com/Automattic/woocommerce-subscriptions-core/pull/297 and https://github.com/woocommerce/woocommerce/pull/35658\r\n2. Click on 'Subscriptions' in wp-admin\r\n3. Filter subscriptions by date or customer.\r\n4. The results show orders instead.\r\n\r\n\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"Related to #35601 and open PR #35658\r\n\r\nUsing the [Custom Order Types HPOS Screens](https://github.com/woocommerce/woocommerce/pull/35658) PR when editing a custom order type the javascript for editing the order details is not included  `woocommerce/assets/js/admin/meta-boxes-order.min.js`\r\n\r\nsee also: https://github.com/Automattic/woocommerce-subscriptions-core/issues/309\r\n\r\n### Expected behavior\r\n\r\nThe file `woocommerce/assets/js/admin/meta-boxes-order.min.js` is loaded and editing of the custom order is possible.\r\n\r\n### Actual behavior\r\n\r\nJavascript is not loaded for editing orders.\r\n\r\n### Steps to reproduce\r\n\r\n1. With HPOS on and enabled using PR https://github.com/Automattic/woocommerce-subscriptions-core/pull/297 and https://github.com/woocommerce/woocommerce/pull/35658\r\n2. Click on 'Subscriptions' in wp-admin\r\n3. Click to view a subscription\r\n4. Clicking the edit icons, `Add Items` and `Apply coupon` buttons don't work.\r\n\r\n\r\n\n\n###\n\n","completion":" [3834300886]"}
{"prompt":":**\r\nReported by a user and surfaced by @verofasulo, tax task completion isn't marked as completed when the user is sent back to WCAdmin dashboard after a user has installed WC Tax and Services plugin and connected their site. \r\n\r\nI suspect the cause is the [`wc_connect_taxes_enabled`](https://github.com/woocommerce/woocommerce/blob/9fabda744ae49099a525c8e54632adfe91f22f61/plugins/woocommerce-admin/client/tasks/fills/tax/index.tsx#L100) option is not set synchronously while it is being used as the flag for completion in the [Tax task](https://github.com/woocommerce/woocommerce/blob/9fabda744ae49099a525c8e54632adfe91f22f61/plugins/woocommerce/src/Admin/Features/OnboardingTasks/Tasks/Tax.php#L118).\r\n\r\n**To Reproduce**\r\n\r\n1. In a new site, skip OBW\r\n2. Go to WooCommerce > Home > Add tax rates\r\n3. Do all the steps and connect the site\r\n4. Observe that the tax task isn't marked as completed until you refresh the page\r\n\r\nhttps://user-images.githubusercontent.com/3747241/204278036-05ea8cfc-c8c6-4790-b9b6-040a2fbb5d3c.mov\r\n\r\n\n\n###\n\n","completion":" [3943424841]"}
{"prompt":"When the marketplace suggestions feature is turned off and we visit the WooCommerce onboarding marketing task at `/wp-admin/admin.php?page=wc-admin&task=marketing`, the Google Listings and Ads icon shown is the old one and not the right one.\r\n\r\n![image](https://user-images.githubusercontent.com/417342/204014759-39782fa5-c0f5-4f36-8d8e-729965f2c064.png)\r\n\r\n\r\n### Expected behavior\r\n\r\nThe correct logo icon should be the standard Google \"Big G\" icon, i.e. https://github.com/woocommerce/woocommerce/blob/6b3056422eee798f9a1764fc82657d92534e09d2/plugins/woocommerce/assets/images/marketing/google.svg.\r\n\r\n### Actual behavior\r\n\r\nThe icon used is the Google Ads icon.\r\n\r\n### Steps to reproduce\r\n\r\n1. Make sure marketplace suggestion is turned off in WooCommerce Settings > Advanced > WooCommerce.com: `/wp-admin/admin.php?page=wc-settings&tab=advanced&section=woocommerce_com`.\r\n2. Go to WooCommerce Onboarding Marketing task: `/wp-admin/admin.php?page=wc-admin&task=marketing`.\r\n\r\n\n\n###\n\n","completion":" [4327454247]"}
{"prompt":"\n\n![Image](https://user-images.githubusercontent.com/13561163/203827819-8deac8f5-fc4c-43e4-8220-674d86e03059.png)\n\n\n\n###\n\n","completion":" [4370024739,4370026978]"}
{"prompt":"Use _Summarize this product in 1-2 short sentences. We'll show it at the top of the page._ instead of the Gutenberg native text.\n\n###\n\n","completion":" [4370024739,4370026978]"}
{"prompt":"undefinedMove the logic to open the [file picker by clicking the card](https://github.com/woocommerce/woocommerce/blob/add/35183_open_file_picker_by_clicking_card/plugins/woocommerce-admin/client/products/sections/images-section.tsx#L188-L271) into the [`MediaUploader` component](https://github.com/woocommerce/woocommerce/tree/trunk/packages/js/components/src/media-uploader).\r\n\r\nSince all media upload components will have the same behavior of file uploading by clicking the card, we want to move that logic into the component.\r\n\r\nMore details [here](https://github.com/woocommerce/woocommerce/pull/35358#discussion_r1028155142).\r\n\r\n\r\n### Describe alternatives you've considered\r\n\r\n_No response_\r\n\r\n### Additional context\r\n\r\n_No response_\n\n###\n\n","completion":" [1891051461,4370024739,4370026978]"}
{"prompt":"Text overlaps with Modal screen Header for \"Add (Paid Product Type) to my store\" task after scrolling on Woocommerce > Home page.\r\n\r\n### Expected behavior\r\n\r\nText should not overlap with Modal screen Header for \"Add (Paid Product Type) to my store\" task after scrolling on Woocommerce > Home page.\r\n\r\n### Actual behavior\r\n\r\nText overlaps with Modal screen Header for \"Add (Paid Product Type) to my store\" task after scrolling on Woocommerce > Home page.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using the JN site.\r\n2. Install all the required plugins.\r\n3. Navigate to WooCommerce -> Settings -> Help\r\n4. Click Setup Wizard button.\r\n5. Start with OBW.\r\n6. Go to Product Types screen. \r\n7. Add all available product types and complete the OBW.\r\n8. Navigate to WooCommerce -> Home -> Setup List\r\n9. Click on 'Add (Paid Product Type) to my store'\r\n10. Observe Product Types Modal opens up\r\n11. Scroll down and observe text overlap with Modal Header\r\n\r\n### Screenshot:\r\n\r\n![#35712 1](https://user-images.githubusercontent.com/41110392/203803989-d28cbac0-f786-4975-9369-550a16e1f03f.jpg)\r\n\r\n![#35712 2](https://user-images.githubusercontent.com/41110392/203804017-d84e11db-c180-407a-81a5-8583ae753763.jpg)\r\n\r\n\n\n###\n\n","completion":" [1891051446,3943104021,3943424887]"}
{"prompt":"In preparation for introducing variation management to the new product editing experience, we want to add tabs to the top bar. We'll start small and only accommodate what is needed for the MVP, but the acceptance criteria mention future improvements since they can impact how we structure code from the very start.\r\n\r\n**Tab content (only MVP scope)**\r\n\r\n- General\r\n   - Product details\r\n   - Images\r\n   - Attributes\r\n- Pricing\r\n   - Pricing\r\n- Inventory\r\n   - Inventory\r\n- Shipping\r\n   - Shipping\r\n- Options\r\n   - Options\r\n   - Variations\r\n\r\n**Design**\r\n\r\n`5sAIeTRd9Yp7nSCT33BAWz-fi-5311%3A197937&t=4r3ndH9ltPGnsjGr-4`\r\n\r\n<img width=\"601\" alt=\"image\" src=\"https://user-images.githubusercontent.com/79307566/203767462-e13055e2-a0df-4348-a172-21f0c997849e.png\">\r\n\r\n**Acceptance criteria**\r\n\r\n- [ ] Users can see tabs at the top of the screen. They're part of the top navigation bar.\r\n- [ ] The tabs are fixed at the top of the screen when users scroll up and down the page.\r\n- [ ] On mobile, the tabs scroll horizontally. Design: `5sAIeTRd9Yp7nSCT33BAWz/%5BMaster%5D-fi-7342%3A344251&t=4r3ndH9ltPGnsjGr-4`\r\n- [ ] The page doesn't reload when users switch between tabs.\r\n- [ ] We don't remember the scroll position when users switch between tabs. They always start at the top.\r\n- [ ] Each tab has multiple states: resting (default), selected (with the `Gutenberg-Blue` underline), and disabled (`Gutenberg-600`, `cursor: not-allowed;`)\r\n- [ ] Each tab can have a suffix element, such as a badge or notification dot (not part of the MVP).\r\n- [ ] Each tab is an identifiable element, and we can target it with the spotlight component.\r\n- [ ] The tab bar can be expanded with custom tabs added by third-party plugins.\n\n###\n\n","completion":" [1891051456,4370024739]"}
{"prompt":"![Screen Shot 2022-11-24 at 11 37 00](https://user-images.githubusercontent.com/4344253/203688682-9108ae9c-bc03-4f7c-8949-c3c3b5294d72.png)\r\n\r\nIt seems that we have too much padding between wcpay benefit items.\r\n\r\n\r\n**Expected**\r\n![Screen Shot 2022-11-24 at 11 40 03](https://user-images.githubusercontent.com/4344253/203688858-d735c089-583d-4d25-9bec-6156d23a6faf.png)\r\n\r\n\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"With HPOS and DataSyncing enabled, calling `$order->save_meta_data()` does not backfill the new metadata changes to the posts table.\r\n\r\nIn Subscriptions, we were using the following code to add meta data to an order:\r\n\r\n```\r\n$order->add_meta_data( '_subscription_renewal', $subscription_id, false );\r\n$order->save_meta_data();\r\n```\r\n\r\nThe issue is `$order->save_meta_data()` doesn't backfill these metadata changes to the postsmeta tables so when you have HPOS + Data Syncing enabled, you end up with an order and post with different metadata. The next time the Order is read, the new meta we've just set in order tables is overridden/cleared by the [maybe_sync_order()](https://github.com/woocommerce/woocommerce/blob/fd7fc355fa8e7b8c29423e11c551942668ffc3aa/plugins/woocommerce/src/Internal/DataStores/Orders/OrdersTableDataStore.php#L1092) function.\r\n\r\nWe have worked around this problem in Subscriptions by calling `save()` instead of `save_meta_data()`\n\n### Expected behavior\n\nCalling `$order->save_meta_data()` when HPOS and DataSyncing is enabled, also backfills the changes to the postmeta table.\n\n### Actual behavior\n\nCalling `$order->save_meta_data()` when HPOS and DataSyncing enabled does not backfill the metadata changes to the postmeta table.\n\n### Steps to reproduce\n\n1. Enable HPOS + DataSyncing\r\n2. Run a snippet of code that adds meta to an order and calls `save_meta_data()`\r\n\r\n```\r\n$order = wc_get_order( 123 );\r\n$order->add_meta_data( '_test_new_meta_key', 'test_value', false );\r\n$order->save_meta_data();\r\n```\r\n\r\n3. Check the new meta is in `wp_wc_orders_meta`\r\n4. Check the new meta is not in `wp_postmeta`\r\n5. Fetch a new copy of the order: `$order = wc_get_order( 123 )`\r\n6. Notice the '_test_new_meta_key' has now been cleared from `wp_wc_orders_meta` table (deleted/overridden when syncing with postmeta)\n\n\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"When initially loading a page with the new `RichTextEditor` component, the editor will receive focus immediately.  Ideally, focus should not happen until a user clicks into the editor.\r\n\r\nThis is happening because we select the first block in the editor in order to show the toolbar.  Gutenberg then automatically focuses the selected block.\r\n\r\nThis fix may require a change upstream in Gutenberg in order to prevent selection from happening.\r\n\r\n**Acceptance criteria**\r\n\r\n* [ ] The editor does not initially receive focus when loading a product page\r\n* [ ] The rich text editor toolbar continues to be shown prior to clicking on the editor\n\n###\n\n","completion":" [4370026978]"}
{"prompt":"The styles for the date range picker under Analytics in the admin are missing.\r\n![wc date range](https://user-images.githubusercontent.com/93152429/203584142-286cbec1-b2cd-4825-8d52-217b5e97a355.png)\r\n\n\n### Expected behavior\n\nTo be able to select a date range in the Analytics part of the admin.\n\n### Actual behavior\n\nI cannot select a date range and the styling for the day select and the arrows seem to be missing.\n\n### Steps to reproduce\n\n1. select Analytics -> Orders\r\n2. select date range\r\n3. select custom\n\n\n\n###\n\n","completion":" [3943104021,3943425133]"}
{"prompt":"\"Facebook for WooCommerce\" extension is visible under extensions suggestions on \"Free Features\" screen when \"Facebook for WooCommerce\" plugin is installed and active.\r\n\r\n### Expected behavior\r\n\r\n\"Facebook for WooCommerce\" extension should not be visible under extensions suggestions on \"Free Features\" screen when \"Facebook for WooCommerce\" plugin is installed and active.\r\n\r\n### Actual behavior\r\n\r\n\"Facebook for WooCommerce\" extension is visible under extensions suggestions on \"Free Features\" screen when \"Facebook for WooCommerce\" plugin is installed and active.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using the JN site.\r\n2. Install all the required plugins.\r\n3. Install and activate \"Facebook for WooCommerce\" plugin.\r\n4. Navigating to WooCommerce -> Settings -> Help\r\n5. Click Setup Wizard button.\r\n6. Start with OBW.\r\n7. Go to Free Features screen. \r\n8. Observe that, \"Facebook for WooCommerce\" extension is visible under extensions suggestions on \"Free Features\" screen.\r\n\r\n### Video:\r\n\r\nhttps://user-images.githubusercontent.com/41110392/203566244-3d486231-a0fc-40a0-9212-56ec5e29d092.mp4\r\n\r\n\n\n###\n\n","completion":" [1891051446,3943104021]"}
{"prompt":"We currently don't provide a default setting in When out of stock under Inventory > Advanced (when quantity tracking is enabled), which is inconsistent with the current setup and may cause unexpected issues for merchants.\r\n\r\n**Acceptance criteria**\r\n\r\n- [ ] `Don't allow purchases` is selected when the user switches the quantity tracking toggle.\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [4370024739,4370026978]"}
{"prompt":"The summary and description fields can become quite content-heavy, especially with all the blocks. Let's make them fixed height (current values), but let the users resize the fields as they see fit using a handle like the one below.\r\n\r\n<img width=\"126\" alt=\"image\" src=\"https://user-images.githubusercontent.com/79307566/203551681-f3dec272-d734-4360-abe7-c0db65c76fb0.png\">\r\n\r\n**Acceptance criteria**\r\n\r\n- [ ] Summary and Description fields have fixed heights.\r\n- [ ] The user can resize the window vertically using a drag handle in the bottom right corner.\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [4370024739,4370026978]"}
{"prompt":"Users can create and manage variations through a dedicated tab rather than selecting the product variations type through a dropdown.\r\n\r\n**Issues**\r\n\r\n* [x] [Top navigation tabs [MVP]#35706](https://github.com/woocommerce/woocommerce/issues/35706)\n* [x] [Product variations data store#35771](https://github.com/woocommerce/woocommerce/issues/35771)\n* [x] [Render product variations list#35772](https://github.com/woocommerce/woocommerce/issues/35772)\n* [x] [Refactor attributes component to reuse for options#35770](https://github.com/woocommerce/woocommerce/issues/35770)\n* [x] [Automatically generate variations from product options#35778](https://github.com/woocommerce/woocommerce/issues/35778)\n* [x] [Disable unnecessary product tabs when variations are created#35779](https://github.com/woocommerce/woocommerce/issues/35779)\n\r\n**Acceptance criteria:**\r\n- [x] Create a new tab called \"Options\" after the \"Shipping tab.\r\n- [x] If an existing product has 0 local or global attributes with \"Used for variations\" enabled, display the Options empty state with the \"add options\" CTA:  BaoQ3PGPnhAiJCsJtxgej3-fi-102%3A1247&t=EFqwqGcibTmy71Eq-0\n- [ ] If an existing product has at least 1 local or global attribute with \"Used for variations\" enabled, display the Options section with a list including the available attributes + values. This section will behave exactly as the Attributes section: BaoQ3PGPnhAiJCsJtxgej3-fi-102%3A4612&t=EFqwqGcibTmy71Eq-0\r\n- [x] If the user clicks \"Add options\", we'll open the \"Add product options\" modal, and the entire flow reuses the attributes creation flow: BaoQ3PGPnhAiJCsJtxgej3-fi-102%3A1763&t=EFqwqGcibTmy71Eq-0\r\n- [ ] The option dropdown field is immediately in focus and shows the first 10 options (product/local attributes with ‚ÄòUsed for variations‚Äô enabled).\r\n- [ ] Each product option should be saved as a global attribute used for variations. By default, all attributes are created globally. We inform the user about this in the add attributes modal.\r\n- [ ] Each product option can be edited through a modal, where it will be possible to change the option name, add/remove values, define a default value, and define if it should be displayed to customers  (local vs global): BaoQ3PGPnhAiJCsJtxgej3-fi-102%3A2377&t=EFqwqGcibTmy71Eq-0\r\n- [ ] The first variation in each option is selected by default on the product page. Users can remove it by selecting `None` from the `Default value (optional` dropdown in the option edit modal (in the current experience, we don't have a default value selected, which causes some quirky behaviors). When `None` is selected for all options, no variation will be selected when the user enters the page.\r\n- [ ] Each option should have the box 'Show in product details' unchecked by default.\r\n- [ ] Local attributes are marked with a small info icon. It is displayed in the Attributes and Options lists. When the user hovers over the icon, they will see a tooltip explaining that a local attribute will not be used for filtering, etc.\r\n- [ ] Users can create several global attributes with the same name. We‚Äôd generate a unique slug for each based on its name. For example, the slugs for Color and Color would be ‚Äòcolor‚Äô and ‚Äòcolor-2‚Äô.\r\n- [x] Users need to go to the Attributes screen, to edit the attribute advanced details such as slug or archive.\r\n- [ ] The variation list should be updated if the user adds or removes values. For example, if the user adds a new value to a \"Size\" option, we should auto-create all the new variations based on the new size value.\r\n- [x] When at least one option is created, we should automatically create variations from all options. The product should be transformed into a variable product.\r\n- [x] The variations should be displayed in a Variations section. We show a spinner while the variations are being generated (same that we use in the images section): BaoQ3PGPnhAiJCsJtxgej3-fi-103%3A42557&t=EFqwqGcibTmy71Eq-0\r\n- [x] When the variations are created, we fade out/disable the Pricing, Inventory, and Shipping tabs of the parent product and display an overlay informing users about what was created: BaoQ3PGPnhAiJCsJtxgej3-fi-102%3A3315&t=EFqwqGcibTmy71Eq-0\r\n- [x] When the user hovers over one of the disabled tabs, we show a tooltip reading: `Manage individual variation details in the Options tab.`\r\n- [ ] If the users add an attribute in the attributes section, it will have the variations flag disabled. If the attribute is added in the options section, the flag will be enabled. There will be no way to enable or disable the flag once the attribute is added. To do that, users need to remove an attribute and add it in a different section: Attributes -> Options or Options -> Attributes.\r\n- [x] If an attribute is added in one section, it can‚Äôt be selected in another. Users have to remove it from one section and add it to another. We would detect when an attribute was already added somewhere else and let users move it from one section to another.\r\n- [ ] When users add a global attribute to Attributes, we automatically add its first value. When they add it to Options, we add all of its values.\r\n- [x] Users can select global attributes in both places. If they create new values, they‚Äôre added to the attribute but not selected in the products it‚Äôs assigned to.\r\n- [ ] Attributes and options can be sorted separately. Options are, by default, hidden from the product description. If the user enables the visibility toggle, options will be displayed below regular attributes.\r\n- [ ] Changing the options order will be reflected at the top of the page and in the product description.\r\n- [ ] If a product has 7 attributes: 2 options and 5 regular attributes, they can move n2 above n1, but not n7 above n2. They are managed in separate lists, even though they‚Äôre displayed in the same area in the product description.\r\n- [ ] When users switch from the new experience back to the classic one, attributes from both sections will be displayed in a single list. We‚Äôll respect the sorting order and place regular attributes below attributes used for variations. Users will be able to move them up and down however they want.\r\n\r\nThe variations list taxonomy/behavior is included in another issue.\r\n\r\n**Event tracking:**\r\nAll user interactions should be tracked\n\n###\n\n","completion":" [1891051456,4370024739]"}
{"prompt":"Along with the `add_meta_boxes` action in [`Edit.php`](https://github.com/woocommerce/woocommerce/blob/9c83a07145ea5c451adc489f21eeaf895825b683/plugins/woocommerce/src/Internal/Admin/Orders/Edit.php#L110), there should be a corresponding `add_meta_boxes_{$post_type}` (`add_meta_boxes_woocommerce_page_wc-orders`) action. This will improve feature parity between CPT and HPOS. The equivalent action in WP Core is in [`meta-boxes.php`](https://github.com/WordPress/wordpress-develop/blob/cfd09a412765e072b842e3216605c577f667d462/src/wp-admin/includes/meta-boxes.php#L1616).\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\nI'm currently using the `add_meta_boxes_shop_order` action to add a meta box. This enhancement would allow us to simply also use `add_meta_boxes_woocommerce_page_wc-orders` with the same callback to easily support HPOS without any [conditionals](https://github.com/woocommerce/woocommerce/wiki/High-Performance-Order-Storage-Upgrade-Recipe-Book#audit-for-order-administration-screen-functions).\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"I am a store owner who really loves WooCommerce. However there are a few small issues that I'd like to point out.\r\n\r\n1. I would love to get Gutenberg in the product description. It would be great to add icons, accordions, columns, background colors and other graphical elements to the product description (even shopify figured it out: https://www.lovehair.com/products/ultimate-bundle) and Gutenberg works great for that. I enabled Gutenberg in the product description with a PHP snippet, but by not being officially supported it has a couple of issues: for example, the new WooCommerce navigation experience is not compatible with that.\r\n2. I really like the new WooCommerce navigation experience and I really like the styling of the table in the \"customers\" page ([sitename.com/wp-admin/admin.php?page=wc-admin&path=%2Fcustomers](http://sitename.com/wp-admin/admin.php?page=wc-admin&path=%2Fcustomers)). It has a nice UI, it's possible to filter and sort without reloading the page, it is possible to export. Why isn't the Orders ([sitename.com/wp-admin/edit.php?post_type=shop_order](http://sitename.com/wp-admin/edit.php?post_type=shop_order)) table not styled the same? It has the old wordpress UI, it refreshed every time you try to filter or sort it and it's not possible to export orders in CSV. I need to install a plugin for such a simple feature.\r\n3. Add page view, reached checkout and abandoned carts in the Analytics. It's such an inconvenience to always check Google Analytics just to see how many Abandoned carts I have\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"The custom date range calendar's styling on Analytics pages is broken in WordPress 6.1.\n\n### Expected behavior\n\nThe custom date range calendar is styled properly.\n\n### Actual behavior\n\nThe custom date range calendar's styling is broken.\r\n\r\n![image](https://user-images.githubusercontent.com/2098816/202836113-341c7144-cea8-4aa0-a818-150fce24862c.png)\r\n\n\n### Steps to reproduce\n\n1. Go to any Analytics page.\r\n2. Click on the \"Date range\" and click \"Custom\".\r\n3. Observe that the calendar styling is broken (see above).\n\n\n\n###\n\n","completion":" [3943425133,3943425720]"}
{"prompt":"Before 7.1.0 attribute values were displayed in ascending order everywhere including Product Data > Attributes. After updating, the \"Value(s)\" dropdown shows values in order entered, regardless of what \"Default sort order\" on the \"Edit Attribute\" screen is set to.\r\n\r\n5717127-zen\r\n\r\n### Expected behavior\r\n\r\nThe behavior should be consistent across screens where it is displayed obeying the \"Default sort order\" settings. \r\n\r\n### Actual behavior\r\n\r\nAttribute values appear as per \"Default sort order\" everywhere except in \"Value(s)\" dropdown on Product Data > Attributes. \r\n\r\n### Steps to reproduce\r\n\r\n1. Go to Product > Attributes\r\n2. Add a new attribute, for example \"Colour\"\r\n3. Then click Configure Terms\r\n4. Add terms in this order Zoot, Blue, Red, Azure\r\n5. Back on Product > Attributes they appear, by default, as Order By > Custom ordering, and is alphabetical\r\n7. Create a new product, add attributes and select to add this attribute. \r\n8. Either click in the \"Value(s)\" field or \"Select all\" - see how the values appear in order entered. \r\n10. Go back to Products > Attributes and edit the Attribute to set \"Default sort order\" to something else\r\n11. It doesn't have an impact in Product data, dropdown remains as entered\r\n\r\nDropdown Menu: \r\n\r\n![m2Xs6D.png](https://user-images.githubusercontent.com/15178758/202710305-f6c0060c-dfb1-4408-8b3b-55f85cb7a772.png)\r\n\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"If you go to Analytics - Revenue - Custom (period of time) then the arrows for previous / next are extremely big.\r\n\r\n<img width=\"510\" alt=\"Screenshot 2022-11-02 at 15 59 22\" src=\"https://user-images.githubusercontent.com/17124280/199508899-46b0cdd5-622c-4376-971b-b0baa0deb894.png\">\r\n\n\n### Expected behavior\n\nThe arrows should be smaller :) \n\n### Actual behavior\n\nThe arrows are bigger and is difficult to select a custom period of time\n\n### Steps to reproduce\n\nWordPress Dashboard -> Analytics -> Revenue -> Custom (period of time)\r\nThe bug will appear.\n\n\n\n###\n\n","completion":" [3943425133]"}
{"prompt":"In Orders/ListTable class, we are currently missing do_action calls for `restrict_manage_posts` and `manage_posts_extra_tablenav`. This issue scopes implementing corresponding order based actions.\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"In `WC_Query` we currently use `CALC_FOUND_ROW` to get pagination results. Unfortunately, this is slow because MySQL needs to scan all rows with `CALC_FOUND_ROWS` instead of just going through the index, which it can do with a `COUNT(*)` query instead.\r\n\r\nThis issue scopes breaking the `CALC_FOUND_ROW` in WC_Query for HPOS in two separate queries, one to get the order ids and another to count total number of records.\n\n###\n\n","completion":" [3834300886,472334370]"}
{"prompt":"There are a few sections that should have more tracks events.\r\n\r\nThe sections that need more tracks events recorded are:\r\n- Attributes\r\n- Shipping\r\n- Images\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [3943425133]"}
{"prompt":"## Description\n\nA `suffix` prop should be added to the [`__experimentalSelectControl`](https://github.com/woocommerce/woocommerce/tree/trunk/packages/js/components/src/experimental-select-control), similar to the `suffix` prop on the [`__experimentalInputControl`](https://github.com/WordPress/gutenberg/tree/trunk/packages/components/src/input-control).\n\nThe `suffix` prop can be used by consumers for a number of scenarios:\n    - To provide an alternate indicator, such as a dropdown arrow, if the select control is being used as a dropdown\n    - To provide a \"loading\" indicator icon when results are being fetched asynchronously\n\n## API\n\n- Prop: `suffix`\n    - Type: `React.ReactNode`\n    - Required: No\n    - Default: a search icon (magnifying glass)\n\n- A `SelectControlSuffixWrapper` should ideally be provided, much like `__experimentalInputControl` handles things. It would be nice to have consistency in how suffixes are handled between the `__experimentalSelectControl` and the `__experimentalInputControl`. But, if this proves to be too complex at this point in time, it could be pushed off for a future enhancement.\n\n## Acceptance criteria\n\n- [ ] The `suffix` should be rendered on the right hand side of the select control's input field\n- [ ] If no `suffix` is set, a search icon should be shown as the suffix\n- [ ] If a `suffix` is set, it should be used instead of the default\n\n###\n\n","completion":" [3943425720,4370026978]"}
{"prompt":"\"Business details\" and \"Free features\" options fails to display on Business details step while OBW when Gutenberg plugin is active.\r\n\r\n### Expected behavior\r\n\r\n\"Business details\" and \"Free features\" options should be displayed on Business details step while OBW when Gutenberg plugin is active.\r\n\r\n### Actual behavior\r\n\r\n\"Business details\" and \"Free features\" options fails to display on Business details step while OBW when Gutenberg plugin is active.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using Jurassic Ninja or Atomic site.\r\n2. Install and activate all the required plugins.\r\n3. Install and activate Gutenberg plugin.\r\n4. Navigate to WooCommerce -> Settings -> Help, and press the Setup Wizard button.\r\n5. Enter Store details and click Continue.\r\n6. On Product Types step checkoff some options and click continue.\r\n7. Observe that, \"Business details\" and \"Free features\" options fails to display on Business details step.\r\n\r\n### Video:\r\nhttps://user-images.githubusercontent.com/41110392/199031895-dc5af33c-fafb-4724-83d1-a73b24eed74d.mp4\r\n\r\n\n\n###\n\n","completion":" [1891051446]"}
{"prompt":"For `Orders\\ListTable` class, we need to add a filter to support custom bulk action, just like [it's supported in the wp-posts-list table](https://github.com/WordPress/WordPress/blob/master/wp-admin/edit.php#L222).\r\n\r\n\r\nPerhaps we can add this hook as [another `elseif` construct in the `ListTable` class](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/src/Internal/Admin/Orders/ListTable.php#L924-L944).\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"We already support compatibility declarations via code. However, since the code compatibility declaration cannot be active without the plugin also being active, we can't tell whether the plugin is compatible with HPOS or not beforehand.\r\n\r\nThis issue scopes supporting compatibility declaration in the plugin header itself so that we can prevent activation of the incompatible plugin in the first (and/or disable the feature, whichever is appropriate).\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"When looking at orders currently in the trash, there's no \"Empty Trash\" button as there is when the posts datastore is in use.\r\n\r\n### Expected behavior\r\n\r\nAn \"Empty Trash\" button should be available when the \"Trash\" filter is active.\r\n\r\n<img width=\"864\" alt=\"Screenshot 2022-10-27 at 13 16 57\" src=\"https://user-images.githubusercontent.com/184724/198390004-f61aad35-88c2-4209-b571-786be0502cd1.png\">\r\n\r\n\r\n### Actual behavior\r\n\r\nNo \"Empty Trash\" button appears.\r\n\r\n<img width=\"1335\" alt=\"Screenshot 2022-10-27 at 13 21 21\" src=\"https://user-images.githubusercontent.com/184724/198390168-188e2891-4fcc-4db1-bf99-e8cff38506e3.png\">\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Enable HPOS.\r\n2. Go to WC > Orders.\r\n3. Trash at least an order.\r\n4. Click \"Trash\" in the list of statuses.\r\n5. No trash button appears.\r\n\r\n\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"When there are no orders except trashed ones, WC > Orders is totally empty (the \"default state\" shows). This also prevents you from accessing the trashed orders.\r\n\r\n### Expected behavior\r\n\r\nAt least the nav menu with the order statuses should appear.\r\n\r\n### Actual behavior\r\n\r\nNothing appears (see screenshot).\r\n\r\n<img width=\"1325\" alt=\"Screenshot 2022-10-27 at 11 42 49\" src=\"https://user-images.githubusercontent.com/184724/198372908-8706e4d0-82e1-439f-85e8-b016b796d784.png\">\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Enable HPOS/COT.\r\n2. Go to WC > Orders.\r\n3. If you don't have any orders, create one.\r\n4. Trash all orders.\r\n5. Confirm that WC > Orders is empty and you don't have a way to get to the trashed orders.\r\n\r\n\n\n###\n\n","completion":" [3834300886]"}
{"prompt":":**\nWhen migrating orders created with WC Smooth Generator, the migration works great in both senses (WP table -> WC table and vice versa). However, I noticed a scenario where it doesn‚Äôt work.\n\n**Steps to reproduce:**\n\n1. Create several orders with WC Smooth Generator.\n2. Enable HPOS and sync tables.\n3. Confirm that the Orders page shows the same number of orders no matter if we use WP or WC table.\n4. With the WP table marked as authoritative, create an order manually (with or without products, it doesn‚Äôt affect the outcome) and without entering user details (no customer info and no billing info).\n5. Check the Orders page now shows an extra order.\n6. Now mark the WC table as authoritative.\n7. Head again to the Orders page\n\n**Expected result:**\n\nThe custom order tables settings page doesn‚Äôt mention that there are orders pending migration, and the new order is shown in `WooCommerce > Orders`. \n\n**Actual result:**\nThis new order created when the WP table was used is not listed on the `WooCommerce > Orders` page when the WC table is used. \n\nPlease find video below:\n\nhttps://d.pr/v/RYbSU0\n\n**Additional comments:**\nI could check that it works fine if we create the order when using WC table and then switch to the WP table, but it fails when we create it when using WP table and switch to WC table. This is why I think it might be an issue and would be worth debugging.\n\n**Severity/Priority assessment:**\n- **Impact on the application:** reduced, as this only affects to orders, not the entire system.\n- **Impact on the business:** high, I think orders are one of the most important entities in WooCommerce because they are directly related to the merchant‚Äôs revenue and shopper‚Äôs payments, so an issue like this might have serious consequences for our customers.\n- **Priority:** Considering the business‚Äôs impact, I think we should address it as soon as possible. I think we should reach the highest degree of confidence with order migrations (considering we can‚Äôt achieve 100% confidence, as we can‚Äôt prove a system is bug-free).\n\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"In the Revenue report of our Analytics, the payment date is assigned to the order creation date, regardless of when the payment was made. This approach can be misleading and lead to complications in terms of taxes and invoices. We'll change the default date used in this report and introduce the flexibility to use different dates: created, paid or completed.\r\n\r\nMore info:\r\n#32693\r\n#6535\r\nSlack: p1650010691719899-slack-C7U3Y3VMY\r\nReports: 4949047-zen\r\n\r\n\r\n**Acceptance criteria:**\r\n- [ ] Change the default order date used in the Revenue report to `date_paid`\r\n- [ ] Create a new section in Analytics - Settings called \"Revenue Reporting\" \r\n- [ ] In this section, the user can change the date used in the Revenue report. He should be able to pick between `date_paid`, `date_completed`, and `date_created`\r\n- [ ] When the user visits the Revenue report for the first time after we implement the change, we should a spotlight with more context about it\r\n\r\nMockups & flow: Nzh2NAf9RtpTwQLRXKYTjf-fi\r\n\r\n**Event tracking:**\r\n- We should add tracking to the spotlight\r\n- We should include the settings change in the `wcadmin_analytics_settings_save` event. Perhaps we should add a new property \n\n###\n\n","completion":" [3943425133]"}
{"prompt":"In the edit product page in WooCommerce, the short description window is collapsed as the default when I get into the product page requiring that I expand it and enlarge it every time I go to a product. This changed since the last update and up until then, the default for this window upon opening a the edit product page, was an expanded pane or window. I work with this all day long so have to deal with it constantly. On the other hand, all the other windows that I use on a regular basis default to the expanded or open status.\n\n### Expected behavior\n\nI expect the short description pane or window to be open or expanded by default every time I go into a product without having to expand it manually.\n\n### Actual behavior\n\nBy default, the product short description pane or window is collapsed upon entering or opening the edit product page for any and every product.\n\n### Steps to reproduce\n\nI can't give you these steps to walk through since you don't have an account with our company to access our products, but here is a screen shot.\r\n\r\n![image](https://user-images.githubusercontent.com/116667491/197834590-60882f74-56d3-43bf-baae-a0d010963fd9.png)\r\n\n\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"Display a spotlight near the Feedback button ([added here](https://github.com/woocommerce/woocommerce/issues/35300)) when the user takes more than 7 mins to create a product on the classic UI.\r\n\r\n![image](https://user-images.githubusercontent.com/444632/197814360-d3c71de4-99c5-4276-b880-ec3580cb6e84.png)\r\n\r\nUpdate the copy to read:\r\n> You have been working on this product for a few minutes now. Is there something you‚Äôre struggling with? Share your feedback.\r\n\r\nSee additional context on [this](https://github.com/woocommerce/woocommerce/issues/35127#issuecomment-1282884238) (and following) comments, and note the feedback button is added on [this issue](https://github.com/woocommerce/woocommerce/issues/35806).\r\n\r\nAcceptance criteria:\r\n- Spotlight appears after user takes 7 minutes to create a product (independent of user interaction)\r\n- It is only displayed once\n\n###\n\n","completion":" [3943426309]"}
{"prompt":"Add a feedback button to the upper navbar on the products MVP: \r\n\r\n![image](https://user-images.githubusercontent.com/444632/197812928-73a7abc7-3b39-44a1-b670-9834512666ce.png)\r\n\r\nThis will trigger the updated CES modal. \r\n\r\nAcceptance criteria:\r\n- Add button that triggers modal that only appears on the Products MVP screen.\r\n- Add tracks\n\n###\n\n","completion":" [3943426309]"}
{"prompt":"The way we currently have CES structured it is difficult to add additional content/questions. Add support to easily scale and add additional questions to the form. \r\n\r\nAn example of the functionality that we will want to support is captured by [this issue](https://github.com/woocommerce/woocommerce/issues/35124).\r\n\r\nA little additional context from @louwie17 from that issue:\r\n> Adding some extra context from a development context:\r\nWe currently trigger CES using the enqueue_to_ces_tracks PHP function in conjunction with a CES data store and component here: [trunk/plugins/woocommerce-admin/client/customer-effort-score-tracks](https://github.com/woocommerce/woocommerce/tree/trunk/plugins/woocommerce-admin/client/customer-effort-score-tracks?rgh-link-date=2022-10-18T19%3A38%3A32Z). The enqueue_to_ces_tracks is in our Internal folder, so we shouldn't need to worry about backwards compatibility.\r\n\r\n> Neither of these places are written in a manner that makes adding a second question easy. We have to either hardcode the support for a second question, or do a bigger re-factor to allow for any number of questions.\n\n###\n\n","completion":" [3943426309]"}
{"prompt":"AC\n\n- [ ] The gray background must cover the entere content of the page without considering the left menu and the top bar.\n\n![Image](https://user-images.githubusercontent.com/13561163/197800914-efb3c2d2-8700-492a-a27f-48711d748818.png)\n\n\n\n###\n\n","completion":" [4370024739,4370026978]"}
{"prompt":"Under general setting there should be a cart persistence setting that allows you to change the amount of time between carts being emptied. as with bookings there is a fine line between waiting too long for customers paying and customers abandoning there cart.\r\n\n\n### Describe alternatives you've considered\n\nI know there are paid for alternatives to add this feature but there is already a setting for it. it just needs adding to the settings as you can already do this in the settings. https://woocommerce.com/document/change-the-default-cart-session-length/?aff=10486&cid=1131038\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [1891051436,1891051440]"}
{"prompt":"Currently, the test outputs of our E2E and API tests are being saved outside of the `plugins/woocommerce/tests` folder. They should probably be stored within their respective E2E and API test directories.\r\n\r\nHere is the list of these test outputs, where they're currently being saved, and where we should save them:\r\n\r\n| test artifact                                                                             | currently being saved in              | should be saved in                         |\r\n| ----------------------------------------------------------------------------------------- | ------------------------------------- | ------------------------------------------ |\r\n| `allure-results` folder, `test-results.json`, and `storage` folder generated by E2E tests | `plugins/woocommerce/e2e`             | `plugins/woocommerce/tests/e2e-pw`         |\r\n| `allure-results` folder and `test-results.json` generated by API tests                    | `plugins/woocommerce/api-test-report` | `plugins/woocommerce/tests/api-core-tests` |\r\n\r\n\r\n### Describe alternatives you've considered\r\n\r\n_No response_\r\n\r\n### Additional context\r\n\r\n_No response_\n\n###\n\n","completion":" [3845073088]"}
{"prompt":"The current [experimental select control](https://github.com/woocommerce/woocommerce/tree/trunk/packages/js/components/src/experimental-select-control) forces the consumer of the component to handle all the async logic, this is in theory fine, but will require quite a bit of boiler plate for any async fields.\n\nThe Select Control also makes it a bit tricky to notify the user when the dropdown is searching or not.\n\nHere are a couple suggestions that should be explored and/or implemented as part of this issue:\n- Allow the `getFilteredItems` callback to support the return of a promise.\n- Allow the addition of `useDebounce` for either the `getFilteredItems` function or `onInputChange`, maybe this should be a default of 250ms that can be changed if needed?\n\nSee [this PR](https://github.com/woocommerce/woocommerce/pull/34949) and the comments left behind by @mattsherman  for some extra context.\n\n**Acceptance criteria**\n\n- [ ] The `getFilteredItems` prop should support setting it to a Promise\n- [ ] The `getFilteredItems` prop should support setting it to a regular function\n- [ ] The `getFilteredItems` prop should be debounced, so that it isn't called for every input change\n- [ ] A loading/busy indicator should be displayed as the `suffix` when the `getFilteredItems` callback is pending\n\n###\n\n","completion":" [4370026978]"}
{"prompt":"When I switch the order data store from HPOS to CPT and navigate to list of orders (`wp-admin/admin.php?page=wc-orders`), I see `Sorry, you are not allowed to access this page.`\r\n\r\nSame happens for order edit screen, e.g.: `/wp-admin/admin.php?page=wc-orders&id=68&action=edit`\r\n\r\n### Expected behavior\r\n\r\nI'd like to either get a redirect, or a list of orders/order edit displayed correctly.\r\n\r\n### Actual behavior\r\n\r\nI see an error `Sorry, you are not allowed to access this page.`\r\n\r\n### Steps to reproduce\r\n\r\n\r\n\r\nhttps://user-images.githubusercontent.com/2207451/195633230-0e86b5e3-6319-4ad8-a911-2286e27abb1e.mov\r\n\r\n\r\n\r\n\r\n\r\n\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"When the site wide setting for inventory management is disabled under WooCommerce -> Settings -> Products ->  Enable stock management (`/wp-admin/admin.php?page=wc-settings&tab=products&section=inventory`) we should disable the toggle that in the new product management experience that allows tracking of quantity.\n\nThis will mimic the current experience with the exception that the toggle is shown, but disabled when \"Enable stock management\" is off.\n\n![Image](https://user-images.githubusercontent.com/10561050/195219504-9e578474-47d7-42bc-a835-6c03a260075e.png)\n\n**Acceptance criteria**\n\n* [ ] Disabling \"Enable stock management\" should disable the quantity toggle\n* [ ] A tooltip with an explanation should appear above the toggle\n* [ ] The toggle should function as it does now when \"Enable stock management\" is enabled\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"As a merchant,\r\n- I want when new shipping classes is been creating and the server responds an error a message should be shown.\r\n- So that the customer know there were a problem creating the new class.\r\n\r\nThe create new shipping class logic will be done as part of https://github.com/woocommerce/woocommerce/issues/34657\r\n\r\n**Design**\r\n5sAIeTRd9Yp7nSCT33BAWz-fi-6590%3A287898\r\n\r\n**Acceptance criteria**\r\n\r\n- [x] If server sends an error during the class creation a dismissible snackbar with this error massage should be shown `We couldn‚Äôt add this shipping class. Try again in a few seconds.`\r\n- [x] Removed the default value `New shipping class` from the `Name` field and replaced it with a placeholder: `e.g. Fragile products`\r\n- [x] Only used the category's name when the user creates a new shipping class for the first time\r\n- [x] Next and every other time when the user adds a new shipping class, they'd only see the placeholder\n\n###\n\n","completion":" [4370026978]"}
{"prompt":"As a merchant,\r\n- I want the new shipping classes that was created to be the selected shipping class dropdown option.\r\n- So that the customer doesn't need to select the new class manually.\r\n\r\nThe create new shipping class logic will be done as part of https://github.com/woocommerce/woocommerce/issues/34657\r\n\r\n**Design**\r\n5sAIeTRd9Yp7nSCT33BAWz-fi-6590%3A287898\r\n\r\n**Acceptance criteria**\r\n\r\n- [ ] The new shipping classes that was created should be the selected shipping class dropdown option.\n\n###\n\n","completion":" [4370026978]"}
{"prompt":"When adding entries corresponding to the new order in `wp_wc_order_stats` with the synchronization with the posts tables is disabled, the entry in wp_wc_order_stats is not created when sync_order() is called because the order type is shop_order_placehold and thus the check below fails:\r\nhttps://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/src/Admin/API/Reports/Orders/Stats/DataStore.php#L477\r\n\r\nThis issue scopes fixing this and making sure order stats are synced as expected\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"in #33660 we've added a message to include helpful guidance about product image size/format for new users. However, we received feedback that the message is sometimes distracting and unnecessary (#33660). We'll make some changes to focus the tooltip on new users.\r\n\r\n**Acceptance criteria:**\r\n- [ ] Add a help tip next to the button and only show the message when the user hovers the tip\r\n<img width=\"476\" alt=\"image (4)\" src=\"https://user-images.githubusercontent.com/3380168/194869624-cff5b6fd-bc8f-486a-8e2e-d0c19e66b5ba.png\">\r\n\r\n- [ ] Only show the tip when the box is empty\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"Email link intended for Merchant New Order emails are appearing in Customer New Order Emails. 2/3 of the links give 404 errors\n\n### Expected behavior\n\nLinks only appear in Merchant Emails and links do not 404.\n\n### Actual behavior\n\nIn addition to Merchant new order emails, I can see all 3 types of link below in Customer Your order has been received! Emails. (Which are triggered for on-hold or processing orders, which is most new orders)\r\n\r\n- ‚ÄúProcess your orders on the go. Get the app.‚Äù links to app info on https://woocommerce.com/mobile/\r\n- ‚ÄúCollect payments easily from your customers anywhere with our mobile app.‚Äù links to https://woocommerce.com/mobile/payments currently a 404 :404:\r\n- ‚ÄúManage the order with the app.‚Äù links to https://woocommerce.com/mobile/orders/details which currently 404s :404: even when opened on mobile with connected WC app active\r\n\r\n![2Screenshot_2022-10-09_at_11_51_42](https://user-images.githubusercontent.com/24649833/194855266-40f16f3e-0661-4006-8c3b-109c843b6084.jpg)\r\n![2Screenshot_2022-10-09_at_11_53_06](https://user-images.githubusercontent.com/24649833/194855272-5c773918-2b91-4fb7-9562-cd73f0ccb5a3.jpg)\r\n\n\n### Steps to reproduce\n\n1. Place an order with 7.0, see rules for Email links/Order types in https://github.com/woocommerce/woocommerce/pull/34467\r\n2. Check footer links in Merchant New Order Emails\r\n3. Check Customer \"Your order has been received!\" Email, footer links have also been added there.\n\n\n\n###\n\n","completion":" [1891051455]"}
{"prompt":"For the new product pages, we need a tooltip like this one that displays a message on hover:\r\n\r\n<img width=\"273\" alt=\"Screen Shot 2022-10-07 at 9 18 40 AM\" src=\"https://user-images.githubusercontent.com/10561050/194600982-9803a63d-fd51-4b9f-afd3-4436cc3409b6.png\">\r\n\r\nA component like this exists inside of the `EnrichedLabel` component, but needs to be extracted for use not in labels.\r\n\r\nhttps://github.com/woocommerce/woocommerce/blob/trunk/packages/js/components/src/enriched-label/enriched-label.tsx\n\n### Describe alternatives you've considered\n\nWe could create a new component, but it seems there's a good bit of overlap with the pre-existing component.\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [3943425720]"}
{"prompt":"For the `Form` component `getInputProps`, we occasionally have to override an event like `onBlur`.\r\n\r\n```\r\n<TextControl\r\n  { ...getInputProps( 'field_name' ) }\r\n  onBlur={ myOnBlurHandler }\r\n/>\r\n```\r\n\r\nThe problem is that this overrides the default `getInputProps` `onBlur` method and now manually needs to be called:\r\n\r\n```\r\n<TextControl\r\n  { ...getInputProps( 'field_name' ) }\r\n  onBlur={ () => {\r\n    myOnBlurHandler();\r\n    getInputProps( 'field_name' ).onBlur();\r\n  }\r\n/>\r\n```\r\n\r\nTo make things a bit easier on consumers, we could consider an optional second argument that adds props to the event without overriding the `Form`'s handlers.  E.g.,\r\n\r\n```\r\n<TextControl\r\n  { ...getInputProps( 'field_name', { onBlur: myOnBlurHandler } ) }\r\n/>\r\n```\n\n### Describe alternatives you've considered\n\nManually calling the input form's handler is the current way of handling this, but it is more prone to errors and more cumbersome to write.\r\n\r\n`getInputProps( 'field_name' ).onBlur();`\n\n### Additional context\n\nThe new product management experience has been creating utils like `getTextControlProps` and `getInputControlProps` that handle specific items like classes.  It would be good to move some of this logic back to the `Form` package.\n\n###\n\n","completion":" [3943425720]"}
{"prompt":"With HPOS enabled and using order tables\r\nSearching orders for terms which should match parts of the billing or shipping details do not return any results\n\n### Expected behavior\n\nSearching for a term which matches the billing/shipping details of an order should return that order in the results\n\n### Actual behavior\n\nSearching orders for terms which should match parts of the billing or shipping details do not return any results using  `7.0.0-hpos.dev.7` (product and order id as search terms still work ok)\r\nThis does return results ok in `7.0.0-rc.2`\r\n\r\n<img width=\"829\" alt=\"Screenshot 2022-10-07 at 12 32 19\" src=\"https://user-images.githubusercontent.com/24649833/194544646-d51f617a-4c75-421e-8b31-0beff5a06387.png\">\r\n<img width=\"751\" alt=\"Screenshot 2022-10-07 at 12 31 25\" src=\"https://user-images.githubusercontent.com/24649833/194544679-b3bd4754-4de3-44d8-b5cb-858109304c41.png\">\r\n<img width=\"753\" alt=\"Screenshot 2022-10-07 at 12 31 40\" src=\"https://user-images.githubusercontent.com/24649833/194544710-cbaaa77b-b4d8-4cda-ba3b-a3ebc912ca30.png\">\r\n<img width=\"731\" alt=\"Screenshot 2022-10-07 at 12 32 45\" src=\"https://user-images.githubusercontent.com/24649833/194544738-9d6aab6d-d111-4616-adb5-0842a8b22400.png\">\r\n<img width=\"754\" alt=\"Screenshot 2022-10-07 at 12 31 07\" src=\"https://user-images.githubusercontent.com/24649833/194544761-39b716df-ed51-455e-abc6-5f982a14784c.png\">\r\n<img width=\"754\" alt=\"Screenshot 2022-10-07 at 12 30 45\" src=\"https://user-images.githubusercontent.com/24649833/194544782-11cb3206-314c-437c-b467-19b0dfd1fdba.png\">\r\n<img width=\"749\" alt=\"Screenshot 2022-10-07 at 12 30 27\" src=\"https://user-images.githubusercontent.com/24649833/194544799-f8366214-7f1e-4744-9df3-e997d42261dd.png\">\r\n\n\n### Steps to reproduce\n\n1. Enable HPOS and use WooCommerce Order Tables\r\n2. Create an order with Billing and Shipping details\r\n3. Try searching for terms which should match those details\r\n4. See no results returned.\n\n\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"### Prerequisites\r\n\r\n- [X] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [X] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n### Describe the bug\r\nWhile declaring HPOS compatibility on Gocardless payment gateway plugin I noticed that if you go to WooCommerce > Settings > Advanced > Custom Order Tables and activate the option `Keep the posts table and the orders tables synchronized` calling `$order->save_meta_data();` after `$order->update_meta_data();` does not save the order meta.\r\n\r\nCreating an error when trying to pay for an order using Gocardless\r\n\r\n### Expected behavior\r\n\r\n`$order->save_meta_data();` should save the order meta data even when `Keep the posts table and the orders tables synchronized` is activated\r\n\r\n### Actual behavior\r\n\r\nIf you go to WooCommerce > Settings > Advanced > Custom Order Tables and activate the option `Keep the posts table and the orders tables synchronized` calling `$order->save_meta_data();` after `$order->update_meta_data();` does not save the order meta.\r\n\r\n### Steps to reproduce\r\n\r\n- go to WooCommerce > Settings > Advanced > Custom Order Tables and activate the option `Keep the posts table and the orders tables synchronized`\r\n- try to run `$order->save_meta_data();` after  a `$order->update_meta_data();` and notice the meta was not saved\r\n\r\n\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"When we directly navigate to onboarding profiler steps such as the \"Business Details\" step before completing the previous step, the profiler breaks.\n\n### Expected behavior\n\nIt should handle that user misbehaviour properly instead of breaking\n\n### Actual behavior\n\nOnboarding profiler breaks:\r\n\r\n![image](https://user-images.githubusercontent.com/27843274/194279660-5c0fb220-1194-4e12-b6ee-3ddaead3917b.png)\r\n\n\n### Steps to reproduce\n\n1. Create a new site\r\n2. Navigate directly to `./wp-admin/admin.php?page=wc-admin&path=%2Fsetup-wizard&step=business-details`\r\n3. Observe that it is broken\n\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"When variable products are exported with a draft status, all variations are also set to draft.  On import, the status of these variations remains draft, causing them not to appear.\n\n### Expected behavior\n\nExporting and importing draft variable products works correctly.\n\n### Actual behavior\n\nImported products appear to loose all variations.\n\n### Steps to reproduce\n\n1. Export a variable product draft\r\n2. Import the generated file (to a different site, or first delete the product)\r\n3. Check the imported product variations\n\n\n\n###\n\n","completion":" [1891051450]"}
{"prompt":"The `status` search param is no longer taking effect so, say we had 10 orders and 2 of them had a 'completed' `status`. We call the api to GET orders and return those with the 'completed' `status` as follows:\r\n\r\n```\r\nparams: {\r\n                    status: 'completed',\r\n                },\r\n```\r\nit is returning ALL orders, no matter what their status\n\n### Expected behavior\n\nIf we had 10 orders and 2 of them had a 'completed' `status`. We call the api to GET orders and return those with the 'completed' `status` as follows:\r\n\r\n```\r\nparams: {\r\n                    status: 'completed',\r\n                },\r\n```\r\n\r\nWe would expect the 2 orders with the completed status to be returned\n\n### Actual behavior\n\nIf we have 10 orders and 2 of them had a 'completed' `status`. We call the api to GET orders and return those with the 'completed' `status` as follows:\r\n\r\n```\r\nparams: {\r\n                    status: 'completed',\r\n                },\r\n```\r\nit is returning ALL orders, no matter what their status\n\n### Steps to reproduce\n\n1. Enable COT/HPOS\r\n2. Use the WooCommerce API to create 8 orders, 2 with status completed\r\n3. Attempt to search on orders and return those with 'completed' status with search param as follows:\r\n{\r\n        status: 'completed'\r\n}\r\n4. All orders are returned\n\n\n\n###\n\n","completion":" [2258932484,3834300886]"}
{"prompt":"The `page` search param is no longer taking effect so, say we had 10 orders and we called the api to GET orders and return the first page using search params as follows:\r\n```\r\nparams: {\r\n                    per_page: 4,\r\n                    page: 1\r\n},\r\n```\r\n\r\nit is returning the same results as below:\r\n\r\n```\r\nparams: {\r\n                    per_page: 4,\r\n                    page: 2\r\n},\r\n```\r\n i.e. both only returning the first page values\n\n### Expected behavior\n\nThe `page` search param should have an effect on the results returned in the GET orders call\r\n\r\ni.e. If we had 10 orders and we called the api to GET orders and return the first page using search params as follows:\r\n```\r\nparams: {\r\n                    per_page: 4,\r\n                    page: 1\r\n},\r\n```\r\n\r\nIt should returning different results to below:\r\n\r\n```\r\nparams: {\r\n                    per_page: 4,\r\n                    page: 2\r\n},\r\n```\r\n i.e. the first call should return the first 4 orders and the second call should return the next 4 (different) orders\n\n### Actual behavior\n\nThe `page` search param is no longer taking effect so, say we had 10 orders and we called the api to GET orders and return the first page using search params as follows:\r\n```\r\nparams: {\r\n                    per_page: 4,\r\n                    page: 1\r\n},\r\n```\r\n\r\nit is returning the same results as below:\r\n\r\n```\r\nparams: {\r\n                    per_page: 4,\r\n                    page: 2\r\n},\r\n```\r\n i.e. both only returning the first page values\n\n### Steps to reproduce\n\n1. Enable COT/HPOS\r\n2. Use the WooCommerce API to create 8 orders\r\n3. Attempt to search on orders and get the first page of results (given 4 results per page) with search param as follows:\r\n```\r\n{\r\n                    per_page: 4,\r\n                    page: 1\r\n}\r\n```\r\n4. Attempt to search on orders and get the second page of results (given 4 results per page) with search param as follows:\r\n```\r\n{\r\n                    per_page: 4,\r\n                    page: 2\r\n}\r\n```\r\n5. The same results are returned for each\n\n\n\n###\n\n","completion":" [2258932484,3834300886]"}
{"prompt":"Ticking the 'Show children of the current category' box on the Product Categories widget offers inconsistent behaviour across different elements.\r\n\r\nOn Category archives it correctly shows children.\r\n\r\nOn Product Tag archives it shows all site categories, not just those relevant to the tag. Clicking any entry does not refine/filter the Product Tag view, it just navigates to the category.\n\n### Expected behavior\n\nClicking on a Category within the widget on a tag archive refines/filters the view of the tag to only show products that that tag and category.\n\n### Actual behavior\n\nOn Product Tag archives the widget shows all site categories, not just those relevant to the tag. Clicking any entry does not refine/filter the Product Tag view, it just navigates to the category.\n\n### Steps to reproduce\n\nConfigure product tags\r\nEnable the Product Categories widget in the sidebar and tick 'show children of the current category'\r\nNavigate to a tag archive (eg. https://site/products/product-tag)\r\nClick any category in the widget\r\n\n\n\n\n###\n\n","completion":" [1891051438]"}
{"prompt":"Summary: Update old JITMs in WooCommerce.\r\n\r\nMinor copy tweaks and suggestions on which outdated JITMs to remove [in this doc](https://docs.google.com/document/d/14aXzKLLpNVo5rz10Bjqkqb7NgSRu1UVzWk-PfRAN0hY/edit).\r\n\r\nAll JITMs need an updated Woo logo (with the new purple), and possibly the blue button colour is at odds with our current colour schemes.\n\n### Describe alternatives you've considered\n\nThere are no alternatives.\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"we'll remove the inbox notifications with a low conversion rate. \r\n\r\n\r\n**Acceptance criteria:**\r\nThe following notifications should be removed (I'm not sure if some were already removed as they're still showing up in the Inbox stats):\r\n\r\n- [ ] wc-admin-first-five-things-to-customize\r\n- [x] wc-admin-navigation-nudge\n- [ ] wc-admin-insight-first-product-and-payment\r\n- [ ] wc-admin-first-downloadable-product\r\n- [ ] wc-admin-adding-and-managing-products\r\n- [ ] wc-admin-getting-started-in-ecommerce\r\n- [x] eu_vat_changes_2021\n- [x] wc-admin-onboarding-email-marketing\n- [ ] wc-admin-manage-store-activity-from-home-screen\r\n- [x] wc-admin-learn-more-about-variable-products\n- [x] wc-admin-marketing-intro (I'd like to confirm the content of this message before removing it)\n- [ ] wc_shipping_mobile_app_q4_2021  (I'd like to confirm the content of this message before removing it)\r\n- [ ] wc-admin-first-product\r\n- [ ] wc-admin-update-store-details\r\n- [ ] wc-admin-insight-first-sale\r\n- [x] wc-admin-complete-store-details\n- [ ] wc-admin-welcome-to-woocommerce-for-store-users\r\n\r\n\r\n\r\n\r\n\n\n###\n\n","completion":" [3943424960]"}
{"prompt":"the \"Dismiss\" button is only visible when the user hovers the message. Due to this behavior, users may not realize that it is possible to remove messages when they are skimming through the panel. We also think this is why there's such a high % of users with 25 messages in the panel. Improving the visibility of the \"Dismiss\" button will help users to remove unnecessary/irrelevant notifications. \r\n\r\n**Acceptance criteria:**\r\n- [ ] Show the dismiss button permanently in the Inbox message instead of just showing it on hover.\n\n###\n\n","completion":" [3943424960]"}
{"prompt":"we show up to 25 notifications on the Inbox panel. This volume of messages makes it difficult to parse all the information and we don't offer an easy way to see older messages. The users need to delete messages to see older messages, which is a poor user experience. \r\n\r\n**Acceptance criteria- [x] Change the Inbox messages limit from 25 to 5\r\n- [x] Display the 5 most recent messages with a \"Show older\" CTA at the bottom of the panel\r\n- [x] Load 10 messages when the user clicks \"Show older\" and change the CTA copy to \"Show more\"\r\n- [x] The \"Show more\" CTA always loads the next 10 messages and it's displayed at the bottom until all messages are loaded\r\n\r\n![MVP -_ Default](https://user-images.githubusercontent.com/3380168/193565553-2b707a91-0c78-40ca-a731-ea077126a4ec.png)\r\n![MVP -_ Expanded](https://user-images.githubusercontent.com/3380168/193565571-18cc221d-3110-42c3-b7a1-292d8ce67840.png)\r\n\r\n\r\n**Event Tracking:**\r\nWe should add a new event to track the new CTA interactions.\n\n###\n\n","completion":" [3943424960]"}
{"prompt":"At the moment, a high percentage of users have reached the limit of the number of messages shown on the panel (25). This creates an overwhelming experience, making it difficult to parse all the information and distinguish new messages from older content. This epic will include a number of low-effort improvements to increase the visibility of new messages.\n\n###\n\n","completion":" [3943424960]"}
{"prompt":"### Prerequisites\r\n\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\nThanks to @enricobattocchi for finding this!\r\n\r\nThe \"Product short description\" field (both visual and text editor) fails to save or update in 7.0 Beta/RC. I can confirm this works in 6.9.4\r\n\r\n### Expected behavior\r\n\r\nOn adding a new product or updating existing product information in \"Product short description\" field should be saved\r\n\r\n### Actual behavior\r\n\r\nOn adding a new product or updating existing product information in \"Product short description\" field fails to save.\r\n\r\n### Steps to reproduce\r\n\r\n1. In wp-admin Add New Product (or open existing product)\r\n2. Enter information into \"Product short description\" \r\n3. Save/Update\r\n4. See information wasn't saved\r\n\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"If any meta value that is going to be printed in the \"Custom Fields\" section of an order screen (/wp-admin/admin.php?page=wc-orders&id=(ID)&action=edit) is not a string, then a TypeError exception (and crash, being uncaught) will occur because the variable is passed to `htmlspecialchars()` as-is, without having been turned back to a string.\r\n\r\nN.B. https://woocommerce.github.io/code-reference/classes/WC-Data.html#method_update_meta_data shows that it is valid to store non-strings as meta-values.\r\n\r\n### Actual behavior\r\n\r\n```\r\nPHP Fatal error:  Uncaught TypeError: htmlspecialchars(): Argument #1 ($string) must be of type string, stdClass given in wp-includes/formatting.php:4604\r\nStack trace:\r\n#0 wp-includes/formatting.php(4604): htmlspecialchars()\r\n#1 wp-admin/includes/template.php(643): esc_textarea()\r\n#2 wp-admin/includes/template.php(600): _list_meta_row()\r\n#3 wp-content/plugins/woocommerce/src/Internal/Admin/Orders/MetaBoxes/CustomMetaBox.php(74): list_meta()\r\n#4 wp-content/plugins/woocommerce/src/Internal/Admin/Orders/MetaBoxes/CustomMetaBox.php(60): Automattic\\WooCommerce\\Internal\\Admin\\Orders\\MetaBoxes\\CustomMetaBox->render_custom_meta_form()\r\n#5 wp-content/plugins/woocommerce/src/Internal/Admin/Orders/Edit.php(172): Automattic\\WooCommerce\\Internal\\Admin\\Orders\\MetaBoxes\\CustomMetaBox->output()\r\n#6 wp-admin/includes/template.php(1402): Automattic\\WooCommerce\\Internal\\Admin\\Orders\\Edit->render_custom_meta_box()\r\n#7 wp-content/plugins/woocommerce/src/Internal/Admin/Orders/Edit.php(251): do_meta_boxes()\r\n#8 wp-content/plugins/woocommerce/src/Internal/Admin/Orders/Edit.php(180): Automattic\\WooCommerce\\Internal\\Admin\\Orders\\Edit->render_meta_boxes()\r\n#9 wp-content/plugins/woocommerce/src/Internal/Admin/Orders/PageController.php(163): Automattic\\WooCommerce\\Internal\\Admin\\Orders\\Edit->display()\r\n#10 wp-includes/class-wp-hook.php(307): Automattic\\WooCommerce\\Internal\\Admin\\Orders\\PageController->output()\r\n#11 wp-includes/class-wp-hook.php(331): WP_Hook->apply_filters()\r\n#12 wp-includes/plugin.php(476): WP_Hook->do_action()\r\n#13 wp-admin/admin.php(259): do_action()\r\n#14 {main}\r\n  thrown in wp-includes/formatting.php on line 4604\r\n```\r\n\r\n### Steps to reproduce\r\n\r\nIn this example, order ID 1234 is an existing order.\r\n\r\n```\r\n# php80 -a\r\n> require 'wp-load.php';\r\n> $order = wc_get_order(1234); // Some existing order\r\n> $thing = new stdClass;\r\n> $thing->value = 'anything';\r\n> $order->update_meta_data('any_key', $thing);\r\n> $order->save();\r\n> exit;\r\n```\r\n\r\nThen visit the order page - /wp-admin/admin.php?page=wc-orders&id=1234&action=edit\r\n\r\n\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"This issue is to implement the \"Create a new campaign\" modal and its functionality.\r\n\r\nLink to Figma design: 7cNed5RvTasoLgn38Hea0R-fi-2116%3A81074\r\n\r\nWhen some channels are installed: \r\n\r\n<img width=\"517\" alt=\"image\" src=\"https://user-images.githubusercontent.com/417342/193331527-98177694-8008-4e1e-92fc-31f162c514ae.png\">\r\n\r\n<img width=\"756\" alt=\"image\" src=\"https://user-images.githubusercontent.com/417342/193331557-096bbb79-9e37-4a53-b1d0-e5ff8b79d072.png\">\r\n\r\nWhen all channels are installed:\r\n\r\n<img width=\"516\" alt=\"image\" src=\"https://user-images.githubusercontent.com/417342/193331619-506c6166-7be5-4c16-a7f7-4a96d29f0163.png\">\r\n\n\n###\n\n","completion":" [4327454247]"}
{"prompt":"This is a task issue to modify the \"Installed extensions\" card and \"Discover more marketing tools\" card to exclude marketing channels in the multichannel marketing page. Marketing channels would show up in the \"Channels\" card as per task issue https://github.com/woocommerce/woocommerce/issues/34906.\r\n\r\nLink to Figma design: 7cNed5RvTasoLgn38Hea0R-fi-2145%3A84807\r\n\r\n<img width=\"444\" alt=\"image\" src=\"https://user-images.githubusercontent.com/417342/206417375-ee6829cf-c687-45a2-bac4-b438ddce2d89.png\">\r\n\r\nThe design is the same as what we already have now since previous task issue https://github.com/woocommerce/woocommerce/issues/34025. What we need to do in this issue is to change the data fetching and handling logic.\r\n\r\n\n\n###\n\n","completion":" [4327454247]"}
{"prompt":"This issue is to implement the \"Channels\" card in the Marketing page.\r\n\r\nLink to Figma design: 7cNed5RvTasoLgn38Hea0R-fi-2145%3A84807\r\n\r\nWhen none of the channels are installed:\r\n\r\n<img width=\"494\" alt=\"image\" src=\"https://user-images.githubusercontent.com/417342/193329044-310cf160-afb6-4105-ab11-7b1445392bd3.png\">\r\n\r\nWhen some of the channels are installed:\r\n\r\n<img width=\"649\" alt=\"image\" src=\"https://user-images.githubusercontent.com/417342/193329422-3ce2afea-d788-4760-93c8-bfd288eedfb2.png\">\r\n\r\nWhen all channels are installed:\r\n\r\n<img width=\"653\" alt=\"image\" src=\"https://user-images.githubusercontent.com/417342/193329516-edfe8342-7c49-4d72-9113-8e55e99a9db9.png\">\n\n###\n\n","completion":" [4327454247]"}
{"prompt":"This is a task issue to implement the \"Campaigns\" card in the multichannel marketing page.\r\n\r\nLink to Figma design: 7cNed5RvTasoLgn38Hea0R-fi-2145%3A84807\r\n\r\n- Campaign title links to campaign data within channel extension. \r\n- Additional data row can be hidden if no data to pull (for MVP), or changed accordingly depending on channel.\r\n- Note: in our initial MVP, we will have the \"Cost\" column, but not the \"Sales\" and \"Sessions\" columns.\r\n\r\n## Designs\r\n\r\nDefault:\r\n\r\n<img width=\"406\" alt=\"image\" src=\"https://user-images.githubusercontent.com/417342/206412986-cece7a01-4e54-4095-be17-08627fea5722.png\">\r\n\r\nWith pagination: \r\n\r\n<img width=\"415\" alt=\"image\" src=\"https://user-images.githubusercontent.com/417342/206413360-1afda158-bf10-4991-a936-f6b548def227.png\">\r\n\r\nEmpty state:\r\n\r\n<img width=\"425\" alt=\"image\" src=\"https://user-images.githubusercontent.com/417342/206413471-0836bc4c-4b07-4028-9376-2e5757fa1a61.png\">\r\n\r\nIf we can't pull some data:\r\n\r\n<img width=\"503\" alt=\"image\" src=\"https://user-images.githubusercontent.com/417342/206414395-e072f6d7-77e8-4cd5-bd43-90a585258170.png\">\r\n\n\n###\n\n","completion":" [4327454247]"}
{"prompt":"This task issue is to add the introduction banner card into the multichannel marketing page.\r\n\r\nLink to Figma design: 7cNed5RvTasoLgn38Hea0R-fi-2145%3A84807\r\n\r\n- The introduction banner card is shown to New to Woo users & Existing supported channel users who are seeing multichannel for the first time.\r\n- Its purpose is to introduce multichannel benefits and new features. \r\n- 3 variations: new users (no channels installed), existing users w/o campaigns, existing users w/ campaigns.\r\n- User can dismiss the card.\r\n\r\n## Design\r\n\r\nNew users:\r\n\r\n<img width=\"540\" alt=\"image\" src=\"https://user-images.githubusercontent.com/417342/206415766-80b95658-49e6-4d89-867a-546b7f236d93.png\">\r\n\r\nExisting users:\r\n\r\n<img width=\"552\" alt=\"image\" src=\"https://user-images.githubusercontent.com/417342/206415805-1260f87d-9baa-4700-9e32-a4a96cb9cf09.png\">\r\n\r\n## Technical\r\n\r\n- Store the \"card dismissed\" state as a new WP Option.\r\n\n\n###\n\n","completion":" [4327454247]"}
{"prompt":"In the post-table implementation, all the column rendering methods are called via hooks, which is not the case anymore with HPOS. In HPOS, they are called directly. Therefore there is no option to modify the values in the columns (Or insert values before/after).\r\n\r\nThis issue tracks rendering column values via action so that extensibility parity is maintained with the posts list.\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"This issue scopes adding flag for it HPOS is enabled for shops that have opted into sharing the usage data.\n\n###\n\n","completion":" [3834300886]"}
{"prompt":" ‚ÄúSet up payments‚Äù task is displayed while they‚Äôre already fully onboarded with WC Pay.\r\n\r\n<img width=\"787\" alt=\"Screenshot 2022-09-29 at 09 53 05\" src=\"https://user-images.githubusercontent.com/4344253/193181519-fd5831e1-0b7b-4654-9474-bf29f4748005.png\">\r\n\n\n### Expected behavior\n\n ‚ÄúSet up payments‚Äù task is hidden when they‚Äôre already fully onboarded with WC Pay.\n\n### Actual behavior\n\n ‚ÄúSet up payments‚Äù task is displayed while they‚Äôre already fully onboarded with WC Pay.\n\n### Steps to reproduce\n\n1. Go to OBW\r\n2. Choose US as store country in the step 1\r\n3. Complete OBW with WCPay installed.\r\n4. Go to WooCommerce > Home\r\n5. Complete \"Set up WooCommerce Payments\" task\r\n6. Complete the remaining tasks on task list\r\n7. When you complete all tasks, observe that \"Set up payments task\" is displayed.\n\n\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"Info icon (i) text fails to show padding after clicking on Product types step of OBW.\r\n\r\n### Expected behavior\r\n\r\nInfo icon (i) text should show padding after clicking on Product types step of OBW.\r\n\r\n### Actual behavior\r\n\r\nInfo icon (i) text fails to show padding after clicking on Product types step of OBW.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using Jurassic Ninja.\r\n2. Install and activate all the required plugins.\r\n3. Go to OBW.\r\n4. Go to Product types step.\r\n5. Click on an info icon (i).\r\n6. Observe that, Info icon (i) text fails to show with padding.\r\n\r\n### Screenshot:\r\n\r\n![#34884](https://user-images.githubusercontent.com/41110392/193059224-25d51547-e71b-4192-91ab-0f94b3a3eaa8.jpg)\r\n\r\n\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"Help icon text fails to show padding after hovering over Help button on \"Products > Add New (MVP)\" page.\r\n\r\n### Expected behavior\r\n\r\nHelp icon text should display properly with padding after hovering over Help button on \"Products > Add New (MVP)\" page.\r\n\r\n### Actual behavior\r\n\r\nHelp icon text fails to show padding after hovering over Help button on \"Products > Add New (MVP)\" page.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using JN sites.\r\n2. Install and activate all the required plugins.\r\n3. Install WooCommerce Admin Test Helper\r\n4. In Tools > WCA Test Helper > Features toggle new-product-management-experience to True\r\n5. Go to Products > Add New (MVP) and create a product.\r\n6. Hover over Help icon beside Feature this product tooltip.\r\n7. Observe that, Help icon text fails to show padding after hovering\r\n\r\n### Instruction Link:\r\nhttps://github.com/woocommerce/woocommerce/wiki/Release-Testing-Instructions-WooCommerce-7.0#price-section---small-refactor-and-style-fix-34558\r\n\r\n### Screenshot:\r\n\r\n![#34883](https://user-images.githubusercontent.com/41110392/193048082-6d4b6e37-11cd-48bd-9495-51c9ff4a5bde.jpg)\r\n\r\n\n\n###\n\n","completion":" [1891051461,4370026978]"}
{"prompt":"When updating an order with the PUT endpoint (/wp-json/wc/v3/orders/<id>), we try sending:\r\n    \"date_completed\": null,\r\n    \"date_completed_gmt\": null,\r\nBut the values don‚Äôt update to null. \r\nWe also send ‚Äústatus\" : \"pending‚Äù in the same request and the status changes.\n\n### Expected behavior\n\nThe values of the fields date_completed and date_completed_ gmt should change to null.\n\n### Actual behavior\n\nThe values of the fields date_completed and date_completed_ gmt stay the same.\n\n### Steps to reproduce\n\nSend a PUT request to (/wp-json/wc/v3/orders/<id> on a comleted order. The request contains the following data:\r\n{ \r\n\"status\" : \"pending\", \r\n\"date_completed\" : null, \r\n\"date_completed_gmt\": null \r\n}\n\n\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"_This task is framed in the context of the COT/HPOS project but the implementation will be useful for any future new feature as well_\r\n\r\nAfter https://github.com/woocommerce/woocommerce/pull/34727 is merged we need to do something when there are plugins that are incompatible with one or more of the existing features.\r\n\r\nTo start with, we decide that a given plugin is incompatible with a given feature if either:\r\n\r\n1. It explicitly declares incompatibility with the feature using the `FeaturesController` class introduced in the mentioned pull request; or\r\n2. It has a `WC tested up to` header but does _not_ declare compatibility with the feature.\r\n\r\nNow, the \"something\" to do is:\r\n\r\n1. In the WordPress plugins page, show a warning under the plugin name, indicating that the plugin is incompatible with one or more features. Similar to this, but the message will be more like \"Incompatible with X existing features, click here to manage WooCommerce features\"\r\n\r\n![image](https://user-images.githubusercontent.com/937723/192739534-4ea573f4-c7a5-4745-a00d-6fa72f15745f.png)\r\n\r\n2. Additionally, if at least one of the features is enabled, it won't be possible to activate the plugin:\r\n\r\n![image](https://user-images.githubusercontent.com/937723/192740050-6e96fc99-3d51-47f1-86f9-40e1b9a882fd.png)\r\n\r\n3. Disallow enabling a feature if at least one incompatible plugin is active.\r\n\r\n4. Under each disabled feature show a warning with the count of incompatible plugins, together with a link to a list of the plugins that are incompatible with the feature.\r\n\r\n![image](https://user-images.githubusercontent.com/937723/192745051-93d642f6-fd29-43b7-823d-16f8f64fdb11.png)\r\n\r\n6. The list of plugins incompatible with a given feature will be implemented as a new section in the WordPress plugins page, the section will only be visible when accessed via the said link:\r\n\r\n![image](https://user-images.githubusercontent.com/937723/192742540-dd79007d-04c1-4338-895d-b1c5aa8993ba.png)\r\n\r\ncc @jarekmorawski\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"If I read the categories from WooCommerce through the RestAPI,\r\nit didn't return categories, which are empty.\r\n\r\n### Expected behavior\r\n\r\nDownload all product categories including empty categories.\r\n\r\n### Actual behavior\r\n\r\nIf I read the categories from WooCommerce through the RestAPI,\r\nit didn't return categories, which are empty.\r\n\r\nGET Request is:\r\n`https://my.url.com/wp-json/wc/v3/products/categories?per_page=100&hide_empty=false&consumer_key=XYZ&consumer_secret=XYZ`\r\n\r\nIf I assign a product to a category, the category will be downloaded without any problem.\r\n\r\n### Steps to reproduce\r\n\r\nTry to download a empty (without products) product category through the RestAPI.\r\n\r\n\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"See https://github.com/woocommerce/woocommerce/issues/33988#issuecomment-1219915956\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\nStill need to investigate.\n\n###\n\n","completion":" [3943424887]"}
{"prompt":"For Atomic site, \"Country/ Region\" and \"Email address\" fails to save the store address after navigating back to \"Store Details\" tab from \"Industry\" tab.\r\n\r\n### Expected behavior\r\n\r\nFor Atomic site, \"Country/ Region\" and \"Email address\" should save the store address after navigating back to \"Store Details\" tab from \"Industry\" tab.\r\n\r\n### Actual behavior\r\n\r\nFor Atomic site, \"Country/ Region\" and \"Email address\" fails to save the store address after navigating back to \"Store Details\" tab from \"Industry\" tab.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using Atomic site.\r\n2. Install and activate all the required plugins.\r\n3. Complete the Onboarding setup wizard.\r\n4. Start OBW.\r\n5. Fill Store address and Email Address.\r\n6. Click on Contiune.\r\n7. Click on Store details header.\r\n8. Observe that, For Atomic site, \"Country/ Region\" and \"Email address\" fails to save the store address.\r\n\r\n### Video:\r\n\r\nhttps://user-images.githubusercontent.com/41110392/191990426-10ffbc26-4bb2-43e5-b09d-a1a418c37855.mp4\r\n\r\n\n\n###\n\n","completion":" [1891051446]"}
{"prompt":"For Atomic site, \"Shipping task\" fails to display after completing OBW on \"Woocommerce > Home\" page.\r\n\r\n### Expected behavior\r\n\r\nFor Atomic site, \"Shipping task should be displayed after completing OBW on \"Woocommerce > Home\" page.\r\n\r\n### Actual behavior\r\n\r\nFor Atomic site, \"Shipping task\" fails to display after completing OBW on \"Woocommerce > Home\" page.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using Atomic site.\r\n2. Install and activate all the required plugins.\r\n3. Complete the Onboarding setup wizard.\r\n4. Go to Woocommerce > Home\r\n5. Observe that, For Atomic site, \"Shipping task\" fails to display on Woocommerce > Home page after completing OBW.\r\n\r\n### Screenshot:\r\n\r\n![#34815](https://user-images.githubusercontent.com/41110392/191986076-a7a221ff-a2c5-4954-9ab9-826afc930426.jpg)\r\n\r\n\n\n###\n\n","completion":" [1891051446]"}
{"prompt":"Ukraine is missing 3 subdivisions, Kyiv, Sevastopol, and the Autonomous Republic of Crimea, according to https://en.wikipedia.org/wiki/ISO_3166-2:UA and https://www.iso.org/obp/ui/#iso:code:3166:UA. \r\n\r\n### Expected behavior\r\n\r\nKyiv, Sevastopol, and the Autonomous Republic of Crimea should appear along with the existing Oblasts, since they do not fall under these subdivisions. \r\n\r\n### Actual behavior\r\n\r\nCurrently, these 3 subdivisions are missing from the states.php file. \r\n\r\n### Steps to reproduce\r\n\r\nUkrainian Subdivisions can be found starting on line 1795 of states.php\r\n\r\nhttps://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/i18n/states.php#L1795\r\n\r\n\n\n###\n\n","completion":" [468434635]"}
{"prompt":"When the owner of the Jetpack connection is not the user who is currently logged in, he should not see the WooCommerce Mobile App item in the additional task list\r\n\r\n\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"When there‚Äôs an error with sending the magic link, we already show We just sent you the magic link which I think is premature. There‚Äôs a toast message to let users know it erred, but this could also confuse some users. I think having a loading indicator and showing success/failure in modal would be a great improvement.\r\n\r\nIf possible, we‚Äôd add a loading state to the ‚ú®Ô∏è Send the sign-in link button, much like in the Jetpack installation step.\r\n\r\n![image](https://user-images.githubusercontent.com/27843274/191898944-55cec699-b548-4072-bef9-6add309552c5.png)\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"In WooCommerce Payments, we display a task list in Payments > Overview, using [`CollapsibleList`](https://github.com/woocommerce/woocommerce/blob/trunk/packages/js/experimental/src/experimental-list/collapsible-list/index.tsx) and [`TaskItem`](https://github.com/woocommerce/woocommerce/blob/trunk/packages/js/experimental/src/experimental-list/task-item/index.tsx) from '@woocommerce/experimental' (see [here](https://github.com/Automattic/woocommerce-payments/blob/0b2030b7a99210461f5a3a35b97f9400a3a1654c/client/overview/task-list/index.js#L177-L219));\r\n\r\nWe noticed that the dismiss action from the ellipses menu gets cut off when we open it. The text is not readable and it's impossible to dismiss the task (see the issue raised: https://github.com/Automattic/woocommerce-payments/issues/4470).\r\nThis is only happening when the Gutenberg plugin is also installed. Gutenberg comes with `@wordpress/components` v20.0.0 and WooCommerce Payments bundles v11.1.5, so once Gutenberg is installed, the site is using v20.0.0.\r\n\r\n![Screen Recording 7-21-2022 at 8 45 PM](https://user-images.githubusercontent.com/5121465/180345688-ef7d402b-499e-4ee1-a438-9a727309f0e8.gif)\r\n\r\nThe same behavior can be observed in the TaskList StoryBook: https://woocommerce.github.io/woocommerce-admin/components/storybook/?path=/story/woocommerce-admin-experimental-list--task-item-example\r\n\r\nIt looks like this is due to a change in how the ellipsis menu is built in `@wordpress/components`. There used to be a `position: fixed` on one of the `<div>` from the ellipsis menu (v11.1.5), and I can see now that it uses `position: absolute`. \r\nAnd the TaskItem defines a class with an `overflow: hidden` rule (see [here](https://github.com/woocommerce/woocommerce/blob/ea6a0d31f999a60f99b3625071b860476255629a/plugins/woocommerce-admin/client/tasks/task-list.scss#L2)), which now affects the absolute positioned div from the menu (while it had no effects on it when it was fixed).\r\n\r\n![image](https://user-images.githubusercontent.com/28830738/191742281-e796e546-5ce6-4e8f-a271-201730f20c67.png)\r\n\r\nWe may just need to remove the `position: relative` on `woocommerce-experimental-list__item` and move it one level up, to avoid having the absolute div relatively positioned to the element with hidden overflow.\r\n\r\n### Expected behavior\r\n\r\nWhen clicking on the ellipsis menu from a task, we can see the content and dismiss the task.\r\n\r\n### Actual behavior\r\n\r\nWhen clicking on the ellipsis menu from a task, we cannot see the content and dismiss the task.\r\n\r\n### Steps to reproduce\r\n\r\n1. Go to https://woocommerce.github.io/woocommerce-admin/components/storybook/?path=/story/woocommerce-admin-experimental-list--task-item-example\r\n2. Click on the ellipsis menu and observe that the content cannot be seen properly\r\n\r\n\n\n###\n\n","completion":" [3943424887]"}
{"prompt":"Following error in Woocommerce Status Log/s.\r\n\r\nThe error because 'wcadmin_active_for' rule doesnt have 'days' key. so the validation fail. see this lines:\r\n\r\nhttps://github.com/woocommerce/woocommerce/blob/c4628b966be16218a99d093cf3672ad79a4f235e/plugins/woocommerce/src/Admin/RemoteInboxNotifications/DataSourcePoller.php#L144\r\n\r\nhttps://github.com/woocommerce/woocommerce/blob/c4628b966be16218a99d093cf3672ad79a4f235e/plugins/woocommerce/src/Admin/RemoteInboxNotifications/WCAdminActiveForRuleProcessor.php#L54\r\n\r\n\r\n\r\n```\r\nhttpswoocommerce.comwp-jsonwccominbox-notifications1.0notifications.json-2022-09-13-a81dc66affef0c40c08187abdd1f0e31.log (13/09/2022 at 5:37 pm NZST) View\r\n2022-09-13T05:37:48+00:00 ERROR Spec is invalid because a rule is invalid in feed\r\n2022-09-13T05:37:48+00:00 ERROR stdClass Object\r\n(\r\n    [type] => wcadmin_active_for\r\n    [operation] => >\r\n    [months] => 11\r\n)\r\n\r\n2022-09-13T05:37:48+00:00 ERROR stdClass Object\r\n(\r\n    [slug] => googlelistings_signals2022_hasGLA\r\n    [type] => marketing\r\n    [status] => unactioned\r\n    [is_snoozable] => 0\r\n    [source] => woocommerce.com\r\n    [locales] => Array\r\n        (\r\n            [0] => stdClass Object\r\n                (\r\n                    [locale] => en_US\r\n                    [title] => Show off your products with Ads on Google\r\n                    [content] => You‚Äôre ready to grow with ads. Google optimizes for performance across your products; you only pay for results. If you‚Äôre new to Google, you can earn up to $500 in ad credits (T&Cs apply). <a href=\"https://woocommerce.com/my-account/create-a-ticket/\">Contact support</a> if you need guidance with Google Listings & Ads.\r\n                )\r\n\r\n        )\r\n\r\n    [actions] => Array\r\n        (\r\n            [0] => stdClass Object\r\n                (\r\n                    [name] => googlelistings_signals2022_hasGLA_click\r\n                    [locales] => Array\r\n                        (\r\n                            [0] => stdClass Object\r\n                                (\r\n                                    [locale] => en_US\r\n                                    [label] => Connect Google Listings & Ads\r\n                                )\r\n\r\n                        )\r\n\r\n                    [url] => admin.php?page=wc-admin&path=marketing\r\n                    [url_is_admin_query] => 1\r\n                    [is_primary] => 1\r\n                    [status] => unactioned\r\n                )\r\n\r\n        )\r\n\r\n    [rules] => Array\r\n        (\r\n            [0] => stdClass Object\r\n                (\r\n                    [type] => publish_after_time\r\n                    [publish_after] => 2022-09-12 07:23:39\r\n                )\r\n\r\n            [1] => stdClass Object\r\n                (\r\n                    [type] => publish_before_time\r\n                    [publish_before] => 2022-10-12 23:59:00\r\n                )\r\n\r\n            [2] => stdClass Object\r\n                (\r\n                    [type] => plugins_activated\r\n                    [plugins] => Array\r\n                        (\r\n                            [0] => google-listings-and-ads\r\n                        )\r\n\r\n                )\r\n\r\n            [3] => stdClass Object\r\n                (\r\n                    [type] => wcadmin_active_for\r\n                    [operation] => >\r\n                    [months] => 11\r\n                )\r\n\r\n            [4] => stdClass Object\r\n                (\r\n                    [type] => product_count\r\n                    [operation] => >\r\n                    [value] => 76\r\n                )\r\n\r\n            [5] => stdClass Object\r\n                (\r\n                    [type] => order_count\r\n                    [operation] => >\r\n                    [value] => 38\r\n                )\r\n\r\n            [6] => stdClass Object\r\n                (\r\n                    [type] => total_payments_value\r\n                    [days] => last_year\r\n                    [value] => 3700\r\n                    [operation] => >\r\n                )\r\n\r\n        )\r\n\r\n)\r\n\r\n2022-09-13T05:37:48+00:00 ERROR Spec is invalid because a rule is invalid in feed\r\n2022-09-13T05:37:48+00:00 ERROR stdClass Object\r\n(\r\n    [type] => wcadmin_active_for\r\n    [operation] => >\r\n    [months] => 11\r\n)\r\n\r\n2022-09-13T05:37:48+00:00 ERROR stdClass Object\r\n(\r\n    [slug] => googlelistings_signals2022_noGLA\r\n    [type] => marketing\r\n    [status] => unactioned\r\n    [is_snoozable] => 0\r\n    [source] => woocommerce.com\r\n    [locales] => Array\r\n        (\r\n            [0] => stdClass Object\r\n                (\r\n                    [locale] => en_US\r\n                    [title] => Show off your products with Ads on Google\r\n                    [content] => You‚Äôre ready to grow with ads. Google optimizes for performance across your products; you only pay for results. If you‚Äôre new to Google, you can earn up to $500 in ad credits (T&Cs apply). <a href=\"https://woocommerce.com/my-account/create-a-ticket/\">Contact support</a> if you need guidance with Google Listings & Ads.\r\n                )\r\n\r\n        )\r\n\r\n    [actions] => Array\r\n        (\r\n            [0] => stdClass Object\r\n                (\r\n                    [name] => googlelistings_signals2022_noGLA\r\n                    [locales] => Array\r\n                        (\r\n                            [0] => stdClass Object\r\n                                (\r\n                                    [locale] => en_US\r\n                                    [label] => Connect Google Listings & Ads\r\n                                )\r\n\r\n                        )\r\n\r\n                    [url] => https://woocommerce.com/products/google-listings-and-ads/?utm_medium=product&utm_source=inbox_note&utm_campaign=googlelistings_signals2022_noGLA\r\n                    [url_is_admin_query] => \r\n                    [is_primary] => 1\r\n                    [status] => unactioned\r\n                )\r\n\r\n        )\r\n\r\n    [rules] => Array\r\n        (\r\n            [0] => stdClass Object\r\n                (\r\n                    [type] => publish_after_time\r\n                    [publish_after] => 2022-09-12 07:27:46\r\n                )\r\n\r\n            [1] => stdClass Object\r\n                (\r\n                    [type] => publish_before_time\r\n                    [publish_before] => 2022-10-12 23:59:00\r\n                )\r\n\r\n            [2] => stdClass Object\r\n                (\r\n                    [type] => not\r\n                    [operand] => Array\r\n                        (\r\n                            [0] => stdClass Object\r\n                                (\r\n                                    [type] => plugins_activated\r\n                                    [plugins] => Array\r\n                                        (\r\n                                            [0] => google-listings-and-ads\r\n                                        )\r\n\r\n                                )\r\n\r\n                        )\r\n\r\n                )\r\n\r\n            [3] => stdClass Object\r\n                (\r\n                    [type] => wcadmin_active_for\r\n                    [operation] => >\r\n                    [months] => 11\r\n                )\r\n\r\n            [4] => stdClass Object\r\n                (\r\n                    [type] => product_count\r\n                    [operation] => >\r\n                    [value] => 76\r\n                )\r\n\r\n            [5] => stdClass Object\r\n                (\r\n                    [type] => order_count\r\n                    [operation] => >\r\n                    [value] => 38\r\n                )\r\n\r\n            [6] => stdClass Object\r\n                (\r\n                    [type] => total_payments_value\r\n                    [days] => last_year\r\n                    [value] => 3700\r\n                    [operation] => >\r\n                )\r\n\r\n        )\r\n\r\n)\r\n```\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nno error\r\n\r\n### Actual behavior\r\n\r\nerror\r\n\r\n### Steps to reproduce\r\n\r\n-\r\n\r\n\n\n###\n\n","completion":" [3943424960]"}
{"prompt":"While activating the WooCommerce 7.0.0-hpos.dev.1 on the new site got the error.\r\n\r\nHere is the error:\r\n```PHP Fatal error:  Uncaught Error: Class 'Automattic\\WooCommerce\\Admin\\Features\\Analytics' not found in /wp-content/plugins/woocommerce/src/Internal/Features/FeaturesController.php:312```\n\n### Expected behavior\n\nThe plugin must activate successfully.\n\n### Actual behavior\n\nThe plugin is not activated. After a second try, it is activated but not showing the WooCommerce menu.\n\n### Steps to reproduce\n\nBelow is the video to reproduce the issue.\r\n- https://www.awesomescreenshot.com/video/11245510?key=bdb2db6b16d242b4a13964263a0ecb6c\n\n\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"The `wc_customer_bought_product` function query is not updated with respect to the custom order table. It is still using the post and post_meta table to get the orders. Hence it returns an incorrect result.\n\n### Expected behavior\n\nIt should take the order from the post or custom order table based on the HPOS opt-in option.\r\nAs mentioned below.\r\nhttps://github.com/woocommerce/woocommerce/wiki/High-Performance-Order-Storage-Upgrade-Recipe-Book#detecting-whether-hpos-tables-are-being-used-in-the-store\n\n### Actual behavior\n\nIt is taking the order from the post and post_meta tables irrespective of the HPOS opt-in option and returns the wrong result.\r\n\n\n### Steps to reproduce\n\nI have used this function in custom code. You will get it once you check the definition of the `wc_customer_bought_product` function.\n\n\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"\"Industry\" options fails to save in the Industry step after reloading the page for OBW.\r\n\r\n### Expected behavior\r\n\r\n\"Industry\" options should be saved in the Industry step after reloading the page for OBW.\r\n\r\n### Actual behavior\r\n\r\n\"Industry\" option fails to save in the Industry step after reloading the page for OBW.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site.\r\n2. Install and activate all the required plugins.\r\n3. Install and activate WooCommerce 7.0 Beta.\r\n4. Go to Woocommerce > Setting.\r\n5. Click on \"Help\".\r\n6. Click on \"Setup wizard\".\r\n7. Click on \"Setup wizard\".\r\n9. Fill store details and click on \"continue\" button.\r\n10. On \"Industry\" tab select one or more option and click on \"continue\" button.\r\n11. Click on previous \"Industry\" tab.\r\n12. Reload the page\r\n13. Observe that, \"Industry\" options fails to save in the Industry step after reloading the page for OBW.\r\n\r\n### Video:\r\n\r\nhttps://user-images.githubusercontent.com/41110392/191537481-6eebbd60-92ff-470f-8abe-025c53fa6a24.mp4\r\n\r\n\n\n###\n\n","completion":" [1891051446,3943424887]"}
{"prompt":"The bug is present in WooCommerce `trunk` as of the time of writing this (it's not present in the latest released version, 6.9.3)\r\n\r\nIt's not possible to generate an API key through the WooCommerce - Settings - Advanced - REST API - Add key button (URL: `/wp-admin/admin.php?page=wc-settings&tab=advanced&section=keys&create-key=1`), the screen keeps showing a progress indicator forever and the network inspeactor shows that the `POST /wp-admin/admin-ajax.php` request (action: `woocommerce_update_api_key`) has resulted in a 500 error.\r\n\r\nThe error is thrown in the backend by `WCAdminAssets::get_script_asset_filename` while trying to resolve the path for the file `assets/client/admin/wp-admin-scripts/payment-method-promotions`. The `assets/client/admin` folder exists but it's empty.\r\n\r\nThis is also causing the E2E tests to fail, since as part of the tests setup a key is created using the said settings page.\r\n\r\n### Expected behavior\r\n\r\nThe requested file exists and the error doesn't appear, the key creation succeeds and so do the E2E tests.\r\n\r\n### Steps to reproduce\r\n\r\n1. Start with a fresh clone of the WooCommerce repository in `trunk`\r\n2. `pnpm install`, then `pnpm run build`\r\n3. Notice how `plugins/woocommerce/assets/client/admin` folder exists and is empty\r\n4. Try to create a REST API key by going to Settings - Advanced - REST API - Add key and see the described behavior\r\n\r\nPossibly related: `pnpm run build` does actually succeed for 22 tasks and fails for the last one:\r\n\r\n> ERROR in client/tasks/fills/tax/woocommerce-tax/plugins.tsx:77:5\r\nwoocommerce/client/admin:turbo:build: TS2322: Type '{ onComplete: (activatedPlugins: string[], response: InstallPluginsResponse) => void; onError: (errors: unknown, response: unknown) => void; onSkip: () => void; skipText: string; onAbort: () => void; abortText: string; }' is not assignable to type 'IntrinsicAttributes & { children?: ReactNode; }'.\r\n\r\nIn WooCommerce 6.9.3 22 tasks succeed and none fails.\r\n\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"Our onClick listener is queries for the button's text content. This means that if the content changes (such as when translated) would render the query invalid.\r\n\r\nhttps://github.com/woocommerce/woocommerce/blob/1293e4ad312ff7778099bd35aee6384526f1442c/plugins/woocommerce-admin/client/guided-tours/add-product-tour/utils.ts#L28\r\n\r\nButton text which is translated: https://github.com/woocommerce/woocommerce/blob/4841595f2f6a8471024de61de890e2def41926fb/plugins/woocommerce/includes/admin/class-wc-admin-pointers.php#L78\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"- [x] https://github.com/woocommerce/mothra-private/issues/39\n- [ ] https://github.com/woocommerce/mothra-private/issues/40\n- [ ] https://github.com/woocommerce/mothra-private/issues/41\n\n\n###\n\n","completion":" [1891051461,4370024739]"}
{"prompt":"- [x] https://github.com/woocommerce/woocommerce/issues/34330\n- [x] https://github.com/woocommerce/woocommerce/issues/34331\n- [x] https://github.com/woocommerce/woocommerce/issues/34332\n- [x] https://github.com/woocommerce/woocommerce/issues/34333\n\n\n###\n\n","completion":" [1891051461,4370024739]"}
{"prompt":"When Storybook is run (`pnpm --filter=@woocommerce/storybook storybook`), Tour Kit stories do not load. In addition, it shows an error in both the Actions tab and in the web dev console.\n\n### Expected behavior\n\n* Tour Kit stories appear in Storybook\r\n* No errors when viewing other stories\n\n### Actual behavior\n\n* Tour Kit stories do not appear in Storybook\r\n* Error when viewing other stories\n\n### Steps to reproduce\n\n1. Run Storybook: `pnpm --filter=@woocommerce/storybook storybook`\r\n2. Go to any story\r\n3. See the following error in the Actions tab in Storybook, and in the web browser dev console\r\n\r\n```\r\nerror: \"Unexpected error while loading ./tour-kit/stories/index.tsx: exports is not defined\r\n ReferenceError: exports is not defined\r\n    at ../../node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/browser.js (http://localhost:6007/vendors-node_modules_pnpm_automattic_interpolate-components_1_2_1_adlholpkqbiq5amp2fy4vkqcli_-6aa8df.iframe.bundle.js:86363:1)\r\n    at __webpack_require__ (http://localhost:6007/runtime~main.iframe.bundle.js:28:33)\r\n    at fn (http://localhost:6007/runtime~main.iframe.bundle.js:347:21)\r\n    at ../../node_modules/.pnpm/@automattic+tour-kit@1.1.1_ewcciyhsqon3yluv5ntlvxyvvm/node_modules/@automattic/tour-kit/dist/esm/utils/index.js (http://localhost:6007/vendors-node_modules_pnpm_automattic_interpolate-components_1_2_1_adlholpkqbiq5amp2fy4vkqcli_-6aa8df.iframe.bundle.js:979:63)\r\n    at __webpack_require__ (http://localhost:6007/runtime~main.iframe.bundle.js:28:33)\r\n    at fn (http://localhost:6007/runtime~main.iframe.bundle.js:347:21)\r\n    at ../../node_modules/.pnpm/@automattic+tour-kit@1.1.1_ewcciyhsqon3yluv5ntlvxyvvm/node_modules/@automattic/tour-kit/dist/esm/components/tour-kit-frame.js (http://localhost:6007/vendors-node_modules_pnpm_automattic_interpolate-components_1_2_1_adlholpkqbiq5amp2fy4vkqcli_-6aa8df.iframe.bundle.js:282:64)\r\n    at __webpack_require__ (http://localhost:6007/runtime~main.iframe.bundle.js:28:33)\r\n    at fn (http://localhost:6007/runtime~main.iframe.bundle.js:347:21)\r\n    at ../../node_modules/.pnpm/@automattic+tour-kit@1.1.1_ewcciyhsqon3yluv5ntlvxyvvm/node_modules/@automattic/tour-kit/dist/esm/components/tour-kit.js (http://localhost:6007/vendors-node_modules_pnpm_automattic_interpolate-components_1_2_1_adlholpkqbiq5amp2fy4vkqcli_-6aa8df.iframe.bundle.js:688:73)\"\r\n```\n\n\n\n###\n\n","completion":" [3943425720]"}
{"prompt":"For Atomic site, \"Setup Check List\" gets hidden after reloading the page and displays \"You've completed store setup\" on \"Woocommerce > Home\" page.\r\n\r\n### Expected behavior\r\n\r\nFor Atomic site, \"Setup Check List\" should be displayed after reloading the page on \"Woocommerce > Home\" page.\r\n\r\n### Actual behavior\r\n\r\nFor Atomic site, \"Setup Check List\" gets hidden after reloading the page and displays \"You've completed store setup\" on \"Woocommerce > Home\" page\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using the Atomic site.\r\n2. Install and activate all the required plugins.\r\n3. Install and activate WooCommerce 7.0 Beta.\r\n4. Complete OBW.\r\n5. Go to Woocommerce > Home.\r\n6. Complete Setup Check List.\r\n7. Click on show Setup Check List.\r\n8. Reload the page\r\n9. Observe that, For Atomic site, displays \"You've completed store setup\" on \"Woocommerce > Home\" page\r\n\r\n### Video:\r\n\r\nhttps://user-images.githubusercontent.com/41110392/191287866-e55ed611-f6d1-4cee-afff-e424d2e862d5.mp4\r\n\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"For Atomic site, \"There was a problem updating your industries\" notification displayed after clicking \"Continue\" on \"Industry\" tab.\r\n\r\n### Expected behavior\r\n\r\nFor Atomic site, Redirect to the next page without any notification after clicking \"Continue\" on \"Industry\" tab.\r\n\r\n### Actual behavior\r\n\r\nFor Atomic site, \"There was a problem updating your industries\" notification displayed after clicking \"Continue\" on \"Industry\" tab.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using the Atomic site.\r\n2. Install and activate all the required plugins.\r\n3. Install and activate WooCommerce 7.0 Beta.\r\n4. Start OBW.\r\n5. Fill the Store address and click on Continue.\r\n6. Select any options from Industry tab.\r\n7. Click on Continue.\r\n6. Observe that, For Atomic site, \"There was a problem updating your industries\" notification displayed.\r\n\r\n### Screenshot:\r\n\r\n![#34745 1](https://user-images.githubusercontent.com/41110392/191285183-1961fc60-1b98-4d5f-8985-38d7476ed042.png)\r\n\r\n![#34745 2](https://user-images.githubusercontent.com/41110392/191285219-98f1c110-236e-41fb-b4b1-93053ba96830.png)\r\n\r\n![#34745 3](https://user-images.githubusercontent.com/41110392/191285246-9b937c6e-84de-4747-86ce-78cc6d683492.png)\r\n\r\n\n\n###\n\n","completion":" [1891051446,3943424887]"}
{"prompt":"After updating to WooCommerce 6.9.2, in admin - product page - product image section - Message: \"Upload JPEG files that are 1000 x 1000 pixels or larger (max. 2 GB). How to prepare images?\" is repeating over and over again.\r\nPrinnt screen: https://ibb.co/7SyDKgd\n\n### Expected behavior\n\nMessage: \"Upload JPEG files that are 1000 x 1000 pixels or larger (max. 2 GB). [How to prepare images?](https://woocommerce.com/posts/fast-high-quality-product-photos/)\" should only be displayed once.\n\n### Actual behavior\n\nAfter updating to WooCommerce 6.9.2, in admin - product page - product image section - Message: \"Upload JPEG files that are 1000 x 1000 pixels or larger (max. 2 GB). How to prepare images?\" is repeating over and over again.\n\n### Steps to reproduce\n\n1. Go to admin\r\n2. Product page\r\n3. Image section, under Product image >> https://ibb.co/7SyDKgd\n\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"undefinedRelates to #34544 \r\n\r\nInternal discussion: p6JqRr-7ou-p2\r\nSummary: p6JqRr-7ou-p2#comment-14632\r\n\r\nWe'd like to update the tracking parameters of mobile deep links to make tracking more precise/more in line with other links on WooCommerce.com.\n\n###\n\n","completion":" [1891051441]"}
{"prompt":"When creating an order programmatically using `wc_create_order();` and subsequently re-fetching the order and tryping to obtain `customer_id` from `wp_customer_lookup` table using `$order->get_report_customer_id()` I got and SQL error:\r\n```\r\nColumn 'first_name' cannot be null\r\n```\r\nQuery:\r\n```\r\nINSERT INTO `wp_wc_customer_lookup` (`first_name`, `last_name`, `email`, `city`, `state`, `postcode`, `country`, `date_last_active`) VALUES (NULL, NULL, '', NULL, NULL, NULL, NULL, '2022-09-14 15:41:31')\r\n```\r\nI was able to track the issue down to the [CustomerDataStorore::get_customer_order_data_and_format](https://github.com/woocommerce/woocommerce/blob/a49f23abfde57fbd7989ba2ea7b769998876d6b3/plugins/woocommerce/src/Admin/API/Reports/Customers/DataStore.php#L542-L578) method where when COT is enabled the data containg NULLs instead of empty strings.\r\n\r\nAnother difference I noticed was that order created via admin UI has rows in `wp_wc_order_addresses` but the order created programmatically has not. This would explain the NULL values.  E.g. `$order->get_billing_city( 'edit' )` returns `null` but I believe that expected value is an empty string.\r\n\r\nI tested the issue with the [COT Release testing build](https://github.com/woocommerce/woocommerce/releases/tag/feature-custom-order-table) and also with a build I made from recent `cot-main` branch ([commit](https://github.com/woocommerce/woocommerce/commit/a49f23abfde57fbd7989ba2ea7b769998876d6b3)).\n\n### Expected behavior\n\nNo SQL error and `$order->get_report_customer_id()` should create a new row in `wp_customer_lookup` in case there isn't any for the order.\n\n### Actual behavior\n\nAn SQL error: Column 'first_name' cannot be null\n\n### Steps to reproduce\n\nI created a plugin that can be used for replication of the issue.\r\n[woo_cot_error.php.zip](https://github.com/woocommerce/woocommerce/files/9567253/woo_cot_error.php.zip)\r\n\r\nThis is what the plugin does:\r\n```php\r\n$cotEnabled = get_option(\\Automattic\\WooCommerce\\Internal\\DataStores\\Orders\\CustomOrdersTableController::CUSTOM_ORDERS_TABLE_USAGE_ENABLED_OPTION);\r\necho \"COT enabled: $cotEnabled<br>\";\r\n$order = wc_create_order();\r\necho \"Order id: {$order->get_id()}<br>\";\r\n$order = wc_get_order($order->get_id());\r\n$city = $order->get_billing_city( 'edit' );\r\n$cityVal = var_export($city, true);\r\n$cityValExpected = var_export(\"\", true);\r\necho \"Expected output of \\$order->get_billing_city( 'edit' );: $cityValExpected <br>\";\r\necho \"Output of \\$order->get_billing_city( 'edit' );: $cityVal <br>\";\r\n$order->get_report_customer_id();\r\n```\r\n\r\n1. Install WooCommerce version with COT and enable COT\r\n2. Install the plugin\r\n3. Click \"Woo COT error\" in admin sidebar\r\n4. Observe the issue:\r\n<img width=\"1388\" alt=\"Screenshot 2022-09-14 at 15 38 51\" src=\"https://user-images.githubusercontent.com/1082140/190184575-0f636aee-b297-4abd-9f57-0e31f0cbc74a.png\">\r\n\r\nI was able to replicate the issue on my local dev site and also on wp.com dev site. Locally I tested the issue on PHP 8.0 with MariaDB 10.5.8 and also MySQL 8.0.\n\n\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"As a merchant, I want to the ability to create new shipping classes within the product edit screen.\r\n\r\n**Design**\r\n(design: `5sAIeTRd9Yp7nSCT33BAWz-fi-6590%3A287898`)\r\n\r\n**Acceptance criteria**\r\n\r\n- [x] A new `New shipping class` option should be added to the dropdown\r\n- [x] When the New shipping class option is selected, we show a modal where the user can enter the name, slug, and description \r\n- [x] The name and slug are automatically populated based on the first added product category. For example, if the product is added to `Shirts`, the class‚Äôs name and slug will be `Shirts`.\r\n- [x] If the product doesn‚Äôt have any categories yet, the name and slug are respectively populated with `New shipping class` and `new-shipping-class`.\r\n- [x] When created, the name of the new shipping class appears in the dropdown.\n\n###\n\n","completion":" [4370026978]"}
{"prompt":"This is related to the epic issue https://github.com/woocommerce/woocommerce/issues/33895.\r\n\r\nWhen users use the current release of WooCommerce plugins (without the UI revamp for marketing page feature), the recommended extensions would come from calling `GET https://woocommerce.com/wp-json/wccom/marketing-tab/1.1/recommendations.json` API.\r\n\r\nhttps://github.com/woocommerce/woocommerce/blob/996e56898704fafbb4cba4e566f82f3716276cf2/plugins/woocommerce/src/Internal/Admin/Marketing.php#L194-L215\r\n\r\nThe API response will be stored in the `RECOMMENDED_PLUGINS_TRANSIENT = 'wc_marketing_recommended_plugins'`, for a duration of 3 days.\r\n\r\nWhen users update the WooCommerce plugin with the UI revamp for marketing page feature, the recommended extensions should come from calling `GET https://woocommerce.com/wp-json/wccom/marketing-tab/1.2/recommendations.json` API. Note that the version is changed from \"1.1\" to \"1.2\" in the URL.\r\n\r\nHowever, because we have the data from version 1.1 still cached in the transient, the above API version 1.2 won't be called until the transient is expired or deleted.\r\n\r\nWhen users view the normal Marketing page, there won't be an issue. However, when users enable the multichannel marketing feature in WC Settings and view the new beta multichannel Marketing page, there will be a UI error, because the page is expecting data from version 1.2, but it receives data from version 1.1 cached in the transient:\r\n\r\n<img width=\"1665\" alt=\"image\" src=\"https://user-images.githubusercontent.com/417342/189933507-c57d0da2-8529-4649-8575-fc0707ca0903.png\">\r\n\r\n## Possible solutions\r\n\r\nI can think of two solutions. \r\n\r\nSolution 1: We delete the transient when users enable / disable the multichannel marketing feature in WC Settings. I think this may be done in https://github.com/woocommerce/woocommerce/blob/cf25f5d9961955bb4f2d787fa5cd6b6bbb083550/plugins/woocommerce/src/Admin/Features/MultichannelMarketing/Init.php. \r\n\r\nSolution 2: We delete the transient when users update the WooCommerce plugin. See https://github.com/woocommerce/woocommerce/blob/996e56898704fafbb4cba4e566f82f3716276cf2/plugins/woocommerce/includes/wc-update-functions.php for some prior art examples. I think this may be the better solution.\r\n\r\nThe code for this work should be based on the [`feature/33895-marketing-page/main`](https://github.com/woocommerce/woocommerce/tree/feature/33895-marketing-page/main) branch, or the `trunk` branch after PR https://github.com/woocommerce/woocommerce/pull/34642 is merged.\r\n\n\n###\n\n","completion":" [4327454247]"}
{"prompt":"When WooCommerce is active and a new Post is created, the following shows briefly before the Post editor is displayed: \r\n\r\n```\r\nWarning: Undefined array key \"post_type\" in /Users/woohoo/Sites/woo/wp-content/plugins/woocommerce/includes/tracks/events/class-wc-products-tracking.php on line 316\r\n```\r\n\r\nThis happens with at least WC 6.8.2 and WC 6.9.0-rc.1\n\n### Expected behavior\n\nWould expect no warning message as it the case when creating Pages, Products, or other types. is\n\n### Actual behavior\n\nA warning is observed. \n\n### Steps to reproduce\n\n1. Enabled only WooCommerce (and Storefront theme)\r\n2. Go WP Admin > Posts > Add New\r\n3. Observe the message displaying briefly prior to the editor loading\n\n\n\n###\n\n","completion":" [1891051439]"}
{"prompt":"Ellipsis menu for \"Setup Check List\" fails to display on \"Woocommerce > Home\" page.\r\n\r\n### Expected behavior\r\n\r\nEllipsis menu for \"Setup Check List\" should be displayed on \"Woocommerce > Home\" page.\r\n\r\n### Actual behavior\r\n\r\nEllipsis menu for \"Setup Check List\" fails to display on \"Woocommerce > Home\" page.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using the JN site.\r\n2. Install and activate all the required plugins.\r\n3. Install and activate WooCommerce 6.9.0.\r\n4. Complete OBW. \r\n5. Go to the \"Woocommerce > Home\" page.\r\n6. Observe that, Ellipsis menu for \"Setup Check List\" fails to display.\r\n\r\n### Screenshot:\r\n\r\n![#34639 1](https://user-images.githubusercontent.com/41110392/189685698-71f85a64-22f9-4a72-b227-dd60fa44e4ad.jpg)\r\n\r\n![#34639 2](https://user-images.githubusercontent.com/41110392/189685715-483c5f8a-4554-4051-88f4-679affcc6d4c.jpg)\r\n\r\n![#34639 3](https://user-images.githubusercontent.com/41110392/189685717-fa0628ff-0c50-4948-bd5e-7bade34f3f95.jpg)\r\n\r\n\n\n###\n\n","completion":" [3943424887,3943426545]"}
{"prompt":"\"Country / Region\" fails to save in the Store details step on completing OBW.\r\n\r\n### Expected behavior\r\n\r\n\"Country / Region\" should be saved in the Store details step on completing OBW.\r\n\r\n### Actual behavior\r\n\r\n\"Country / Region\" fails to save in the Store details step on completing OBW.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using the JN site.\r\n2. Install and activate all the required plugins.\r\n3. Install and activate WooCommerce 6.9.0.\r\n4. Start OBW.\r\n5. Enter store address.\r\n6. Complete OBW. \r\n7. Again Go to the OBW.\r\n8. Observe that, \"Country / Region\" was not displayed in the Store details step.\r\n\r\n### Video:\r\n\r\nhttps://user-images.githubusercontent.com/41110392/189683338-03d5ac5d-6444-4d27-9aa5-de7155d0ab64.mp4\r\n\r\n\n\n###\n\n","completion":" [3943424887,3943426545]"}
{"prompt":"I'm using automattic/woocommerce and trying to download product data. On few products fetching information doesn't working as expected.\n\n### Expected behavior\n\nNo errors when fetching product data.\n\n### Actual behavior\n\nPackage automattic/woocommerce throwing HttpClientException of JSON ERROR.\n\n### Steps to reproduce\n\n1. Install automattic/woocommerce\r\n2. Create client\r\n```php\r\n$client = new Client($storeUrl, $consumerKey, $consumerSecret);\r\n```\r\n3. Try to fetch product data\r\n```php\r\n$product = $client->get('products/' . $lineItem->product_id);\r\n```\r\n4. See exception i log file.\r\n```\r\n[2022-09-11 10:30:37] stg.DEBUG: App\\Services\\Woocommerce\\Orders\\Import::updateOrCreateOrderLine {\"exception\":\"[object] (Automattic\\\\WooCommerce\\\\HttpClient\\\\HttpClientException(code: 502): JSON ERROR: Syntax error at /var/www/awesome-page/vendor/automattic/woocommerce/src/WooCommerce/HttpClient/HttpClient.php:411)\r\n[stacktrace]\r\n#0 /var/www/awesome-page/vendor/automattic/woocommerce/src/WooCommerce/HttpClient/HttpClient.php(455): Automattic\\\\WooCommerce\\\\HttpClient\\\\HttpClient->processResponse()\r\n#1 /var/www/awesome-page/vendor/automattic/woocommerce/src/WooCommerce/Client.php(82): Automattic\\\\WooCommerce\\\\HttpClient\\\\HttpClient->request()\r\n//\r\n```\n\n\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"Today when using WooCommerce I noticed that I get a 'No orders found' result, when I click on any customer's 'View other orders ‚Üí\" link from an order page. I tested this on 3+ orders and all came back with zero results. This just started happening after the recent update 3-5 days ago.\n\n### Expected behavior\n\nTypically you see the orders (even if it's just one single order) from the customer on this page, with their email in the filter.\n\n### Actual behavior\n\nNow there is no filter and all orders show the 'No orders found' message.\n\n### Steps to reproduce\n\n1. Go to Orders in WooCommerce\r\n2. Click an order to view it.\r\n3. Click the link button for 'View other orders ‚Üí\" \r\n4. See the 'no orders found' message.\n\n\n\n###\n\n","completion":" [1891051458]"}
{"prompt":"After installing WooCommerce and entering the WooCommerce Products|Edit Product page, I noticed that the Permalink provide for the part was not as expected. While the shown link \"https://www.domain.com/index.php//product/design-review/\" contains two adjacent slash '/' characters it is odd. The underlying address is \"https://www.domain.com/?post_type=product&p=...\".\r\n\r\nThe WordPress Permalinks are set to Post name https://www.domain.com/index.php/sample-post/. The server is running IIS 10 and does not hide the processing PHP page.\n\n### Expected behavior\n\nA valid URL is expected to be displayed \n\n### Actual behavior\n\nThe URL shown for the Permalink contains two adjacent '/' characters. This is not expected, even if it is not considered incorrect. The link used when selecting the hyperlink is the active link for the product.\n\n### Steps to reproduce\n\nOpen the Edit Products page to see the odd URL.\n\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"Unfortunately, we missed adding support for order previews to the admin list table for COT. Let's add it! \r\n\r\nhttps://user-images.githubusercontent.com/3594411/188729549-4b890c1b-49f5-44f4-9476-59d1077c934d.mov\r\n\r\n:point_up: _The above screencast shows how the functionality works with the legacy CPT admin list table for orders._\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"**User story**\r\nAs a merchant,\r\nI want to describe my product in the best possible way\r\nSo that customers can easily find it in my store\r\n\r\n**Design**\r\n5sAIeTRd9Yp7nSCT33BAWz-fi-5180%3A129070\r\n\r\n**Acceptance criteria**\r\n- [ ] Uses the new list component\r\n- [ ] User can drag and drop to change the order of attributes on the product page.\r\n- [ ] Displays the attribute‚Äôs name and first 2 values. If the attribute has more values selected, we truncate them to `+ n more`, which is displayed as an extra chip/tag.\r\n- [ ] The trashcan icon removes the attribute. We show the default browser confirmation window that reads `Remove this attribute?` (same as currently).\r\n- [ ] When all attributes are removed, we bring back the empty state.\n\n###\n\n","completion":" [4370026978]"}
{"prompt":"**User story**\r\n- As a merchant,\r\n- I want to describe my product in the best possible way\r\n- So that customers can easily find it in my store\r\n\r\n**Design**\r\n5sAIeTRd9Yp7nSCT33BAWz-fi-8778%3A375731\r\n\r\n**Acceptance criteria**\r\n- [ ] Clicking on the `Edit` button opens the modal.\r\n- [ ] The Attribute field is a searchable dropdown. When clicked, we only show a list of existing attributes.\r\n- [ ] If the user changes the attribute in the dropdown, we clear the values in the field below.\r\n- [ ] Clicking `Cancel` or the X button closes the modal window and discards changes.\r\n- [ ] The Values field works exactly uses the search/dropdown component and can be used to create new values.\r\n- [ ] The `Visible to customers` checkbox shows/hides the attribute and selected values from the product page. The tooltip reads: `Show or hide this attribute on the product page`.\r\n- [ ] The `Used for filters` checkbox enables/disables the attribute as a filter on the product category page. The tooltip reads: `Show or hide this attribute in the filters section on your store‚Äôs category and shop pages`.\n\n###\n\n","completion":" [4370026978]"}
{"prompt":"**User story**\n- As a merchant,\n- I want to describe my product in the best possible way\n- So that customers can easily find it in my store\n\n**Design**\n5sAIeTRd9Yp7nSCT33BAWz-fi-5180%3A129070\n\n**Acceptance criteria**\n- [ ] When they click the button, it opens the add attribute modal\n- [ ] When the modal opens, the attribute select field is in focus and the user can see suggestions.\n- [ ] User can type in the field. If an attribute doesn‚Äôt exist, they can create it the same way as a category or tag.\n- [ ] User can‚Äôt remove an attribute from the list if it's the only item there. The trashcan icon is enabled only when they click `Add another`.\n- [ ] The value field is disabled until the user selects an attribute.\n- [ ] Once the user selects an existing attribute, we immediately focus on the Values field and show the dropdown with checkboxes.\n- [ ] Attribute values work exactly like tags and can be added and removed inside the field.\n- [ ] User can create new values in an existing attribute by typing the value and pressing `Create X` in the dropdown or pressing a comma on the keyboard.\n- [ ] The attribute list in the modal has a max height of 420px. Beyond this point, it scrolls vertically.\n- [ ] User can click ‚ÄúAdd another‚Äù several times to add multiple rows. If left blank, they would not be added to the form when the user clicks `Add`.\n\n###\n\n","completion":" [4370026978]"}
{"prompt":"**User story**\r\n- As a merchant,\r\n- I want to describe my product in the best possible way\r\n- So that customers can easily find it in my store\r\n\r\n\r\n**Design**\r\n5sAIeTRd9Yp7nSCT33BAWz-fi-6823%3A312388\r\n\r\n**Acceptance criteria**\r\n- [ ] When the user scrolls down to attribute, they see an empty state with an illustration, some copy, and a button.\r\n- [ ] ~~When they click the button, it opens the add attribute modal~~ (done as part of [#34331](https://github.com/woocommerce/woocommerce/issues/34331) )\r\n- [ ] Section description links to [this documentation page](https://woocommerce.com/document/managing-product-taxonomies/#product-attributes).\n\n###\n\n","completion":" [4370026978]"}
{"prompt":"As a merchant,\r\n- I want to enter accurate shipping information\r\n- So that I don‚Äôt overcharge my customers\r\n\r\n**Design**\r\n5sAIeTRd9Yp7nSCT33BAWz-fi-6590%3A293356\r\n\r\n**Acceptance criteria**\r\n- [x] Input fields use the Gutenberg unit picker.\r\n- [x] By default, the units would follow the store‚Äôs locale/global settings.\r\n- [x] When the length, width, and height fields are focused, we highlight different parts of the illustration on the right. Design: `5sAIeTRd9Yp7nSCT33BAWz-fi-6590%3A293356`.\r\n- [x] We highlight the arrow, dimension name (A/B/C), and part of the illustration.\r\n- [x] There‚Äôs no highlight for the weight field.\n\n###\n\n","completion":" [4370026978]"}
{"prompt":"As a merchant,\r\n- I want to enter accurate shipping information\r\n- So that I don‚Äôt overcharge my customers\r\n\r\nThe create new shipping class logic will be done as part of https://github.com/woocommerce/woocommerce/issues/34657\r\n\r\n**Design**\r\n5sAIeTRd9Yp7nSCT33BAWz-fi-6499%3A290914\r\n\r\n**Acceptance criteria**\r\n\r\n- [x] Users can view and select any existing shipping class.\r\n- [x] In addition to user-created shipping classes, it also contains additional options: `No shipping class` / `Standard shipping`\r\n- [x] The field‚Äôs helper text link opens `WooCommerce > Settings > Shipping > Shipping classes` in a new tab.\n\n###\n\n","completion":" [4370026978]"}
{"prompt":"### Prerequisites\r\n\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\nIt is hard to get rid of Onboarding process \"panel\" in WP Dashboard. It proposed too many things (extra plugins)\r\nBut since the onboarding process is not closed, a user can still play with it but it can override / change your settings.\r\nAdding automatically free shipping methods can lead to extra owner costs ! (in each case, all order are free of delivery costs !)\r\nI've finally found a way with \"hide\" panel with the 3 dots, and i did not see again the \"6/6 Start to sell\".\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nSecure the onboarding by preventing it to override already set settings.\r\nCheck if personal methods have been already set before adding default free shipping method\r\nEase onboarding by proposing later on the none critical plugins\r\nAll marketing stuffs are not needed to start a store\r\n\r\n### Actual behavior\r\n\r\nsee https://github.com/woocommerce/woocommerce/blob/e05f52b18a2054488238524afb1a7566cdfe7b9a/plugins/woocommerce/src/Internal/Admin/Homescreen.php#L128-L131\r\n\r\n### Steps to reproduce\r\n\r\n1 Set your own shipping methods\r\n2. Each time you \"play\" with a not closed onboarding process (smart screens), a default free shipping zone is added (set on the shop country area), even if you already have set your own methods.\r\n\r\n\r\n\n\n###\n\n","completion":" [1891051446,1891051459,3943424887]"}
{"prompt":"## Add permalink template read only property to Product REST api\r\n\r\n### Description\r\n\r\nWe currently have to retrieve the `permalink_template` and `generated_slug` separately from the WP posts endpoint in order to show a permalink for draft products. This is causing an unnecessary extra delay when loading products.\r\n\r\nWe should add the `permalink_template` and `generated_slug` properties as readonly fields to the Products REST api.\r\nWe can use the same logic as what Wordpress uses for the posts endpoint -> https://github.com/WordPress/WordPress/blob/master/wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php#L1950-L1964\r\n\r\nA `getPermalinkParts` selector has already been added to the products data store and can be re-used once we updated the products REST api endpoint to use that instead ( this was added as part of https://github.com/woocommerce/woocommerce/pull/34313 ).\r\n\r\nThis task will include:\r\n- The addition of two readonly fields as part of the products REST api ( https://woocommerce.github.io/woocommerce-rest-api-docs/#retrieve-a-product )\r\n- Updating the `getPermalinkParts` selector to make use of the products REST api data store instead of the posts data store.\r\n\r\nDesign:\r\n5sAIeTRd9Yp7nSCT33BAWz-fi-6135%3A243581\r\n\r\nSome extra context in this Slack thread, including an idea to add it as a readonly field instead: p1660331212163919-slack-C0E1AV8T0\n\n###\n\n","completion":" [1891051461,4370026978,472334370]"}
{"prompt":"While working on a new feature I noticed we're not able to use images in CSS due to [`woocommerce-admin` webpack configuration](https://github.com/woocommerce/woocommerce/blob/5324852223ec30beb70e90fe67262e0d06aad4f6/plugins/woocommerce-admin/webpack.config.js).\r\n\r\nWe will need to update webpack config to handle images (SVG, PNG, ...) differently. For now, webpack generates a module for each asset, allowing us to import them in JS but not in CSS.\r\n\r\nWe're using [`asset/inline`](https://webpack.js.org/guides/asset-modules/) in [WCPay](https://github.com/Automattic/woocommerce-payments/blob/2db0e16ddb0d5932888d9f8d7760abd6d2fd4063/webpack.config.js#L95) to replace `url-loader`, and after a quick attempt here seems to work just fine.\n\n### Describe alternatives you've considered\n\nWe could keep loading assets in JS, but that will prevent us to use images with CSS backgrounds for example.\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"## User Story\r\n\r\n> As a new merchant, I want to install the Pinterest extension, to grow my store.\r\n\r\n## Acceptance Criteria\r\n\r\n```\r\nFeature: Onboarding Wizard\r\n\r\n  Scenario: User navigates to Free Features\r\n    When the User navigates to Free Features\r\n    Then the Pinterest extension should be listed\r\n    And the description should be `Get your products in front of Pinners searching for ideas and things to buy.`\r\n```\r\n\n\n###\n\n","completion":" [3943424887]"}
{"prompt":"## User Story\r\n\r\n> As a new merchant, I want to install the Facebook extension, to grow my store.\r\n\r\n## Acceptance Criteria\r\n\r\n```\r\nFeature: Onboarding Wizard\r\n\r\n  Scenario: User navigates to Free Features\r\n    When the User navigates to Free Features\r\n    Then the Facebook extension should be listed\r\n    And the description should be `List products and create ads on Facebook and Instagram with <a href=\"https://woocommerce.com/products/facebook/\">Facebook for WooCommerce</a>`\r\n\r\nFeature: Marketing Task\r\n\r\n  Scenario: User clicks to Marketing Task\r\n    When the User clicks to the Marketing Task\r\n    Then the Facebook extension should be listed under the Grow section\r\n    And the the description should be `List products and create ads on Facebook and Instagram.`\r\n    And the logo should match the one found at https://woocommerce.com/wp-content/uploads/2017/04/fb-woodotcom.png\r\n```\r\n\n\n###\n\n","completion":" [3943424887]"}
{"prompt":"Dear developers, I have found a translation bug in My Account menu item.\r\n\r\n### Expected behavior\r\n\r\nIn [wc-account-functions.php:100](https://github.com/woocommerce/woocommerce/blob/6a95d3ee938ec4e5ab9e3c7c979032a55ebb1a1a/plugins/woocommerce/includes/wc-account-functions.php#L100) the function used to fetch the translations is __() which means that it should receive a single translation, but this is in conflict with the .POT file.\r\n\r\n### Actual behavior\r\n\r\nThe .POT created from this line is marked as plural and any translators that follow the specification will have wrong translations, because the function will fetch the singular value.\r\n\r\n### Steps to reproduce\r\n\r\n/\r\n\r\n\n\n###\n\n","completion":" [468434635]"}
{"prompt":"From this Wednesday, [Country/Region] and [State/County] don't have drop-down. \r\n\r\nNothing happens when customers click on them directly, and they can't finish the checkout. The system notification is that \"Please enter correct details for this required field\".\n\n### Expected behavior\n\nCustomer can pay successfully\n\n### Actual behavior\n\nFrom this Wednesday, [Country/Region] and [State/County] don't have drop-down. \r\n\r\nNothing happens when customers click on them directly, and they can't finish the checkout. The system notification is that \"Please enter correct details for this required field\".\n\n### Steps to reproduce\n\n![W-checkout problem2](https://user-images.githubusercontent.com/98144636/184295886-10c22ecf-df57-480d-aabb-c9ca9c71e325.jpg)\r\n![WO-checkout PC](https://user-images.githubusercontent.com/98144636/184295904-67953f5e-cd5a-4d3f-965a-935d047eef85.png)\r\n\n\n\n\n###\n\n","completion":" [1891051440]"}
{"prompt":"Data for orders fails to display on \"Analytics > Overview\" Page.\r\n\r\n\r\n### Expected behavior\r\n\r\nData for orders should be displayed on \"Analytics > Overview\" Page.\r\n\r\n\r\n### Actual behavior\r\n\r\nData for orders fails to display on \"Analytics > Overview\" Page.\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using the JN site.\r\n2. Install and activate all the required plugins.\r\n3. Install and activate WooCommerce..\r\n4. Go to WooCommerce > Settings > Advanced > Custom Data Stores.\r\n5. Choose Custom Order Tables Enabled (without sync).\r\n6. Add sample products\r\n7. Create some orders from frontend.\r\n8. Go to the Merchant page, \"Analytics > Overview\" Page.\r\n9. Observe that the Data for orders fail to display on \"Analytics > Overview\" Page.\r\n\r\n### Screenshot:\r\n\r\n![#34287_1](https://user-images.githubusercontent.com/41110392/184142657-29f3d871-00f9-449a-9f7a-e03ec6b061f9.png)\r\n\r\n![#34287](https://user-images.githubusercontent.com/41110392/184142695-83042e5f-5682-4c99-88ff-16f7abac87ee.png)\r\n\r\n\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"\"Invalid order\" error displayed for downloadable product after clicking \"Product download\" button on \"My Accounts > Downloads\" page.\r\n\r\n\r\n### Expected behavior\r\n\r\nOrder should be downloaded after clicking \"Product download\" button on \"My Accounts > Downloads\" page.\r\n\r\n\r\n### Actual behavior\r\n\r\n\"Invalid order\" error displayed for downloadable product after clicking \"Product download\" button on \"My Accounts > Downloads\" page.\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using the JN site.\r\n2. Install and activate all the required plugins.\r\n3. Install and activate WooCommerce.\r\n4. Go to WooCommerce > Settings > Advanced > Custom Data Stores.\r\n5. Choose Custom Order Tables Enabled (without sync).\r\n6. Go to the store page, add a product to the cart and proceed to checkout.\r\n7. Set the above Order as completed from \"Woocommerce > Orders\" page.\r\n8. Go to the My account > Downloads.\r\n9. Click on the download order button.\r\n10. Observe that \"Invalid order\" error is displayed for downloadable products after clicking \"Product download\" button.\r\n\r\n### Screenshot and video:\r\n\r\n![#34285_1](https://user-images.githubusercontent.com/41110392/184141784-e64784e3-2161-4233-8cf2-241ae9d22383.png)\r\n\r\nhttps://user-images.githubusercontent.com/41110392/184140883-ec4ea289-260f-44e2-803d-93d6ac7aec9c.mp4\r\n\r\n\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"As per this request: pdjTHR-Vi-p2#comment-1841\r\n\r\nIn https://github.com/woocommerce/woocommerce/pull/32957 we added an admin page to **WooCommerce ‚Üí Subscriptions** as an experiment to promote WooCommerce Payments to eligible merchants.\r\n\r\nThis experiment has ended and as such, we need to remove the experiment code from WooCommerce Core.\r\n\r\n**Acceptance criteria**\r\n- The code added in https://github.com/woocommerce/woocommerce/pull/32957 is removed.\r\n- The WCPay Subscriptions offer page is no longer available at **WooCommerce ‚Üí Subscriptions**.\n\n###\n\n","completion":" [3943425903]"}
{"prompt":"We have updated the marketing task to the user in the marketing task after installing an extension in https://github.com/woocommerce/woocommerce/pull/34241\r\n\r\nHowever, because we call the `invalidateResolutionForStoreSelector( 'getTaskLists' );`, the placeholder flashes shortly after a plugin is installed.\r\n\r\nIt would be great if we could improve it to not show the placeholder after a plugin is installed.\r\n\r\nSee also: https://github.com/woocommerce/woocommerce/pull/34241#pullrequestreview-1069074564\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"Context: pdibGW-LT-p2\r\n\r\nAn inbox note appears in the wrong country with the following rules:\r\n\r\n```json\r\n{\r\n    \"rules\": [\r\n        {\r\n            \"type\": \"publish_after_time\",\r\n            \"publish_after\": \"2022-08-08 00:01:07\"\r\n        },\r\n        {\r\n            \"type\": \"publish_before_time\",\r\n            \"publish_before\": \"2022-08-22 23:59:00\"\r\n        },\r\n        {\r\n            \"type\": \"or\",\r\n            \"operands\": [\r\n                {\r\n                    \"type\": \"base_location_country\",\r\n                    \"operation\": \"=\",\r\n                    \"value\": \"AU\"\r\n                },\r\n                {\r\n                    \"type\": \"base_location_country\",\r\n                    \"operation\": \"=\",\r\n                    \"value\": \"AT\"\r\n                },\r\n                {\r\n                    \"type\": \"base_location_country\",\r\n                    \"operation\": \"=\",\r\n                    \"value\": \"BE\"\r\n                },\r\n                {\r\n                    \"type\": \"base_location_country\",\r\n                    \"operation\": \"=\",\r\n                    \"value\": \"CA\"\r\n                },\r\n                {\r\n                    \"type\": \"base_location_country\",\r\n                    \"operation\": \"=\",\r\n                    \"value\": \"DK\"\r\n                },\r\n                {\r\n                    \"type\": \"base_location_country\",\r\n                    \"operation\": \"=\",\r\n                    \"value\": \"FI\"\r\n                },\r\n                {\r\n                    \"type\": \"base_location_country\",\r\n                    \"operation\": \"=\",\r\n                    \"value\": \"FR\"\r\n                },\r\n                {\r\n                    \"type\": \"base_location_country\",\r\n                    \"operation\": \"=\",\r\n                    \"value\": \"DE\"\r\n                },\r\n                {\r\n                    \"type\": \"base_location_country\",\r\n                    \"operation\": \"=\",\r\n                    \"value\": \"IT\"\r\n                },\r\n                {\r\n                    \"type\": \"base_location_country\",\r\n                    \"operation\": \"=\",\r\n                    \"value\": \"NL\"\r\n                },\r\n                {\r\n                    \"type\": \"base_location_country\",\r\n                    \"operation\": \"=\",\r\n                    \"value\": \"NZ\"\r\n                },\r\n                {\r\n                    \"type\": \"base_location_country\",\r\n                    \"operation\": \"=\",\r\n                    \"value\": \"NO\"\r\n                },\r\n                {\r\n                    \"type\": \"base_location_country\",\r\n                    \"operation\": \"=\",\r\n                    \"value\": \"ES\"\r\n                },\r\n                {\r\n                    \"type\": \"base_location_country\",\r\n                    \"operation\": \"=\",\r\n                    \"value\": \"SE\"\r\n                },\r\n                {\r\n                    \"type\": \"base_location_country\",\r\n                    \"operation\": \"=\",\r\n                    \"value\": \"CH\"\r\n                },\r\n                {\r\n                    \"type\": \"base_location_country\",\r\n                    \"operation\": \"=\",\r\n                    \"value\": \"GB\"\r\n                },\r\n                {\r\n                    \"type\": \"base_location_country\",\r\n                    \"operation\": \"=\",\r\n                    \"value\": \"US\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"type\": \"not\",\r\n            \"operand\": [\r\n                {\r\n                    \"type\": \"plugins_activated\",\r\n                    \"plugins\": [\"klarna-payments\"]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n### Expected behavior\r\n\r\nA note should not appear in the mismatched country such as South Africa\r\n\r\n### Actual behavior\r\n\r\nA note appears when the store country is set to `South Africa`.\r\n\r\n### Steps to reproduce\r\n\r\n1. Use a fresh site\r\n2. Set store country to **South Africa** and click on the ‚ÄúContinue‚Äù button\r\n3. Skip or complete the OBW\r\n4. Observe that the `Meet Klarna ‚Äì your ultimate growth partner note` is displayed.\r\n\r\n\r\n\n\n###\n\n","completion":" [3943104021,3943424960]"}
{"prompt":"As described in [the wiki](https://github.com/woocommerce/woocommerce/wiki/wc_get_orders-and-WC_Order_Query), it was traditionally possible to do the following to fetch all orders:\r\n\r\n```php\r\nwc_get_orders( [ 'limit' => -1 ] );\r\n```\r\n\r\nHowever, this is currently not supported and is evaluated as if `'limit' => 1` had been passed. In addressing this, let's ensure other facets of pagination (`'paged'`, `'offset'`, etc) continue to work as expected.\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"The task title needs to be switched to sentence case: \"Review shipping options\".\r\n\r\nAt present, title case is used.\r\n\r\n## Screenshot \r\n\r\nExisting behavior:\r\n\r\n![image](https://user-images.githubusercontent.com/9312929/184041915-058c4280-9c46-4a56-b39d-5d2e507f7fe6.png)\r\n\r\n\n\n###\n\n","completion":" [3943424887]"}
{"prompt":"Add unit tests for the [Orders Milestone](https://href.li/?https://github.com/woocommerce/woocommerce/blob/af97aaf41067bcd0b7ff12df9b6169f97c326c0f/plugins/woocommerce/src/Internal/Admin/Notes/OrderMilestones.php) note in React admin. \r\n\r\nAn improvement might be to refactor the class to have the `get_note` and `possibly_add_note` structure seen in other note classes. Otherwise, it looks like `other_milestones` would need a trip to the database to assertions on the note.\r\n\r\n## Acceptance criteria\r\n\r\n```\r\nFeature: onboarding\r\n\r\n  Scenario: First order received\r\n    Given a total of 1 orders have been placed\r\n    Then a note should be returned with the title is \"Congratulations on getting your first order! Now is a great time to learn how to manage your orders.\".\r\n\r\n  Scenario: Tenth order received\r\n    Given a total of 10 orders have been placed\r\n    Then a note should be returned with title \"You've hit the 10 orders milestone! Look at you go. Browse some WooCommerce success stories for inspiration.\".\r\n\r\n  Scenario: No orders received\r\n    Given no orders have been placed \r\n    Then no note should be returned.\r\n ``` \n\n###\n\n","completion":" [3943424887]"}
{"prompt":"We use `DataSourcePoller` to fetch remote data from WCCOM, but it doesn't support the i18n feature. \r\n\r\nTo add the i18n support, we need to\r\n\r\n1. Send a request to WCCOM endpoint with locale- `https://woocommerce.com/wp-json/wccom/my-endpoint?locale=zh_TW`\r\n2. Locale is stored in database in associative array `array( 'en_US' => ...., 'zh_TW => ... )`\r\n3. DataSourcePoller.php includes your filter logic to retrieve the correct locale based on site/user.\r\n\r\n\r\n\r\n\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"Particularly for the orders and products API endpoints, the objects in the response include a `meta_data` property which is an array of key/value pairs, representing postmeta. This array can be quite large in some cases, which can significantly increase the size of the response payload. The mobile apps only need a few specific meta keys, so I'm proposing that we add two new collection parameters for orders and products:\r\n\r\n* `include_meta` would work similarly to `_fields` but only for meta keys. Only the keys specified would be retrieved and included in the response.\r\n* `exclude_meta` would do the opposite, retrieving and including all meta keys except the ones specified.\r\n\r\nIn the case where both parameters are used in one request, I think `include_meta` would take precedence, since it would usually be more specific.\r\n\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"When someone requests old edit/new/delete links but cot in use, we should redirect them to the new interface.\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"In WC_Order, the function `get_edit_order_url` also should be adopted to return the correct link regardless of the authoritative data source.\r\n\r\nIn `OrderUtils`, utility methods should be called `get_order_admin_edit_url` and `get_order_admin_new_url` respectively. We also need to add a function for generating delete links.\r\n\r\n\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"Currently, there is a post type checking happening in the `WC_Ajax::delete_refund()` method that needs to change. See: https://github.com/woocommerce/woocommerce/blob/cot-main/plugins/woocommerce/includes/class-wc-ajax.php#L2033\r\n\r\n### Steps to reproduce\r\n\r\n1. Go to the edit-order screen.\r\n2. Add a refund\r\n3. Try to delete it.\r\n\r\n### Isolating the problem\r\n\r\n- [X] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [X] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [X] I can reproduce this bug consistently using the steps above.\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"When a user changes the locale, we should refresh the inbox notes since inbox notes are in the database table.\r\n\r\n**Expected behavior**\r\n\r\nWhen a user changes the locale,  notes should be updated to display texts in the current locale.\r\n\r\n**Actual behavior**\r\n\r\nWhen a user changes the locale,  notes are still displayed in English.\r\n\r\n![Screen Shot 2022-07-18 at 13 38 11](https://user-images.githubusercontent.com/4344253/179450901-16818a62-bf5d-43c6-a982-d574c8dcca04.png)\r\n\r\n\n\n###\n\n","completion":" [3943104021,468434635]"}
{"prompt":"Hello.\r\nimpossible to display the last order validation page (thank you) on woocommerce regardless of the type of payment.\r\nBank transfer generates a 404 error. \r\n![bug17072022](https://user-images.githubusercontent.com/52157224/179403148-acb63b3c-8397-4f4c-a453-f83950c22984.png)\r\nPayment in test and transaction generates the following error:\r\n\r\nWarning: include(): Filename cannot be empty in /home/sc2sid11/public_html/saintmedie.com/wp-content/plugins/woocommerce/includes/wc-template-functions.php on line 53\r\n\r\nWarning: include(): Failed opening '' for inclusion (include_path='.:/opt/cpanel/ea-php74/root/usr/share/pear') in /home/sc2sid11/public_html/saintmedie.com/wp-content/plugins/woocommerce/includes/wc-template-functions.php on line 53\r\n\r\n\r\n>>> Panier: ‚ùå La page ne contient pas le code court [woocommerce_cart] ou le bloc woocommerce/cart.\r\n>>> Commander: ‚ùå La page ne contient pas le code court [woocommerce_checkout] ou le bloc woocommerce/checkout.\r\n\r\nThese two pages use the latest code functions provided by Elementor and even if I put these shortcodes back by default. It doesn't change anything...\n\n### Expected behavior\n\nThe site uses the latest version of woocommerce with Elementor Pro and child theme under Hello theme.\r\nAll mods are up to date. I tried disabling them all with the default wordpress theme. This does not change the bug.\r\n\n\n### Actual behavior\n\nWhen you click on order, the site looks for the order validation page and does not find it while everything is ok on the woocommerce setting side\n\n### Steps to reproduce\n\n1 go to: https://www.saintmedie.com\r\n2 place order. (use customer test account: test@saintmedie.com / TSTsmd#2022!)\r\n3 click on the \"order\" button\r\n4 generates the error.\n\n\n\n###\n\n","completion":" [33006876]"}
{"prompt":"If I start working through the WooCommerce Onboarding tasks and choose the \"Create a custom homepage\" option. The page is created. However, there is a Cover block at the top, which has an orphaned Button block within it. It appears that the Button block is set to align center. However, since it is not wrapped within a Buttons block it is not centered and floats to the left. This is older Gutenberg behavior and the markup that is output should contain a Buttons block with a nested Button block.\r\n\r\nI'm currently running the latest from `trunk` of WooCommerce, but I've also tested this on an InstaWP site with WooCommerce installed and Storefront theme. \r\n\r\n**Note:** this issue does **_not happen with Storefront theme_**, because Storefront is accounting for older Gutenberg behavior and has special CSS targeting this scenario. However, the Button block _should_ be wrapped within a Buttons block and not have special CSS to account for it.\r\n\r\nHowever, this should be addressed to allow for Full Site Editing themes (aka block themes) to not have to have extra CSS to account for older (deprecated) Gutenberg markup.\r\n\r\n![Screen Shot 2022-07-15 at 11 12 12 AM](https://user-images.githubusercontent.com/405912/179252823-9ed1f061-a7b8-471e-8857-5ab0dd7c87ab.png)\r\n\r\nI'm not certain where the markup is coming from to populate the custom homepage. I would assume it is coming from the WooCommerce onboarding code, but if this is entirely a Storefront issue then I'm happy to log an Issue there. Thanks!\r\n\r\ncc: @Aljullu\n\n### Expected behavior\n\nThe Button block within the Cover block should be wrapped within a Buttons block and centered.\r\n\r\n![Screen Shot 2022-07-14 at 5 04 39 PM](https://user-images.githubusercontent.com/405912/179249775-28a15960-92bb-4218-a641-075796d1213a.png)\r\n\r\n![Screen Shot 2022-07-14 at 6 10 19 PM](https://user-images.githubusercontent.com/405912/179249702-2b4fbb94-9414-4ecb-92bf-fa7f682ceace.png)\r\n\r\n\n\n### Actual behavior\n\nThe Button block is floated to the left.\n\n### Steps to reproduce\n\n1. Activate WooCommerce on a fresh install.\r\n2. Go to /wp-admin/admin.php?page=wc-admin to visit the Onboarding tasks, and choose the \"Personalize my store\" and \"Create a custom homepage\"\r\n3. Once the homepage is created and set. Visit your site's homepage and verify that the first button on the page is floated to the left, as opposed to the center.\r\n\r\n![Screen Shot 2022-07-14 at 6 10 19 PM](https://user-images.githubusercontent.com/405912/179250533-36bf1a4a-7991-4ff5-b8ec-8b245c4e970f.png)\r\n\n\n\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"After updating to WooCommerce version `6.7.0` it's no longer possible to re-import historical data. Regardless of the `Skip previously imported customers and orders` input being checked or unchecked the `Start` button remains disabled.\n\n### Expected behavior\n\nThe `Start` button should become enabled when `Skip previously imported customers and orders` is unchecked.\n\n### Actual behavior\n\nIt remains disabled regardless of selections making it impossible to re-import historical data.\n\n### Steps to reproduce\n\n1. Have a test site running WooCommerce `6.7.0` which has customers/ orders\r\n2. Go to `Analytics > Settings`\r\n3. Scroll down to `Import historical data`\r\n4. Attempt to use the tool\r\n\r\n![import-historical-data](https://user-images.githubusercontent.com/40762232/179198049-2493be20-4b8c-46d5-ad25-3e29f301e0be.gif)\r\n\r\n_Rolling the plugin back a release fixes the problem._\r\n\r\n\n\n\n\n###\n\n","completion":" [3943104021,3943425133]"}
{"prompt":"A notice appears in WooCommerce > Settings > Payments page `Notice: Undefined offset: 0 in /var/www/html/wp-content/plugins/woocommerce/includes/admin/settings/class-wc-settings-payment-gateways.php on line 247`\r\n\r\nI think `affirm` gateway defined in PaymentGatewaySuggestion has an empty array for `plugins` attribute. \r\n\r\n<img width=\"1052\" alt=\"image\" src=\"https://user-images.githubusercontent.com/3747241/179145714-c3ce4577-373e-4473-b9b1-179d8beae2d8.png\">\r\n\r\n\n\n### Expected behavior\n\nNo notice\n\n### Actual behavior\n\nNotice appears\n\n### Steps to reproduce\n\n1. Set up a store with address in the US\r\n2. Go to Settings > Payments\r\n3. Observe the notice\n\n\n\n###\n\n","completion":" [3943104021,3943424824]"}
{"prompt":"When there is no plugin recommendation listed under `Add recommended business features to my site`, `Free features` tab is still visible\r\n\r\n<img width=\"645\" alt=\"Screen Shot 2022-07-14 at 3 45 17 PM\" src=\"https://user-images.githubusercontent.com/4723145/179121013-443edae8-8f30-4ce8-ad50-8e3008ba4b58.png\">\r\n \r\n\r\n### Expected behavior\r\n\r\n`Free features` should be hidden when there is no plugin listed.\r\n\r\n### Actual behavior\r\n\r\n`Free features` is still rendered \r\n\r\n### Steps to reproduce\r\n\r\n1. Start with a fresh install\r\n2. Start OBW and use the following selections and click Continue\r\n\r\nStore Details.country/region: Afghanistan\r\nIndustry: Food and drink\r\nProduct Types: Physical products\r\nBusiness Details[how many products do you plan to display]: 1-10\r\nBusiness Details[currently selling else where?]: Yes, on another platform\r\nBusiness Details[How many employees do you have]: <10\r\nBusiness Details[What's your current annual revenue?]: Up to 3.000\r\nBusiness Details[Which platform is the store using?] BigCommerce\r\n\r\n3. On the `Free features` tab, make a note of the plugins. You should see `MailPoet` and `Google Listings and Ads` only.\r\n4. Open a new tab and install and active the plugins listed on `Free features` manually.\r\n5. Refresh `Free features` tab\r\n6. There is no recommendation anymore, but the tab is still rendered.\r\n \r\n\r\n\n\n###\n\n","completion":" [1891051446,3943104021]"}
{"prompt":"This is part of the epic issue https://github.com/woocommerce/woocommerce/issues/33895.\r\n\r\nIn this issue, we want to implement a feature toggle that allows users to switch between the old UI and the new UI:\r\n\r\n- When the toggle is on, `/wp-admin/admin.php?page=wc-admin&path=%2Fmarketing` will display the new UI.\r\n\t- For starter, the new UI can be just an empty placeholder page. We will put in components into the page in other tasks. \r\n- When the toggle is off, `/wp-admin/admin.php?page=wc-admin&path=%2Fmarketing` will display the existing UI.\r\n\r\nThe toggle can be put into the WooCommerce > Settings > Advanced > Features page: `/wp-admin/admin.php?page=wc-settings&tab=advanced&section=features`\r\n\r\n<img width=\"805\" alt=\"image\" src=\"https://user-images.githubusercontent.com/417342/179003511-3455f36f-c5be-4606-a889-bb443fb5cacf.png\">\r\n\n\n###\n\n","completion":" [4327454247]"}
{"prompt":"This is an epic issue to keep track of our UI revamp on marketing page in WooCommerce Admin.\r\n\r\n## Designs\r\n\r\nThis is how the current Marketing page looks like:\r\n\r\n![image](https://user-images.githubusercontent.com/417342/179001079-8b429aa3-68e9-4d8f-b9b9-d79ebbcce294.png)\r\n\r\nThis is the design for the new Marketing page:\r\n\r\n![image](https://user-images.githubusercontent.com/417342/179001195-b01b7f44-96a9-4329-8e85-adb3dd4dbe39.png)\r\n\r\n## Tasks\r\n\r\nTasks related to this epic:\r\n\r\n- [x] #33896\r\n- [x] #34025\r\n- [x] #34107\r\n- [x] #34108\r\n- [x] #34431\r\n- [x] #34655\r\n- [x] #34732\r\n\r\nNote that this epic does not include the \"Channels\" card and the \"Campaigns\" card in the new design. \r\n\r\nUpdate: Note that the top banner card is now out of scope of this epic issue. For more info, see pe2C5g-hG-p2.\r\n\r\n## Notes\r\n\r\nInternal P2 project thread: pe2C5g-bH-p2\n\n###\n\n","completion":" [4327454247]"}
{"prompt":"As part of the recent smart defaults for shipping project, the onboarding profile data is the source of truth regarding what type of products are being sold (physical/digital).\r\n\r\nAs such, we can gain a performance improvement by removing the products query in the onboarding routine here:\r\n\r\nhttps://github.com/woocommerce/woocommerce/blob/8bed87d91e3c64d5044887e2c29f94816bcdc101/plugins/woocommerce/src/Admin/Features/OnboardingTasks/Tasks/Shipping.php#L113-L118\n\n###\n\n","completion":" [3943424887,472334370]"}
{"prompt":"Similar to `date_query` in `WP_Query` we should add support for various more complex queries on date fields, including shortcuts such as \"<\" and \"...\" that the current `query()` method supports.\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"Add support for `meta_query` similar to `WP_Query`.\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"currently, when the user installs a plugin in the marketing task, we automatically redirect him to the home screen. I think keeping him in the marketing task makes more sense where he can install other extensions or click \"Manage\" to continue setting up the extension.\r\n\r\n**Acceptance criteria:**\r\n- [ ] Keep the user in the marketing task after installing an extension\n\n###\n\n","completion":" [3943424841]"}
{"prompt":"\"Setup Check List\" overlaps with the Kebab menu after completing all the steps under the setup checklist on \"Woocommerce > Home\" page.\r\n\r\n![kebab menu](https://user-images.githubusercontent.com/4344253/178692984-ed468565-8f8e-4cd7-9b6e-beac0d7a57ed.jpg)\r\n\r\n\r\n### Expected behavior\r\n\r\n\"Setup Check List\" should not overlaps with the Kebab menuoverlap\r\n\r\n### Actual behavior\r\n\r\n\"Setup Check List\"  overlaps with the Kebab menu\r\n\r\n### Steps to reproduce\r\n\r\n1. Use a fresh site\r\n2. Complete all task\r\n3. Dismiss ‚ÄúYou‚Äôve completed store setup‚Äù header and show the setup task list again\r\n\r\n\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"State/county field is marked as required entry, but the text entry field is not visible.  Customers from this market cannot complete checkout process\n\n### Expected behavior\n\nCustomers can view and enter data into the required text field\n\n### Actual behavior\n\nData entry field is not presented for this required fiel\r\n![InkedForm](https://user-images.githubusercontent.com/10390925/178616086-e017b085-cddd-45ed-a4de-6919d3647fd4.jpg)\r\nd\n\n### Steps to reproduce\n\ncreate a shopping cart, goto checkout\r\nat address field, select country as Belgium\r\nenter address, attempt to proceed, error is caught for missing required details.\r\n\r\nAlso, Phone should be required field for international freight options, but that may be a seperate issue.\n\n\n\n###\n\n","completion":" [468434635]"}
{"prompt":"Apple Pay shows up on Safari mobile, but not on Chrome mobile. Using latest public iOS, latest Chrome on app store, iPhone 13 Pro Max. Gpay does not appear on chrome mobile as it should either. \r\n\r\n### Expected behavior\r\n\r\nApple Pay and Gpay should both appear on chrome mobile. \r\n\r\n### Actual behavior\r\n\r\nApple pay and gpay do not appear on chrome mobile on any page. \r\n\r\n### Steps to reproduce\r\n\r\n1. Go to Chrome on iOS\r\n2. Visit site with apple pay/gpay enabled\r\n3. View any item\r\n4. Try again on Safari to verify it works on Safari\r\n\r\n\n\n###\n\n","completion":" [1891051449]"}
{"prompt":"WooCommerce Status widget on the dashboard shows errors when Analytics is disabled from WooCommerce -> Settings -> Advanced -> Features.\r\n\r\n### Expected behavior\r\n\r\nThe widget should be hidden when the Analytics feature is disabled\r\n\r\n### Actual behavior\r\n\r\nThe widget still renders with errors.\r\n\r\n### Steps to reproduce\r\n\r\n1. Start with a fresh install.\r\n2. Skip the OBW.\r\n3. Go to WooCommerce -> Home and hide the tasks.\r\n4. Go to WooCommerce -> Settings -> Advanced -> Features and uncheck `Enables WooCommerce Analytics` then save the changes.\r\n5. Go to Dashboard\r\n\r\n\r\n\r\n\n\n###\n\n","completion":" [3943104021,3943425133]"}
{"prompt":"Revenue table titles and column sequences fail to match with its respective CSV file downloaded from the email.\r\n\r\n### Expected behavior\r\n\r\nRevenue and Orders table titles and column sequences should match with its respective CSV file.\r\n\r\n### Actual behavior\r\n\r\nRevenue and Orders table titles and column sequences fail to match with its respective CSV file.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using JN site.\r\n2. Install and activate all the required plugins \r\n3. Add some sample products.\r\n4. Create some orders.\r\n5. Go to Analytics -> Revenue.\r\n6. Select a date range from \"Year to date\".\r\n7. Click on the download.\r\n8. It would prompt the user that the report has been emailed \r\n9. Go to your respective email inbox and download the CSV file emailed\r\n10. Note that \"N. Revenue\" instead of \"Net Sales\" title is displayed for Orders CSV Report \r\n11. Observe that Revenue table titles and column sequences fail to match with its respective CSV file.\r\n\r\n### Screenshot:\r\n\r\n![#33810](https://user-images.githubusercontent.com/41110392/178287354-5d219f38-f2a6-445c-a9e3-b24f4e430746.jpg)\r\n\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"@vedanshujain [Identified](https://github.com/woocommerce/woocommerce/issues/33073#issuecomment-1178819595) that the Shipping task queries DB for shipping zones in every request in [this PR](https://github.com/woocommerce/woocommerce/pull/33422). Ideally, we'd want to get this in before 6.8 code freeze, but I think we can have a little leniency to get it cherry-picked before the final release since it's a bug fix.\r\n\r\nWe could explore caching strategies such as using storing the value option as mentioned by vedanshujain or transients. We should also make sure the caching is refreshed when a shipping zone is added/removed.\n\n###\n\n","completion":" [3943104021,472334370]"}
{"prompt":"Set `shipping-smart-defaults` values in `core.json` and `development.json` to true if we've confirmed everything is ready to go prior 6.8 code freeze.\n\nPotentially, also set `shipping-setting-tour` to true if it's ready.\n\n###\n\n","completion":" [3943104021,3943424841]"}
{"prompt":"Order types can be registered via `wc_register_order_type()` and are also propagated to WP as post types. We do this for refunds, but also 3rd party extensions (Subscriptions, for example) use it to register their own order types.\r\n\r\nWe currently have no way to store this information in the COT tables.\r\n\r\nThis issue's scope includes including the field in the schema, updating the migration to move this data, adding support for the `type` query var in `WC_Order_Query`, etc.\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"It seems there are some gaps in the logic we used to manage default shipping zones and shipping task.\r\n\r\nAn example case would be a user from US who already has Jetpack installed but doesn't have WCS, they would not be able to see the shipping task, nor have the default shipping zones created. \r\n\r\n- The check for shipping task to appear [doesn't include US](https://github.com/woocommerce/woocommerce/blob/b274831334fe8979ad7eaa4db579b030a7451019/plugins/woocommerce/src/Admin/Features/OnboardingTasks/Tasks/Shipping.php#L113)\r\n- The [check for creating]( https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/src/Internal/Admin/Homescreen.php#L118:L122) shipping zones does not cover users who has Jetpack installed but not installed WCS\r\n\r\n### Expected behavior\r\n\r\nIdeally, I think we should have the logic consolidated where there will never be a case for users to neither have the shipping task visible nor shipping zones created. However, if this is too complicated, we should just fix the case mentioned above.\r\n\r\n### Actual behavior\r\n\r\nEdge case happens for some users\r\n\r\n### Steps to reproduce\r\n\r\n 1. Create a fresh site in the US, select physical products, install Jetpack in extension step\r\n2. Observe no shipping task nor review shipping options in setup tasklist\r\n3. Observe no shipping zones set\r\n\r\n### Isolating the problem\r\n\r\n- [X] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [X] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [X] I can reproduce this bug consistently using the steps above.\n\n###\n\n","completion":" [3943104021,3943424841]"}
{"prompt":"The payment task UI is not aligned with the design.\r\n\r\n### Expected behavior\r\n\r\n‚ùå WCPay Eligible country\r\n<img width=\"1440\" alt=\"Payments _ WooCommerce Payments\" src=\"https://user-images.githubusercontent.com/4344253/177476305-e413ee4c-361c-49c5-a207-3fa3e875f16d.png\">\r\n\r\n‚úÖ WCPay Eligible country\r\n‚ùå WCPay NOT Set up\r\n<img width=\"1444\" alt=\"Payments _ WooCommerce Payments _ Welcome screen\" src=\"https://user-images.githubusercontent.com/4344253/177476307-e5eb2e77-c17e-4a25-9c00-ddd54c0ebbd5.png\">\r\n\r\n‚úÖ WCPay Eligible country\r\n‚úÖ  WCPay Set up\r\n![Uploading Payments _ WooCommerce Payments (1).png‚Ä¶]()\r\n\r\nfigma: e428PXC0QyEwYqtX48lLq0-fi-12830%3A95364\r\n\r\n### Actual behavior\r\n\r\nThe page display \"Choose a payment provider\" text in all cases.\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Choose a WCPay Eligible country\r\n2. Go to `woocommerce > Home`\r\n3. Go to the payment task\r\n4. Click 'Other payment providers'\r\n5. Observe that the section title is \"Choose a payment provider\"\r\n\r\n\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"This is a follow-up to https://github.com/woocommerce/woocommerce/issues/33745 since the completion of tasklist experiment to clean up experiment codes. We should also remove control & experiment 2 variant.\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [3943104021,3943424841]"}
{"prompt":"In experiment pbxNRc-1wQ-p2, it's found that header task variant (experiment 1) performed better. In this issue, we should deploy the experiment by replacing the call to ExPlat with hardcoded reference to choose experiment 1 variant. \r\n\r\nWe're aiming to get this in before WC 6.8 code freeze. No cleaning up is necessary in this task since we should handle it in the upcoming cycle.\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [3943104021,3943424841]"}
{"prompt":"Current version of the Payments Welcome screen is missing elements and isn't aligned with the latest design. \r\n\r\n### Expected behavior\r\n\r\nThe design and elements should be updated as in the [design in Figma](https://www.figma.com/file/e428PXC0QyEwYqtX48lLq0/%5BWCPay%5D-Positioning-and-Conversion?node-id=12830%3A122180)\r\n\r\n\r\n\r\n### Actual behavior\r\n\r\nWrong version comparing to the design\r\n<img width=\"1250\" alt=\"Screenshot 2022-06-24 at 18 31 05\" src=\"https://user-images.githubusercontent.com/94967682/175949920-884fa8ae-2741-4588-bbd0-d9efe12491c7.png\">\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Onboard to WooCommerce from a WCPay eligible country **BUT** during onboarding opt out from installing WCPay\r\n2. Go to the Payments Overview (from the main nav)\r\n\r\n\n\n###\n\n","completion":" [1891051449]"}
{"prompt":"Outdated design of the payments page after clicking on `Install` WCPayments in the payments settings table\n\n### Expected behavior\n\nWe should display a consistent version of the Payments Overview hero, as in this [Figma design](https://www.figma.com/file/e428PXC0QyEwYqtX48lLq0/%5BWCPay%5D-Positioning-and-Conversion?node-id=12830%3A94658)\n\n### Actual behavior\n\nThe version of the payments screen is outdated:\r\n![Uploading Screenshot 2022-06-24 at 18.25.18.png‚Ä¶]()\r\n\r\n\n\n### Steps to reproduce\n\n1. Onboard to WooCommerce from a WCPay eligible country **BUT** during onboarding opt out from installing WCPay\r\n2. Go to Payments Settings\r\n\n\n\n\n###\n\n","completion":" [1891051449,3943104021]"}
{"prompt":"Currently `Discover other` link in Payments Settings directs users to the wrong Marketplace and displays the wrong copy.\r\n\r\n### Expected behavior\r\n\r\nAs in the design here in Figma e428PXC0QyEwYqtX48lLq0-fi-12830%3A96550 the link should:\r\n\r\n- [x] be displayed as `Discover other payment providers`\r\n- [ ] next to the link we should display the logos of selected payment providers (as in the design)\r\n- [x] should direct users to the external marketplace \r\n\r\n### Actual behavior\r\n\r\n<img width=\"1471\" alt=\"Screenshot 2022-06-24 at 18 17 47\" src=\"https://user-images.githubusercontent.com/94967682/175611179-57a96e8f-c044-4160-84f0-d140696fd236.png\">\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Onboard to WooCommerce from a WCPay eligible country **BUT** during onboarding opt out from installing WCPay\r\n2. Go to Settings\r\n\r\n\n\n###\n\n","completion":" [1891051449]"}
{"prompt":"When `Other payment provides` is expanded, users can see the link to explore more options in the Marketplace. \r\nCurrently, the link directs users to the Marketplace inside WC Dashboard, but it should go to the [external marketplace](https://woocommerce.com/product-category/woocommerce-extensions/payment-gateways/)\n\n### Expected behavior\n\nThe `See more` link should direct users to the [external marketplace](https://woocommerce.com/product-category/woocommerce-extensions/payment-gateways/)\n\n### Actual behavior\n\nThe link currently takes the user to the wrong marketplace\r\n<img width=\"1757\" alt=\"Screenshot 2022-06-24 at 18 01 27\" src=\"https://user-images.githubusercontent.com/94967682/175610325-81fbf9e7-6c48-496d-ad81-3022baee8efb.png\">\r\n:\n\n### Steps to reproduce\n\n1. Onboard to WooCommerce from a WCPay eligible country **BUT** during onboarding opt out from installing WCPay\r\n2. Go to the Payments Overview\r\n3. Click on the `Other payment providers` link\r\n4. Scroll to the bottom\n\n\n\n###\n\n","completion":" [1891051449]"}
{"prompt":"Payments overview is displaying some old version of the hero box.\r\n\r\n### Expected behavior\r\n\r\nIt should be updated inline with the design in [Figma](https://www.figma.com/file/e428PXC0QyEwYqtX48lLq0/%5BWCPay%5D-Positioning-and-Conversion?node-id=12830%3A93773).\r\n\r\n<img width=\"439\" alt=\"Screenshot 2022-06-24 at 17 56 55\" src=\"https://user-images.githubusercontent.com/94967682/175607619-725e2039-c752-4fcb-813e-cd0329b7cc5c.png\">\r\n\r\n\r\nNew design was previously implemented as a test as a part of the [KYC Optimization Project](https://wcpay.wordpress.com/2022/02/15/project-thread-kyc-optimization/)\r\n\r\n### Actual behavior\r\n\r\nOutdated design of the Payments Overview hero box\r\n<img width=\"404\" alt=\"Screenshot 2022-06-24 at 17 57 33\" src=\"https://user-images.githubusercontent.com/94967682/175607800-ddba44b5-bbd9-4ad0-a3c2-21f52533a17c.png\">\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Onboard to WooCommerce from a WCPay eligible country **BUT** during onboarding opt out from installing WCPay\r\n2. Go to the Payments Overview\r\n\r\n\r\n\n\n###\n\n","completion":" [1891051449]"}
{"prompt":"The link on the Payment Overview page in production says: \r\n`Other payment methods` \r\n\r\n\r\nThis is a wrong copy\r\n\r\n### Expected behavior\r\n\r\nThe link should say instead:  \r\n`Other payment providers`\r\n\r\nas in the design provided: [Figma](https://www.figma.com/file/e428PXC0QyEwYqtX48lLq0/%5BWCPay%5D-Positioning-and-Conversion?node-id=12830%3A93773)\r\n\r\n### Actual behavior\r\n\r\n<img width=\"1477\" alt=\"Screenshot 2022-06-24 at 17 39 03\" src=\"https://user-images.githubusercontent.com/94967682/175602789-b2879826-23d9-4c72-a9d9-c346454e0a67.png\">\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Onboard to WooCommerce from a WCPay eligible country **BUT** during onboarding opt out from installing WCPay\r\n2. Go to WooCommerce Home\r\n3. Click on the payments related task on the task list\r\n\r\n\n\n###\n\n","completion":" [1891051449]"}
{"prompt":"If we name our theme with a name containing `-` (e.g. main-theme), then woocommerce does not read all templates from the / templates folder. This behaves randomly and only reads certain files (usually from the main folder).\r\n\r\n### Expected behavior\r\n\r\nReading full template from `woocommerce` folder.\r\n\r\n### Actual behavior\r\n\r\nSome of files (e.g. /cart/cart.php) does not work even if we delete context in files.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a theme called `main-theme`\r\n2. Copy the /templates folder from woocommerce plugin then put it into your theme\r\n3. Try change something and check if it's changed on site (e.g. /cart/cart.php)\r\n\r\n\n\n###\n\n","completion":" [33006876]"}
{"prompt":"![screen-shot-2022-06-23-at-14 25 28-1](https://user-images.githubusercontent.com/4723145/175438864-b3e93959-be2f-4953-9360-d1907fb78672.png)\r\n\r\nWhen clicking on [X] button to close the shipping banner, the modal has no styles.\r\n\r\nMore details: pb22l9-1o3-p2#comment-1410\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"\"Cannot read properties of undefined\" notification displayed after clicking \"Download\" button for date range \"Quarter to date\" and \"Year to date\" on \"Analytics > Revenue\" page.\r\n\r\n### Expected behavior\r\n\r\nCSV file should be downloaded or emailed after clicking \"Download\" button for date range \"Quarter to date\" and \"Year to date\" on \"Analytics > Revenue\" page.\r\n\r\n### Actual behavior\r\n\r\n\"Cannot read properties of undefined\" notification displayed after clicking \"Download\" button for date range \"Quarter to date\" and \"Year to date\" on \"Analytics > Revenue\" page.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using JN site.\r\n2. Install and activate all the required plugins.\r\n3. Install and activate WooCommerce.\r\n4. Complete the setup wizard.\r\n5. Go to Analytic > Revenue page..\r\n6. Select \"Quarter to date\" or \"Year to date\" as date range .\r\n7. Click on \"Download\" csv button.\r\n8. Observe that \"Cannot read properties of undefined\" notification displayed after clicking \"Download\" button for date range \"Quarter to date\" and \"Year to date\".\r\n\r\n### Screenshot:\r\n\r\n![#33583](https://user-images.githubusercontent.com/41110392/175326350-a87b76cd-6d94-45a5-aecd-2a57a50fd513.jpg)\r\n\r\n\n\n###\n\n","completion":" [3943104021,3943425133]"}
{"prompt":"## User Story\r\n\r\nAs a new merchant\r\nI want to the task list to contain prioritized tasks\r\nSo I can focus on what's import to set up next\r\n\r\n## Acceptance Criteria\r\n\r\n- [ ] mark it as completed when the user visits the page (https://github.com/woocommerce/woocommerce/issues/33363#issuecomment-1168475586)\r\n\r\n\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"in-person payments has just been released in Canada (p6q6po-cQp-p2) We want to update the copy in the payments task to promote the new feature:\r\n\r\n> With WooCommerce Payments, you can securely accept major cards, Apple Pay, and payments in over 100 currencies ‚Äì with no setup costs or monthly fees ‚Äì and you can now accept in-person payments with the Woo mobile app. [Learn more]\r\n\r\n**Acceptance criteria:**\r\n- [ ] Update the WCPayments banner in the Payments task with information about in-person payments. This change should only target stores located in Canada. (This was already implemented in the US).\r\n\n\n###\n\n","completion":" [3943424841]"}
{"prompt":"\r\nOn Setup Wizard Industry selection page we can select Other and Continue without entering a Description\r\n\r\n![image](https://user-images.githubusercontent.com/105309450/175097493-df1a0b93-83e8-4ff5-a424-0f0fb0decaf6.png)\r\n\r\n\r\n### Expected behavior\r\n\r\nI would expect a missing information notification to appear to inform the user that the Other checkbox has been selected but no Description has been entered\r\n\r\n### Actual behavior\r\n\r\nOn Setup Wizard Industry selection page we can select Other and Continue without entering a Description\r\n\r\nafter we click Continue the wizard progresses to the Product Types page without a warning\r\n\r\n### Steps to reproduce\r\n\r\n1. spin up a new JN site including WooCommerce\r\n2. Launch WooCommerce Setup wizard\r\n3. Arrive at step 1 Store Details\r\n4. Populate Store Details\r\n5. Click Continue\r\n6. Arrive at Industry page\r\n7. Click Other checkbox\r\n8. Do not enter anything into Description and click Continue\r\n9. Navigation to Product Types continues without issue\r\n\r\n\n\n###\n\n","completion":" [1891051446,3943104021]"}
{"prompt":"it's difficult to understand which fields or sections are being added or removed from the post data widget, as there's no indication of what happens when, for example, the user changes the product type from simple to grouped product. \r\n\r\n**Acceptance criteria- [ ] When new product elements appear, for example for downloadable or external products, show a spotlight to point people to the place where they'll find new options\r\n\n\n###\n\n","completion":" [1891051461,4370024739]"}
{"prompt":"during the usability walkthrough we identified that it could be challenging to find the right place to add product images or create a gallery. This can be influenced by the fact that the image & gallery widgets are buried below widgets such as Categories, Tags, Google Listing & Ads (if the extension is installed). \r\n\r\n**Acceptance criteria- [ ] Place the product image and product gallery widgets below the publish widget\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"the product image or gallery is one of the most impactful elements of the product page. However, we don't offer any guidance on the right image size and formats to ensure that the products have compelling images.\r\n\r\n**Acceptance criteria- [ ] Update the upload modal for \"Set product image\" and \"Add gallery images\" using the [`post-upload-ui`](https://developer.wordpress.org/reference/hooks/post-upload-ui/) hook to add specific copy (TODO) about suggestion image dimensions and format, along with a link to the WooCommerce blog article about creating great product images (TODO: include link)\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"some of the copy in the Inventory section is confusing and can be easily improved\r\n\r\n**Acceptance criteria- [ ] To focus on the final result, rename ‚ÄúEnable stock management at product level‚Äù to ‚ÄúManage stock level (quantity)‚Äù \r\n- [ ] Change ‚ÄúEnable this to only allow one of this item to be bought in a single order‚Äù to ‚ÄúLimit purchases to 1 item per order‚Äù\r\n- [ ] Add a tooltip to the \"Limit purchases to 1 item...\" checkbox with the following copy: \"Check to let customers to purchase only 1 item in a single order. This is particularly useful for items that have limited quantity, for example art or handmade goods.\"\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"Variations won't appear on storefront without a price. We should try to introduce an easy way for users to add the variation price. \r\n\r\n**Acceptance criteria- [ ] when variations don't have a price: add a button to the notice that currently appears there. Button click will launch a browser modal window to add a price, much like an action in the bulk actions dropdown menu.\r\n\r\nDesign here: 6cBYbZmiet1l7gzc28ce8k-fi-4177%3A154971\r\n\n\n###\n\n","completion":" [1891051456,1891051461]"}
{"prompt":"most of the Variations primary and secondary actions have discoverability and accessibility issues. These issues make it difficult for users to easily create and manage variations. \r\n\r\n**Designs:**\r\n`zs56kcy53K7GoGhgyjcQ2R/%5BProject%5D-fi-209%3A30408&t=Wravf3I84jXombqq-4`\r\n\r\n**Acceptance criteria- [ ] Key actions are hidden in the dropdown menu: bring out \"Generate variations\" (previously \"Create from all attributes\") and \"Add manually\"(previously \"Add variation\") into separate buttons and rename the dropdown to \"Bulk actions\"\r\n- [x] Single variation controls are hidden by default: Show the actions for each variation (Move, Remove, Open) as buttons visible at all times, rather than on hover\r\n- [x] Replace the up/down arrow for expanding/collapsing variation details with text buttons: Edit/Done\n\n###\n\n","completion":" [1891051456,1891051461,4370024739]"}
{"prompt":"the \"tooltip displayed alongside the default form value option is not working\r\n<img width=\"937\" alt=\"Captura de ecraÃÉ 2022-06-22, aÃÄs 11 43 57\" src=\"https://user-images.githubusercontent.com/3380168/175010604-96a0c9bc-955b-4132-a7ed-a847cc975182.png\">\r\n\r\n- Tooltip does not appear before Draft is saved\r\n\r\n**Acceptance criteria:**\r\n- [ ] Fix the tooltip appearing\r\n- [ ] Update copy: Choose a default form value if you want a certain variation already selected when a user visits the product page\n\n###\n\n","completion":" [1891051456,1891051461]"}
{"prompt":"the UI for creating attributes is an error-prone and time-consuming experience. We should explore ways to streamline the experience with minimal effort.  \r\n\r\n**Acceptance criteria- [ ] Add a tooltip near the \"custom product attribute\" dropdown and \"add\" CTA with a link to the support doc: https://woocommerce.com/document/managing-product-taxonomies/#section-6\r\n- [ ] If there are no attributes in the store: show the add attribute form by default\r\n- [ ] If there's at least one attribute: add an empty state screen with a choice between adding a custom attribute or importing an existing one\r\n- [ ] Add \"Custom attribute\" title to each new attribute until the user adds the attribute name\r\n- [ ] The 2 expand/close options are confusing. Should we just keep one of them?\r\n- [ ] Improve the visibility of the secondary actions: delete, etc. Should they be visible by default?\r\n- [ ] Existing attribute options are always reset when added to a new product. Remember the last used settings for attributes, i.e. \"Used for variations\" and select all values by default so that the user doesn't have to add them manually \r\n\r\n\n\n###\n\n","completion":" [1891051456,1891051461]"}
{"prompt":"The product data naming is far from being self-explanatory and it can be challenging for users to understand the differences between all the product types. This is one of those cases where it's better to provide documentation to help users understand how to complete their tasks.\r\n\r\n**Acceptance criteria- [ ] Add a tooltip with a link to a help article about product types: https://woocommerce.com/document/managing-products/#product-types\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"the \"add media\" and \"add contact form\" CTA can be misleading and make the users think that this is the path they need to take to add product images. \r\n\r\n**Acceptance criteria- [x] Improve the CTA copy to make sure users understand that the media or form will be added to the description: \"Add media to description\" and \"Add contact form to the description\"\nOr\r\n- [ ] Change the layout to make it clear that the CTAs are part of the long description - similar to what we have for the short description\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"Ideally we don't need to include both `@woocommerce/eslint-plugin` and `@wordpress/eslint-plugin` in woo admin package.json.\r\n\r\nBut it doesn't work when we removed `@woocommerce/eslint-plugin`. \r\n\r\n```\r\nOops! Something went wrong! :(\r\n\r\nESLint: 8.11.0\r\n\r\nError: .eslintrc.js ¬ª plugin:@woocommerce/recommended ¬ª plugin:@wordpress/recommended ¬ª /Users/chihsuan/Projects/woocommerce/node_modules/.pnpm/@wordpress+eslint-plugin@11.0.1_45b6e6918fb11850d1105a4fd2c5fed3/node_modules/@wordpress/eslint-plugin/configs/recommended-with-formatting.js ¬ª /Users/chihsuan/Projects/woocommerce/node_modules/.pnpm/@wordpress+eslint-plugin@11.0.1_45b6e6918fb11850d1105a4fd2c5fed3/node_modules/@wordpress/eslint-plugin/configs/esnext.js ¬ª /Users/chihsuan/Projects/woocommerce/node_modules/.pnpm/@wordpress+eslint-plugin@11.0.1_45b6e6918fb11850d1105a4fd2c5fed3/node_modules/@wordpress/eslint-plugin/configs/es5.js ¬ª /Users/chihsuan/Projects/woocommerce/node_modules/.pnpm/@wordpress+eslint-plugin@11.0.1_45b6e6918fb11850d1105a4fd2c5fed3/node_modules/@wordpress/eslint-plugin/configs/jsdoc.js:\r\n\tConfiguration for rule \"jsdoc/check-line-alignment\" is invalid:\r\n\tValue [\"always\",{\"tags\":[\"param\",\"arg\",\"argument\",\"property\",\"prop\"],\"preserveMainDescriptionPostDelimiter\":true}] should NOT have more than 1 items.\r\n\r\n    at ConfigValidator.validateRuleOptions (/Users/chihsuan/Projects/woocommerce/node_modules/.pnpm/@eslint+eslintrc@1.2.1/node_modules/@eslint/eslintrc/dist/eslintrc.cjs:2027:23)\r\n    at /Users/chihsuan/Projects/woocommerce/node_modules/.pnpm/@eslint+eslintrc@1.2.1/node_modules/@eslint/eslintrc/dist/eslintrc.cjs:2082:18\r\n    at Array.forEach (<anonymous>)\r\n    at ConfigValidator.validateRules (/Users/chihsuan/Projects/woocommerce/node_modules/.pnpm/@eslint+eslintrc@1.2.1/node_modules/@eslint/eslintrc/dist/eslintrc.cjs:2079:34)\r\n    at ConfigValidator.validateConfigArray (/Users/chihsuan/Projects/woocommerce/node_modules/.pnpm/@eslint+eslintrc@1.2.1/node_modules/@eslint/eslintrc/dist/eslintrc.cjs:2205:18)\r\n    at CascadingConfigArrayFactory._finalizeConfigArray (/Users/chihsuan/Projects/woocommerce/node_modules/.pnpm/@eslint+eslintrc@1.2.1/node_modules/@eslint/eslintrc/dist/eslintrc.cjs:3947:23)\r\n    at CascadingConfigArrayFactory.getConfigArrayForFile (/Users/chihsuan/Projects/woocommerce/node_modules/.pnpm/@eslint+eslintrc@1.2.1/node_modules/@eslint/eslintrc/dist/eslintrc.cjs:3753:21)\r\n    at FileEnumerator._iterateFilesRecursive (/Users/chihsuan/Projects/woocommerce/node_modules/.pnpm/eslint@8.11.0/node_modules/eslint/lib/cli-engine/file-enumerator.js:482:49)\r\n    at _iterateFilesRecursive.next (<anonymous>)\r\n    at FileEnumerator.iterateFiles (/Users/chihsuan/Projects/woocommerce/node_modules/.pnpm/eslint@8.11.0/node_modules/eslint/lib/cli-engine/file-enumerator.js:297:49)\r\n‚ÄâELIFECYCLE‚Äâ Command failed with exit code 2.\r\n‚ÄâELIFECYCLE‚Äâ Command failed with exit code 1.\r\n```\r\n\r\nWe should investigate it more and see if we can remove it. \r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"This is part of https://github.com/woocommerce/woocommerce/issues/32318\r\n\r\n**User story:**\r\nAs a new merchant\r\nI want to focus on the most important setup tasks\r\nSo I can review some details later\r\n\r\n**Description:**\r\nWith Jetpack installed and connected, alongside WCS, we have the opportunity to set things up on the users' behalf, and ask them to review and confirm, rather than start from scratch and think.\r\n\r\n**Design overview (with new spotlight component):**\r\n[cJQeyyhx9PraQrY3YAtCGM-fi-705%3A80783](https://href.li/?https://www.figma.com/file/cJQeyyhx9PraQrY3YAtCGM/?node-id=705%3A80783)\r\n\r\n**Acceptance Criteria:**\r\nGiven a store with the following OBW selections\r\n| Section | Value |\r\n|------|-------|\r\n| Product type | physical products| \r\n| Store Details[Country / Region] | US or not one of the US, Canada, Australia, and the UK\r\n\r\nWhen a user clicks on the shipping task on WooCommerce -> Home\r\nThen redirect the user to WooCommerce -> Settings -> Shipping\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"undefinedHi,\r\n\r\nThere are lots of cases where a variant can have attributes that differs from the parent, but are not defining the variant. Obvious cases like UPC/EAN/GTIN etc are of course there, but these can be solved with meta data (even though it is kind of not-great for end users).\r\n\r\n### Real life examples\r\n**Life jackets**\r\nLife jackets are typically sized by a interval of heights of the user - \"20 - 30 kg\", \"25 - 40 kg\". By adding `20,21,...30` to the former and `25,26,...40` on an attibute \"Fits weights\" to the latter we can enable a very nice filter on category pages where the customer can pick their weight and see all life jackets that fits them. Since every product has more than one value (20-30 is obviously 10 values) we can not use it for variants. \r\n\r\n**Bike tires**\r\nTires are variantized by it's dimensions (width and height). Wide tires **fits for** mountainbikes, while narrow tires **fits for** racing bikes. To allow customers to (in the category \"Bike tires\") filter by Suitable for (mountainbike|racing bike), we would need to assign that attribute to the variants. If we assign both values to the parent, the filter will be wrong as soon as one of the variants are out of stock (or hidden by any other setting such as visibility, unpublished etc).\r\n\r\nI can go on forever, but I think the uses cases should be clear. Magento and most other platforms have solved this. It would make the PIM part of WooCommerce a great deal more flexible.\r\n\r\nFrom a database perspective, I can not see why this should be very hard to implement. Most of the functionality is actually already there (thanks to the `wp_wc_product_attributes_lookup` table). Since the variants are in fact stored as separate products (posts) it should be fairly straight forward.\r\n\r\nIs there a reason/decision taken why this is not possible? If not, would it be of interest if i tried to take a stab at an implementation?\r\n\r\n### Describe alternatives you've considered\r\n\r\n_No response_\r\n\r\n### Additional context\r\n\r\n_No response_\n\n###\n\n","completion":" [1891051456]"}
{"prompt":"Investigate what needs to be tested on the higher and lower levels, For example:\r\n\r\n```\r\n- Merchant can create virtual product\r\n  - Merchant can log in\r\n  - Merchant can create virtual product\r\n  - Merchant can verify that virtual product was created\r\n```\r\n\r\nAcceptance criteria\r\n\r\nUpdate AC for the following tasks:\r\n\r\n- [x] https://github.com/woocommerce/woocommerce/issues/33472\r\n- [x] https://github.com/woocommerce/woocommerce/issues/33473\r\n- [x] https://github.com/woocommerce/woocommerce/issues/33474\n- [x] https://github.com/woocommerce/woocommerce/issues/33475\r\n- [x] https://github.com/woocommerce/woocommerce/issues/33476\r\n- [x] https://github.com/woocommerce/woocommerce/issues/33477\r\n- [x] https://github.com/woocommerce/woocommerce/issues/33478\r\n\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"Add e2e tests for `setting up Google Listings & Ads` task\r\n\r\n**Acceptance criteria**\r\n\r\nTBD\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"### Description\r\n\r\nThe products data store should be able to delete product tags. Deletion is not directly required by the product edit screen, which is the context in which we're starting this work, so this is a lower priority than its GET and POST counterparts.\r\n\r\n_For now, this should be marked as experimental/internal as we iterate on the API so that it is clear that this is incomplete and subject to change_.\r\n\r\n#### _Delete_\r\n**HTTP Request**\r\n> **DELETE** `/wp-json/wc/v3/products/tags/<id>`\r\n\r\n**Relevant Parameters**\r\n| Parameter | Type | Description |\r\n| --------- | -------- | -------- |\r\n| `force` | string | Required to be `'true'`, as resource does not support trashing. |\r\n\r\n**Reference**\r\n> https://woocommerce.github.io/woocommerce-rest-api-docs/#delete-a-product-tag\r\n\r\n### Acceptance criteria\r\n- [ ] Data store updates\r\n- [ ] Unit tests\r\n- [ ] Documentation with examples\r\n\n\n###\n\n","completion":" [2190477857,3943104021]"}
{"prompt":"### Description\r\n\r\nThe products data store should be able to create product tags. It would be nice to also support updates, but that's not critical for the product page, which is the context for this work.\r\n\r\n_For now, this should be marked as experimental/internal as we iterate on the API so that it is clear that this is incomplete and subject to change_.\r\n\r\n#### _Properties_\r\n\r\n| Attribute | Type | Description | |\r\n| --------- | --------- | --------- | --------- |\r\n| id | integer | Unique identifier for the resource. | READ-ONLY |\r\n| name | string | Tag name. | MANDATORY |\r\n| slug | string | An alphanumeric identifier for the resource unique to its type. | |\r\n| description | string | HTML description of the resource. | |\r\n| count | integer | Number of published products for the resource. | READ-ONLY |\r\n\r\n_Most of our create operations will specify only the name, and as stated above, update functionality is just a nice-to-have at this point._\r\n\r\n**Reference**\r\n> https://woocommerce.github.io/woocommerce-rest-api-docs/#product-tag-properties\r\n\r\n#### _Create_\r\n**HTTP Request**\r\n> **POST** `/wp-json/wc/v3/products/tags`\r\n\r\n**Reference**\r\n> https://woocommerce.github.io/woocommerce-rest-api-docs/#create-a-product-tag\r\n\r\n#### _Update_\r\n**HTTP Request**\r\n> **PUT** `/wp-json/wc/v3/products/tags/<id>`\r\n\r\n**Reference**\r\n> https://woocommerce.github.io/woocommerce-rest-api-docs/#update-a-product-tag\r\n\r\n### Acceptance criteria\r\n- [ ] Data store updates\r\n- [ ] Unit tests\r\n- [ ] Documentation with examples\n\n###\n\n","completion":" [2190477857,3943104021]"}
{"prompt":"### Description\r\n\r\nThe products data store should be able to load product tags.\r\n\r\n_For now, this should be marked as experimental/internal as we iterate on the API so that it is clear that this is incomplete and subject to change_.\r\n\r\n#### _Get_\r\n**HTTP Request**\r\n> **GET** `/wp-json/wc/v3/products/tags/<id>`\r\n\r\n**Reference**\r\n> https://woocommerce.github.io/woocommerce-rest-api-docs/#product-tag-properties\r\n> https://woocommerce.github.io/woocommerce-rest-api-docs/#retrieve-a-product-tag\r\n\r\n#### _List all_\r\n**HTTP Request**\r\n> **GET** `/wp-json/wc/v3/products/tags`\r\n\r\n**Relevant Parameters**\r\n| Parameter | Type | Description |\r\n| --------- | -------- | -------- |\r\n| `context` | string | Scope under which the request is made; determines fields present in response. Options: `view` and `edit`. Default is `view`. |\r\n\r\n**Reference**\r\n> https://woocommerce.github.io/woocommerce-rest-api-docs/#list-all-product-tags\r\n\r\n### Acceptance criteria\r\n- [ ] Data store updates\r\n- [ ] Unit tests\r\n- [ ] Documentation with examples\r\n\n\n###\n\n","completion":" [2190477857,3943104021]"}
{"prompt":"### Description\r\n\r\nThe products data store should be able to delete product categories. Deletion is not directly required by the product edit screen, which is the context in which we're starting this work, so this is a lower priority than its GET and POST counterparts.\r\n\r\n_For now, this should be marked as experimental/internal as we iterate on the API so that it is clear that this is incomplete and subject to change_.\r\n\r\n#### _Delete_\r\n**HTTP Request**\r\n> **DELETE** `/wp-json/wc/v3/products/categories/<id>`\r\n\r\n**Relevant Parameters**\r\n| Parameter | Type | Description |\r\n| --------- | -------- | -------- |\r\n| `force` | string | Required to be `'true'`, as resource does not support trashing. |\r\n\r\n**Reference**\r\n> https://woocommerce.github.io/woocommerce-rest-api-docs/#delete-a-product-category\r\n\r\n### Acceptance criteria\r\n- [ ] Data store updates\r\n- [ ] Unit tests\r\n- [ ] Documentation with examples\r\n\n\n###\n\n","completion":" [2190477857,3943104021]"}
{"prompt":"### Description\r\n\r\nThe products data store should be able to create product categories. It would be nice to also support updates, but that's not critical for the product page, which is the context for this work, and product image manipulation is probably another can of worms entirely.\r\n\r\n_For now, this should be marked as experimental/internal as we iterate on the API so that it is clear that this is incomplete and subject to change_.\r\n\r\n#### _Properties_\r\n\r\n| Attribute | Type | Description | |\r\n| --------- | --------- | --------- | --------- |\r\n| id | integer | Unique identifier for the resource. | READ-ONLY |\r\n| name | string | Category name. | MANDATORY |\r\n| slug | string | An alphanumeric identifier for the resource unique to its type. | |\r\n| parent | integer | The ID for the parent of the resource. | |\r\n| description | string | HTML description of the resource. | |\r\n| display | string | Category archive display type. Options: default, products, subcategories and both. Default is default. | |\r\n| image | object | Image data. See [https://woocommerce.github.io/woocommerce-rest-api-docs/#product-category-image-properties](Product category - Image properties) | |\r\n| menu_order | integer | Menu order, used to custom sort the resource. | |\r\n| count | integer | Number of published products for the resource. | READ-ONLY |\r\n\r\n_Most of our create operations will specify only the name, and as stated above, update functionality is just a nice-to-have at this point, especially wrt images._\r\n\r\n**Reference**\r\n> https://woocommerce.github.io/woocommerce-rest-api-docs/#product-category-properties\r\n\r\n#### _Create_\r\n**HTTP Request**\r\n> **POST** `/wp-json/wc/v3/products/categories`\r\n\r\n**Reference**\r\n> https://woocommerce.github.io/woocommerce-rest-api-docs/#create-a-product-category\r\n\r\n#### _Update_\r\n**HTTP Request**\r\n> **PUT** `/wp-json/wc/v3/products/categories/<id>`\r\n\r\n**Reference**\r\n> https://woocommerce.github.io/woocommerce-rest-api-docs/#update-a-product-category\r\n\r\n### Acceptance criteria\r\n- [ ] Data store updates\r\n- [ ] Unit tests\r\n- [ ] Documentation with examples\r\n\n\n###\n\n","completion":" [2190477857,3943104021]"}
{"prompt":"### Description\r\n\r\nThe products data store should be able to load product categories.\r\n\r\n_For now, this should be marked as experimental/internal as we iterate on the API so that it is clear that this is incomplete and subject to change_.\r\n\r\n#### _Get_\r\n**HTTP Request**\r\n> **GET** `/wp-json/wc/v3/products/categories/<id>`\r\n\r\n**Reference**\r\n> https://woocommerce.github.io/woocommerce-rest-api-docs/#product-categories\r\n> https://woocommerce.github.io/woocommerce-rest-api-docs/#retrieve-a-product-category\r\n\r\n#### _List all_\r\n**HTTP Request**\r\n> **GET** `/wp-json/wc/v3/products/categories`\r\n\r\n**Relevant Parameters**\r\n| Parameter | Type | Description |\r\n| --------- | -------- | -------- |\r\n| `context` | string | Scope under which the request is made; determines fields present in response. Options: `view` and `edit`. Default is `view`. |\r\n\r\n**Reference**\r\n> https://woocommerce.github.io/woocommerce-rest-api-docs/#list-all-product-categories\r\n\r\n### Acceptance criteria\r\n- [ ] Data store updates\r\n- [ ] Unit tests\r\n- [ ] Documentation with examples\n\n###\n\n","completion":" [2190477857,3943104021]"}
{"prompt":"### Description\r\n\r\nAdd the code to be able to delete shipping classes through the products data store.\r\n\r\n_For now, this should be marked as experimental/internal as we iterate on the API so that it is clear that this is incomplete and subject to change_.\r\n\r\n\r\n#### _Delete_\r\n**HTTP Request**\r\n> **DELETE** `/wp-json/wc/v3/products/shipping_classes/<id>`\r\n\r\n**Reference**\r\n> https://woocommerce.github.io/woocommerce-rest-api-docs/#delete-a-shipping-class\r\n\r\n**Properties**\r\n| Parameter | Type | Description |\r\n| --------- | -------- | -------- |\r\n| `force` | string | Required to be `true`, as resource does not support trashing. |\r\n\r\n### Acceptance criteria\r\n- [ ] Data store updates\r\n- [ ] Unit tests\r\n- [ ] Documentation with examples\r\n\n\n###\n\n","completion":" [2190477857,3943104021]"}
{"prompt":"### Description\r\n\r\nAdd the code to be able to get the shipping classes through the products data store.\r\n\r\n_For now, this should be marked as experimental/internal as we iterate on the API so that it is clear that this is incomplete and subject to change_.\r\n\r\n#### _Get_\r\n> This API lets you retrieve a shipping class by ID.\r\n\r\n**HTTP Request**\r\n> **GET** `/wp-json/wc/v3/products/shipping_classes/<id>`\r\n\r\n**Reference**\r\n> https://woocommerce.github.io/woocommerce-rest-api-docs/#retrieve-a-shipping-class\r\n\r\n#### _List all_\r\n**Description**\r\n> This API lets you retrieve all shipping classes.\r\n\r\n**HTTP Request**\r\n> **GET** `/wp-json/wc/v3/products/shipping_classes`\r\n\r\n**Properties**\r\nParameter | Type | Description\r\n--------- | -------- | --------\r\ncontext | string | Scope under which the request is made; determines fields present in response. Options:¬†view¬†and¬†edit. Default is¬†view.\r\npage | integer | Current page of the collection. Default is¬†1.\r\nper_page | integer | Maximum number of items to be returned in result set. Default is¬†10.\r\nsearch | string | Limit results to those matching a string.\r\nexclude | array | Ensure result set excludes specific ids.\r\ninclude | array | Limit result set to specific ids.\r\noffset | integer | Offset the result set by a specific number of items.\r\norder | string | Order sort attribute ascending or descending. Options:¬†asc¬†and¬†desc. Default is¬†asc.\r\norderby | string | Sort collection by resource attribute. Options:¬†id,¬†include,¬†name,¬†slug,¬†term_group,¬†description¬†and¬†count. Default is¬†name.\r\nhide_empty | boolean | Whether to hide resources not assigned to any products. Default is¬†false.\r\nproduct | integer | Limit result set to resources assigned to a specific product.\r\nslug | string | Limit result set to resources with a specific slug.\r\n\r\n\r\n**Reference**\r\n> https://woocommerce.github.io/woocommerce-rest-api-docs/#list-all-shipping-classes\r\n\r\n### Acceptance criteria\r\n- [ ] Data store updates\r\n- [ ] Unit tests\r\n- [ ] Documentation with examples\r\n\n\n###\n\n","completion":" [2190477857,3943104021]"}
{"prompt":"### Description\r\n\r\nAdd the code to be able to create and edit shipping classes through the data store.\r\n\r\n_For now, this should be marked as experimental/internal as we iterate on the API so that it is clear that this is incomplete and subject to change_.\r\n\r\n**Properties**\r\n| Parameter | Type | Description\r\n| --------- | -------- | -------- |\r\n| `id` | integer | Unique identifier for the resource. |\r\n| `name` | string | Shipping class name. |\r\n| `slug` | string | An alphanumeric identifier for the resource unique to its type. |\r\n| `description` | string | HTML description of the resource. |\r\n| `count` | integer | Number of published products for the resource.  |\r\n\r\n#### _Create_\r\n**HTTP Request**\r\n> **POST** `/wp-json/wc/v3/products/shipping_classes`\r\n\r\n**Reference**\r\n> https://woocommerce.github.io/woocommerce-rest-api-docs/#create-a-shipping-class\r\n\r\n\r\n#### _Edit_\r\n**HTTP Request**\r\n> **PUT** `/wp-json/wc/v3/products/shipping_classes/<id>`\r\n\r\n**Reference**\r\n> https://woocommerce.github.io/woocommerce-rest-api-docs/#update-a-shipping-class\r\n\r\n### Acceptance criteria\r\n- [ ] Data store updates\r\n- [ ] Unit tests\r\n- [ ] Documentation with examples\n\n###\n\n","completion":" [2190477857,3943104021]"}
{"prompt":"### Description\r\n\r\nAdd the code to be able to get all shipping zones or a single shipping zone via the data store.\r\n\r\n_For now, this should be marked as experimental/internal as we iterate on the API so that it is clear that this is incomplete and subject to change_.\r\n\r\n#### _Get_\r\n> This API lets you retrieve a shipping zone by ID.\r\n\r\n**HTTP Request**\r\n> **GET** `/wp-json/wc/v3/shipping/zones/<id>`\r\n\r\n**Reference**\r\n> https://woocommerce.github.io/woocommerce-rest-api-docs/#retrieve-a-shipping-zone\r\n\r\n#### _List all_\r\n**Description**\r\n> This API lets you retrieve all shipping zones\r\n\r\n**HTTP Request**\r\n> **GET** `/wp-json/wc/v3/shipping/zones`\r\n\r\n\r\n**Reference**\r\n> https://woocommerce.github.io/woocommerce-rest-api-docs/#list-all-shipping-zones\r\n\r\n### Acceptance criteria\r\n- [ ] Data store updates\r\n- [ ] Unit tests\r\n- [ ] Documentation with examples\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"### Description\r\n\r\nAdd the code to be able to delete shipping zones via the data store.\r\n\r\n_For now, this should be marked as experimental/internal as we iterate on the API so that it is clear that this is incomplete and subject to change_.\r\n\r\n\r\n#### _Delete_\r\n**HTTP Request**\r\n> **DELETE** `/wp-json/wc/v3/shipping/zones/<id>`\r\n\r\n**Reference**\r\n> https://woocommerce.github.io/woocommerce-rest-api-docs/#delete-a-shipping-zone\r\n\r\n**Properties**\r\n| Parameter | Type | Description |\r\n| --------- | -------- | -------- |\r\n| `force` | string | Required to be `true`, as resource does not support trashing. |\r\n\r\n### Acceptance criteria\r\n- [ ] Data store updates\r\n- [ ] Unit tests\r\n- [ ] Documentation with examples\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"### Description\r\n\r\nAdd a data store to be able to create and update a shipping zone.\r\n\r\n_For now, this should be marked as experimental/internal as we iterate on the API so that it is clear that this is incomplete and subject to change_.\r\n\r\n**Properties**\r\n| Parameter | Type | Description\r\n| --------- | -------- | -------- |\r\n| `id` | integer | Unique identifier for the resource. |\r\n| `name` | string | Zone name. |\r\n| `order` | integer | Menu order, used to custom sort the resource. |\r\n\r\n\r\n#### _Create_\r\n> This API helps you to create a new shipping zone.\r\n\r\n**HTTP Request**\r\n> **POST** `/wp-json/wc/v3/shipping/zones`\r\n\r\n**Reference**\r\n> https://woocommerce.github.io/woocommerce-rest-api-docs/#create-a-shipping-zone\r\n\r\n\r\n#### _Update_\r\n**Description**\r\n> This API lets you make changes to a shipping zone.\r\n\r\n**HTTP Request**\r\n> **PUT** `/wp-json/wc/v3/shipping/zones`\r\n\r\n**Reference**\r\n> https://woocommerce.github.io/woocommerce-rest-api-docs/#update-a-shipping-zone\r\n\r\n\r\n### Acceptance criteria\r\n- [ ] Data store updates\r\n- [ ] Unit tests\r\n- [ ] Documentation with examples\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"### Description\r\n\r\nAdd the code to be able to delete attribute terms through the products data store.\r\n\r\n_For now, this should be marked as experimental/internal as we iterate on the API so that it is clear that this is incomplete and subject to change_.\r\n\r\n#### _Delete_\r\n> This API helps you delete a product attribute term.\r\n\r\n**HTTP Request**\r\n> **DELETE** `/wp-json/wc/v3/products/attributes/<attribute_id>/terms/<id>`\r\n\r\n**Reference**\r\n> https://woocommerce.github.io/woocommerce-rest-api-docs/#delete-an-attribute-term\r\n\r\n**Properties**\r\n| Parameter | Type | Description |\r\n| --------- | -------- | -------- |\r\n| `force` | string | Required to be `true`, as resource does not support trashing. |\r\n\r\n### Acceptance criteria\r\n- [ ] Data store updates\r\n- [ ] Unit tests\r\n- [ ] Documentation with examples\r\n\n\n###\n\n","completion":" [2190477857,3943104021]"}
{"prompt":"### Description\r\n\r\nAdd the code to be able to create and edit attribute terms through the products data store.\r\n\r\n_For now, this should be marked as experimental/internal as we iterate on the API so that it is clear that this is incomplete and subject to change_.\r\n\r\n**Properties**\r\n| Parameter | Type | Description\r\n| --------- | -------- | -------- |\r\n| `id` | integer | Unique identifier for the resource. |\r\n| `name` | string | Term name. |\r\n| `slug` | string | An alphanumeric identifier for the resource unique to its type. |\r\n| `description` | string | HTML description of the resource. |\r\n| `menu_order` | integer | Menu order, used to custom sort the resource. |\r\n| `count` | integer | Number of published products for the resource. |\r\n\r\n\r\n#### _Create_\r\n> This API helps you to create a new product attribute term.\r\n\r\n**HTTP Request**\r\n> **POST** `/wp-json/wc/v3/products/attributes/<attribute_id>/terms`\r\n\r\n**Reference**\r\n> https://woocommerce.github.io/woocommerce-rest-api-docs/#create-an-attribute-term\r\n\r\n\r\n#### _Edit_\r\n**Description**\r\n> This API lets you make changes to a product attribute term.\r\n\r\n**HTTP Request**\r\n> **PUT** `/wp-json/wc/v3/products/attributes/<attribute_id>/terms/<id>`\r\n\r\n**Reference**\r\n> https://woocommerce.github.io/woocommerce-rest-api-docs/#update-an-attribute-term\r\n\r\n\r\n### Acceptance criteria\r\n- [ ] Data store updates\r\n- [ ] Unit tests\r\n- [ ] Documentation with examples\r\n\n\n###\n\n","completion":" [2190477857,3943104021]"}
{"prompt":"### Description\r\n\r\nAdd the code to be able to get the product attribute terms through the products data store.\r\n\r\n_For now, this should be marked as experimental/internal as we iterate on the API so that it is clear that this is incomplete and subject to change_.\r\n\r\n#### _Get_\r\n> This API lets you retrieve a product attribute term by ID.\r\n\r\n**HTTP Request**\r\n> **GET** `/wp-json/wc/v3/products/attributes/<attribute_id>/terms/<id>`\r\n\r\n**Reference**\r\n> https://woocommerce.github.io/woocommerce-rest-api-docs/#retrieve-an-attribute-term\r\n\r\n#### _List all_\r\n**Description**\r\n> This API lets you retrieve all terms from a product attribute.\r\n\r\n**HTTP Request**\r\n> **GET** `/wp-json/wc/v3/products/attributes/<attribute_id>/terms`\r\n\r\n**Properties**\r\n| Parameter | Type | Description |\r\n| --------- | -------- | -------- |\r\n| `context` | string | Scope under which the request is made; determines fields present in response. Options: `view` and `edit`. Default is `view`. |\r\n| `page` | integer | Current page of the collection. Default is `1`. |\r\n| `per_page` | integer | Maximum number of items to be returned in result set. Default is `10`. |\r\n| `search` | string | Limit results to those matching a string. |\r\n| `exclude` | array | Ensure result set excludes specific ids. |\r\n| `include` | array | Limit result set to specific ids. |\r\n| `order` | string | Order sort attribute ascending or descending. Options: `asc` and `desc`. Default is `asc`. |\r\n| `orderby` | string | Sort collection by resource attribute. Options: `id`, `include`, `name`, `slug`, `term_group`, `description` and `count`. Default is `name`. |\r\n| `hide_empty` | boolean | Whether to hide resources not assigned to any products. Default is `false`. |\r\n| `parent` | integer | Limit result set to resources assigned to a specific parent. |\r\n| `product` | integer | Limit result set to resources assigned to a specific product. |\r\n| `slug` | string | Limit result set to resources with a specific slug. |\r\n\r\n\r\n**Reference**\r\n> https://woocommerce.github.io/woocommerce-rest-api-docs/#list-all-attribute-terms\r\n\r\n### Acceptance criteria\r\n- [ ] Data store updates\r\n- [ ] Unit tests\r\n- [ ] Documentation with examples\r\n\n\n###\n\n","completion":" [2190477857,3943104021]"}
{"prompt":"### Description\r\n\r\nAdd the code to be able to delete product attributes through the products data store.\r\n\r\n```\r\nThis also will delete all terms from the selected attribute.\r\n```\r\n\r\n_For now, this should be marked as experimental/internal as we iterate on the API so that it is clear that this is incomplete and subject to change_.\r\n\r\n\r\n#### _Delete_\r\n**HTTP Request**\r\n> **DELETE** `/wp-json/wc/v3/products/attributes/<id>`\r\n\r\n**Reference**\r\n> https://woocommerce.github.io/woocommerce-rest-api-docs/#delete-a-product-attribute\r\n\r\n**Properties**\r\n| Parameter | Type | Description |\r\n| --------- | -------- | -------- |\r\n| `force` | string | Required to be `true`, as resource does not support trashing. |\r\n\r\n### Acceptance criteria\r\n- [ ] Data store updates\r\n- [ ] Unit tests\r\n- [ ] Documentation with examples\r\n\n\n###\n\n","completion":" [2190477857,3943104021]"}
{"prompt":"### Description\r\n\r\nAdd the code to be able to create and edit product attributes through the products data store.\r\n\r\n_For now, this should be marked as experimental/internal as we iterate on the API so that it is clear that this is incomplete and subject to change_.\r\n\r\n**Properties**\r\n| Parameter | Type | Description\r\n| --------- | -------- | -------- |\r\n| `id` | integer | Unique identifier for the resource. |\r\n| `name` | string | Attribute name. |\r\n| `slug` | string | An alphanumeric identifier for the resource unique to its type. |\r\n| `type` | string | Type of attribute. By default only `select` is supported. |\r\n| `order_by` | string | Default sort order. Options: `menu_order`, `name`, `name_num` and `id`. Default is `menu_order`. |\r\n| `has_archives` | boolean | Enable/Disable attribute archives. Default is `false`. |\r\n\r\n#### _Create_\r\n**HTTP Request**\r\n> **POST** `/wp-json/wc/v3/products/attributes`\r\n\r\n**Reference**\r\n> https://woocommerce.github.io/woocommerce-rest-api-docs/#create-a-product-attribute\r\n\r\n\r\n#### _Edit_\r\n**HTTP Request**\r\n> **PUT** `/wp-json/wc/v3/products/attributes/<id>`\r\n\r\n**Reference**\r\n> https://woocommerce.github.io/woocommerce-rest-api-docs/#update-a-product-attribute\r\n\r\n### Acceptance criteria\r\n- [ ] Data store updates\r\n- [ ] Unit tests\r\n- [ ] Documentation with examples\n\n###\n\n","completion":" [2190477857,3943104021]"}
{"prompt":"### Description\r\n\r\nAdd the code to be able to get the product attributes through the products data store.\r\n\r\n_For now, this should be marked as experimental/internal as we iterate on the API so that it is clear that this is incomplete and subject to change_.\r\n\r\n#### _Get_\r\n**HTTP Request**\r\n> **GET** `/wp-json/wc/v3/products/attributes/<id>`\r\n\r\n**Reference**\r\n> https://woocommerce.github.io/woocommerce-rest-api-docs/#retrieve-a-product-attribute\r\n\r\n\r\n#### _List all_\r\n**HTTP Request**\r\n> **GET** `/wp-json/wc/v3/products/attributes`\r\n\r\n**Properties**\r\n| Parameter | Type | Description |\r\n| --------- | -------- | -------- |\r\n| `context` | string | Scope under which the request is made; determines fields present in response. Options: `view` and `edit`. Default is `view`. |\r\n\r\n**Reference**\r\n> https://woocommerce.github.io/woocommerce-rest-api-docs/#list-all-product-attributes\r\n\r\n### Acceptance criteria\r\n- [ ] Data store updates\r\n- [ ] Unit tests\r\n- [ ] Documentation with examples\n\n###\n\n","completion":" [2190477857,3943104021]"}
{"prompt":"Some old experiments are still being queried in JS:\r\n\r\n1. [woocommerce_test_experiment](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce-admin/client/homescreen/stats-overview/index.js#L80-L85)\r\n2. [woocommerce_tasklist_progression](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce-admin/client/tasks/tasks.tsx#L68)\r\n\r\nThese are no longer relevant and are unnecessarily consuming resources. We can remove it and default to control experience.\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [3943104021]"}
{"prompt":":**\n\nAdd `isBlockEditor ` property to the `wcadmin_product_add_publish` event\nsee https://github.com/woocommerce/woocommerce/pull/33321 for context\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"\"Store Management\" fails to display after selecting \"Paid theme\" while OBW flow.\r\n\r\n### Expected behavior\r\n\r\n\"Store Management\" should be displad after selecting \"Paid theme\" while OBW flow.\r\n\r\n### Actual behavior\r\n\r\n\"Store Management\" fails to display after selecting \"Paid theme\" while OBW flow.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using JN site.\r\n2. Install and activate WooCommerce 6.6.0.\r\n3. Complete \"Store Details\" by selecting \"Storefront\".\r\n4. Complete all steps on setup checklist.\r\n5. Go to Woocommerce > Home.\r\n6. Verify that Store Management Links are shown.\r\n7. Click on \"Store Details\" on Setup Check List.\r\n8. While finishing the OBW flow select a \"Paid\" theme on Theme step.\r\n9. After the page reload, observe that \"Store Management\" fails to display after selecting \"Paid theme\".\r\n\r\n### Video:\r\n\r\nhttps://user-images.githubusercontent.com/41110392/173368054-a70c79fe-a8e1-4f4e-b71f-db72799ae119.mp4\r\n\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"Originally reported internally by @jarekmorawski, this is is small update to the spotlight component's composition so that the heading and body wrap around the X icon in the corner. Currently, there's quite a gap between them, which looks a bit off when we only have text in the content area.\r\n\r\nIdeally, the final result would look like this:\r\n\r\n![](https://user-images.githubusercontent.com/79307566/173066177-defebe2a-7eb2-4519-a544-fb28aa42f769.png)\r\n\n\n###\n\n","completion":" [3943424887]"}
{"prompt":"The current product templates provided by \"Add product > Start from a template\" is pre-filled with unhelpful \"lorem ipsum\" texts, particularly in the product descriptions. We should provide a more realistic example so users are able to understand better what optimal content looks like.\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"Language translation fails to display for \"GET THE BASICS\" and \"GROW YOUR STORE\" on \"Free feature\" step of OBW.\r\n\r\n### Expected behavior\r\n\r\n\"GET THE BASICS\" and \"GROW YOUR STORE\" should be translated to French language on \"Free feature\" step of OBW.\r\n\r\n### Actual behavior\r\n\r\nLanguage translation fails to display for \"GET THE BASICS\" and \"GROW YOUR STORE\" on \"Free feature\" step of OBW.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using JN site.\r\n2. Install and activate WooCommerce 6.6.0-rc.3.\r\n3. Go to Dashboard > Settings > General\r\n4. Change the site language to a language with good translation coverage such as French (France)\r\n5. Go to Dashboard > Updates and click on the button to update translations.\r\n6. Go to \"Free feature\" step and click Dropdown Button\r\n7. Observe that Language translation fails to display for \"GET THE BASICS\" and \"GROW YOUR STORE\" on \"Free feature\" step.\r\n\r\n### Instruction Link:\r\nhttps://github.com/woocommerce/woocommerce/wiki/Release-Testing-Instructions-WooCommerce-6.6#cleanup-and-fix-translation-path-changes-33226\r\n\r\n### Screenshot:\r\n\r\n![#33375](https://user-images.githubusercontent.com/41110392/172871789-7d67fe85-4c5e-4d94-8ca4-953037dbce9c.jpg)\r\n\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"\"WooCommerce Admin\" fails to deactivate after upgrading to WooCommerce 6.6 on \"Plugins > Installed Plugins\" page.\r\n\r\n### Expected behavior\r\n\r\n\"WooCommerce Admin\" should deactivate after upgrading to WooCommerce 6.6 on \"Plugins > Installed Plugins\" page.\r\n\r\n### Actual behavior\r\n\r\n\"WooCommerce Admin\" fails to deactivate after upgrading to WooCommerce 6.6 on \"Plugins > Installed Plugins\" page.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using JN site.\r\n2. Install Query Monitor\r\n3. Install and activate  WooCommerce 6.4.1 & Skip the onboarding wizard & select \"Yes count me in\".\r\n4. Install & activate WooCommerce Admin 3.2.1.\r\n5. Go to Home > WooCommerce.\r\n6. Observe the note \"Deactivate old WooCommerce Admin version\" exists.\r\n7. Upgrade to WooCommerce 6.6.0-rc.3.\r\n8. Observe that \"WooCommerce Admin\" fails to deactivate after upgrading to WooCommerce 6.6 on \"Plugins > Installed Plugins\" page.\r\n\r\n### Note:- \r\n1. We also observed this issue while upgrading to WooCommerce 6.5.1.\r\n\r\n### Instruction Link:\r\nhttps://github.com/woocommerce/woocommerce/wiki/Release-Testing-Instructions-WooCommerce-6.6#remove-wcadmin-deactivation-note-33028\r\n\r\n### Screenshot:\r\n\r\n![#33374](https://user-images.githubusercontent.com/41110392/172870850-b8527c8d-f5c5-4617-a56f-49347f147b37.jpg)\r\n\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"**User story:**\r\nAs a new merchant\r\nI want to focus on the most important setup tasks\r\nSo I can review some details later\r\n\r\n**Description:**\r\nWith Jetpack installed and connected, alongside WCS, we have the opportunity to set things up on the users' behalf, and ask them to review and confirm, rather than start from scratch and think.\r\n\r\n**Design overview (with new spotlight component):**\r\ncJQeyyhx9PraQrY3YAtCGM-fi-705%3A80783\r\n\r\n**Acceptance Criteria- [ ] This new flow requires embedding an iFrame to avoid sending users to the external Jetpack page. It's feasible on all browsers apart from Safari; we'll keep the current flow (external Jetpack page) for this specific browser.\r\n\r\n\r\n<img width=\"1444\" alt=\"WooCommerce _ Home _ Set up Shipping _ Enable WooCommerce Shipping\" src=\"https://user-images.githubusercontent.com/4344253/172816546-00a47749-bb99-4402-a0e9-de33b70bf249.png\">\r\n<img width=\"1444\" alt=\"WooCommerce _ Home _ Set up Shipping _ Enable WooCommerce Shipping (1)\" src=\"https://user-images.githubusercontent.com/4344253/172816530-96f1cebd-dbb0-4529-bdc1-6428a687e6f5.png\">\r\n<img width=\"1444\" alt=\"WooCommerce _ Home _ Set up Shipping _ Enable WooCommerce Shipping (2)\" src=\"https://user-images.githubusercontent.com/4344253/172816521-bc6e9e81-bb12-4983-b90c-f60366bc438c.png\">\r\n<img width=\"1440\" alt=\"WooCommerce _ Settings (1)\" src=\"https://user-images.githubusercontent.com/4344253/172816509-08226676-9448-45cb-a8f9-553e94f3a22f.png\">\r\n\r\nref https://github.com/woocommerce/woocommerce/issues/32318\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"**User story:**\r\nAs a new merchant\r\nI want to focus on the most important setup tasks\r\nSo I can review some details later\r\n\r\n**Description:**\r\nWith Jetpack installed and connected, alongside WCS, we have the opportunity to set things up on the users' behalf, and ask them to review and confirm, rather than start from scratch and think.\r\n\r\n**Design overview (with new spotlight component):**\r\ncJQeyyhx9PraQrY3YAtCGM-fi-705%3A80783\r\n\r\n**Acceptance Criteria- [ ] Display WCS as recommended extension to be installed in Shipping Settings If the store sells physical products and is located in US, but JP and WCS are not installed and connected:\r\n\r\n\r\n<img width=\"1440\" alt=\"WooCommerce _ Settings\" src=\"https://user-images.githubusercontent.com/4344253/172814321-76a3a716-184f-44da-be9f-45911c58685e.png\">\r\n\r\nref https://github.com/woocommerce/woocommerce/issues/32318\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"**User story:**\r\nAs a new merchant\r\nI want to focus on the most important setup tasks\r\nSo I can review some details later\r\n\r\n**Description:**\r\nWith Jetpack installed and connected, alongside WCS, we have the opportunity to set things up on the users' behalf, and ask them to review and confirm, rather than start from scratch and think.\r\n\r\n**Design overview (with new spotlight component):**\r\ncJQeyyhx9PraQrY3YAtCGM-fi-705%3A80783\r\n\r\n**Acceptance Criteria:**\r\nTo be assessed by the team - some things I'd like to measure:\r\n\r\n- Task completion rate\r\n- After how many tasks users click on the Review shipping options task\r\n- % of stores where the first order is placed without reviewing the shipping options\r\n\r\nref https://github.com/woocommerce/woocommerce/issues/32318\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"**User story:**\r\nAs a new merchant\r\nI want to focus on the most important setup tasks\r\nSo I can review some details later\r\n\r\n**Description:**\r\n~With Jetpack installed and connected, alongside WCS, we have the opportunity to set things up on the users' behalf, and ask them to review and confirm, rather than start from scratch and think.~\r\n\r\n**Design overview (with new spotlight component):**\r\ncJQeyyhx9PraQrY3YAtCGM-fi-705%3A80783\r\n\r\n**Acceptance Criteria- [ ] If the store is located in the UK, Australia or Canada:\r\n- [ ] Same flow as now with a few optimizations in terms of copy and visual.\r\n\r\nhttps://user-images.githubusercontent.com/98944206/161233363-b71277bc-82f1-48ef-bb25-151b7bc4ac09.mov\r\n\r\nref https://github.com/woocommerce/woocommerce/issues/32318\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"**User story:**\r\nAs a new merchant\r\nI want to focus on the most important setup tasks\r\nSo I can review some details later\r\n\r\n**Description:**\r\nWith Jetpack installed and connected, alongside WCS, we have the opportunity to set things up on the users' behalf, and ask them to review and confirm, rather than start from scratch and think.\r\n\r\n**Design overview (with new spotlight component):**\r\ncJQeyyhx9PraQrY3YAtCGM-fi-705%3A80783\r\n\r\n**Acceptance Criteria- [ ] Implement the new flow to install and connect WCS.\r\n\r\n![159506263-a846740e-b536-4c7f-896f-398d4c2aa238](https://user-images.githubusercontent.com/4344253/172817941-06b27b00-e7cc-4bcc-a271-3fe70e0c18f5.gif)\r\n\r\nref: https://github.com/woocommerce/woocommerce/issues/32318\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"## User story\r\nAs a new merchant\r\nI want to shipping options set by default\r\nSo I can review it later\r\n\r\n## Acceptance Criteria:\r\n\r\nAutomatically set the following default shipping options:\r\n\r\n- Free shipping in the same country as the store.\r\n- Flat rate in all other countries.\r\n\r\nWhen any of the conditions are true:\r\n- The store sells physical products, has JP and WCS installed and connected, and is located in the US.\r\n- The store sells physical products, and is not located in US/Canada/Australia/UK (irrelevant if JP is installed or not).\r\n- The store sells physical products and is located in US, but JP and WCS are not installed.\r\n\r\nref: https://github.com/woocommerce/woocommerce/issues/32318\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"**User story:**\r\nAs a new merchant\r\nI want to focus on the most important setup tasks\r\nSo I can review some details later\r\n\r\n**Description:**\r\nWith Jetpack installed and connected, alongside WCS, we have the opportunity to set things up on the users' behalf, and ask them to review and confirm, rather than start from scratch and think.\r\n\r\n**Design overview (with new spotlight component):**\r\ncJQeyyhx9PraQrY3YAtCGM-fi-705%3A80783\r\n\r\n**Acceptance Criteria- [ ] Display intro tooltips in Shipping Settings: Shipping zones, shipping methods when a user from shipping task \r\n- [ ] Display intro tooltips in WCS tab If the store sells physical products, has JP and WCS installed and connected, and is located in the US\r\n\r\n![https://user-images.githubusercontent.com/98944206/159504026-16f514c4-4c39-4b87-aeac-3a91f4c91628.gif](https://user-images.githubusercontent.com/98944206/159504026-16f514c4-4c39-4b87-aeac-3a91f4c91628.gif)\r\n\r\n\r\nref: https://github.com/woocommerce/woocommerce/issues/32318\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"**User story:**\r\nAs a new merchant\r\nI want to focus on the most important setup tasks\r\nSo I can review some details later\r\n\r\n**Description:**\r\nWith Jetpack installed and connected, alongside WCS, we have the opportunity to set things up on the users' behalf, and ask them to review and confirm, rather than start from scratch and think.\r\n\r\n**Design overview (with new spotlight component):**\r\ncJQeyyhx9PraQrY3YAtCGM-fi-705%3A80783\r\n\r\n**Acceptance Criteria~Case 1:~ There is a separate ticket for this case https://github.com/woocommerce/woocommerce/issues/33526\r\n\r\n- If the store sells physical products, has JP and WCS installed and connected, and is located in the US\r\n- If the store sells physical products, and is not located in US/Canada/Australia/UK (irrelevant if JP is installed or not):\r\n- If the store sells physical products and is located in US, but JP and WCS are not installed:\r\n\r\n- [ ] Address users to WooCommerce > Settings > Shipping once clicked on the task on the home page\r\n\r\n**Case 2:**\r\n-  If we don't know if the store sells physical products and where it's located, and JP is **not** installed:\r\n\r\n- [ ] Address users to a single page with the following steps: Set your store location, Review your shipping options, Enable shipping label printing and discounted rates (only if the store location added in the first step is US, Canada or Australia), **Connect your store** \r\n\r\n**Case 3:**\r\n-  If we don't know if the store sells physical products and where it's located, and JP is installed:\r\n\r\n- [ ] Address users to a single page with the following steps: Set your store location, Review your shipping options, Enable shipping label printing and discounted rates (only if the store location added in the first step is US, Canada or Australia) \r\n\r\n**Case 4:**\r\n- If the store is located in the UK, Australia or Canada\r\n\r\n- [ ]  Same flow as now with a few optimizations in terms of copy and visual. (https://github.com/woocommerce/woocommerce/issues/33368)\r\n\r\nref: https://github.com/woocommerce/woocommerce/issues/32318\r\n\r\n\r\n**Gherkin syntax**\r\n\r\n~Case 1~ There is a separate ticket for this case https://github.com/woocommerce/woocommerce/issues/33526\r\n\r\n\r\n**Case 2**\r\nGiven a store with the following OBW selections and Jetpack is not installed\r\n\r\n| Type | Value |\r\n|------|-------|\r\n| Product type | unknown| \r\n| Store Details[Country / Region] | unknown|\r\n\r\n\r\nWhen a user clicks on the shipping task on WooCommerce -> Home\r\nThen redirect the user to the shipping task with the following additional steps\r\n\r\n- Set your location\r\n- Review your shipping options\r\n- Enable shipping label printing and discounted rates\r\n- Connect your store\r\n\r\n**Case 3**\r\n\r\nGiven a store with the following OBW selections and Jetpack is installed\r\n\r\n| Type | Value |\r\n|------|-------|\r\n| Product type | unknown| \r\n| Store Details[Country / Region] | unknown|\r\n\r\nWhen a user clicks on the shipping task on WooCommerce -> Home\r\nThen redirect the user to the shipping task with the following additional steps\r\n\r\n- Set your location\r\n- Review your shipping options\r\n- Enable shipping label printing and discounted rates\r\n\r\n\r\n**Case 4**\r\nGiven a store located in the UK or Australia or Canada\r\nWhen a user clicks on the shipping task on WooCommerce -> Home\r\nThen use the same flow as now with a few optimizations in terms of copy and visual.\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"## User Story\r\n> As a new merchant\r\n> I want to the task list to contain prioritized tasks\r\n> So I can focus on what's import to set up next\r\n\r\n## Acceptance Criteria\r\n\r\nDo not display the shipping task on the home page when:\r\n- The store sells digital products only\r\n\r\nWhen automated shipping options have been set in #33366:\r\n- Change the name of the shipping task to `Review shipping options` and move it the `Things to do next` section.\r\n\r\nOtherwise, display the `\"Set up shipping\"` task in the `\"Get ready to start selling\"` section when either of the following is true:\r\n   -  We don't know if the store sells physical products and where it's located, and ~JP is not installed~ (https://github.com/woocommerce/woocommerce/issues/32318#issuecomment-1119395274)\r\n   -  The store is located in the UK, Australia or Canada\r\n \r\n\r\n\r\nref: https://github.com/woocommerce/woocommerce/issues/32318\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"Sometimes plugins use properties of `WP_Screen` to determine what part of the WP Admin they're in so they can, e.g. customize the UI. When the custom order tables are authoritative, we're using a custom admin page to display a list table of orders and the edit UI for single orders, since we can't use the standard screens that assume a post type. However, it seems like we are trying to make the change in UI seamless, even if the URL is different. The `WP_Screen` object for the custom admin pages betrays this though, because some key properties are different:\r\n\r\n**Orders List Table screen**\r\n\r\n| Prop | Posts | Orders |\r\n|--------|--------|--------|\r\n| `base` | `edit` | `woocommerce_page_wc-orders` |\r\n| `id` | `edit-shop_order` | `woocommerce_page_wc-orders` |\r\n| `post_type` | `shop_order` | _empty_ |\r\n\r\n**Single Order screen**\r\n\r\n| Prop | Posts | Orders |\r\n|--------|--------|--------|\r\n| `base` | `post` | `woocommerce_page_wc-orders` |\r\n| `id` | `shop_order` | `woocommerce_page_wc-orders` |\r\n| `post_type` | `shop_order` | _empty_ |\r\n\r\nSo the question is, **would it make sense to try and replicate the screen props on the respective custom admin pages?**\r\n\r\nHere's an example of how `WP_Screen` might be used, where it seems like we should assume that the intended functionality would work regardless of which set of tables is authoritative:\r\n\r\n```php\r\n$current_screen = get_current_screen();\r\nif ( 'shop_order' == $current_screen->post_type ) {\r\n\t// Do stuff.\r\n}\r\n```\r\n\r\nMaybe it wouldn't make sense to modify the `base` property since it's related to the file name in `wp-admin`. But perhaps the `id` and `post_type` should be the same?\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"e2e test `Store owner can complete onboarding wizard` currently does not verify we are redirected to WC Home which contains the task list after completing the onboarding wizard.\n\n###\n\n","completion":" [3845073088,5222415782]"}
{"prompt":"## Issue description\r\n\r\nThe use of `page.fill()` is discouraged by Playwright ([doc](https://playwright.dev/docs/api/class-page#page-fill)). Instead, `locator.fll()` should be used. This is because:\r\n\r\n* Tests are more resilient when they use \"user-facing attributes and explicit contracts such as `page.getByRole()`. We can change the implementation (DOM, classes, etc.) and as long as how the user perceives the UI (roles, labels, etc.) stays the same, our tests will still function.\r\n* If multiple elements match the selector passes to `page.fill()`, by default the first one found will be used. This can be a source of unexpected errors and flakiness. `locator.fill()`, by default, will throw an error and fail the test if more than one element matches the criteria for the locator.\r\n\r\n## Acceptance criteria\r\n\r\n- [ ] Remove all use of `page.fill()` in [`plugins/woocommerce/tests/e2e-pw/tests/merchants/create-variiable-product.spec.js`](https://github.com/woocommerce/woocommerce/blob/82a172cd066423601841cda945bbe48535552334/plugins/woocommerce/tests/e2e-pw/tests/merchant/create-variable-product.spec.js#L4) with `locator.fill()` based imlpementations\r\n- [ ] All tests continue to reliably pass\n\n###\n\n","completion":" [4370024739,5222415782]"}
{"prompt":"\"Add store details\" task fails to mark as completed for selecting Nigeria based address while OBW.\r\n\r\n### Expected behavior\r\n\r\n\"Add store details\" task should be marked as completed for selecting Nigeria based address while OBW.\r\n\r\n\r\n### Actual behavior\r\n\r\n\"Add store details\" task fails to mark as completed for selecting Nigeria based address while OBW.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using the JN site or Atomic site.\r\n2. Install and activate all the required plugins.\r\n3. Install and activate WooCommerce 7.6 Beta.\r\n4. Start OBW.\r\n5. Select a Nigeria-based address.\r\n6. Finish OBW.\r\n7. Go to \"Woocommerce > Home\" page\r\n8. Observe that \"Add store details\" task fails to mark as completed.\r\n\r\n### Screenshot:\r\n\r\n![#37451](https://user-images.githubusercontent.com/41110392/227982771-b5b48da1-2b03-4716-af03-00c41e9eab14.gif)\r\n\r\n\r\n\n\n###\n\n","completion":" [3943424887]"}
{"prompt":"This issue seems to dovetail with and build on the one reported by @jacoswan  in #26256\r\n\r\nIf you have a variable product with variations, and want to update the product and variations' SKU in a single CSV import, the variations are deleted, and the parent product is not updated.\r\n\r\nThe following error is shown. In this screenshot there were 4 variable products, each with 4 variations. All 16 variations are deleted and the parent products are not updated.\r\n\r\n![qdAIL7.png](https://user-images.githubusercontent.com/45057772/227681852-13b261a5-b908-4532-b1df-7bf465003907.png)\r\n\r\nIf parent products and variations are imported separately, parents first with the new SKU, then the variations, the import is successful.\r\n\r\nAt the very least we ought to document this so that users can be aware that in most if not all cases they are best off separating variations to a separate import.\n\n### Expected behavior\n\nWhen products and variations already exist on the shop, they should be able to be updated in a single import, including the SKU.\n\n### Actual behavior\n\nIf the SKU is updated in an import that contains variable products and their variations, the variations are deleted and the variable products are not updated.\n\n### Steps to reproduce\n\n1. Spin up a test site.\r\n2. Create some variable products\r\n3. Create some variations for each\r\n4. Export these using the built-in exporter\r\n5. Change the SKUs to a new format, including the parent column\r\n6. Attempt to import them \r\n7. See error on import failure\r\n8. Check variable products and note variations are no longer there.\n\n\n\n###\n\n","completion":" [1891051450]"}
{"prompt":"# Steps to reproduce\n\nHaving at least one global attribute created:\n\n1. Go to legacy product manager\n2. Select variable product type\n3. Go to variations tab\n4. Fill out the first attribute data.\n5. Click 'Create variations'\n6. Go to the 'Attributes' tab\n\n\nThe UI looks like this:\n![Image](https://user-images.githubusercontent.com/13437655/227601473-efca2026-6777-45ab-a88d-ce2768f7bf2a.png)\n\nIn that case the \"empty state\" should not appear, and the save attributes button should be shown.\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"undefinedRef: \r\n- [WordPress.org Support Forum thread](https://wordpress.org/support/topic/error-in-log-table/#post-16584189)\r\n- [Exception added to Action Scheduler](https://github.com/woocommerce/action-scheduler/pull/806)\r\n\r\nAcrtion Scheduler now logs an error when running a hook that does not have a hooked handler. WooCommerce creates recurring actions that are not removed when WC is deactivated. If another plugin in the install uses AS then AS will continue to attempt to run those recurring actions resulting in an error log entry:\r\n\r\n```\r\n2023-03-15 11:59:34 +0000 action created\r\n2023-03-21 18:20:05 +0000action started via WP Cron\r\n2023-03-21 18:20:05 +0000action failed via WP Cron: Scheduled action for woocommerce_cleanup_draft_orders will not be executed as no callbacks are registered.\r\n```\r\n\r\nWe should unschedule the recurring actions on deactivation. This is safe to do as the actions will be rescheduled on activation.\r\n\r\n\n\n###\n\n","completion":" [1903053061]"}
{"prompt":"p1679462089406009-slack-C01SFMVEYAK\n\nRemnants of an [old fix](https://github.com/woocommerce/woocommerce-admin/pull/3590) is no longer useful and is causing onboarding wizard to be marked as completed and hides tasklist unintentionally.\n\nWe should remove the old hook and relevant codes.\n\n### Acceptance criteria\n\n- OBW shouldn't get automatically completed when running `woocommerce_updated` hook\n- Tasklist shouldn't be hidden when running `woocommerce_updated` hook\n\n###\n\n","completion":" [1891051446]"}
{"prompt":"With update to Version 7.5.1 New order email are not coming.\r\nAfter hours of investigating, we found out it is a problem with non-ASCII characters inside email headers.\r\nFor Subject or for reply-to headers.\n\n### Expected behavior\n\nThe emails should arrive.\n\n### Actual behavior\n\nThe emails don't arrive, because email server bounces them. Producing:\r\n550 Subject contains invalid characters.\r\n550 Reply-To contains invalid characters.\n\n### Steps to reproduce\n\nMake an order with name of customer ƒÜiro ≈Ωamet, for example.\r\nIn the subject for New order email enter some tekst with non-ASCII characters,.. for example: Broj narud≈æbe\n\n\n\n###\n\n","completion":" [1891051441]"}
{"prompt":"In some scenarios, when you try to open the WooCommerce > Status page, the following critical PHP error appears:\r\n\r\n```\r\nPHP Fatal error:  Uncaught Error: Class 'WC_Plugin_Updates' not found in /srv/htdocs/wp-content/plugins/woocommerce/includes/admin/views/html-admin-page-status-report.php:31\r\nStack trace:\r\n#0 /srv/htdocs/wp-content/plugins/woocommerce/includes/admin/class-wc-admin-status.php(30): include_once()\r\n#1 /srv/htdocs/wp-content/plugins/woocommerce/includes/admin/views/html-admin-page-status.php(43): WC_Admin_Status::status_report()\r\n#2 /srv/htdocs/wp-content/plugins/woocommerce/includes/admin/class-wc-admin-status.php(23): include_once('/Users/bernatto...')\r\n#3 /srv/htdocs/wp-content/plugins/woocommerce/includes/admin/class-wc-admin-menus.php(305): WC_Admin_Status::output()\r\n#4 /Users/bernattorras/Local Sites/renewbreakupbootcamp/app/public/wp-includes/class-wp-hook.php(308): WC_Admin in /srv/htdocs/wp-content/plugins/woocommerce/includes/admin/views/html-admin-page-status-report.php on line 31\r\n```\r\n\r\nThis is happening because the WC_Plugin_Updates class [is instantiated when rendering the Status page](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/includes/admin/views/html-admin-page-status-report.php#L27) without being the class included or available at this moment.\r\n\r\nThis issue was reported [here](https://github.com/a8cteam51/renew-breakup-bootcamp/issues/316). I can't always replicate this error. The minimal scenario that I've found it happening is when using WooCommerce in combination with WooCommerce Subscriptions and [CoBlocks](https://wordpress.org/plugins/coblocks/). \r\n\r\nEven if the issue could be coming from a conflict between other plugins, I think that it would be safe to add a conditional like this before instantiating the `WC_Plugin_Updates` class:\r\n\r\n```\r\nif ( ! class_exists( 'WC_Plugin_Updates' ) ) {\r\n\tinclude_once dirname( WC_PLUGIN_FILE ) . '/includes/admin/plugin-updates/class-wc-plugin-updates.php';\r\n}\r\n```\r\n\r\nChecking the code, I see that this is a usual thing to do when using the WC_Plugin_Updates class in WooCommerce ([here](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/includes/wc-core-functions.php#L2280) for example).\n\n### Expected behavior\n\nThe WooCommerce > Status page should be rendered without any errors.\r\n\r\nIf the `WC_Plugin_Updates` class isn't accessible for some reason (maybe a plugin conflict), it should be included to make it available again. \n\n### Actual behavior\n\nFor some reason, it seems that sometimes, the `WC_Plugin_Updates` class isn't available when rendering the WooCommerce > Status page, and when this happens, an error is thrown. \n\n### Steps to reproduce\n\n0. I've only been able to replicate this issue when using WooCommerce + WooCommerce Subscriptions + [CoBlocks](https://wordpress.org/plugins/coblocks/). \r\n1. Go to WooCommerce > Status\r\n2. Click on the Tools tab\r\n3. Click back to the Status tab \r\n\r\nIf you don't get the fatal error, try to repeat steps 2 and 3 a few more times. \n\n\n\n###\n\n","completion":" [1891051452]"}
{"prompt":"**1) The z-index of the WC top header is too high.**\r\n\r\nIt has a value of 1001 and this implies that the submenus of WP dashboard menu items are shown below the top header of WooCommerce.\r\n\r\n**2) A couple of strings are not translated.** \r\n\r\nThe strings \"**days**\" and \"**Dismiss**\" are shown in English even though the language of my WooCommerce installation is Italian.\r\n\r\n### Expected behavior\r\n\r\nThe correct display of WP dashboard submenus and the two strings translated into Italian in the WooCommerce administration pages.\r\n\r\n### Actual behavior\r\n\r\nSee in \"**Describe the bug**\"\r\n![wc-header](https://user-images.githubusercontent.com/1197819/227466351-92e93d57-7a3e-4b1e-b7ee-c3552bdf7925.png)\r\n\r\n### Steps to reproduce\r\n\r\n1. Set the WP administration language to Italian.\r\n2. Click on the menu item to view WooCommerce administration or analytics.\r\n3. Click on a WordPress dashboard menu item with a submenu.\r\n\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"undefinedI'd like the option for customers to pay for an order partially using method A, and the rest on method B. For example, a cash transaction (for an in-store purchase) and a credit card transaction for the difference. Or on multiple credit cards.\r\n\r\n### Describe alternatives you've considered\r\n\r\nCurrently the workaround is to create a manual order for the portion of the transaction to be paid using method A, then discount that payment from the order to be paid using method B. While doable, the process is inefficient.\r\n\r\n### Additional context\r\n\r\n41876084-hc\n\n###\n\n","completion":" [1891051449]"}
{"prompt":"We should create a shipping dimensions block that contains the 4 fields (width, length, height, weight) and the interactive SVG that highlights the width, length, and height (similar to how it works now).\nImplementation is up to you, it may be worth using inner blocks for the dimension fields for easier extensibility by 3PD's.\n\n**Design**\n\n![Image](https://user-images.githubusercontent.com/2240960/227236900-302c88dc-9d90-416a-92e6-29e1092c5776.png)\n\nAkVNGImLgSqCObTQ3idVn7-fi-332-56470\n\n**Acceptance criteria**\n\n- [ ] **Dimensions** block/field should be visible within the Shipping section rendered through the template\n- [ ] The box image should highlight correctly when the width, length, and height fields are in focus.\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"We should create a **Fees & dimensions** section within the shipping tab and add the initial field to it - **Shipping fee**\nWe should be able to re-use the radio control block created as part of https://github.com/woocommerce/woocommerce/issues/37395.\n\nThis may require a new dropdown block for the Shipping class dropdown that shows up when **Follow class** is selected.\n\n**Design**\n\n![Image](https://user-images.githubusercontent.com/2240960/227235453-78fd4dc2-aed7-4fc3-9478-c044927ca48d.png)\n\nAkVNGImLgSqCObTQ3idVn7-fi-305-38548\n\n**Acceptance criteria**\n\n- [ ] **Fees & dimensions** section should be present within Shipping tab\n- [ ] **Shipping fee** field should be visible within **Fees & dimensions** section\n- [ ] Shipping class dropdown should be visible if **Follow class** is selected, but hidden when **Free shipping** is selected.\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"Move over the **Email me when stock reaches** field to the advanced section within the inventory section.\nThis may require a new re-usable block for number fields.\nThis should work similar as the current implementation within `InventoryStockManageField`.\n\n**Design**\n\n![Image](https://user-images.githubusercontent.com/2240960/227232161-c090709b-b05d-401c-b6b7-238372b98095.png)\n\nAkVNGImLgSqCObTQ3idVn7-fi-332-51222\n\n**Acceptance criteria**\n\n- [ ] **Email me when stock reaches** field should be present in advanced dropdown in Inventory as seen in the design.\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"Move over the **Restrictions** field to the advanced section within the inventory section.\nThis may require a new re-usable block for checkboxes. Not sure if it would be worth updating the radio control block for this, or creating a separate block for this, maybe separate for now?\n\n**Design**\n\n![Image](https://user-images.githubusercontent.com/2240960/227232161-c090709b-b05d-401c-b6b7-238372b98095.png)\n\nAkVNGImLgSqCObTQ3idVn7-fi-332-51222\n\n**Acceptance criteria**\n\n- [ ] **Restrictions** field should be present in advanced dropdown in Inventory as seen in the design.\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"This issue covers the first part of the Advanced section within the inventory section. By adding the `Advanced` collapsable block and including the **When out of stock** field. The **Restrictions** field is a separate issue.\n\nThere should already be blocks available for the Radio Control and the collapsable block, done as part of: https://github.com/woocommerce/woocommerce/issues/37395 & https://github.com/woocommerce/woocommerce/issues/37253 )\n\n**Design**\n\n![Image](https://user-images.githubusercontent.com/2240960/227230429-e38a8006-44ea-4470-b537-d95e66c73449.png)\n\nAkVNGImLgSqCObTQ3idVn7-fi-332-51221\n\n**Acceptance criteria**\n\n- [ ] **Advanced** button should be visible within Inventory section\n- [ ] Clicking on advanced should toggle the visibility of the **When out of stock** field\n- [ ] **When out of stock** should contain 3 options and update `backorders` value\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"We should make available the track inventory toggle within the Inventory section.\nOnce enabled it should set `manage_stock` to true and also show the available quantity field.\n\nWe should be able to make use of the toggle block created as part of: https://github.com/woocommerce/woocommerce/issues/37391\n\n**Design**\n\n![Image](https://user-images.githubusercontent.com/2240960/227227707-6d371337-c0a4-4c55-838d-d927bb8aefdf.png)\n\nAkVNGImLgSqCObTQ3idVn7-fi-331-61737\n\n**Acceptance criteria**\n\n- [ ] **Track stock quantity for this product** should be visible in the inventory section\n- [ ] When enabled, the Available Quantity field should be present (similar how it worked before).\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"This issue pertains to moving the SKU field over to the block based product editor.\nThis may warrant the creation of a new product sku block. I had a quick look and couldn't find a similar already existing block, but it would be worth having a re-look.\n\nThe product SKU block should work the same as it currently does within the product editor.\n\n**Design**\n\n![Image](https://user-images.githubusercontent.com/2240960/227223816-55154abe-f3b3-43a1-853f-4e3ebb73b7fc.png)\n\nAkVNGImLgSqCObTQ3idVn7-fi-331-61736\n\n**Acceptance criteria**\n\n- [ ] Inventory section should be present within Inventory tab\n- [ ] SKU field should be present within inventory section\n- [ ] SKU should be auto generated from the product title, similar to how it works currently.\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"This issue will cover moving over the Tax class field displayed within the advanced section in the pricing section.\nWe should be able to make use of previously created blocks for this, like the collapsable block and radio control block.\n\n**Design**\n\n![Image](https://user-images.githubusercontent.com/2240960/227222586-c8f39662-a8d8-439d-8c47-ddc17ea0effc.png)\n\nAkVNGImLgSqCObTQ3idVn7-fi-305-83281\n\n**Acceptance criteria**\n\n- [ ] Advanced section should be displayed in pricing section (default closed)\n- [ ] When opening the advanced section the Tax class field should be present with 3 options.\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"Blocked by: [#37395](https://github.com/woocommerce/woocommerce/issues/37395)\n\nWe should move the charge sales tax block over to the new product block template.\n\n**Design**\n\n![Image](https://user-images.githubusercontent.com/2240960/227189482-436830f3-1ec8-4c86-9800-4e53e24860f0.png)\n\nAkVNGImLgSqCObTQ3idVn7-fi-305-53540\n\n**Acceptance criteria**\n\n- [ ] **Charge sales tax on** field should be displayed within pricing block in pricing tab\n- [ ] Should display 3 options\n- [ ] If option is selected it should update the `tax_status` \n\n###\n\n","completion":" [4370024739]"}
{"prompt":"We have several fields that are radio controls with several options ( Sales tax, Tax class, Stock status, Out of stock ).\nWe should have a re-usable radio control block that can be re-used for these fields.\n\n**Demo**\n\n![Image](https://user-images.githubusercontent.com/2240960/227187732-01cde567-9731-4ef6-8692-1599db9304bd.png)\n\nAkVNGImLgSqCObTQ3idVn7-fi-305-83281\n\n**Acceptance criteria**\n\n- [ ] Radio control should have attribute name that updates the entity data store with the selected value.\n- [ ] Radio control should have an `options` attribute with an array of label/value objects as radio control options.\n- [ ] Radio control should support additional attributes like: title/label, secondary text\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"Create a schedule sale price block and add it to the product template.\nThe `from` and `to` fields should be displayed when schedule sale is turned on. If no sale price the toggle should be disabled.\n\n**Design**\n\n![Image](https://user-images.githubusercontent.com/2240960/227185502-5571b990-c287-4fae-b269-d3933f4dc09e.png)\n\nAkVNGImLgSqCObTQ3idVn7-fi-305-78685\n\n**Acceptance criteria**\n\n- [ ] Schedule sale toggle should be present within pricing block in pricing tab.\n- [ ] Schedule sale toggle should be disabled when no sale price exists\n- [ ] When enabled the `from` and `to` date time fields should be present\n- [ ] When disabled the `from` and `to` field values should be set back to `null` (if previously set)\n- [ ] When initially enabled the `from` field should be auto populated to the present day (see previous logic).\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"We have several date/time fields, for example the **from** and **to** fields under the schedule sale toggle. \nWe should have an abstract date/time field block that can be re-used for both of these fields.\nWe should be able to wrap the `DateTimePickerControl` component.\n\n**Design**\n\n![Image](https://user-images.githubusercontent.com/2240960/227183411-d3f25a02-372d-48e6-ba19-ac8c19d9f892.png)\n\nAkVNGImLgSqCObTQ3idVn7-fi-305-78685\n\n**Acceptance criteria**\n\n- [ ] An abstract date/time field block should be available with a `name` attribute for setting the specified field in the entity data store.\n- [ ] Block should have additional attributes for `label`, `placeholder`, and `timeForDateOnly` and others if necessary\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"We have a couple different places where we make use of a toggle to display additional fields ( see Schedule sale field and track stock field ).\n\nThis should be a relatively abstract block so it can be easily re-used. Do note that in the case of Schedule sale it is only used to toggle additional fields, but for the track stock field it also changes a form value `manage_stock` ).\nSome additional items to consider:\n- Should support a disable state, this may require a dependency upon another field value?\n- Should hide/show additional fields, inner blocks may be a good use case here?\n- Should support a tooltip ( see track stock field ) - `ConditionalWrapper`\n\n**Design**\n\n![Image](https://user-images.githubusercontent.com/2240960/227182498-25ebbd46-3318-4c7a-8403-7295ece3e23f.png)\n\n![Image](https://user-images.githubusercontent.com/2240960/227182520-80081a9d-17d8-426e-a694-8d56cda010ad.png)\n\nAkVNGImLgSqCObTQ3idVn7-fi-305-77399\n\n**Acceptance criteria**\n\n- [ ] Toggle should have option for a tooltip\n- [ ] Toggle should show/hide additional blocks\n- [ ] Toggle should optionally toggle a field value using the entity data store\n- [ ] Inner Blocks should have the opportunity to know when they are being rendered or not (ex: Scheduled sale date gets cleared when schedule sale is toggled to false ).\n- [ ] Toggle can be disabled depending on an additional field value\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"The list price and sale price fields should also be displayed within the pricing tab.\nThis issue will cover the creation of the new pricing section within the pricing tab and adding the sale and list price fields.\n\n**Note** that list and sale price are already displayed within the General tab as well ( don't remove it from here ), but should be able to just copy over the template part of this.\n\n**Designs**\n\n![Image](https://user-images.githubusercontent.com/2240960/227175541-a7d252c2-8c0b-4282-b138-3c6184054d9e.png)\n\n\nAkVNGImLgSqCObTQ3idVn7-fi-305-53530\n\n**Acceptance criteria**\n\n- [ ] `Pricing` section is displayed within the pricing tab\n- [ ] List and sale price fields are displayed within the pricing section within the pricing tab.\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"We should be able to fetch order details using the order no instead of the order id, or by listing the orders from a certain email address. This will simplify other integrations with woocommerce mainly support ones.\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"Can we add a functionality in Woocommerce?\r\n\r\nWhen you go to Appearance->Menus->Product category there are three functionalities: Most used / See all / Search\r\n![Product categories 20230322](https://user-images.githubusercontent.com/128626347/226982067-e8f59214-e1dd-4421-8275-fa7a39603d11.png)\r\n\r\nWhen you go to Product Categories section under Product Edit page (at the right side) there are only two functionalities: All categories / Most used\r\nThere is not the function \"search\" who let us searching by writting text.\r\n![Product Categories section under Product Edit page](https://user-images.githubusercontent.com/128626347/226982110-7c012f73-81a7-4d2b-9450-4d8e8dd26da1.png)\r\n\r\nCan you add the Search functionality also in ‚ÄúModify a product‚Äù in Product category?\r\n\r\nThis will save a lot of time for people like us who have a lot of categories on our site.\r\n\r\nThanks\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"When a new order is created the New Order email is soft bounced (sent via SendInBlue) since it contains not Quoted-Printable encoded characters.  The issue appeared right after the upgrade to 7.5.1. I have tried to replace all Greek characters from the email subject but it didn't help. During my tests i tried to resend new order notification from the orders actions and the email arrived. The difference here was that since the account i was logged had its language set to English the notification mail was  sent in English and so it was not bounced. I believe that something happens when no english characters are present in the order email. Please note that the customers receive their New Order emails without issues. Our hosting provider Siteground replied with the following when they searched on it:\r\n\"the issue is with the subject where the messages are delivered however that is a warning that there are too many special characters or letters with quotation marks on them as it is possible to be Greek characters.\"\r\n\n\n### Expected behavior\n\nThe emails were created and delivered without issues to both us and the customer.\n\n### Actual behavior\n\nWhen a new order is created the email sent to our sales dept (sales@papilio.gr) doesn't arrive. Searching the SendInBlue logs we see that they were bounced because they contain Greek characters. from SendInBlue we got a response that the email has wrong encoding. If we send the New Order notification in English it is routed and delivered. \n\n### Steps to reproduce\n\n1. Create a new order\r\n2. check on inbox and we have no emails arrived\r\n3. go to order details with admin setup in English language\r\n4. from the order actions choose send new order notification\r\n5. the email arrives with out issues.\n\n\n\n###\n\n","completion":" [1891051441]"}
{"prompt":":**\r\nWhen passing an empty string as value for a field in `wc_get_orders()`, HPOS ignores the field (as it wasn't set) while the posts datastore actually queries for orders with an empty value for that field.\r\n\r\nFor example:\r\n\r\n```php\r\n// HPOS returns all orders, posts returns orders with an empty `order_key`.\r\nwc_get_orders(\r\n\tarray(\r\n\t\t'order_key' => '',\r\n\t)\r\n);\r\n```\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"Since updating WooCommerce to 7.5 (and 7.5.1), the page no longer automatically refreshes and updates the cart when adding items to the basket, as it did in version 7.4.1. An `Uncaught (in promise) TypeError: Window.fetch: HEAD or GET Request cannot have a body.` error appears in the console and references the cart.min.js file. I did some digging and found this PR (#36275) which might be related.\r\n\r\n![woocommerce-window-fetch-cart-error](https://user-images.githubusercontent.com/9656588/226944985-3016ea04-cf4d-426a-9ffe-ba66d8de9f8a.png)\r\n\n\n### Expected behavior\n\nClicking 'Add to basket' when the cart is empty should refresh the page and show the item in the cart. Example from version 7.4.1:\r\n![woocommerce-7 4 1](https://user-images.githubusercontent.com/9656588/226942877-15dd93ca-c5ed-45fb-85d5-22ee45394f2a.gif)\r\n\n\n### Actual behavior\n\nWhen clicking 'Add to basket', the page doesn't refresh and an `Uncaught (in promise) TypeError: Window.fetch: HEAD or GET Request cannot have a body.` error appears in the console. The item still get added to the cart but the automatic refresh doesn't happen.\r\n![woocommerce-7 5 1](https://user-images.githubusercontent.com/9656588/226942911-76667a00-bd16-413d-ab02-792fc277b74b.gif)\r\n\n\n### Steps to reproduce\n\n1. Create a page using the 'Best Selling Products' block and the `[woocommerce-cart]` shortcode.\r\n2. When viewing the page, add an item to the basket.\r\n3. The cart shouldn't update automatically and there should be an `Uncaught (in promise) TypeError: Window.fetch: HEAD or GET Request cannot have a body.` error in the console.\n\n\n\n###\n\n","completion":" [1891051436,1891051440]"}
{"prompt":"In this issue, we want to make the Multichannel Marketing the default new UI and experience for the Marketing page, replacing the classic one.\r\n\r\nHere are a few things to do in this issue:\r\n\r\n- Make `path: '/marketing'` to always display Multichannel Marketing component.\r\n- Remove `window.wcAdminFeatures[ 'multichannel-marketing' ]` since it is no longer needed.\r\n- Remove the code for the classic marketing page.\r\n- Remove the Marketing feature toggle in the WC Settings > Advanced > Features page.\r\n- On WC plugin update for existing users, remove the `woocommerce_multichannel_marketing_enabled` option from the wp_options database table, since it is no longer needed.\r\n\r\nClassic Marketing page that will be removed:\r\n\r\n![image](https://user-images.githubusercontent.com/417342/227588170-ad96141b-e3ce-4c0e-bd8f-e8f30d443d88.png)\r\n\r\nMultichannel Marketing page:\r\n\r\n![image](https://user-images.githubusercontent.com/417342/227588238-8926ada1-a0b9-4e72-8fc7-ea894a07ec7d.png)\r\n\r\n\r\n\n\n###\n\n","completion":" [4327454247]"}
{"prompt":"Hi, \r\n\r\nThe prices are different regarding variable products with different options like sizes. The price range is displayed from lowest to highest, but it only shows the sale prices. \r\nFor example, on this product page: https://www.wed.art/product/windel-canvas/ \r\nAs seen here: https://www.awesomescreenshot.com/image/38230690?key=d4e7721a9407e6c378988e04fbc5349a \r\n\r\nI'm using DIVI but tried with a default WordPress theme, and the result is the same. \r\n\r\nSeems like you are not displaying the original price in brackets, strikethrough, or with lighter coloring. \r\nSomething like this: Slash[$102.00] $71.40 - Slash[$378.00]$264.60\r\n\r\nI'd highly appreciate it if this one could be solved sooner or later. \r\n\r\nLooking forward to your feedback\r\n\r\nRegards, \r\nPhil\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [1891051456]"}
{"prompt":"In HPOS, we use verbose table alias names, such as `order_operational_data`, `wc_order` etc. This issue scopes using smaller aliases so that length of our final select query is small. See methods: `get_op_table_alias`, `get_address_table_alias` in OrderTableDatastore.\n\n###\n\n","completion":" [3834300886,472334370]"}
{"prompt":"undefinedWhen you've a product in status \"**Draft**\", \"**Pending**\" (review), or \"**Scheduled**\" a span element appears behind the product title indicating the state of the product.\r\n\r\nAt the moment there is no way to style each product state separately (to visually assist my shop admins) with it's own CSS code. For example, to highlight the Draft state with a yellow background.\r\n\r\n![image](https://user-images.githubusercontent.com/16466116/226857219-2782f112-75fb-4629-870b-b2c3777b0353.png)\r\n\r\nI'd like to see the actual state being included in either the class itself (eg. `<span class=\"post-state draft\">Draft</span>`) or as a data-element (eg. `<span class=\"post-state\" data-state=\"scheduled\">Scheduled</span>`) so each product state can be fully customized via CSS.\r\n\r\nThen I can use either `.post-state.draft` or `.post-state[data-state=\"draft\"]` to implement the customization.\r\n\r\n### Describe alternatives you've considered\r\n\r\nI've thought about attaching an additional Javascript to the Products page to do this but in my opinion this is a very minor addition to the core which could really be beneficial to more people.\r\n\r\n### Additional context\r\n\r\n/wp-admin/edit.php?post_type=product\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"Percentage discount coupon is showing inconsistent charges for subsequent products in the order.\r\n\r\n### Expected behavior\r\n\r\nThe same discount should be charged to all products in the order. \r\n\r\n### Actual behavior\r\n\r\nHere's how it's showing under `WooCommerce > Orders`:\r\n\r\nThe first two products are showing the correct discount which is $25.90 while the last two products are showing **$25.89.**\r\n\r\n![image](https://user-images.githubusercontent.com/93988490/226835907-45fc44a2-d387-482c-82e4-c7c4a0a9f9f8.png)\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a Percentage Coupon with having 13% discount\r\n2. Create four simple products with the same amount of $199.20\r\n3. Add to the cart these four products, apply the coupon, place the order\r\n4. Here are the final order details on the Checkout page. Though, this shows that the total discount is correct:\r\n\r\n![image](https://user-images.githubusercontent.com/93988490/226836387-c53efb88-6cc4-427d-b857-bc678fa97e1b.png)\r\n\r\n\r\n\r\n\n\n###\n\n","completion":" [1891051442]"}
{"prompt":"Something we may wish to look into in more detail...when HPOS is enabled and WC Smooth Generator 1.0.4 is active (this is a WooCommerce extension, but this specific version does not declare compatibility) we can see it listed in the **Incompatible with 'High-Performance order storage (COT)'** screen:\r\n\r\n<img width=\"1328\" alt=\"just-smooth-104\" src=\"https://user-images.githubusercontent.com/3594411/226722756-7a9ad45f-788b-4b63-ac75-50763371013c.png\">\r\n\r\nIf we then install and activate [Smart Manager 7.4.0](https://wordpress.org/plugins/smart-manager-for-wp-e-commerce/) which explicitly [declares itself incompatible](https://plugins.trac.wordpress.org/browser/smart-manager-for-wp-e-commerce/tags/7.4.0/smart-manager.php#L38) and refresh this screen, nothing is listed:\r\n\r\n<img width=\"1060\" alt=\"smooth-plus-smart-man\" src=\"https://user-images.githubusercontent.com/3594411/226722966-d397b763-8819-4c4e-9ee7-e2c33c9aa169.png\">\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nIn the described scenario, I would expect both plugins would be listed.\r\n\r\n### Actual behavior\r\n\r\nNeither is listed.\r\n\r\n### Steps to reproduce\r\n\r\n1. Enable HPOS via **WooCommerce ‚ñ∏ Settings ‚ñ∏ Advanced ‚ñ∏ Features**.\r\n2. Install WC Smooth Generator 1.0.4 (version is important! Do not use the latest version).\r\n3. Go back to or refresh the features admin screen, you should be able to locate a link to manage incompatible plugins. Follow it.\r\n4. Notice WC Smooth Generator is listed (expected).\r\n5. Now install and activate [Smart Manager 7.4.0](https://wordpress.org/plugins/smart-manager-for-wp-e-commerce/).\r\n6. Refresh the list of incompatible plugins ... neither plugin will be listed.\r\n\r\n\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"Hello,\r\n\r\nSince version 7.4.0, you changed the **quantity-input.php** template. It sets **the type of the input** to **hidden** when **product is sold individually** or **min_value = max_value**\r\n\r\nIn that template, you provide 2 actions **woocommerce_before_quantity_input_field** and **woocommerce_after_quantity_input_field**. They allows us to add more html, such as the plus/minus buttons. But, we don't know when the type of the input is hidden. This causes a problem that **our html still is showing while the input is hidden**.\r\n\r\nI recommend that you add some parameters to your actions which let us to know when the input is hidden. Example:\r\n\r\n```\r\ndo_action( 'woocommerce_before_quantity_input_field', $type );\r\ndo_action( 'woocommerce_after_quantity_input_field', $type );\r\n```\r\n\r\nThank you!\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"I have a problem with variable products, the variation worked well and everything was set up correctly in the card settings too. But there was such a problem, tell me please what could be the reason.\r\nThe problem is with arbitrary variations, attributes work well.\r\n![2023-03-20_12-56-18](https://user-images.githubusercontent.com/121217576/226545912-83faa496-c10d-4e1a-bb1a-391ea1c32097.png)\r\n\n\n### Expected behavior\n\nThe problem appeared after the update\n\n### Actual behavior\n\nDoesn't show variations\n\n### Steps to reproduce\n\n![2023-03-20_12-56-18](https://user-images.githubusercontent.com/121217576/226547433-2a7e3593-6bfd-4f4c-a4f4-bd672a3df89d.png)\r\n\n\n\n\n###\n\n","completion":" [1891051456]"}
{"prompt":"Currently we do not support a11y support on the `CollapsibleContent` component, but it would be beneficial if we did.\n\nWe can follow this accordion example: https://www.w3.org/WAI/ARIA/apg/patterns/accordion/examples/accordion/\n\n**Acceptance criteria**\n\n- [ ] `CollapsibleContent` should work correctly with screen readers.\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"### Prerequisites\r\n\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\nAs found out by @moon0326, currently, the purchase task [completion logic](https://github.com/woocommerce/woocommerce/blob/b9df0e09f01a55effc48d23aa79d8ae33396cc10/plugins/woocommerce/src/Admin/Features/OnboardingTasks/Tasks/Purchase.php#L160) considers just `remaining` count, which is misleading since it would be 0 even when purchasable is 0 (default `remaining` is [empty array](https://github.com/woocommerce/woocommerce/blob/b9df0e09f01a55effc48d23aa79d8ae33396cc10/plugins/woocommerce/src/Internal/Admin/Onboarding/OnboardingProducts.php#L160)).\r\n\r\nThus, the task could trigger \"completion\" track even without suggesting extensions.\r\n\r\n### Expected behavior\r\n\r\n1. The task should consider both `purchaseable` and `remaining` count.\r\n2. In addition, we should consider disabling the purchase task altogether when `woocommerce_enable_setup_wizard` filter returns false or OBW is skipped. p1679373484757359/1679343077.752069-slack-C01SFMVEYAK\r\n\r\n### Actual behavior\r\n\r\nOnly consider `remaining` count.\r\n\r\n### Steps to reproduce\r\n\r\nNot 100% clear on how to reproduce, but we can try:\r\n\r\n1. In OBW, don't select any product type\r\n4. In PHP, run [this method](https://github.com/woocommerce/woocommerce/blob/b9df0e09f01a55effc48d23aa79d8ae33396cc10/plugins/woocommerce/src/Admin/Features/OnboardingTasks/Task.php#L387) from the `Purchase` task object\r\n5. Observe that the completion track is fired\r\n\r\n\n\n###\n\n","completion":" [3943104021,3943424841]"}
{"prompt":"`WC_Product_Factory->get_product()` is called A LOT.\r\n<img width=\"1183\" alt=\"image\" src=\"https://user-images.githubusercontent.com/68301566/226505434-37ec0e17-799a-4b05-9ac6-c905c0809e6a.png\">\r\n\r\nthis is a trace of a checkout of 40 products (with variations)\r\n\r\n`wc_get_product()` is extremely expensive.\r\n\r\nThe suggestion here is to use the factory as a singleton container:\r\n```php\r\nclass WC_Product_Factory {\r\n\r\n    //products for the current request\r\n    protected $products = array();\r\n\r\n\t/**\r\n\t * Get a product.\r\n\t *\r\n\t * @param mixed $product_id WC_Product|WP_Post|int|bool $product Product instance, post instance, numeric or false to use global $post.\r\n\t * @param array $deprecated Previously used to pass arguments to the factory, e.g. to force a type.\r\n\t * @return WC_Product|bool Product object or false if the product cannot be loaded.\r\n\t */\r\n\tpublic function get_product( $product_id = false, $deprecated = array() ) {\r\n\t\t$product_id = $this->get_product_id( $product_id );\r\n\r\n\t\tif ( ! $product_id ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n                if(isset($this->products[$product_id])){\r\n                    return $this->products[$product_id];\r\n                }\r\n\t\t$product_type = $this->get_product_type( $product_id );\r\n\r\n\t\t// Backwards compatibility.\r\n\t\tif ( ! empty( $deprecated ) ) {\r\n\t\t\twc_deprecated_argument( 'args', '3.0', 'Passing args to the product factory is deprecated. If you need to force a type, construct the product class directly.' );\r\n\r\n\t\t\tif ( isset( $deprecated['product_type'] ) ) {\r\n\t\t\t\t$product_type = $this->get_classname_from_product_type( $deprecated['product_type'] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$classname = $this->get_product_classname( $product_id, $product_type );\r\n\r\n\t\ttry {\r\n                        $this->products[$product_id] = new $classname( $product_id );\r\n\t\t\treturn $this->products[$product_id];\r\n\t\t} catch ( Exception $e ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n[...]\r\n```\r\n\r\n## Why do this:\r\nThe products are objects passed by reference, so all object is always up to date with the latest changes. This avoids a HUGE amount of overhead and function calls.\r\n\r\n\r\nSee after:\r\n\r\n<img width=\"1177\" alt=\"image\" src=\"https://user-images.githubusercontent.com/68301566/226505876-1a49058d-86c8-47ee-93b1-46c2fb8fda3e.png\">\r\n\r\nthe gain in performance are staggering, and i have not noticed any changes in functionality in my limited testing.\r\n\r\n\n\n### Describe alternatives you've considered\n\nI've considered using wp_cache, however, cache invalidation becomes complex. In this case, I see it more like a simple stateless update that substantially decreases the number of function calls.\r\n\r\nSee before:\r\n<img width=\"422\" alt=\"image\" src=\"https://user-images.githubusercontent.com/68301566/226506198-79fa8eec-258b-41a5-8746-a4af4d789ee0.png\">\r\n\r\n\r\nAfter:\r\n<img width=\"415\" alt=\"image\" src=\"https://user-images.githubusercontent.com/68301566/226506229-9290d04e-23ba-4882-95a7-d566a2633f5e.png\">\r\n\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [472334370]"}
{"prompt":"undefinedRight now `web/app/plugins/woocommerce/includes/data-stores/class-wc-product-variable-data-store-cpt.php` is extremely inefficient with `read_product_data()` as it queries `get_post_meta()` a lot.\r\n\r\n\r\n```php\r\nprotected function read_product_data( &$product ) {\r\n\t\t$id = $product->get_id();\r\n\r\n\t\t$product->set_props(\r\n\t\t\tarray(\r\n\t\t\t\t'description'       => get_post_meta( $id, '_variation_description', true ),\r\n\t\t\t\t'regular_price'     => get_post_meta( $id, '_regular_price', true ),\r\n\t\t\t\t'sale_price'        => get_post_meta( $id, '_sale_price', true ),\r\n\t\t\t\t'date_on_sale_from' => get_post_meta( $id, '_sale_price_dates_from', true ),\r\n\t\t\t\t'date_on_sale_to'   => get_post_meta( $id, '_sale_price_dates_to', true ),\r\n\t\t\t\t'manage_stock'      => get_post_meta( $id, '_manage_stock', true ),\r\n\t\t\t\t'stock_status'      => get_post_meta( $id, '_stock_status', true ),\r\n\t\t\t\t'low_stock_amount'  => get_post_meta( $id, '_low_stock_amount', true ),\r\n\t\t\t\t'shipping_class_id' => current( $this->get_term_ids( $id, 'product_shipping_class' ) ),\r\n\t\t\t\t'virtual'           => get_post_meta( $id, '_virtual', true ),\r\n\t\t\t\t'downloadable'      => get_post_meta( $id, '_downloadable', true ),\r\n\t\t\t\t'gallery_image_ids' => array_filter( explode( ',', get_post_meta( $id, '_product_image_gallery', true ) ) ),\r\n\t\t\t\t'download_limit'    => get_post_meta( $id, '_download_limit', true ),\r\n\t\t\t\t'download_expiry'   => get_post_meta( $id, '_download_expiry', true ),\r\n\t\t\t\t'image_id'          => get_post_thumbnail_id( $id ),\r\n\t\t\t\t'backorders'        => get_post_meta( $id, '_backorders', true ),\r\n\t\t\t\t'sku'               => get_post_meta( $id, '_sku', true ),\r\n\t\t\t\t'stock_quantity'    => get_post_meta( $id, '_stock', true ),\r\n\t\t\t\t'weight'            => get_post_meta( $id, '_weight', true ),\r\n\t\t\t\t'length'            => get_post_meta( $id, '_length', true ),\r\n\t\t\t\t'width'             => get_post_meta( $id, '_width', true ),\r\n\t\t\t\t'height'            => get_post_meta( $id, '_height', true ),\r\n\t\t\t\t'tax_class'         => ! metadata_exists( 'post', $id, '_tax_class' ) ? 'parent' : get_post_meta( $id, '_tax_class', true ),\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tif ( $product->is_on_sale( 'edit' ) ) {\r\n\t\t\t$product->set_price( $product->get_sale_price( 'edit' ) );\r\n\t\t} else {\r\n\t\t\t$product->set_price( $product->get_regular_price( 'edit' ) );\r\n\t\t}\r\n\r\n\t\t$parent_object   = get_post( $product->get_parent_id() );\r\n\t\t$terms           = get_the_terms( $product->get_parent_id(), 'product_visibility' );\r\n\t\t$term_names      = is_array( $terms ) ? wp_list_pluck( $terms, 'name' ) : array();\r\n\t\t$exclude_search  = in_array( 'exclude-from-search', $term_names, true );\r\n\t\t$exclude_catalog = in_array( 'exclude-from-catalog', $term_names, true );\r\n\r\n\t\tif ( $exclude_search && $exclude_catalog ) {\r\n\t\t\t$catalog_visibility = 'hidden';\r\n\t\t} elseif ( $exclude_search ) {\r\n\t\t\t$catalog_visibility = 'catalog';\r\n\t\t} elseif ( $exclude_catalog ) {\r\n\t\t\t$catalog_visibility = 'search';\r\n\t\t} else {\r\n\t\t\t$catalog_visibility = 'visible';\r\n\t\t}\r\n\r\n\t\t$product->set_parent_data(\r\n\t\t\tarray(\r\n\t\t\t\t'title'              => $parent_object ? $parent_object->post_title : '',\r\n\t\t\t\t'status'             => $parent_object ? $parent_object->post_status : '',\r\n\t\t\t\t'sku'                => get_post_meta( $product->get_parent_id(), '_sku', true ),\r\n\t\t\t\t'manage_stock'       => get_post_meta( $product->get_parent_id(), '_manage_stock', true ),\r\n\t\t\t\t'backorders'         => get_post_meta( $product->get_parent_id(), '_backorders', true ),\r\n\t\t\t\t'stock_quantity'     => wc_stock_amount( get_post_meta( $product->get_parent_id(), '_stock', true ) ),\r\n\t\t\t\t'weight'             => get_post_meta( $product->get_parent_id(), '_weight', true ),\r\n\t\t\t\t'length'             => get_post_meta( $product->get_parent_id(), '_length', true ),\r\n\t\t\t\t'width'              => get_post_meta( $product->get_parent_id(), '_width', true ),\r\n\t\t\t\t'height'             => get_post_meta( $product->get_parent_id(), '_height', true ),\r\n\t\t\t\t'tax_class'          => get_post_meta( $product->get_parent_id(), '_tax_class', true ),\r\n\t\t\t\t'shipping_class_id'  => absint( current( $this->get_term_ids( $product->get_parent_id(), 'product_shipping_class' ) ) ),\r\n\t\t\t\t'image_id'           => get_post_thumbnail_id( $product->get_parent_id() ),\r\n\t\t\t\t'purchase_note'      => get_post_meta( $product->get_parent_id(), '_purchase_note', true ),\r\n\t\t\t\t'catalog_visibility' => $catalog_visibility,\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\t// Pull data from the parent when there is no user-facing way to set props.\r\n\t\t$product->set_sold_individually( get_post_meta( $product->get_parent_id(), '_sold_individually', true ) );\r\n\t\t$product->set_tax_status( get_post_meta( $product->get_parent_id(), '_tax_status', true ) );\r\n\t\t$product->set_cross_sell_ids( get_post_meta( $product->get_parent_id(), '_crosssell_ids', true ) );\r\n\t}\r\n```\r\n\r\n\r\nSuggestion:\r\nUse the same method as in `web/app/plugins/woocommerce/includes/data-stores/class-wc-product-data-store-cpt.php`.\r\nGet all the meta data once and then loop through what's relevant.\r\n\r\n\r\n```php\r\nprotected function read_product_data( &$product ) {\r\n\t\t$id                = $product->get_id();\r\n\t\t$post_meta_values  = get_post_meta( $id );\r\n\t\t$meta_key_to_props = array(\r\n\t\t\t'_sku'                   => 'sku',\r\n\t\t\t'_regular_price'         => 'regular_price',\r\n\t\t\t'_sale_price'            => 'sale_price',\r\n\t\t\t'_price'                 => 'price',\r\n\t\t\t'_sale_price_dates_from' => 'date_on_sale_from',\r\n\t\t\t'_sale_price_dates_to'   => 'date_on_sale_to',\r\n\t\t\t'total_sales'            => 'total_sales',\r\n\t\t\t'_tax_status'            => 'tax_status',\r\n\t\t\t'_tax_class'             => 'tax_class',\r\n\t\t\t'_manage_stock'          => 'manage_stock',\r\n\t\t\t'_backorders'            => 'backorders',\r\n\t\t\t'_low_stock_amount'      => 'low_stock_amount',\r\n\t\t\t'_sold_individually'     => 'sold_individually',\r\n\t\t\t'_weight'                => 'weight',\r\n\t\t\t'_length'                => 'length',\r\n\t\t\t'_width'                 => 'width',\r\n\t\t\t'_height'                => 'height',\r\n\t\t\t'_upsell_ids'            => 'upsell_ids',\r\n\t\t\t'_crosssell_ids'         => 'cross_sell_ids',\r\n\t\t\t'_purchase_note'         => 'purchase_note',\r\n\t\t\t'_default_attributes'    => 'default_attributes',\r\n\t\t\t'_virtual'               => 'virtual',\r\n\t\t\t'_downloadable'          => 'downloadable',\r\n\t\t\t'_download_limit'        => 'download_limit',\r\n\t\t\t'_download_expiry'       => 'download_expiry',\r\n\t\t\t'_thumbnail_id'          => 'image_id',\r\n\t\t\t'_stock'                 => 'stock_quantity',\r\n\t\t\t'_stock_status'          => 'stock_status',\r\n\t\t\t'_wc_average_rating'     => 'average_rating',\r\n\t\t\t'_wc_rating_count'       => 'rating_counts',\r\n\t\t\t'_wc_review_count'       => 'review_count',\r\n\t\t\t'_product_image_gallery' => 'gallery_image_ids',\r\n\t\t);\r\n\r\n\t\t$set_props = array();\r\n\r\n\t\tforeach ( $meta_key_to_props as $meta_key => $prop ) {\r\n\t\t\t$meta_value         = isset( $post_meta_values[ $meta_key ][0] ) ? $post_meta_values[ $meta_key ][0] : null;\r\n\t\t\t$set_props[ $prop ] = maybe_unserialize( $meta_value ); // get_post_meta only unserializes single values.\r\n\t\t}\r\n\r\n\t\t$set_props['category_ids']      = $this->get_term_ids( $product, 'product_cat' );\r\n\t\t$set_props['tag_ids']           = $this->get_term_ids( $product, 'product_tag' );\r\n\t\t$set_props['shipping_class_id'] = current( $this->get_term_ids( $product, 'product_shipping_class' ) );\r\n\t\t$set_props['gallery_image_ids'] = array_filter( explode( ',', $set_props['gallery_image_ids'] ?? '' ) );\r\n\r\n\t\t$product->set_props( $set_props );\r\n\t}\r\n```\r\n\r\nThis will save a tremendous amount of SQL queries when dealing with a lot of variable products.\r\n\r\n### Describe alternatives you've considered\r\n\r\n_No response_\r\n\r\n### Additional context\r\n\r\nI've done a very quick and dirty POC. Checkout before, with ~250 items in cart (from a real life order)\r\nBefore:\r\n<img width=\"1439\" alt=\"image\" src=\"https://user-images.githubusercontent.com/68301566/226495494-5a83de18-f958-42a7-9c96-31d24707b975.png\">\r\n\r\nAfter:\r\n<img width=\"964\" alt=\"image\" src=\"https://user-images.githubusercontent.com/68301566/226495357-f7527d34-abe0-4527-86c7-0ef04cd84c29.png\">\r\n\r\nWe can see a drop from 24500 `get_post_meta` calls to a bit over 5000. \r\nThe over all function running time is dropping by ~40% as well.\n\n###\n\n","completion":" [472334370]"}
{"prompt":"### Prerequisites\r\n\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\nThe classic editor shown in the Product editor is using a different version of `wp.shortcode.string`. This is not happening outside of WooCommerce's context. I tested the same function in the Classic editor in other custom post types and it did not have this issue. This is causing VideoPress shortcodes to not work as expected in the Product editor when edited. \r\n\r\nExample here:\r\n![6BtVml.gif](https://user-images.githubusercontent.com/16329583/226415510-df6f7d6f-5547-4f2a-a038-d64d13b350bb.gif)\r\n\r\nReported in:\r\n855-gh-Automattic/videopress\r\np1678874341911529-slack-C02TQF5VAJD\r\n\r\n\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nA well-formed and working shortcode:\r\n![image](https://user-images.githubusercontent.com/16329583/226412806-fa8d7903-a242-47b9-a166-1ce2bf243b9c.png)\r\n\r\n\r\n\r\n### Actual behavior\r\n\r\nA broken shortcode:\r\n![image](https://user-images.githubusercontent.com/16329583/226412762-ffc450bd-9ea3-48a5-ac6b-80fda7276c0a.png)\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a test site with Jetpack with VideoPress enabled and WooCommerce\r\n2. Go to the product editor and add a VideoPress video\r\n3. Edit the video using the edit option (pencil icon)\r\n4. Confirm that the shortcode is not updated correctly\r\n\r\nYou can also confirm it in the console in case you want to test it without VideoPress enabled. You can use this:\r\n```\r\nvar a = {\r\n    \"tag\": \"videopress\",\r\n    \"type\": \"single\",\r\n    \"attrs\": {\r\n        \"named\": {\r\n            \"permalink\": false,\r\n            \"hd\": true\r\n        },\r\n        \"numeric\": [\r\n            \"ChEGEwI7\"\r\n        ]\r\n    }\r\n}\r\nwp.shortcode.string(a)\r\n```\r\n\r\n\r\n\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have checked that my issue type is not listed here https://github.com/woocommerce/woocommerce/issues/new/choose\r\n- [x] My issue is not a security issue, support request, bug report, enhancement or feature request (Please use the link above if it is).\r\n\r\nWe have several use case of `interpolateComponents` coming from `@automattic/interpolate-components`. While there is a similar function as part of `@wordpress/element` called `createInterpolateElement` that does something very similar.\r\n\r\nWe should replace our use of `interpolateComponents` with the wp.element version, once removed we should be able to remove the `@automattic/interpolate-components` dependency as well üéâ \r\n\r\nRemove use cases in (there are around 54 different files across these packages/plugins that make use of it):\r\n- [ ] `@woocommerce/components`\r\n- [ ] `@woocommerce/product-editor`\r\n- [ ] `@woocommerce/onboarding`\r\n- [ ] `woocommerce/admin/client`\r\n\r\n**Acceptance criteria**\r\n\r\n- [ ] Use `createInterpolateElement` instead of `interpolateComponents`\r\n- [ ] Removed `@automattic/interpolate-components` dependency once all items have been updated.\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"Unlike Add to Cart loop version, single product page Add to Cart button does not support neither data attributes used to pass data into AJAX Add to Cart calls or use it for tracking purposes nor `woocommerce_loop_add_to_cart_args` filter analog exists to customise those.\r\n\r\nLoop version:\r\n\r\nhttps://github.com/woocommerce/woocommerce/blob/6c053d3eeca2805658f45a15e57ddd96d78bc1ab/plugins/woocommerce/includes/wc-template-functions.php#L1343-L1377\r\n\r\nSingle product page version:\r\n\r\nhttps://github.com/woocommerce/woocommerce/blob/6c053d3eeca2805658f45a15e57ddd96d78bc1ab/plugins/woocommerce/includes/wc-template-functions.php#L1692-L1695\r\n\n\n### Expected behavior\n\n- Single product page Add to Cart has support for data attributes the same way the loop version does. Data attributes are present on the button and can be used to pass data into trackers and AJAX endpoints.\r\n- Filter to customise data attributes on a single product page Add to Cart button introduced and can be used to modify/extend data attributes.\r\n\r\nSingle product page Add to Cart template expected to have similar to loop Add to Cart template functionality regarding data attributes:\r\n\r\nhttps://github.com/woocommerce/woocommerce/blob/6c053d3eeca2805658f45a15e57ddd96d78bc1ab/plugins/woocommerce/templates/loop/add-to-cart.php#L24-L36\r\n\r\nCustomising data attributes example:\r\n\r\n```\r\nadd_filter(\r\n\t'woocommerce_add_to_cart_args',\r\n\tfunction( $args, $product ) {\r\n\t\t$attributes = array(\r\n\t\t\t'data-product_name' => $product->get_name(),\r\n\t\t\t'data-price'        => $product->get_price(),\r\n\t\t);\r\n\t\t$args['attributes'] = array_merge( $args['attributes'], $attributes );\r\n\t\treturn $args;\r\n\t},\r\n\t10,\r\n\t2\r\n);\r\n```\r\n\r\n\n\n### Actual behavior\n\nActual behaviour can be described as different from the Loop Add to Cart button.\n\n### Steps to reproduce\n\n-\n\n\n\n###\n\n","completion":" [1891051436]"}
{"prompt":"**jquery.flexslider.js** contains legacy code for unsupported browsers that is no longer needed (checking for `-webkit-transform` and `-moz-transform` in addition to the `transform` CSS property or checking for `msGesture` support, for instance). From my testing on our website, the code can be safely removed.\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"The product Varation does not update the attributes correctly despite the product having attributes set for product variation\r\n\r\n### Expected behavior\r\n\r\nwhen running the command the json and route is not acpeted by the command despite looking like its correct\r\n\r\n### Actual behavior\r\n\r\nThe attribute field and the permalinks field is not updated despite valid synatax making the variable product not appear correctly\r\n\r\n### Steps to reproduce\r\n\r\n```\r\nwp wc product create --name=debug --description=\"this is mobile 11\" --type=variable --regular_price=500 --sale_price=400 --user=1 --categories='[ { \"id\" : 26 } ]' --attributes='[{ \"name\": \"color\", \"visible\": true, \"variation\": true, \"options\":[\"black\",\"blue\",\"red\"]}]' --user=1\r\n````\r\n\r\nwhich produces product seen below\r\n![image](https://user-images.githubusercontent.com/11795947/215329684-b646e030-675c-4860-b808-ca5f5258ac96.png)\r\n\r\nthen when typing\r\n```\r\nwp wc product_variation create 45 --product_id=45 --visible=true --attributes='[{ \"id\": 0, \"name\": \"color\", \"options\":[\"black\"]}]'  --description=\"test\" --sale_price=100  --regular_price=200  --user=1\r\n```\r\n\r\nto create  variation the following is displayed\r\n\r\n![image](https://user-images.githubusercontent.com/11795947/215330638-a73bc02b-4183-40bb-9e21-06c7f68b7ba3.png)\r\nbut taking a closer look the option which is selected is missing but its hard to understand why, it should say black in the drop down field but instead it says any colour?\r\n\r\nTaking a look at he attributes which are valid\r\n\r\n\r\nbash-5.1$ wp wc product_attribute list --user=1\r\n\r\n```\r\nbash-5.1$ wp wc product_attribute list --user=1\r\n+----+-------+----------+--------+------------+--------------+\r\n| id | name  | slug     | type   | order_by   | has_archives |\r\n+----+-------+----------+--------+------------+--------------+\r\n| 1  | Color | pa_color | select | menu_order |              |\r\n| 2  | Size  | pa_size  | select | menu_order |              |\r\n+----+-------+----------+--------+------------+--------------+\r\n```\r\n\r\nwe have 2 possible ids for the attributes which is 1 and 2 but if we dwelv deeper into the code\r\n![image](https://user-images.githubusercontent.com/11795947/215331052-0eba5305-96fa-4e58-8a57-91ecb5dbd182.png)\r\nwe notice a few things \r\n1st the attributes are not set despite them being passed programmatically\r\n\r\nso if we manually adjust it what is the output?\r\n\r\n![image](https://user-images.githubusercontent.com/11795947/215331178-28444c87-595e-4e82-9a53-efe26354ec4c.png)\r\n\r\nwe get the following output\r\n2 things change here the permalink and the attributes but the JSON looks identical?\r\nand is syntactically valid?\r\n\r\nvia \r\nhttps://jsonlint.com/#\r\n\r\nwe see that what was typed i.e \r\n`[{ \"id\": 0, \"name\": \"color\", \"options\":[\"black\"]}]`\r\n\r\nis translated into the following valid json\r\n\r\n```\r\n[{\r\n\t\"id\": 0,\r\n\t\"name\": \"color\",\r\n\t\"options\": [\"black\"]\r\n}]\r\n```\r\n\r\n\r\neven with the product id assigned its still not accepted and the `[]` removed produces the following results\r\n```\r\nbash-5.1$ wp wc product_variation create 61 --product_id=61 --visible=true --attributes='[{ \"id\": 0, \"name\": \"color\", \"options\":\"black\"}]'  --description=\"test\" --sale_price=100  --regular_price=200  --user=1\r\nSuccess: Created product_variation 64.\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/11795947/215331858-9899c415-5012-4d07-983a-7c9f9b9d7b5b.png)\r\n\r\n\r\ni have come to the conclustion that this may be bug, or I'm missing something some key detial\r\n\r\n\r\n\r\n\r\n\n\n###\n\n","completion":" [1891051456,1891051460]"}
{"prompt":"When using variations and setting a variation Regular price to $0, the message appears above the variations:\r\n \"1 variation does not have a price. Variations (and their attributes) that do not have prices will not be shown in your store.\"\r\nThis should only appear when the variation price is left blank\n\n### Expected behavior\n\nThis message should only appear when the Regular price is left blank.\n\n### Actual behavior\n\nAdding a variation with a 0 price shows the warning that is for having a blank price.\n\n### Steps to reproduce\n\nCreate a variation and have one product with a 0 price. The message will appear.\n\n\n\n###\n\n","completion":" [1891051456]"}
{"prompt":"I have several WooCommerce stores in which I grant free shipping for orders above $65.\r\n\r\nSo we have two shipping methods:\r\n\r\n- Flat rate at $5 for orders below $65\r\n- Free shipping for orders above $65. This simple structure is not achievable by default on WooCommerce.\r\n\r\n I can set a minimum cart total to qualify for free shipping, but if a customer reaches the threshold, both the free and paid shipping options are displayed, which does not make sense and just confuses the customer, and I have to write a PHP snippet or add a plugin just to remove the paid shipping.\r\n\n\n### Describe alternatives you've considered\n\nI've considered a few ways to fix this simple issue:\r\n\r\n1. Add a checkbox to the **paid shipping** methods that says \"qualifying for other free shipping methods removes this paid shipping method\" (because sometimes stores want to set up free and paid shipping methods based on cart total, but also a fast premium shipping method that costs money regardless of the cart total). \r\n2. Add a checkbox to the free shipping method that says \"qualifying for this shipping method hides the following shipping methods:\" and the possibility to select one or more shipping methods.\r\n3. Right now, the free shipping method allows to set a minimum cart total to enable it. Why not also allowing to set a maximum cart total to display the paid shipping method? This way, I could set the minimum threshold that qualifies for free shipping, and the maximum threshold that removes paid shipping as an option.\r\n\r\nThere is also a [WooCommerce developer document](https://woocommerce.com/document/hide-other-shipping-methods-when-free-shipping-is-available/) that describes possible solutions with some php snippets, however out there, there are many store managers and merchants who are not developers and this relatively easy-to-fix issue may disincentivize them to use WooCommerce in favor of other platforms.\r\nI would suggest to implement this feature in the core, as it is very easy to do and will not require extensive testing and troubleshooting.\n\n### Additional context\n\nAs you can see from the attached screenshot it doesn't really make sense to give customers a choice between the same shipping service. They will contact customer support asking what the difference is between the two options, slowing down the checkout process.\r\n\r\n<img width=\"369\" alt=\"Screenshot 2023-01-28 at 7 06 30 PM\" src=\"https://user-images.githubusercontent.com/47855768/215283599-02bcd9f0-b414-495f-bf5b-dbe1dcd6e723.png\">\r\n\n\n###\n\n","completion":" [1891051459]"}
{"prompt":"In WC Settings, Taxes, On the Standard Tax Rates list, it would be helpful to have the page forward/back controls at the bottom as well as at the top of screen. By the time you scroll to the bottom, if you have a lot of rates, the top has disappeared.\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\nBackground is that because I don't trust our website to properly enforce a country choice, I have the full list of 250 ISO countries in our list set explicitly rather than relying on the asterisk catchall for those we don't trade with.\n\n###\n\n","completion":" [1891051453]"}
{"prompt":"We have 42k products in our store and we noticed slow sql caused by following call chain:\r\n\r\n```\r\nWC_Admin_Notices::init() -> WC_Install::is_new_install() -> wp_count_posts( 'product' )\r\n```\r\n\r\nThis affects all admin/ajax requests.\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [472334370]"}
{"prompt":"The same global attribute can be added to both Attributes and Options prior to saving, without any warning or error message shown to the user. The product state saved may not be what the user is expecting.\n\n## To reproduce\n\nWith the new product editor enabled and the `product-variation-management` feature enabled.\n\n1. Product > Add New\n2. Pick a global attribute in Attributes\n\n![Image](https://user-images.githubusercontent.com/2098816/214933799-87409f57-201e-4a25-87b3-77dc49c328db.png)\n\n3. Pick the same global attribute in Options\n\n![Image](https://user-images.githubusercontent.com/2098816/214933954-1d014170-ecd8-4428-9835-d66b21b3eb4b.png)\n\n5. Go back to Attributes and note that the global attribute has been silently removed.\n6. Add the global attribute back.\n7. Go back to Options and note that the global attributes still are set as previously.\n8. Save the product.\n9. Note that the global attributes in Options are gone, and no Variations were created.\n10. Note that the product is set as a variable product in the system.\n\n###\n\n","completion":" [1891051456,4370024739,4370026978]"}
{"prompt":"## To reproduce\n\nWith the new product editor enabled and `product-variation-management ` feature enabled...\n\n1. Product > Add New\n2. Add some Options and have variations auto-generated\n3. Save the product\n4. Note that route (URL of page) is not updated from:\n\n`/wp-admin/admin.php?page=wc-admin&path=%2Fadd-product`\n\nto \n\n`/wp-admin/admin.php?page=wc-admin&path=/product/{PRODUCTID}`\n\nThis means that if the browser page is refreshed, you will not reload the product just edited. Instead, you will load the new product screen.\n\n###\n\n","completion":" [1891051456,4370024739,4370026978]"}
{"prompt":"## To reproduce\n\nWith the new product editor enabled:\n\n1. Product > Add New\n2. Enter a name that will result in the same default SKU as an existing product.\n3. Add options.\n4. When variations are auto-generated, note the never-ending spinner and uncaught error in the console:\n\n![Image](https://user-images.githubusercontent.com/2098816/214929693-7e8bf298-13ce-43dd-a486-ef8819649301.png)\n\n![Image](https://user-images.githubusercontent.com/2098816/214929749-f6ad1cee-4095-4bc6-a3e8-f98d1e976c03.png)\n\n\n\n###\n\n","completion":" [1891051456,4370024739,4370026978]"}
{"prompt":"If the new product editor is enabled (via the WooCommerce > Settings > Advanced > Features > Experimental features section) and the `product-variation-management` feature is enabled (via the WCA Test Helper or other means), the new product editor should be used to edit variable products when a product is selected from the All Products screen.\n\n###\n\n","completion":" [1891051456,4370024739,4370026978]"}
{"prompt":"## To reproduce\n\nWith the experimental new product management experience enabled:\n\n1. Products > Add New\n2. Focus on Summary or Description field\n3. Note the styling of the editor toolbar is broken\n\n![Image](https://user-images.githubusercontent.com/2098816/214919628-98c23c16-a8f7-427d-a081-2c8b5a374994.png)\n\n###\n\n","completion":" [3943425720,4370024739,4370026978]"}
{"prompt":"## To reproduce\n\nWith experimental new product management experience enabled:\n\n1. Products > Add New\n2. Add Options\n3. Variations are auto-created\n4. Note that\n    - Header shows the product as both saved and unsaved\n    - Product does not show up in All Products\n    - If you leave the screen, you lose all your work -- it is gone\n    - Slug is \"used\" though, so a new product with the same slug cannot be created\n\n\n![Image](https://user-images.githubusercontent.com/2098816/214915852-4c367eb2-7638-4fcb-af6c-8ec58bea22f1.png)\n\n\n\n###\n\n","completion":" [1891051456,4370024739,4370026978]"}
{"prompt":"I‚Äôm suggesting a screen option for editing products on the back end similar to the front end option of how many products to display per page, but instead a screen option for how many variations to display/expand on product edit pages. For instance I have a variable product with 24 permutations of variations. It‚Äôs a pain to drag them into order between the 2 pages.\n\n### Describe alternatives you've considered\n\n Workaround is download CSV, edit out most of it,modify the positions, then upload. Screen options for 10/25/50 seems workable to me.\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"Replying to a product review/comment no longer automatically approves the parent review/comment. \r\n\r\nIn the function that handles adding the reply, \"handle_reply_to_review\" in \"woocommerce/src/Internal/Admin/ProductReviews/Reviews.php\", there is a check to verify the reply belongs to the correct parent (line 311 in woocommerce v 7.3.0). This check is using '===' to compare a numeric parent comment ID field to the WP_Comment objects 'comment_post_ID' property, which is a string. Using '===' to compare causes this to fail; it should use '==' instead as the core replyto comment approval function does.\n\n### Expected behavior\n\nReplying to a product review/comment should also approve the parent review/comment, if it is not already approved.\n\n### Actual behavior\n\nReplying to a review/comment adds the reply as an approved comment but does not approve the original review/comment.\n\n### Steps to reproduce\n\n1. Go to product reviews.\r\n2. Select an unapproved comment and 'reply' to it\r\n3. Reply is added but original comment is not set to 'approved'\r\n\r\n\n\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"If a site's default currency is set to a currency that does not use the `$` currency symbol, like the Indian Rupee (`‚Çπ`), and the site accepts payments in that currency, the processing order list at **WooCommerce > Home > Orders** will display the `$` currency symbol.\r\n\r\n### Expected behavior\r\n\r\nThe currency symbol configured in **WooCommerce > Settings > General** and/or the currency symbol used when paying for the order will display at **WooCommerce > Home > Orders**.\r\n\r\n### Actual behavior\r\n\r\nThe currency symbol at **WooCommerce > Home > Orders** does not respect the settings at **WooCommerce > Settings > General** or the symbol of the currency used to pay for the order.\r\n\r\n### Steps to reproduce\r\n\r\n1. Change the site's currency to Indian Rupee (INR, `‚Çπ`)\r\n2. Place an order for a product.\r\n3. Ensure the order's status is set to `Processing`.\r\n4. Navigate to **WooCommerce > Home > Orders**\r\n5. Note that the price listed is correct, but the currency symbol is `$` instead of `‚Çπ`.\r\n\r\n\n\n###\n\n","completion":" [1891051458]"}
{"prompt":"This is the first time I'm creating a bug report so please bear with me.\r\n\r\nMy product urls are structured like this: \r\n`example.com/products/category/productslug/ `\r\nThis is set under `Settings > Permalinks`\r\n\r\nNow if I go to a product and change the url in the browser to something like this: \r\n`example.com/products/random/productslug/ `\r\nIt will not give me a 404 error or redirect me to the canonical url. In other words I will still be on the product page but the url will stay as it‚Äôs typed in browser.\r\nYou could even make the url how ever long you‚Äôd want it to be, like: `example.com/products/random/random/random/random/productslug `\r\nand I‚Äôll get to the product without a redirection or 404 error, just straight to the product page with the entered url.\r\nYou can even do this with product categories if you add a random word between the base and category, like this: \r\n`example.com/product-category/random/category`\r\n\r\n### Expected behavior\r\n\r\nShouldn't the expected behavior be to do a canonical redirect to the right url?\r\n\r\n### Actual behavior\r\n\r\nThe actual behavior is that there is no redirect or 404 error.\r\n\r\n### Steps to reproduce\r\n\r\n1. Change permalink settings  `Shop base with category`\r\n2. Go to product or archive page\r\n3. Change the category url in the browser and refresh\r\n\r\n\n\n###\n\n","completion":" [1891051438,1891051461]"}
{"prompt":"- [x] https://github.com/woocommerce/woocommerce/issues/36316\n- [x] https://github.com/woocommerce/woocommerce/issues/36589\n- [ ] https://github.com/woocommerce/woocommerce/issues/36317\n- [ ] https://github.com/woocommerce/woocommerce/issues/35569\n\n###\n\n","completion":" [4370024739,4370026978]"}
{"prompt":"- [x] https://github.com/woocommerce/woocommerce/pull/36563\n- [x] https://github.com/woocommerce/woocommerce/issues/36515\n\n###\n\n","completion":" [4370024739,4370026978]"}
{"prompt":"All actions in myaccount/form-lost-password.php contains the word 'lost_password' except for line 34 where the action is called 'woocommerce_lostpassword_form' instead of 'woocommerce_lost_password_form'.\r\n\r\nThis is the link to the line https://github.com/woocommerce/woocommerce/blob/a531f83b6db32e1d8336e993429c2843c3e32b2c/plugins/woocommerce/templates/myaccount/form-lost-password.php#L34\r\n\r\nI'm sure that this is a typo.\n\n### Describe alternatives you've considered\n\nProbably the best way to keep the backwards compatibility with the 'wrong' action name is to deprecate it in favour of the new action called 'woocommerce_lost_password_form' called immediately before or immidiately after the current one.\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [33006876]"}
{"prompt":"I'm integrating WooCommerce in my theme and I'm modifiying the WC templates using hooks as the documentation recommends. I've noticed that for some forms like the one in myaccount/form-edit-address.php, it is used the function woocommerce_form_field to render the inputs. This function calls the dynamic filter 'woocommerce_form_field_${input_type}' to let the developer change the input HTML.\r\n\r\nHowever there are a lot of other templates like myaccount/form-lost-password.php, myaccount/form-edit-account.php in which the inputs are not rendered using woocommerce_form_field but they are hardcoded.\r\n\r\nDo you think it is possible the extend the usage of woocommerce_form_field all over the templates?\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [33006876]"}
{"prompt":"## Issues/PRs\n\n\n- [x] https://github.com/woocommerce/woocommerce/pull/36432\n- [x] https://github.com/woocommerce/woocommerce/pull/36517\n- [x] https://github.com/woocommerce/woocommerce/pull/36434\n- [x] https://github.com/woocommerce/woocommerce/pull/36476\n- [x] https://github.com/woocommerce/woocommerce/pull/36435\n- [x] https://github.com/woocommerce/woocommerce/pull/36480\n- [x] https://github.com/woocommerce/woocommerce/pull/36459\n\n\n###\n\n","completion":" [3943425720,4370024739,4370026978]"}
{"prompt":"When creating a new product in product management experience, after choosing an already existing name, all subsequent changes to the name don't update the generated SKU.\n\nSteps to reproduce:\n\n1. Try to create a new product with the same name as an existing one\n2. It will fail due to duplicated SKU\n3. Update the name to a name that would not generate a duplicated SKU and try to Publish\n4. It will fail because it's trying to publish with a generated SKU from the first name\n\n###\n\n","completion":" [4370024739,4370026978]"}
{"prompt":"Deleting an order with sync disabled won't count as a pending order sync, thus the order will never get deleted from the other table.\r\n\r\n### Steps to reproduce\r\n\r\n1. Set either table (posts or `wc_orders`) as authoritative (Settings - Advanced - Custom data stores) with sync on.\r\n2. Create an order, verify that it exists in both the posts table and in `wc_orders`.\r\n3. Turn sync off.\r\n4. Trash and then delete the order.\r\n5. Verify that the order has been deleted from the authoritative table but not from the backup table (that's expected).\r\n6. Verify that no sync is pending (Settings - Advanced - Custom data stores) even though one order pending sync should be displayed, turning it on will change nothing.\r\n7. Also verify that `wp wc cot sync` does nothing (\"There are no orders to sync, aborting\").\r\n8. Repeat setting the other table as authoritative.\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"Following the update to 7.3.0 attribute templates no longer work.\r\n\r\n`themes/mytheme/woocommerce/taxonomy-pa_myattr.php`\r\n\r\nUnsure if related to https://github.com/woocommerce/woocommerce/pull/35617\r\n\r\n### Expected behavior\r\n\r\nI expect the file to render or a message to say what to rename it\r\n\r\n### Actual behavior\r\n\r\nSimply stops working\r\n\r\n### Steps to reproduce\r\n\r\nAdd template for any attribute, visit that page\r\n\r\n\n\n###\n\n","completion":" [33006876]"}
{"prompt":"Hello! I have created a custom user role that should only be able to view reports.\r\nIt has the permissions: read, read_product,view_admin_dashboard,view_woocommerce_reports\r\nThis works, but causes the reports to be very limited. I already added read_product so that the user can see info on the the performance of a product, but the tabs of statistics by product categories and in general the product categories dont load, or as a more detailed explanation load the total by category but not its name (so just bunch of useless numbers). I guess this is because the user lacks the permission to read them, however i want the user to only be able to view them, not edit them like with edit_categories. Using this user, i also cant use the search function to filter products by product name (causes an error), but can view all the products and their statistics. I was unsure whether this constitutes a bug or feature request.  \r\n\r\nEDIT/Update:  even when adding edit,manage and assign_categories capabilities it doesnt load the categories, the request for loading them in analytics just returns woocommerce_rest_cannot_view 403\r\n\r\n### Expected behavior\r\n\r\ni can add a read_categories capability and the user can view reports/analytics with categories and filter with them\r\n\r\n### Actual behavior\r\n\r\neither unending loading circles, failed requests due to permissions or just in general a page-wide error when trying to load the categories tab in analytics\r\n\r\n### Steps to reproduce\r\n\r\ncreate a custom user role that should only be able to view reports.\r\nIt has the permissions: read, read_product,view_admin_dashboard,view_woocommerce_reports\r\nclick on analytics-categories\r\n\r\n\n\n###\n\n","completion":" [2258932484,3943425133]"}
{"prompt":"In order for ease of adoption we need to create documentation and tutorials for users to follow to extend the product management screen using slot fills.\nAs part of this issue we should create documentation specifically around the PHP helper functions to extend the product management screen. An example of how to create a new custom field would also be helpful.\n\nSome inspiration can be drawn from the Gutenberg block docs and the `getting-started` and `how-to-guides` docs: https://github.com/WordPress/gutenberg/tree/trunk/docs \n\nThe location of the how to guides should be somewhere at the top of the repo, feel free to create a P2 around this for feedback.\n\nThis will be similar to: [#36554](https://github.com/woocommerce/woocommerce/issues/36554)\n\n**Acceptance criteria**\n\n- [ ] Documentation of the PHP functions should be updated within the PHP class.\n- [ ] A **how to** or **getting started** guide should be available for users to create there first extendable product plugin using PHP.\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"If you use double spaces in SKU codes one space is deleted\n\n### Expected behavior\n\nSKU 13212312  312312 \n\n### Actual behavior\n\nSKU 13212312 312312 \n\n### Steps to reproduce\n\nGo to product page \r\nEnter SKU with double spacing\n\n\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"In order for ease of adoption we need to create documentation and tutorials for users to follow to extend the product management screen using slot fills.\nAs part of this issue we should create documentation specifically around the Tab, Section, and Field slotfills and how a plugin may extend this.\n\nSome inspiration can be drawn from the Gutenberg block docs and the `getting-started` and `how-to-guides` docs: https://github.com/WordPress/gutenberg/tree/trunk/docs \n\nThe location of the how to guides should be somewhere at the top of the repo, feel free to create a P2 around this for feedback.\n\n**Acceptance criteria**\n\n- [ ] Documentation of the Slotfills should be updated within the slot fill library\n- [ ] A **how to** or **getting started** guide should be available for users to create there first extendable product plugin.\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"Disable postal code field for Chile.\r\n\r\nWe have never used it here. It only uses space in the checkout field.\n\n### Describe alternatives you've considered\n\nUsing a custom code like:\r\n    unset($fields['billing']['billing_postcode']);\r\n\n\n### Additional context\n\nI have asked for this on #30375\r\n\r\n\n\n###\n\n","completion":" [1891051440,468434635]"}
{"prompt":"I'm not sure this qualifies as a bug, a concern, a software design issue, or just a non-sense from my head. Cope with me :-D\r\n\r\nWhen NOT using HPOS, the `woocommerce_process_shop_order_meta` action happens in `WC_Admin_Meta_Boxes::save_meta_boxes()` which runs on a POST call that is after redirected again to the order edit screen.\r\n\r\n![image](https://user-images.githubusercontent.com/6853605/213860812-4479505f-ee67-45dc-a281-150d5c4d57a4.png)\r\n\r\nBut when USING HPOS, the the `woocommerce_process_shop_order_meta` action happens in `...Internal\\Admin\\Orders\\Edit::handle_order_update()` which runs a POST that is NOT redirected to the post edit screen. In fact, this happens in the middle of the HTML output, just before the order edit form is rendered.\r\n\r\n![image](https://user-images.githubusercontent.com/6853605/213860878-060892b9-257a-4cef-b025-93fe7b0138d2.png)\r\n\r\nLet's say I have a custom order action, in which I will call an external API to do something (in this case create an invoice).\r\n\r\n<img width=\"365\" alt=\"image\" src=\"https://user-images.githubusercontent.com/6853605/213860906-dfe70a0d-c0d9-4bff-b6ad-47394774e5bb.png\">\r\n\r\nI need to do it later in the `woocommerce_process_shop_order_meta` action so I have all the order meta data updated and ready to be used on my action, as WooCommerce does, by the way.\r\n\r\n<img width=\"925\" alt=\"image\" src=\"https://user-images.githubusercontent.com/6853605/213860964-d2c63ee5-e8c5-4d7d-a772-3231bd561760.png\">\r\n\r\nWhen NOT using HPOS, i can add a admin notice with the result of the action. If all goes OK, that notice might not be important, but if there's an external API failure, I do need to properly warn the user about it. If I add a admin notice it won't show up to user in this page load, but rather when he moves away from this page to do something else.\r\n\r\nAs I stated before, this might just a non-sense from me, and I might need to find another way to alert users (although that's what admin notices were designed for), but even if that's the case, I still think this is way too late to be saving an object. At this point we are WAY into HTML rendering. I'm not saying this should be done on a POST call and then redirect (like it works for CPTs), but at least wouldn't it be safer to do it around  the [wp_loaded](https://codex.wordpress.org/Plugin_API/Action_Reference/wp_loaded) or [wp](https://codex.wordpress.org/Plugin_API/Action_Reference/wp) actions?\n\n### Expected behavior\n\nNot limited to, but be able to output notices or apply redirects if needed.\n\n### Actual behavior\n\nOrder oject is updated during HTML rendering\n\n### Steps to reproduce\n\n1. Activate HPOS\r\n2. Hook into woocommerce_process_shop_order_meta\r\n3. Do your thing\n\n\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"Hello woocommerce team.\r\n\r\nWhen we export variable product attributes then it will change & to &amp in the CSV file. can you please report a bug?\r\n\r\n**CSV file:** https://share.cleanshot.com/6jZwdQsp64dcMKJjnJBX\r\n**Backend attribute:** https://share.cleanshot.com/k9tVXy17TgTjyghD8pTG\r\n\r\nThank you\r\n\r\n### Expected behavior\r\n\r\nIt will stay as & instead of &amp when we export attributes\r\n\r\n### Actual behavior\r\n\r\nWhen we export variable product attributes then it will change & to &amp in the CSV file\r\n\r\n### Steps to reproduce\r\n\r\nGo to Products > Click on Export > Select Attributes column > Generate CSV\r\n\r\n\n\n###\n\n","completion":" [1891051450]"}
{"prompt":"When focusing the rich text editor via tabbing to it, an error is thrown in the console.  This may be caused by the initial creation of a block when one does not exist.\n\n\n\n![Image](https://user-images.githubusercontent.com/10561050/213576161-dc2d5af9-a7c1-4c96-b628-163af19e3946.png)\n![Image](https://user-images.githubusercontent.com/10561050/213576162-d9ad1c88-05bf-44b7-8244-2bbf068fdd7f.png)\n\n\n\n**Reproducing**\n\n1. Navigate to the new product management experience\n2. Use the tab key to try and focus a rich text editor\n3. Keep tabbing until you notice the console error\n\n**Acceptance criteria**\n\n* [ ] Tabbing to the rich text editor should receive focus and allow content to be added\n* [ ] An error should not be thrown in the console\n\n###\n\n","completion":" [3943104021,4370024739]"}
{"prompt":"On smaller screens, the tour kit‚Äôs spotlight feature does not seem to highlight sections anymore.\n\nIt would be helpful if we could still highlight divs for tours on mobile.\n\n\n\n![Image](https://user-images.githubusercontent.com/10561050/213573468-c21a0cf5-6800-45c3-98ce-5e6ec75eca8d.png)\n\n\n\n**Reproducing**\n\n1. On a new site, navigate to the new product experience\n2. Narrow your viewport to a mobile screen size\n3. Click ‚ÄúShow me around‚Äù in the modal that pops up\n4. Note that you cannot use the keyboard to navigate immediately\n\n**Acceptance criteria**\n\n* [ ] Elements can still be spotlighted in smaller viewports\n\n###\n\n","completion":" [3943104021,4370024739]"}
{"prompt":"When opening the tour kit and viewing the first step, the first step is not focused.  For accessibility, it would be helpful if this modal was immediately focused if no `focusElement` was provided so that users can use a keyboard to navigate.\n\n\n\n![Image](https://user-images.githubusercontent.com/10561050/213572715-2c9a068b-5f93-4ef4-8102-b94c1e20f232.png)\n\n\n\n**Reproducing**\n\n1. On a new site, navigate to the new product experience\n2. Click ‚ÄúShow me around‚Äù in the modal that pops up\n3. Note that you cannot use the keyboard to navigate immediately\n\n**Acceptance criteria**\n\n* [ ] On opening the tour kit, the step modal should be focused\n* [ ] The keyboard should allow navigation to next/previous steps without needing to click\n* [ ] If a `focusElement` is provided, it should still work and the modal should not be focused\n\n###\n\n","completion":" [3943104021,4370024739]"}
{"prompt":"On smaller screens the product form layout is not responsive and not very usable. \n\nWe should add a few media queries to tweak this experience and make it better for all screen sizes. \n\n\n\n![Image](https://user-images.githubusercontent.com/10561050/213571867-9f0d42c0-c250-4d1b-990a-30c9ceafc880.png)\n\n\n\n**Reproducing**\n\n1. Open the new product management experience\n2. Narrow your viewport to a smaller size\n3. See that the form and section titles are side by side and too narrow for use\n\n**Acceptance criteria**\n\n* [ ] Sections should be responsive and collapse on mobile screens\n* [ ] If any other sections don‚Äôt appear responsive should be fixed\n\n###\n\n","completion":" [3943104021,4370024739]"}
{"prompt":"When loading the task list product task, clicking the physical product can take some time to load the next page since we await a few async actions (checking experiment group, enabling the option, etc). \n\nWe should introduce a spinner to indicate loading status and look at ways to optimize the flow of these async actions so that it takes less time. \n\n\n\n![Image](https://user-images.githubusercontent.com/10561050/213571580-95d2ac97-67ae-431a-880c-cfc399f5915a.png)\n\n\n\n**Reproducing**\n\n1. On a new site (unassigned to an experiment group), navigate to the task list on the homepage. \n2. Click the ‚Äúproducts‚Äù task. \n3. Click ‚Äúphysical product‚Äù\n4. Note the delay before being taken to a new page. \n\n\n**Acceptance criteria**\n\n- [ ] A spinner should show while loading the next state\n- [ ] Async actions should happen concurrently where possible to reduce delay \n\n###\n\n","completion":" [3943104021,4370024739]"}
{"prompt":"We will need to add template data to the form and extensibility. This issue is to come up with a POC (proof of concept) for the use of templates and how the data structure should be designed for easy use and re-use.\n\nAs it stands:\n- There can be multiple templates\n- Templates contain sections\n- Sections contain fields\n- Sections can be part of multiple templates.\n(Potentially some other items)\n\nAlso have a look at our current slot fills and how they are structured, we currently have everything only point up one level.\nFor example:\n- A field defines what section it is in: `<WooProductFieldItem id=\"details/name\" section={ DETAILS_SECTION_ID } />`\n- A section only defines what tab/location it is in: `<WooProductSectionItem id={ DETAILS_SECTION_ID } location=\"tab/general\" />`\n\n**Acceptance criteria**\n\n- [ ] Create a draft PR with a viable POC where the form is rendered with a defined template (taking into account some of the above info).\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"\r\nThis issue is dependent on [#36355](https://github.com/woocommerce/woocommerce/issues/36355) to be finished.\r\n\r\nWe should publish the new npm package created as part of the above mentioned issue.\r\n\r\nBefore publishing this yourself, please figure out if this will be done as part of the release process automatically already and we just have to flip a switch somewhere (figuratively speaking).\r\n\r\nNote that there are some manual steps for the initial publishing, which are [mentioned by Paul ](https://teammothra.wordpress.com/2023/01/25/improving-our-react-code-organization/#comment-1188)here, with [this](https://github.com/woocommerce/woocommerce/issues/36632) issue created for tracking.\r\n\r\n**Acceptance criteria**\r\n\r\n- [ ] `package.json` file of new package should have correct version and needed values for publishing\r\n- [ ] Package should include `sideEffects` prop to correctly enable tree shaking\r\n- [ ] `@woocommerce/product-editor` (or whatever the final name is) should be available on `https://www.npmjs.com/`  \n\n###\n\n","completion":" [4370024739]"}
{"prompt":"undefinedBackend: https://www.screencast.com/t/lzPSuCdt\r\nFrontend: https://www.screencast.com/t/bKmZV8wQK\r\n\r\nDrag-n-drop variation ordering is available on product edit pages, but it doesn't apply to the frontend variation display. This makes it impossible to apply variation ordering on a per-product basis.\r\n\r\nI am aware that in global product attributes, custom ordering can be specified by drag and drop. That applies to all products though.\r\n\r\nI think WooCommerce should have the option to allow a product to override the global attribute ordering. \r\n\r\n\r\n### Describe alternatives you've considered\r\n\r\n_No response_\r\n\r\n### Additional context\r\n\r\n_No response_\n\n###\n\n","completion":" [1891051456]"}
{"prompt":"RJ left a good comment on https://github.com/woocommerce/woocommerce/pull/36468/files\r\n\r\n> not introduced by this PR, but I'm surprised there's no bug or lint complaint about taxSettings not being in the useCallback dependency array.\r\n\r\n> Do you know if it's necessary to add it?\r\n\r\n\r\nI think it's okay for new users, but it could be a problem if users set up tax manually on the setting page. **(Need to confirm)**\r\n\r\nPlease check the code or do a test to see if we should add `taxSettings` and `generalSettings` in useCallback dependency array. \n\n###\n\n","completion":" [3943424887]"}
{"prompt":"Ideally the list table would be sorted the same way in both cases. Under normal circumstances, I imagine the orders would end up sorted the same way regardless, but if you generate orders via smooth generator, the order date/time is randomized, so you can end up with non-sequential order IDs when sorting by date.\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"Our workflows are referencing `cot` in many places when they should be referencing the new name `hpos`.\r\n\r\nThis task is to update the names and references so they use the more appropriate `hpos` reference, being mindful of the impacts üòä\n\n### Describe alternatives you've considered\n\nn/a\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [3845073088]"}
{"prompt":"Product titles which contain the ampersand sign are saved correctly by Administrator but the ampersand is changed to &amp if the save action is performed by any account with the Shop Manager rights. The issue occurs for new products and also if you edit an existing product.\n\n### Expected behavior\n\nSaving the title (including for the edit function) should keep the & sign without changing it to &amp\n\n### Actual behavior\n\nIf a Shop Manager is adding or editing a product which contains the ampersand in title, the ampersand is changed from & to &amp\n\n### Steps to reproduce\n\n1. edit a product which contains ampersand in title area (with  a Shop Manager account)\r\n2. update the product\r\n3. the title is changed with & being replaced by &amp\r\n\r\nor\r\n\r\n1. create a new product which contains ampersand in title area (with a Shop Manager account)\r\n2. save the product\r\n3. the title for the new created product contains &amp insteand of the regular & sign \n\n\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"undefinedA **new Advanced Filter** for analytics order, which uses the wc_get_order(post_id)->get_created_via() function.\r\n\r\nThis can be used when someone creates an order in a POS (a plugin). And the plugin marks it as created_via \"pos\" .\r\n\r\n### Describe alternatives you've considered\r\n\r\nThere is no alternative.\r\n\r\n\r\n### Additional context\r\n![image](https://user-images.githubusercontent.com/7044466/212751485-6a7c7e9a-1288-437d-a7be-f02dacbc4468.png)\r\n\r\nhttps://woocommerce.com/document/woocommerce-analytics\r\nhttps://woocommerce.com/document/woocommerce-analytics/orders-report/\r\n![image](https://user-images.githubusercontent.com/7044466/212747381-d3a6797c-afe0-4da9-a5e7-cbde33f38805.png)\r\n(tutorial from 2021, I don't know if it still works, but I leave it in case it helps you https://developer.woocommerce.com/2021/02/04/adding-columns-to-analytics-reports-and-csv-downloads/ )\n\n###\n\n","completion":" [3943425133]"}
{"prompt":"undefinedAs a follow-up to #35904, there's an issue when the attribute name is filled and then deleted. In this case, we should not show a blank title, but something else. Perhaps show \"Custom attribute\" placeholder again.\r\n\r\nEDIT: Show \"New attribute\" instead of \"Custom attribute\".\r\n\r\n@jarekmorawski what do you think? There are video recordings of all the mentioned behaviors on PR #35904.\r\n\r\n### Describe alternatives you've considered\r\n\r\n_No response_\r\n\r\n### Additional context\r\n\r\n_No response_\n\n###\n\n","completion":" [1891051461,4370024739]"}
{"prompt":"Excluding a country or countries is available in selling location which is good, but sometimes it could be needed for Shipping locations as well.\r\n\r\nThe suggestion of the enhancement is to add a choice to \"Shipping Locations\" to exclude certain county of countries, the same as the current selection in selling locations. So the choices of exclusion in Selling & Shipping locations would be separate. \r\n\r\nI hope this would be implemented soon.\r\n\r\nThanks, \n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [1891051459]"}
{"prompt":"When a fixed cart discount is greater than order total, all products are marked as 0, leading to 0 computed tax.\n\n### Expected behavior\n\nThere should be an option in coupon management to calculate the tax before the Coupon is applied. This way a customer is correctly charged the taxes while still receiving the discounts.  This is an expected behavior for fixed cart discount.\r\n\r\nFor the percentage discount, the calculation is accurate regardless of tax is computed before or after the coupon is applied. The fixed cart discount is quite different and it should have an option to collect the taxes according to listed sales price.\n\n### Actual behavior\n\nThe woo-commerce ended up not collecting any tax for any of the products.\n\n### Steps to reproduce\n\n1. Create coupon with fixed cart discount of $10\r\n2. Add a product with value less than $10\r\n3. See that sales tax is not collected\n\n\n\n###\n\n","completion":" [1891051442]"}
{"prompt":"When:\r\n- clicking on ‚ÄúPayments‚Äù tab on backend ( __/wp-admin/admin.php?page=wc-settings&tab=checkout__)\r\n- trying to complete purchase ( __/checkout/__)\r\nWordPress throws a fatal error.\r\n\r\n\r\n**Temporary fix** has been found (https://wordpress.org/support/topic/woocommerce-setting-payment-tab-showing-an-error/) :\r\nIn `wp-content/plugins/woocommerce/src/Internal/Admin/WCPayPromotion/Init.php`, change the method `set_gateway_top_of_list`, within the last if statement (the short-handed one):\r\n\r\nchange this ‚Üí  `$ordering [ $id ] = $is_empty ? 0 : ( min( $ordering ) - 1 )`\r\nto this ‚Üí  `$ordering [ $id ] = $is_empty ? 0 : ( min( $ordering ) )`\r\n\r\nI have had to apply this fix at least for the last 3 WC updates I did.\r\n\r\nI am not in a situation where I can deactivate all plugins/themes, so it's more about creating an issue to make sure others are not impacted by this rather than finding a solve for my current situation.\r\n\r\n### Expected behavior\r\n\r\nDisplaying the payments tab / completing and order.\r\n\r\n### Actual behavior\r\n\r\nFatal error\r\n\r\n### Steps to reproduce\r\n\r\n1. Add any product to cart\r\n2. View basket\r\n3. Confirm Order\r\n4. Crash\r\n\r\n(for backend, simple clic on \"Payments\" does the job)\r\n\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"Once https://github.com/woocommerce/woocommerce/pull/35287 is completed, make the equivalent changes for the API tests\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [3845073088]"}
{"prompt":"Under Woocommerce > Customers when the user selects Advanced Filters and attempts to filter by either City, Region (i.e Province/State), or Postal Code the dropdown doesn't include options to do so.\r\n\r\n![Customers_WooCommerce Issue 2023-01-11 at 2 26 30 PM](https://user-images.githubusercontent.com/12011029/211923617-baf33530-3e51-44a6-a588-74a65e5a8963.png)\r\n\n\n### Expected behavior\n\nThe ability to select either City, Region or Postal Code in the filter options and filter accordingly.\n\n### Actual behavior\n\nFilter options doesn't list either City, Region or Postal code. Removes the ability for admins to filter by customer location. I've been able to replicate this across multiple sites.\n\n### Steps to reproduce\n\n1. Go to Woocommerce > Customers\r\n2. Click the down arrow beside in the box that reads All Customers and select the Advanced Filters option\r\n3. Click the plus sign or the text that reads Add a Filter and you're unable to select either City, Region or Postal Code\n\n\n\n###\n\n","completion":" [3943104021,3943425133]"}
{"prompt":"Currently, it is not possible to add the HTML content after the cart item meta in the Order table on the checkout page. \r\nScreenshot - https://prnt.sc/godb-cyVScJI\r\n\r\nIn the above screenshot, I want to add some custom text after the item meta. When I look at the below file, there is no hook available to achieve this.\r\nFile - ../plugins/woocommerce/templates/checkout/review-order.php \r\nScreenshot - https://prnt.sc/twcOMUiWBrUF\r\n\r\nIt would be great if the action hook as below will be added at that place that allows adding any custom elements in the flow.\r\n```\r\ndo_action( 'woocommerce_review_order_after_cart_contents', $cart_item['data'], $cart_item, $cart_item_key );\r\n```\r\n\r\n### Describe alternatives you've considered\r\n\r\n_No response_\r\n\r\n### Additional context\r\n\r\n_No response_\n\n###\n\n","completion":" [1891051436]"}
{"prompt":"Depends on #36376.\r\n\r\nNow that we have e2e and API tests enabled for HPOS and another issue for enabling unit tests as well (#36376), it's time to mark HPOS as stable.\r\n\r\nThis issue scopes removing the developer warning from the feature page and CLIRunner.\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"My client prints his New Order Email and includes this in his shipment.  He sells fossils.\r\n\r\nHe wants Congratulations on the sale to be removed from the New Order Email.  \n\n### Describe alternatives you've considered\n\nI found the option to remove it from the mobile template.  Where can I remove it for the email template?\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [1891051441]"}
{"prompt":"There are some use cases when the parent product fields may still be useful when the variations are enabled (especially when it comes to extensions). To accommodate, we will backtrack (sorry, folks!) on the decision to block access to the `Pricing`, `Inventory`, and `Shipping` tabs.\r\n\r\nInstead, we'll allow full access to these tabs and show a banner notice with an explanation.\r\n\r\n**Design**\r\n\r\n`BaoQ3PGPnhAiJCsJtxgej3/%5BFeature%5D-fi-796%3A158534&t=S0uVUax2hFrq2FQR-4`\r\n\r\n<img width=\"715\" alt=\"image\" src=\"https://user-images.githubusercontent.com/79307566/214568711-28fca7fd-d111-4a62-bd92-50ff98192572.png\">\r\n\r\n**Acceptance criteria**\r\n\r\n- [ ] Users can access all tabs when the variations are enabled.\r\n- [ ] In each tab, we show a top-level notice reading: `This product has options, such as size or color. You should now manage each variation's price and other details individually.`.\r\n- [ ] The button reads: `Go to Options` and takes people to the `Options` tab.\r\n- [ ] The notice can be dismissed. When dismissed, it disappears from all other tabs. It cannot be brought back. We show it once per product. If someone dismissed it in the past, they'd see it again when they create a new product.\n\n###\n\n","completion":" [1891051456]"}
{"prompt":"In the legacy experience, the users must manually generate variations after they add attributes and mark them as used for variations. If someone doesn't do that and opens such a product in the new UX, we should show an empty state with a clear CTA. It will also be handy for a situation when the user deletes all variations (only possible through Quick Actions, which are not implemented as of this moment. I've marked this AC as `Nice to have`).\r\n\r\n**Design**\r\n`BaoQ3PGPnhAiJCsJtxgej3-fi-837%3A159682&t=S0uVUax2hFrq2FQR-4`\r\n\r\n<img width=\"914\" alt=\"image\" src=\"https://user-images.githubusercontent.com/79307566/211519589-e354fa5a-a72c-49aa-9302-ef0252dd9d9f.png\">\r\n\r\n**Acceptance criteria**\r\n\r\n- [ ] We show an empty state if any attributes are marked as `Used for variations` or added as Options.\r\n- [ ] Clicking the `Create from options` button generates variations from all attribute values.\r\n- [ ] We show a loading state while the variations are being created. The height of the card remains unchanged.\r\n- [ ] [Nice to have] We show the same empty state when the user deletes (not hides/disables) all variations using the `Delete all variations` action in Quick Actions.\n\n###\n\n","completion":" [1891051456]"}
{"prompt":"### Prerequisites\r\n\r\n- [X] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [ ] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\nThe method `WC_Customer::get_taxable_address()` has the final line:\r\n\r\n```\r\nreturn apply_filters( 'woocommerce_customer_taxable_address', array( $country, $state, $postcode, $city ) );\r\n```\r\n\r\nNote that it does not pass any input parameters to the filter, only the output. Specifically, `$this` is not passed, nor anything equivalent (e.g. `$this->get_id()`).\r\n\r\nConsequently, any user of the filter cannot know which customer's taxable address is being examined. It could be any customer on the system.\r\n\r\nTo fix this, the filter should have `$this` added as a parameter, so that code hooking the filter can know *which* customer's address is being requested.\r\n\r\nNote that consequently, any existing code in the world using this filter is likely to be assuming that the customer to be examined is the current customer (i.e. the value of `WC()->customer`) - but that this is a false assumption, since the filter will be called whenever the method is for any customer.\r\n\r\nAs an example, consider this code:\r\n\r\n```\r\n$customer = new WC_Customer(123); // Get customer object for user ID 123\r\n\r\n$taxable_address = $customer->get_taxable_address();\r\n```\r\n\r\nAny extension code that has hooked the filter will not know that it's specifically user ID 123 that it is being asked the result for. And if it consults `WC()->customer`, it will get the wrong customer.\r\n\n\n###\n\n","completion":" [1891051453]"}
{"prompt":"In FSE context (yes, some are making website with full FSE ;-) ), if we make use of the WP standard Query Loop Block, \r\nfiltered on Product type, \"out of stock badges\" are not displayed in results.\r\n\r\nThis badge is very usefull in an eCommerce context, for marketing purposes\r\n\r\nProposed solution : extend the WP Query Loop to add a toggle in settings \"Display Out of stock badge\"\r\nto make Woo the best showcase for early FSE adopters like use\n\n### Describe alternatives you've considered\n\nsee https://github.com/woocommerce/woocommerce-blocks/issues/6688 : i tried to make use of Newest Products block, but the badge is not displayed either\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [33006876]"}
{"prompt":"As the last step towards merging WooCommerce Admin, we should fold the admin client into the plugin's directory. Hopefully, all this will include is updating paths.\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"There are a large number of different workflows supported by the current `package.json` script. As a consequence of our tooling changes, however, there is a non-trivial amount of extra work being done in these scripts. Once https://github.com/woocommerce/woocommerce/issues/33907 lands, we should review all of the scripts and look for areas of performance deficit:\r\n\r\n- `build:packages` is no longer necessary, `turbo` builds all dependencies.\r\n- Check for cases where `turbo` is being bypassed entirely.\r\n- Review supported workflows and discuss flattening them where appropriate with their respective teams.\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"With our current tooling in place, we need to take a look at the build process in `plugins/woocommerce-admin`. Given how old the Webpack file is and how many iterations it has gone through, it is worthwhile for us to examine it and consider even rewriting it. Packages should be consumed as if they were any other NPM package and the latest Webpack features should be fully utilized. We might also consider looking into alternatives if that's desired, but, that will require additional buy-in from the teams working on the admin experience.\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"When trying to avoid the use of globals, we use `wc_get_product()` (like `get_post()` in WP core).\r\n\r\nThis itself will then `\\WC_Product_Factory->get_product()` which will **always** construct and return a new class instance for that product.\r\nWhen using `global $product` this isn't an issue, however when replacing it with `wc_get_product()` calls, it quickly gets an issue. A normal WooCommerce shop with multiple templates in a catalog loop now has 1000s of unnecessary duplicate WC_Product objects per page increasing memory usage unnecessarily.\n\n### Expected behavior\n\nReuse the product from global\n\n### Actual behavior\n\nCreating new instance of product everytime\n\n### Steps to reproduce\n\ncall wc_get_product()\n\n\n\n###\n\n","completion":" [472334370]"}
{"prompt":"React admin page have to have path with slash at start. So this correctly adds page to the menu, but component is not rendered.\r\n\r\n```\r\nwc_admin_register_page( array(\r\n\t\t'id'       => 'my-example-page',\r\n\t\t'title'    => __( 'My Example Page', 'my-textdomain' ),\r\n\t\t'parent'   => 'woocommerce',\r\n\t\t'path'     => 'example',\r\n\t\t'nav_args' => array(\r\n\t\t\t'order'  => 10,\r\n\t\t\t'parent' => 'woocommerce',\r\n\t\t),\r\n\t) );\r\n```\r\n\r\nWhen you add the starting slash `'path' => '/example'` everything works as expected.\n\n### Expected behavior\n\nPath should be not hangs on starting slash.\n\n### Actual behavior\n\nRoot component is not rendered.\n\n### Steps to reproduce\n\n1. Run `npm run create-extension test`\r\n2. Edit `L61` in `test.php` to `'path'     => 'example',`\r\n3. Open My Example Page from admin\n\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"3rd party code should be able to extend query vars (and the query itself) to allow querying of other tables/fields.\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"Legacy fields (from either WP_Query) or WC_Order_Query should be -if possible- translated automatically to current query vars. For example, automatically changing a query involving `_date_paid` to a query on the `date_paid_gmt` column.\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"The `My account` page has a number of subsections (e.g. `Orders | Downloads | Addresses | Payment methods` etc). \r\n\r\nIn block based themes, for example, Twenty Twenty Two (the current default WordPress theme), the heading at the top of the page shows `My account` for all subpages:\r\n\r\n<img width=\"1664\" alt=\"Screen Shot 2022-07-08 at 10 46 39 AM\" src=\"https://user-images.githubusercontent.com/4167300/177883868-0ad5b93f-4f42-46e4-bf46-7c1c0c7e43a9.png\">\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\n\r\nIn Storefront, Twenty Twenty-One and other traditional themes, the main heading shows the selected page. For example:\r\n\r\n<img width=\"1393\" alt=\"Screen Shot 2022-07-08 at 10 40 17 AM\" src=\"https://user-images.githubusercontent.com/4167300/177884378-c3c8a574-4c88-4f97-a2a6-f560be93f2ce.png\">\r\n\r\n\r\n\r\n### Actual behavior\r\n\r\n`My account` is shown for all subpages.\r\n\r\n### Steps to reproduce\r\n\r\n1. Activate Twenty Twenty-Two theme.\r\n2. Log in as a shopper and view `My account`.\r\n3. Click on `Orders` or `Payment methods`\r\n\r\n\n\n###\n\n","completion":" [1891051451]"}
{"prompt":"We would like documentation for each data store that extends the CRUD data store ([example](https://github.com/woocommerce/woocommerce/blob/trunk/packages/js/data/src/product-shipping-classes/README.md)). The documentation for this will largely be the same across all the data stores that make use of `createCrudDataStore`.\r\n\r\nIt be nice to auto generate these, or have a good place where we consolidate the overlap.\r\n\r\nAuto generation could be done relatively simple, by making use of a template and having a bash script that just does a search/replace.\r\n\r\n### Acceptance criteria\r\n- [ ] Have README's generated for each CRUD data store\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"\"Navigation nudge note\" is added under inbox notes after disabling new navigation on \"WooCommerce > Home\" page.\r\n\r\n### Expected behavior\r\n\r\n\"Navigation nudge note\" should not be added under inbox notes after disabling new navigation on \"WooCommerce > Home\" page.\r\n\r\n### Actual behavior\r\n\r\n\"Navigation nudge note\" is added under inbox notes after disabling new navigation on \"WooCommerce > Home\" page.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using the JN site.\r\n2. Install and activate all the required plugins.\r\n3. Install and activate WooCommerce.\r\n4. Disable the new navigation at WooCommerce -> Settings -> Advanced -> Features.\r\n5. Go to Woocommerce > Home page.\r\n6. Observe that the navigation note (\"You now have access to the WooCommerce navigation\") is added under Inbox notes.\r\n\r\n### Screenshot:\r\n\r\n![#33769](https://user-images.githubusercontent.com/41110392/177796032-8e451a8f-9d6b-4e41-9013-0d9dbf8c2c02.jpg)\r\n\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"In many places, we have usage of this pattern:\r\n```php\r\n$order_type_object = get_post_type_object( $type );\r\necho $order_type_object->labels->singular_name;\r\n```\r\n\r\nWe need to have a replacement method for this, which will return an object with the same shape and attributes as the post_type_object. Perhaps we can call it `wc_get_type_object` which should return either post object or a custom object with same shape.\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"When querying `/wp-json/wc/v3/reports/sales`\r\nIf you set `date_min` & `date_max` to the same day the `customers` field will always return 0\r\n\r\n~~~\r\nif¬†(¬†strtotime(¬†$customer->user_registered¬†)¬†<¬†$this->report->start_date¬†||¬†strtotime(¬†$customer->user_registered¬†)¬†>¬†$this->report->end_date¬†)¬†{\r\n~~~\r\nAs the end_date is midnight and user_registered is sometime in the day so it is always going to be after the end_date\r\n\n\n### Expected behavior\n\nTo return all users registered that day\n\n### Actual behavior\n\nReturns nothing \n\n### Steps to reproduce\n\nquerying `/wp-json/wc/v3/reports/sales`\r\nSetting `date_min` and `date_max` to the same day\n\n\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"Currently the query to get the total spent of a customer is using 2 joins on the postmeta table:\r\n\r\n```\r\n# woocommerce/includes/data-stores/class-wc-customer-data-store.php (line 418-426)\r\n$spent = $wpdb->get_var(\r\n    // phpcs:disable WordPress.DB.PreparedSQL.NotPrepared\r\n    apply_filters(\r\n        'woocommerce_customer_get_total_spent_query',\r\n        \"SELECT SUM(meta2.meta_value)\r\n        FROM $wpdb->posts as posts\r\n        LEFT JOIN {$wpdb->postmeta} AS meta ON posts.ID = meta.post_id\r\n        LEFT JOIN {$wpdb->postmeta} AS meta2 ON posts.ID = meta2.post_id\r\n        WHERE   meta.meta_key       = '_customer_user'\r\n        AND     meta.meta_value     = '\" . esc_sql( $customer->get_id() ) . \"'\r\n        AND     posts.post_type     = 'shop_order'\r\n        AND     posts.post_status   IN ( 'wc-\" . implode( \"','wc-\", $statuses ) . \"' )\r\n        AND     meta2.meta_key      = '_order_total'\",\r\n        $customer\r\n    )\r\n    // phpcs:enable\r\n);\r\n```\r\n\r\nThis will become slower overtime when postmeta table grows. Since there is already a lookup table available this query can be optimized to make use of the wc_customer_lookup and wc_order_stats table:\r\n\r\n```\r\nSELECT SUM(wc_order_stats.total_sales)\r\nFROM {$wpdb->prefix}wc_order_stats as wc_order_stats\r\nLEFT JOIN {$wpdb->prefix}wc_customer_lookup as wc_customer_lookup ON wc_order_stats.customer_id = wc_customer_lookup.customer_id\r\nWHERE wc_order_stats.status IN ( 'wc-\" . implode(\"','wc-\", $statuses) . \"' )\r\nAND wc_customer_lookup.user_id = '\" . esc_sql($customer->get_id()) . \"'\r\n```\n\n### Describe alternatives you've considered\n\n## Workaround\r\nThere is a filter available, so in the meantime if you want better performance you can add this to your project:\r\n```\r\nadd_filter('woocommerce_customer_get_total_spent_query', function ($query, $customer) {\r\n    global $wpdb;\r\n    $statuses = array_map('esc_sql', wc_get_is_paid_statuses());\r\n\r\n    return \"SELECT SUM(wc_order_stats.total_sales)\r\n        FROM {$wpdb->prefix}wc_order_stats as wc_order_stats\r\n        LEFT JOIN {$wpdb->prefix}wc_customer_lookup as wc_customer_lookup ON wc_order_stats.customer_id = wc_customer_lookup.customer_id\r\n        WHERE wc_order_stats.status IN ( 'wc-\" . implode(\"','wc-\", $statuses) . \"' )\r\n        AND wc_customer_lookup.user_id = '\" . esc_sql($customer->get_id()) . \"'\";\r\n}, 10, 2);\r\n```\n\n### Additional context\n\n## Performance comparison\r\nOn a database with nearly 6 million records in the postmeta table:\r\nSlow query: takes 17-23 seconds\r\nOptimized query: (instant) 0.0003s\n\n###\n\n","completion":" [3943425133]"}
{"prompt":"Here is our scenario: We have a federal tax (Canada GST) and a provincial tax (BC PST) set up for our store. People in our province pay both taxes on an order shipped to our province. Occasionally the buyer is PST exempt, so if we enter an order manually in the backend, we delete the PST column from the order and save the order. So long as we don't recalculate the order again, PST will not be charged. We can then send an invoice to the buyer and they pay. No PST. No problem. \r\n\r\nIn the old WC reporting tool, if we report taxes by code on the day that order was made, it shows the correct tax for the order. In the new analytics, if we report taxes for the day the order was made, it does not respect the decision to exempt the PST but instead recalculates the taxes based on the order info (eg shipping address), resulting in an incorrect report of the taxes we've collected! This type of error totally undermines confidence in the new analytics reporting tool. I've been trying to migrate to it but I don't have a lot of confidence in the testing that's been done on it. I hope this can be fixed soon. Thanks, John\n\n### Expected behavior\n\nOrder tax reporting totals are correct, based on admin decisions to exempt an order from a particular tax.\n\n### Actual behavior\n\nsee above\n\n### Steps to reproduce\n\nDescribed in the bug description.\n\n\n\n###\n\n","completion":" [3943104021,3943425133]"}
{"prompt":"When the WooCommerce Mini Cart widget is in the header it is preventing WooCommerce notices from appearing, for example: \"Added to cart\" on product pages and \"Incorrect username/password\" on login pages.\r\n\r\nWhen the Mini Cart is in the sidebar, it works.\r\n\r\nThis bug has been duplicated using Storefront (I am currently using Divi).\n\n### Expected behavior\n\nNotices to show when a product is added to cart or a user inputs incorrect information.\n\n### Actual behavior\n\nNo notices showing when page is re-loaded. Its as if nothing has happened. Poor UX.\n\n### Steps to reproduce\n\n1. Click add to cart\r\n2. After page reloads (not tested with AJAX - I would assume is the same), no notice for users to see\r\n\r\nhttps://user-images.githubusercontent.com/108077354/177320148-fabd205f-e643-4ae9-b9f7-5ef2d888ac6a.mp4\r\n\n\n\n\n###\n\n","completion":" [1891051436,1891051440]"}
{"prompt":"In several countries, it's common to refer to people by first name + last name and, currently, it's not possible to search in this way with a WP_User_Query.\r\nIt's pretty easy to do it via a direct SQL query, but that doesn't make a lot of sense.\r\n\r\nRegarding orders, we already have _billing_address_index and _shipping_address_index as meta in place, which solves the problem.\r\n\r\nI recommend that you consider doing the same for the user meta, making it possible to search by first name + last name in 3rd party code.\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [2009677615]"}
{"prompt":"undefinedconvert **PaymentGatewaySuggestions** task to TypeScript\r\n\r\nhttps://github.com/woocommerce/woocommerce/tree/trunk/plugins/woocommerce-admin/client/tasks/fills/PaymentGatewaySuggestions\r\n\r\n### Describe alternatives you've considered\r\nNo response\r\n\r\n### Additional context\r\nNo response\n\n###\n\n","completion":" [3943424887]"}
{"prompt":"### Describe the solution you'd like\r\nconvert `./profile-wizard/industry.js` and `./profile-wizard/usage-modal.js` to TypeScript\r\n\r\n### Describe alternatives you've considered\r\nNo response\r\n\r\n### Additional context\r\nNo response\n\n###\n\n","completion":" [1891051446]"}
{"prompt":"undefined\r\nConvert all JS files in`./profile-wizard/` to TypeScript\r\n\r\n- header.js\r\n- index.js\r\n- unsaved-changes-modal\r\n\r\n\r\n### Describe alternatives you've considered\r\nNo response\r\n\r\n### Additional context\r\nNo response\n\n###\n\n","completion":" [1891051446]"}
{"prompt":"### Describe the solution you'd like\r\nconvert all JS files in ./profile-wizard/theme to TypeScript\r\n\r\n### Describe alternatives you've considered\r\nNo response\r\n\r\n### Additional context\r\nNo response\n\n###\n\n","completion":" [1891051446]"}
{"prompt":"### Describe the solution you'd like\r\nconvert all JS files in`./profile-wizard/business-details` to TypeScript\r\n\r\n### Describe alternatives you've considered\r\nNo response\r\n\r\n### Additional context\r\nNo response\n\n###\n\n","completion":" [1891051446]"}
{"prompt":"undefinedconvert all JS files in `./profile-wizard/product-types` to TypeScript \r\n\r\n### Describe alternatives you've considered\r\n\r\n_No response_\r\n\r\n### Additional context\r\n\r\n_No response_\n\n###\n\n","completion":" [3943424887]"}
{"prompt":"convert all JS files in `./profile-wizard/store-details` to TypeScript \n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [1891051446]"}
{"prompt":"\r\nAdd unit tests for the onboarding \"purchase\" task in React admin\r\n\r\nAcceptance criteria\r\n\r\nAdd tests for \r\nhttps://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce-admin/client/tasks/fills/purchase.js\r\n\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":":**\n\nAdd unit tests for \"StoreLocation\" form in react admin.\n\nhttps://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce-admin/client/tasks/fills/steps/location.js\n\n\n\n\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"Add unit tests for the onboarding \"tax\" task in React admin\r\n\r\n**Acceptance criteria**\r\n\r\nAt least add tests for the following files:\r\n\r\n- ./tax/index.tsx\r\n- ./tax/utils.ts\r\n- ./tax/woocommerce-tax/index.tsx\r\n- ./tax/avalara/card.tsx\r\n\r\n\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"WP Admin > Analytics > Overview > Leaderboards section is not working with PHP 8\r\n\r\n![image](https://user-images.githubusercontent.com/1799851/176672405-9b935ea4-8fef-4467-9a1e-8d83d8f3dfbc.png)\r\n\r\n\r\n### Expected behavior\r\n\r\nIt should display the leaderboard dashboard\r\n\r\n### Actual behavior\r\n\r\n\r\nThe endpoint /wp-json/wc-analytics/leaderboards returns 5xx err due to PHP 8 strict types conversion with the following message:\r\n\r\n ```\r\nPHP Fatal error:  Uncaught Error: Object of class WP_Error could not be converted to string in /var/www/html/wp-content/plugins/woocommerce/src/Admin/API/Leaderboards.php:176\r\n```\r\n\r\n### Steps to reproduce\r\n\r\n1. Install WC 6.6.0/1 on a PHP 8 server\r\n2. Go to WP Admin > Analytics > Overview > Leaderboards section \r\n4. The request to the API fails and returns the following error if some taxonomy doesnt longer exist: this only happens with old/deleted taxonomies\r\n```\r\n{\"code\":\"internal_server_error\",\"message\":\"<p>There has been a critical error on this website.<\\/p><p><a href=\\\"https:\\/\\/wordpress.org\\/support\\/article\\/faq-troubleshooting\\/\\\">Learn more about troubleshooting WordPress.<\\/a><\\/p>\",\"data\":{\"status\":500},\"additional_errors\":[]}\r\n```\r\n\r\n\n\n###\n\n","completion":" [3943104021,3943425133]"}
{"prompt":"Case: Send a product to trash using `$product->delete();` and follow that up with `$product->delete(true);` at a later stage without first fetching the product again using `wc_get_product();`. `$product->delete(true);` will return true, but the product will still be present in the cart. If you do `wc_get_product` in between the two methods, the product will be permanently deleted.\n\n### Expected behavior\n\nThe method should return false, or the product should be permanently deleted.\n\n### Actual behavior\n\nThe method returns true and the product is not permanently deleted.\n\n### Steps to reproduce\n\n```\r\n$product = wc_get_product(738800);\r\n\\WP_CLI::log(var_export($product->delete(), 1));\r\n\\WP_CLI::log(var_export($product->delete(true), 1));\r\n```\r\nProduces `true` `true`, product still present in trash.\r\n\r\n```\r\n$product = wc_get_product(738800);\r\n\\WP_CLI::log(var_export($product->delete(), 1));\r\n$product = wc_get_product(738800);\r\n\\WP_CLI::log(var_export($product->delete(true), 1));\r\n```\r\nProduces `true` `true`, product gone from trash.\n\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"undefinedThe product taxonomy archive header (in the product archive template: `plugins/woocommerce/templates/archive-product.php:32-46`) cannot currently be individually removed if needed/wanted.\r\n\r\nSome themes or plugins may want to remove or replace this section and, as this chunk of the template is 'hardcoded' in place, their only option at the moment is to override the whole `archive-product.php` template. Alternatively, additional \"hacky\" styles might be used to hide this `<header>` element (e.g. display: none, etc), which leave unwanted HTML markup on the site simply because there's no simple option.\r\n\r\nI think it would be useful to separate this chunk of code into its own template part & output function, and then re-hook it back into the same place, for example on `woocommerce_before_main_content` at priority 40. This would mean no current approaches to removing this section will break/need to change but the future approach could be to simply unhook it (conditionally or otherwise).\r\n\r\nAdditionally, t looks like this change might have a knock on effect with the 'Classic Template' WooCommerce Block: `https://github.com/woocommerce/woocommerce-blocks/blob/trunk/src/BlockTypes/ClassicTemplate.php` - so a related PR will need to be created to remove this header section there as well.\r\n\r\n### Describe alternatives you've considered\r\n\r\n_No response_\r\n\r\n### Additional context\r\n\r\n_No response_\n\n###\n\n","completion":" [33006876]"}
{"prompt":"**Motivation :** The main reason to raise this issue is because it is working in API v1 but same is not working with v3 of Woocommerce Product [APIs.](https://woocommerce.github.io/woocommerce-rest-api-docs/#update-a-product)\r\n\r\n**Objective :** Add an image as feature image by adding position 0.\r\n\r\n**Product object :** Sending product object as follows\r\n`{...,\r\n\"images\": [\r\n    {\r\n      \"id\": 123,\r\n      \"src\": \"\",\r\n      \"position\":0\r\n    }],\r\n...}`\n\n### Expected behavior\n\nWhen we add position 0 to an image in array of images it should marks that image as feature image as it is working in woocommerce APIs V1.\n\n### Actual behavior\n\nWhen we send images data as above to woocommerce v3 APIs it is not working.\n\n### Steps to reproduce\n\n1. Get media image Id and src from media library.\r\n2. Add those image Id and src as above object.\r\n3. Make API call to woocommerce update product v3 API call with above data.\n\n\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"### Prerequisites\r\n\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\nThe used_by meta data Is set on coupon codes regardless of whether the coupon code itself has any usage restrictions that require any tracking.\r\n\r\nFor us, with coupons that have been used thousands of times, this results in slow queries on the basket page and a general delay in loading the basket page. Example below from Query Monitor, showing two coupons added to the basket, both with not usage restrictions.\r\n\r\n<img width=\"1790\" alt=\"Slow Queries\" src=\"https://user-images.githubusercontent.com/565669/176327525-124b7bc3-1ebd-418a-a9f7-24e1641979e5.png\">\r\n\r\nWe currently have 30,486 database rows of usage tracking on coupons, and I don't believe we've ever limited coupon usage by user account.\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nWhen a coupon does not 'Usage limit per user' set, don't track which users have used the coupon.\r\n\r\n### Actual behavior\r\n\r\nThe used_by meta data is set in the `wc_update_coupon_usage_counts` function regardless of any requirement for it to be set. \r\n`$coupon->increase_usage_count( $used_by, $order );`\r\nhttps://github.com/woocommerce/woocommerce/blob/e62a338826d0b15b23a80fced793ee86e888ffd5/plugins/woocommerce/includes/wc-order-functions.php#L919\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a coupon with no usage restriction.\r\n2. Populate test orders using that coupon.\r\n3. Notice the slow queries on the basket when the coupon is applied to the basket.\r\n\r\n\r\n\n\n###\n\n","completion":" [1891051442]"}
{"prompt":"Our aspirations for the new product page includes adding product images via a React component. This will require a data store to manage images within the media library, with at minimum a `create` operation with other optional operations such as `update`.\r\n\r\n\r\n**Reference**\r\n> https://developer.wordpress.org/rest-api/reference/media/\r\n\r\n#### _Create_\r\n**HTTP Request**\r\n> **POST** `/wp/v2/media`\r\n\r\n**Reference**\r\n> https://developer.wordpress.org/rest-api/reference/media/#create-a-media-item\r\n\r\n#### _Update_\r\n**HTTP Request**\r\n> **POST** `/wp/v2/media/<id>`\r\n\r\n**Reference**\r\n> https://developer.wordpress.org/rest-api/reference/media/#update-a-media-item\r\n\r\n### Acceptance criteria\r\n- [ ] Data store updates\r\n- [ ] Unit tests\r\n- [ ] Documentation with examples\n\n###\n\n","completion":" [2190477857,3943104021]"}
{"prompt":"In the new WooCommerce > Home > Orders section, the amount of the orders don't correctly show the decimals.\r\n\r\n![image](https://user-images.githubusercontent.com/87424739/175879801-540fbd16-359e-402d-ad24-e50d9730b4d9.png)\r\n\r\n![image](https://user-images.githubusercontent.com/87424739/175879934-a0f25d9d-7df2-479e-9766-3e88bdd7417e.png)\r\n\n\n### Expected behavior\n\nIf the order had an amount of XX,XX then this amount should be show identically as XX,XX\n\n### Actual behavior\n\nThe orders have an amount of XX,XX but the amount shown in WooCommerce > Home > Orders section is XXXX (without the ,)\n\n### Steps to reproduce\n\n1. Go to WooCommerce > Home\r\n2. Go to Orders section\r\n3. Check the Orders amount\n\n\n\n###\n\n","completion":" [1891051458]"}
{"prompt":"I want to change Excluded statuses and Actionable statuses in Analytics settings.\r\nHowever, as soon as I do Save settings and refresh the pages, it removs all my statuses, and checkboxes are empty.\r\nIn database, fields for that setting are absolutely empty.\n\n### Expected behavior\n\nAnalytics statuses are saved, visible after page refresh, also visible in database.\n\n### Actual behavior\n\nAfter saving, and page refresing, all status are gone, empty field in database.\n\n### Steps to reproduce\n\n1. Open WP Admin\r\n2. Go to Analytics \r\n3. Open Settings\r\n4. Change statuses Settings\r\n5. Save\r\n6. Refresh page\r\n\n\n\n\n###\n\n","completion":" [3943425133]"}
{"prompt":"Woocommerce is using its own database table for top-level taxonomy registration and wordpress taxonomy tables and structure for taxonomy terms.\r\nAnd yet, _product_attributes is stored php-serialized inside wp_postmeta table, which is out-of-sync with the rest of the standard wordpress taxonomy structure if we were forced to import products data outside of woocommerce.\r\nThere is a little frustration caused by such a design choice...\r\n\r\nIs there a safe way from hooks or otherwise to force the reconstruction of product attributes (_product_attributes meta and count/filter actions) from database taxonomy terms ?\r\n\n\n###\n\n","completion":" [2190477857]"}
{"prompt":"With the new product reviews feature, we should add end-to-end tests around it.\n\n###\n\n","completion":" [5222415782]"}
{"prompt":"Currently, the \"Week to date\" in Analytics by default selects Sunday as the start date:\r\n![week to date](https://user-images.githubusercontent.com/11092629/175526498-85fd6a50-531d-4fad-afe1-cf9e26c5c47a.png)\r\n\r\nIt does seem that there's any way to change the day on which the week starts in Analytics. \r\n\r\nFurther, the WordPress ‚Üí General  \"Week Starts On\" setting is not regarded either: \r\n![week starts on](https://user-images.githubusercontent.com/11092629/175526764-d4a13030-9b41-4d2e-8af3-ee42011355be.png)\r\n\r\n**Request**: It would be great if the \"Week to date\" in Analytics could be changeable or could align with the WordPress ‚Üí General  \"Week Starts On\" setting.\r\n\r\n\r\n\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\nTicket related to this - 5320032-zen\n\n###\n\n","completion":" [3943104021,3943425133]"}
{"prompt":"Randomly after changing the values on the \"Rows per table\" dropdown fails to update the \"Leaderboards\" on \"Analytics > Overview\" page.\r\n\r\n### Expected behavior\r\n\r\nAfter changing the values on the \"Rows per table\" dropdown should properly update the \"Leaderboards\" on \"Analytics > Overview\" page.\r\n\r\n### Actual behavior\r\n\r\nRandomly after changing the values on the \"Rows per table\" dropdown fails to update the \"Leaderboards\" on \"Analytics > Overview\" page.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using the JN site or Atomic site.\r\n2. Install and activate all the required plugins.\r\n3. Install and activate WooCommerce.\r\n4. Complete the setup wizard.\r\n5. Add some products.\r\n6. Make some purchases.\r\n7. Go to Analytic > Overview page.\r\n8. Click on the \"ellipse menu\" on the right side of the \"Leaderboards\" section.\r\n9. Select a random number.  \r\n10. Observe that the Randomly after changing the values on the \"Rows per table\" dropdown fails to update the \"Leaderboards\" on \"Analytics > Overview\" page.\r\n\r\n### Video:\r\n\r\nhttps://user-images.githubusercontent.com/41110392/175514735-fc75b23a-0fb2-403b-84e2-9eb3ffa994ae.mp4\r\n\r\n\n\n###\n\n","completion":" [3943104021,3943425133]"}
{"prompt":"When a variable product with multiple attributes has some variations that do not have all attributes defined (i.e. some attributes are left with \"any\" selected), variations that are marked as Out of Stock are able to be purchased **if** they are **sorted beneath** variations which are in stock. If these out of stock variations have stock management selected, and stock set to zero, upon being purchased, no stock reduction is made.\n\n### Expected behavior\n\nYou would expect that a variation which is marked as out of stock and not available for backorders, to be not available for purchase or backorders regardless of the sorting order in the variations menu.\n\n### Actual behavior\n\nWhen out of stock variations are sorted below in stock variations, they become purchasable. Here's an example from a JN site I spun up for the purpose of testing.\r\n\r\nIn the following screenshots, all \"Rose\" products are set to manage stock, with a stock of zero, and backordering disabled. All \"Gold\" products are set to in stock.\r\n<img width=\"1018\" alt=\"Screen Shot 2022-06-23 at 18 40 19\" src=\"https://user-images.githubusercontent.com/45057772/175451465-a2fb522a-5d75-42f7-b8fa-55ac6317f8bc.png\">\r\nWhen all attributes are selected as rose, the product shows as correctly out of stock.\r\n<img width=\"850\" alt=\"Screen Shot 2022-06-23 at 18 41 44\" src=\"https://user-images.githubusercontent.com/45057772/175451629-1bffabfb-31f4-4359-a2b5-856835120695.png\">\r\nWhen any gold attribute is selected, the product is available to be purchased, regardless of the rose variations being out of stock.\r\n<img width=\"650\" alt=\"Screen Shot 2022-06-23 at 18 42 21\" src=\"https://user-images.githubusercontent.com/45057772/175451858-a5ea709c-1e28-4420-af67-9db9b9833d7b.png\">\r\n\r\nIf out of stock variations are sorted above in stock variations, they are no longer purchasable.\r\n\r\n\r\n\r\n\n\n### Steps to reproduce\n\n1. Start a new WordPress install and install WooCommerce\r\n2. Create a variable product with multiple attributes\r\n3. Create several variations which do not have all attributes defined.\r\n4. Mark some of these variations as out of stock, and sort them below other in stock variations.\r\n5. See that the product is purchasable despite the variations being out of stock. Also note that stock reduction does not take place for these out of stock variations if manage stock is set for them\r\n6. Sort the out of stock variations above the in stock ones and see that the out of stock variations are no longer purchasable\n\n\n\n###\n\n","completion":" [1891051456]"}
{"prompt":"\"Add more sections\" modal box overlaps with the admin panel on the \"Analytics > Overview\" page.\r\n\r\n### Expected behavior\r\n\r\n\"Add more sections\" modal box should be displayed properly without overlaping with the admin panel on the \"Analytics > Overview\" page.\r\n\r\n### Actual behavior\r\n\r\n\"Add more sections\" modal box overlaps with the admin panel on the \"Analytics > Overview\" page.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using the JN site.\r\n2. Install and activate WooCommerce.\r\n3. Install and active Gutenberg.\r\n4. Complete the setup wizard.\r\n5. Go to Analytic > Overview page.\r\n6. Click on the \"ellipse menu\" on right side of each sections.\r\n7. Select the \"Remove section\".\r\n8. Now click on the \"+\" icon.\r\n9. Observe that the \"Add more sections\" modal box overlaps with the admin panel.\r\n\r\n### Screenshot:\r\n\r\n![#33582](https://user-images.githubusercontent.com/41110392/175325053-6aacb92c-15d4-4d78-a707-1d12c9343f0a.jpg)\r\n\r\n\n\n###\n\n","completion":" [3943104021,3943425133]"}
{"prompt":"Symbols are appearing unexpectedly at the side of the Country and City fields in the Setup wizard Store Details page (intermittent issue)\r\n![image](https://user-images.githubusercontent.com/105309450/175099960-22b49159-1c89-4de9-8ad5-07d820a772bf.png)\r\nThere is no indication as to what the symbols are for beside Country and City (and they do not appear to have any functionality related)\r\n\r\n### Expected behavior\r\n\r\nI would not expect these symbols to appear. I would expect a dropdown symbol for the Country/Region\r\n\r\n### Actual behavior\r\n\r\nSymbols are appearing unexpectedly at the side of the Country and City fields in the Setup wizard Store Details page (intermittent issue)\r\n![image](https://user-images.githubusercontent.com/105309450/175099960-22b49159-1c89-4de9-8ad5-07d820a772bf.png)\r\nThere is no indication as to what the symbols are for beside Country and City (and they do not appear to have any functionality related)\r\n\r\n### Steps to reproduce\r\n\r\n1. spin up a new JN site including WooCommerce\r\n2. Launch WooCommerce Setup wizard\r\n3. Arrive at step 1 Store Details\r\n4. Check the Country/Region and City input fields for strange symbols\r\n\r\nNote - I am using a Mac with the following spec:\r\n\r\nHardware Overview:\r\n\r\n  Model Name:\tMacBook Pro\r\n  Model Identifier:\tMacBookPro18,3\r\n  Chip:\tApple M1 Pro\r\n  Total Number of Cores:\t8 (6 performance and 2 efficiency)\r\n  Memory:\t16 GB\r\n  System Firmware Version:\t7459.121.3\r\n  OS Loader Version:\t7459.121.3\r\n  Serial Number (system):\tY9DYTD44Q3\r\n  Hardware UUID:\tBAC4266E-BD74-592F-A77C-7E626D38EC3B\r\n  Provisioning UDID:\t00006000-001639123E23801E\r\n  Activation Lock Status:\tDisabled\r\n  \r\n  System Software Overview:\r\n\r\nmacOS Monterey\r\n  System Version:\tmacOS 12.4 (21F79)\r\n  Kernel Version:\tDarwin 21.5.0\r\n  Boot Volume:\tMacintosh HD\r\n  Boot Mode:\tNormal\r\n  Computer Name:\tNigel‚Äôs MacBook Pro\r\n  Username:\tNigel Stevenson (nigelstevenson)\r\n  Secure Virtual Memory:\tEnabled\r\n  System Integrity Protection:\tEnabled\r\n  Time since boot:\t7 days 22:52\r\n\r\n\r\nI was also using Chrome browser Version 102.0.5005.115 (Official Build) (arm64)\r\n\r\nIf I see the symbols appear again, I will add to this issue with more information from dev tools.\r\n\r\n\n\n###\n\n","completion":" [1891051446]"}
{"prompt":"Intermittently, when using Jurassic Ninja to spin up a test site - sometimes the countries dropdown was not populated due to 503 errors\r\n\r\nThis meant navigation from the page was not possible due to a missing info error:\r\n![image](https://user-images.githubusercontent.com/105309450/175076898-b0383e0c-dee6-425e-94d6-8710a8474a3e.png)\r\n\r\nThere is no indication to the user that the countries have not been returned. It would be better if there was a message to the user such as \"failure to populate countries dropdown - please refresh the page to try again\"\r\n\r\n\r\n### Expected behavior\r\n\r\nThere is no indication to the user that the countries have not been returned. It would be better if there was a message to the user such as \"failure to populate countries dropdown - please refresh the page to try again\"\r\n\r\n### Actual behavior\r\n\r\nUsing Jurassic Ninja to spin up a test site - sometimes the countries dropdown was not populated due to 503 errors\r\n\r\nThis meant navigation from the page was not possible due to a missing info error:\r\n![image](https://user-images.githubusercontent.com/105309450/175076898-b0383e0c-dee6-425e-94d6-8710a8474a3e.png)\r\n\r\nThere is no indication to the user that the countries have not been returned. It would be better if there was a message to the user such as \"failure to populate countries dropdown - please refresh the page to try again\"\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. spin up a new JN site including WooCommerce\r\n2. Launch WooCommerce Setup wizard\r\n3. Arrive at step 1 Store Details where problematic Country / Region dropdown is located\r\n\r\n\n\n###\n\n","completion":" [3943424887]"}
{"prompt":"the \"Manage Stock\" option (Inventory section) is only available if the \"Enable stock management\" global setting is enabled. Users may feel lost when they visit the Inventory section and cannot find an option to manage stock. Even if they know where to find the \"Enable stock management\", they need to get out of the product creation experience and go to WooCommerce - Settings - Products - Inventory - Enable stock management - Save changes. \r\n\r\n**Acceptance criteria- [ ] Show the \"Manage stock?\" option by default, even if the \"Enable stock management\" global setting is disabled \r\n- [ ] Enabled the \"Enable stock management\" global setting if the user clicks to Enable stock management at product level\r\n- [ ] Include a tooltip informing the user about what will happen if they enable management at product level\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"there's a lot of manual work involved in adding variations. Users need to fill each field (price, description, etc) in each variation. This can be a time-consuming task when users are creating more than 1 or 2 variations.\r\n\r\n**Acceptance criteria- [ ] Copy basic details like price and description from the parent product into each variation\r\n\n\n###\n\n","completion":" [1891051456,1891051461,4370024739]"}
{"prompt":"creating the first variation is a convoluted experience, forcing the user to jump back and forth between attributes and variations, apart from having to understand the difference between the two concepts.\r\n\r\n**Acceptance criteria- [ ] No added attributes with the \"Used for variations\" setting checked: show the \"add attribute\" form in the Variations tab along with a welcome/helper message. Ideally,  tweak the field names to make it seem like people are creating an actual variation, rather than an attribute (it'd be confusing to mix these mental models)\r\n- [x] If there are attributes with \"Used for variations\" checked: automatically show them in Variations, rather than force people to add them manually (addressed on [#35807](https://github.com/woocommerce/woocommerce/pull/35807))\r\n\r\n\n\n###\n\n","completion":" [1891051461,4370024739]"}
{"prompt":"Added order item meta data might get lost when refunding the item. It seems the new refunded item copies the original meta data (inclusive meta ID).\r\n\r\nTherefore, adding the same meta key on the refunded item will delete the meta key from the original item.\r\n\r\n\n\n### Expected behavior\n\nThe meta data should be kept on the original/copied order item.\r\n\r\nThe refunded item should copy the meta data without the `meta_id` value.\n\n### Actual behavior\n\nThe meta data is deleted from the original order item when the same meta key is added to the refunded item with uniqueness.\n\n### Steps to reproduce\n\n1. Add meta data to new order items:\r\n```PHP\r\nadd_action('woocommerce_new_order_item', function ($item_id, $item) {\r\n    $item->add_meta_data('foo', 'bar', true); // or update_meta_data\r\n    $item->save_meta_data();\r\n}, 10, 2);\r\n```\r\n\r\n2. Create a new order from admin\r\n\r\n3. Add a product\r\n\r\n4. Set order status to `Completed` and save.\r\n\r\n5. Notice the `foo` meta data at the order line. The meta is attached with the `order_item_id` of the line in DB.\r\n\r\n6. Refund the item\r\n\r\n7. The `foo` meta data is deleted from the original item and saved to the refunded item. Verify in DB.\n\n\n\n###\n\n","completion":" [1891051445]"}
{"prompt":"when the user selects the variable or bundle product type, we remove the General tab where we display regular and sale price. The absence of system status communication may cause the user to feel confused about what to do next to add the price\r\n\r\n<img width=\"335\" alt=\"image\" src=\"https://user-images.githubusercontent.com/79307566/223413537-2eaa881b-0c7f-49b0-a227-46567277990c.png\">\r\n\r\n**Designs:**\r\n`zs56kcy53K7GoGhgyjcQ2R-fi-213%3A37111`\r\n\r\n**Acceptance criteria- [ ] We always show the regular and sale price fields. For product types that don't require them, like variable and grouped, we disable them, so the user cannot enter and edit values.\r\n- [ ] When the fields are disabled, we change the cursor to `not-allowed;` to indicate the fields are not interactive. They also have 50% opacity (their state should be properly reflected in the code in line with accessibility guidelines).\r\n- [ ] The fields are disabled even if they contain previously added values.\r\n- [ ] For variable products, we show a message at the top of the form. It reads. `You can manage pricing and other details individually for each product variation. Go to Variations`. The `Go to Variations` part links to the variations tab.\r\n- [ ] For grouped products, we show a message at the top of the form. It reads. `You can manage pricing and other details individually for each product added to this group. Go to Linked Products`. The `Go to Linked Products` part links to the linked products tab.\r\n- [ ] Other product types that do not use the system price field should behave similarly. 3PDs who own them should be able to show and customize a message similar to those above.\r\n- [ ] If a plugin doesn't provide a custom message, we default to `You can manage pricing and other details in one of the other tabs.`\r\n- [ ] All messages are fully translatable.\r\n\r\n**Tracks events:**\r\n\r\n- [ ] The `Go to Variations` part in the variable product type message.\r\n- [ ] The `Go to Linked Products` in the grouped product type message.\n\n###\n\n","completion":" [1891051456,1891051461]"}
{"prompt":"we don't offer any context about the difference between the long and short description fields. This can lead the user to use one of the fields with the wrong expectations, which can lead to errors and slow down the product creation process.\r\n\r\n**Acceptance criteria:**\r\n- [x] Improve the empty state of each field with copy explaining the differences or add a tooltip\r\n- [x] Collapse the short description module by default\r\n- [ ] Change the short description name to \"Summary\". This change can be risky as it will require updating documentation and screenshots. It should be treated as a nice to have\r\n\n\n###\n\n","completion":" [1891051461,4370024739]"}
{"prompt":"currently, it's possible to publish a product with just empty fields. Without context, users can feel overwhelmed by all the options available in the product creation experience, making it difficult to understand which fields are critical to creating a compelling product. Marking some fields as required can potentially introduce unforeseen consequences. We can start by having the title as the required field (most companies in the e-commerce space follow this approach).\r\n\r\n**Acceptance criteria:**\r\n- [ ] Product name field has the red asterisk on the label\r\n- [ ]  The publish button is disabled until the user enters the name\r\n- [ ]  On hover, we show a tooltip message: Give this product a name before saving it.\r\n- [ ]  The publish button becomes active if the user enters at least 1 character in the product name\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"the \"Uncategorized\" category selected by default adds little to no value when the user is creating a new product and can create confusion.\r\n\r\n**Acceptance criteria- [ ] If the store has at least one created category: track the most used categories and select the top one by default, or select the one that was used last.\r\n- [ ] If the store has no categories: create an empty state with clear CTA for creating a new category\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"We plan to move forward with several usability improvements to the current experience while exploring how to create a new and more streamlined product creation and editing experience. \n\nWe'll compile all the issues and potential solutions under this epic. The prioritization will depend on the effort/risk involved in implementing each change.\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"I just noticed that none of the WooCommerce Admin REST API endpoints registered in `wc-admin` namespace is listed on https://woocommerce.github.io/woocommerce-rest-api-docs.\r\n\r\nIt would be nice if we can add them to the official doc.\r\n\r\nThis might be a good task for the upcoming cooldown period.\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\nThere might be a good reason why the endpoints are not listed. I may need to talk to other devs and figure out the background. \n\n###\n\n","completion":" [3943104021]"}
{"prompt":"When I have the new order popup window open and tab to one of the dropdowns and then press enter, I get search boxes in the top left corner of the wordpress window and the order popup window is closed. If I enter sku values I can see that products are loaded. The products is however not added to the order when selected.\r\n\r\nAdd product popup\r\n![image](https://user-images.githubusercontent.com/93131870/174589910-00f10087-2950-4985-86b8-14e5e99b2ca6.png)\r\n\r\nSearch boxes that should not exist\r\n![image](https://user-images.githubusercontent.com/93131870/174589681-ebd0f8ff-9b67-43f0-acd3-473762b26e1b.png)\r\n\n\n### Expected behavior\n\nForm should be submitted when pressing enter.\r\nThere should not be any search boxes in the top left corner of the wordpress window.\n\n### Actual behavior\n\nSearch boxes are displayed at the top left corner of the wordpress window.\n\n### Steps to reproduce\n\nSelect Orders\r\nSelect Add new order\r\nSelect Add items\r\nTab to highlight one of the search select dropdowns\r\nPress Enter \n\n\n\n###\n\n","completion":" [1891051458,702347761]"}
{"prompt":"Add e2e tests for `Get paid with WooCommerce Payments` task\r\n\r\n```\r\n- Merchant can set up WCPay through the onboarding task with the task when WC Pay is installed.\r\n```\r\n\r\n**Acceptance criteria**\r\n\r\n```yml\r\nGiven: WC Pay is installed\r\n  - and: WC Pay is not connected\r\n  - and: the store is located in a WCPay supported country\r\n\r\nWhen: a merchant goes to Woocommerce > Home page\r\nThen: a merchant should see the `Get paid with WooCommerce Payments` task\r\n\r\nWhen: a merchant clicks `Get paid with WooCommerce Payments` task\r\nThen: a merchant should be redirected to WC payment connect page.\r\n\r\nWhen: WC Pay is connected (If it's possible to test this with test helpers.)\r\nThen: The task should be hidden\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"Add e2e tests for `Set up Additional Payments` task\r\n\r\n\r\n```\r\n- Merchant can set up additional payments through the onboarding task\r\n  - Merchant can set up an additional payment with payment providers.\r\n  - Merchant can set up `Direct bank transfer`\r\n  - Merchant can enable `Cash on delivery`\r\n```\r\n\r\n**Acceptance criteria**\r\n\r\n```yml\r\nGiven: WC Pay is installed via OBW\r\n  - and: WC Pay is connected\r\n  - and the store is located in a WCPay supported country\r\n \r\nWhen: a merchant goes to Woocommerce > Home\r\nThen: a merchant should see the `Set up additional payment providers` task under `Things to do next`\r\n\r\nWhen: a merchant clicks `Set up additional payment providers` task\r\nThen: \r\n   - a merchant should see a list of payment providers\r\n   - a merchant should see offline payment methods\r\n   - a merchant can set up `Direct bank transfer`\r\n   - a merchant can enable `Cash on deliver`\r\n\r\nWhen: a merchant chooses a payment provider\r\nThen: a merchant can install and set up a payment provider\r\n\r\nWhen: one of the actions is done\r\nThen: the task should be marked as completed.\r\n```\r\n\r\n\r\n\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"Add e2e tests for `Personalize my store` task\r\n\r\n```\r\n- Merchant can personalize their store through the onboarding task\r\n  - Merchant can import sample products\r\n  - Merchant can create a homepage\r\n  - Merchant can upload a logo\r\n  - Merchant can set a store notice\r\n```\r\n\r\n**Acceptance criteria**\r\n\r\n```yml\r\nGiven: a store haven't set up a home page\r\n  - and: has no products\r\nWhen: a merchant goes to \"Personalize my store\" task\r\nThen:\r\n  - A merchant should see the `Import sample products` step\r\n  - When:  a merchant completes the item on each step\r\n  - Then: a notice should be shown.\r\n\r\nWhen: All steps are completed\r\nThen: \r\n  - The task should be marked as completed\r\n  - A merchant should see sample products on the product page.\r\n  - A merchant should see a personalized Home page\r\n```\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"Add e2e tests for `Set up marketing tools` task\r\n\r\n\r\n```\r\n- Merchant can set up marketing tools through the onboarding task\r\n  - Merchant can see the recommended marketing extensions\r\n  - Merchant can install a marketing extension \r\n  - Merchant can see the task marked as completed when a marketing extension is installed.\r\n```\r\n\r\n**Acceptance criteria**\r\n\r\n```yml\r\nGiven: a merchant hasn't installed any marketing extensions \r\nWhen: a merchant goes to `Set up marketing tools` task:\r\nThen:\r\n  - a merchant should see the recommended marketing extensions under `REACH OUT TO CUSTOMERS`\r\n  - a merchant should see the recommended marketing extensions under `GROW YOUR STORE`.\r\n  - a merchant can install a marketing extension by clicking `Get started` button.\r\n\r\nGiven: a merchant has installed a marketing extension\r\nWhen: a merchant goes to `Woocommerce > Home`\r\nThen: The `Set up marketing tools` task should be marked as completed.\r\n```\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"Add e2e tests for `Set up shipping` task\r\n\r\n```\r\n- Merchant can set up shipping costs through the onboarding task\r\n  - Merchant can manually set up shipping costs\r\n  - Merchant can set up shipping costs with WCS and Jetpack if store location is the US\r\n  - Smart defaults should be applied when the  store matches some conditions.\r\n```\r\n\r\n**Acceptance criteria**\r\n\r\n**For current design:**\r\n\r\n```yml\r\nGiven: a merchant sells physical products\r\n  - and: haven't set up shipping costs/zones\r\nWhen: a merchant goes Woocommerce > Home\r\nThen: a merchant should see the shipping task\r\n\r\nWhen: a merchant goes to the shipping task\r\n  - and complete item on each step\r\nThen: notices should be shown on steps 2 and 3\r\n\r\nWhen: a merchant completes all steps\r\nThen:\r\n  - the task should be marked as completed\r\n  \r\nGiven: a merchant sells physical products\r\n  - and: set up shipping costs/zones\r\nWhen: a merchant click the shipping task\r\n  Then: a merchant should be redirected to the shipping setting page.\r\n```\r\n\r\n**For new design**\r\nTBD\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"Add e2e tests for the `Set up tax rates`.\r\n\r\n\r\n```\r\n- Merchant can set up tax rates through the onboarding task\r\n  - Merchant can see Avalara plugin given the store location is not in `'US', 'CA', 'AU', 'GB'\r\n  - Merchant can see \"WC Tax\" plugin given the store location is in `'US', 'CA', 'AU', 'GB'\r\n  - Merchant can install a tax plugin\r\n  - Merchant can set up tax manually\r\n  - Merchant can dismiss the task by clicking \"I don't charge sales tax\" button\r\n```\r\n\r\n\r\n**Acceptance criteria**\r\n\r\n```yml\r\n#  I think we can just add frontend unit tests for the following cases\r\nGiven: a store location is not in `'US', 'CA', 'AU', 'GB'`\r\nWhen: a merchant goes to Set up tax rates task\r\nThen: a merchant should see the `Avalara` plugin as a recommended extension, but not `WC Tax` plugin.\r\n\r\nGiven: a store location is in `'US', 'CA', 'AU', 'GB'`\r\nWhen: a merchant goes to Set up tax rates task\r\nThen: a merchant should see the `WC Tax` plugin and `Avalara` plugin as recommended extensions.\r\n```\r\n\r\n```yml\r\nGiven: a merchant hasn't installed a recommended plugin\r\nWhen: a merchant clicks the `Enable & Set up` button of a recommended plugin\r\nThen:\r\n  - a merchant can install a tax plugin\r\n  - the task should be marked as completed once the plugin is installed\r\n\r\nGiven: a merchant hasn't set up tax rates\r\nWhen: a merchant clicks the `Set up taxes manually ` button\r\nThen:\r\n   - a merchant should be redirected to the tax setting page \r\n   - when: a merchant adds a tax row\r\n     Then: a merchant should see the success notice.\r\n\r\nGiven: a merchant hasn't set up tax rates\r\nWhen: a merchant clicks the `I don't charge sales tax` button\r\nThen: a merchant should be redirected to the Home page and the tax task is marked as completed.\r\n```\r\n\r\n\r\n\r\n\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"Add e2e tests for the `Add my products` task.\r\n\r\n```\r\n- Merchant can add products through the onboarding task\r\n - Merchant can add products with product templates\r\n - Merchant can add products manually\r\n - Merchant can import products with a CSV file\r\n```\r\n\r\n**Acceptance criteria**\r\n\r\n\r\n```yml\r\nGiven: a merchant hasn't added products\r\n\r\nWhen: a merchant goes to `Add my products` task\r\n  - and: chooses a product template (test with different templates)\r\nThen: a merchant should be redirected to the product page with pre-filled content.\r\n  - When: a merchant clicks the \"publish\" button\r\n    Then: `Congrats on adding your first product!` notice should be shown\r\n\r\nWhen: a merchant goes to `Add my products` task\r\n  - and: chooses \"Add manually\" option \r\nThen: a merchant should be redirected to the product page with empty content.\r\n  - When: a merchant clicks the \"publish\" button\r\n    Then: `Congrats on adding your first product!` notice should be shown\r\n\r\nWhen: a merchant goes to `Add my products` task\r\n  - and: chooses \"Import via CSV\" option \r\nThen: a merchant should be redirected to import CSV flow. (Just need to test it get redirected to the page; We already have e2e tests for import CSV flow.)\r\n```\r\n\r\nI think the test flow should be similar for new product layouts.\r\n\r\n- spotlight: #33360 \n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"After update to version 6.6.0 , if I open Woo overview, goolge ads listing, marketing overview or analytics \r\n\r\nI keep getting fatal error: \r\n[Wed Jun 15 19:35] [php7:notice] [pid 31362:tid ******] [client *********:26394] Automattic\\\\WooCommerce\\\\Admin\\\\Features\\\\Onboarding::should_show_tasks is deprecated since version 6.3.0! Use Automattic\\\\WooCommerce\\\\Admin\\\\Features\\\\Onboarding::should_show_tasks instead., referer: https://XXXXXXXXXX\r\n\r\n\n\n### Expected behavior\n\nno error\n\n### Actual behavior\n\nAfter update to version 6.6.0 , if I open Woo overview, goolge ads listing, marketing overview or analytics \r\n\r\nI keep getting fatal error: \r\n[Wed Jun 15 19:35] [php7:notice] [pid 31362:tid ******] [client *********:26394] Automattic\\\\WooCommerce\\\\Admin\\\\Features\\\\Onboarding::should_show_tasks is deprecated since version 6.3.0! Use Automattic\\\\WooCommerce\\\\Admin\\\\Features\\\\Onboarding::should_show_tasks instead., referer: https://XXXXXXXXXX\r\n\r\n\n\n### Steps to reproduce\n\nupdate to version 6.6.0 , if I open Woo overview, goolge ads listing, marketing overview or analytics \r\n\n\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"We setup our store to calculate shipping taxes based on cart items. \r\nThe matching tax has a rate of 23% with the shipping option enable. If the shipping method choosed by the client has the tax status set as none, new orders will have the correct shipping_tax set as 0, but if we recalculate the order total using the admin panel, it will set the shipping_tax setup on our tax, ignoring the tax status setup on the shipping method.\n\n### Expected behavior\n\nThe expected behaviour would be to check if the shipping method tax status is set as none, and the shipping tax value to remain the same.\r\n\r\nAn example from the order created from the website\r\n\r\n\"shipping_total\": \"3.25\",\r\n**\"shipping_tax\": \"0.00\",**\r\n\"cart_tax\": \"2.30\",\r\n\"total\": \"15.55\",\r\n\n\n### Actual behavior\n\nExample shipping_tax after recalculate order total\r\n\r\n\"shipping_total\": \"3.25\",\r\n**\"shipping_tax\": \"0.75\",**\r\n\"cart_tax\": \"2.30\",\r\n\"total\": \"16.30\"\n\n### Steps to reproduce\n\n1. Set base tax with a rate of 23%, and set shipping checkbox enable\r\n2. Go to tax options set prices inserted without tax as no\r\n3. Show prices in store with tax\r\n4. Show prices in cart with tax\r\n5. Set calculate tax based on client shipping address\r\n6. Create new shipping method with tax status set as none, with a random cost\r\n7. Create a order with the shipping method created and with a shipping address to match the tax rate created\r\n8. Recalculate order total and see order total.\n\n\n\n###\n\n","completion":" [1891051453,1891051458]"}
{"prompt":"The reminder bar (see image below) should only span the content section of the site, which it does with the classic navigation:\r\n\r\n![image](https://user-images.githubusercontent.com/444632/173664202-b1124562-4d4b-488d-b116-af6d1f6b6720.png)\r\n\r\nHowever, when the new navigation is enabled it spans the entire site width, appear above the navigation sidebar:\r\n\r\n![image](https://user-images.githubusercontent.com/444632/173663578-d4469227-40d2-49da-957b-71019fb1efe8.png)\r\n\n\n### Expected behavior\n\nThe reminder bar should only appear above the content and not above the sidebar with the new navigation enabled.\t\t\t\t\t\t\n\n### Actual behavior\n\nThe reminder bar appears above the new navigation\t\n\n### Steps to reproduce\n\n1. Create a new site\r\n2. Install WooCommerce\r\n3. Enable marketing and enable the new navigation in `WooCommerce -> Settings -> Advanced -> Features`\r\n4. Navigate to the _Orders_ page (or other), where the reminder bar is displayed\r\n5. Observe the incorrect UI\n\n\n\n###\n\n","completion":" [3943104021,3943425968]"}
{"prompt":"When I download a product export from WooCommerce perform a stock take (updating stock values against our physical shop) and then import it back into the site there are some data inconsistencies. \r\n\r\nAfter randomly checking about 5% of the entries, I could spot some inconsistencies between the imported value and the value displayed in WooCommerce.\r\n\r\nI have been pulling my hair out for years thinking this is my mistake due to the fact I have thousands of products imported. However it now obviously is a bug in the system.\r\n\r\nThe image below shows import value against WooCommerce value.\r\n![image001](https://user-images.githubusercontent.com/40209785/173522862-5416048c-90cb-4959-843d-cd6f1ba342a0.png)\r\n\r\nI have checked obvious things such as disabling all non-essential plugins and clearing all caches and mechanisms.\r\n\n\n### Expected behavior\n\nImported stock value from spreadsheet to match stock values stored by WooCommerce.\n\n### Actual behavior\n\nMost stock values between the spreadsheet and import are correct however a few seem inconsistent.\n\n### Steps to reproduce\n\n1) Perform an export of 1,000+ products\r\n2) Change stock values of the products\r\n3) Import back into the site\r\n4) Look for inconsistencies\n\n\n\n###\n\n","completion":" [1891051450,1891051471]"}
{"prompt":"When a `guest` order is refunded, the refund row in Analytics -> Orders shows a `Returning` status while the order has a `New` status.\r\n\r\n<img width=\"936\" alt=\"Screen Shot 2022-06-13 at 11 04 05 PM\" src=\"https://user-images.githubusercontent.com/343847/173477974-3581f041-ed7b-4b1c-b8d1-a788933878d8.png\">\r\n \r\n\r\n### Expected behavior\r\n\r\nThe refund line should have the customer status from the refunded order.\r\n\r\n### Actual behavior\r\n\r\nSee Screenshot.\r\n\r\n### Steps to reproduce\r\n\r\nNote: The screenshot is for a test IPP transaction with WC Payments & the mobile app. You should be able to reproduce the same results in the report with the following\r\n\r\n1. Complete a purchase as a guest account\r\n2. Refund the order\r\n3. Allow a few minutes for the order & refund to be imported into Analytics\r\n4. Check report\r\n\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"When we perform a POST request to the `/wc/v3/orders/$ORDER_ID/refunds&_method=post` endpoint, the \r\n `refunded_payment` property is not part of the response, however, when we perform a GET request to `/wc/v3/orders/$ORDER_ID/refunds&_method=get`, the property can be found in the response.\r\n\r\nRelated: https://github.com/woocommerce/woocommerce-ios/issues/6704\r\n\r\n\n\n### Expected behavior\n\nThe `refunded_payment` property to appear in the POST request. The docs seem to include it as well on its example: https://woocommerce.github.io/woocommerce-rest-api-docs/#create-a-refund \n\n### Actual behavior\n\nThe `refunded_payment` property does not appear in the POST request, only in the GET request.\n\n### Steps to reproduce\n\nPerform POST and GET requests to the API using the refunds endpoint, and check the response details. As an example:\r\n\r\nPOST `/wc/v3/orders/$ORDER_ID/refunds&_method=post`\r\n\r\nResponse:\r\n```\r\n{ \"data\": { \"id\": 6680, \"date_created\": \"2022-06-08T09:05:22\", \"date_created_gmt\": \"2022-06-08T09:05:22\", \"amount\": \"0.83\", \"reason\": \":)\", \"refunded_by\": 1, \"meta_data\": [ { \"id\": 3959, \"key\": \"_wcpay_refund_id\", \"value\": \"re_3L8KoO2Ev1jcPAUs1jPqhXeL\" } ], \"line_items\": [ { \"id\": 25, \"name\": \"TEST Product!\", \"product_id\": 6649, \"variation_id\": 0, \"quantity\": -1, \"tax_class\": \"\", \"subtotal\": \"-0.83\", \"subtotal_tax\": \"0.00\", \"total\": \"-0.83\", \"total_tax\": \"0.00\", \"taxes\": [], \"meta_data\": [ { \"id\": 238, \"key\": \"_refunded_item_id\", \"value\": \"24\", \"display_key\": \"_refunded_item_id\", \"display_value\": \"24\" } ], \"sku\": \"\", \"price\": 0.826446, \"parent_name\": null } ], \"shipping_lines\": [], \"tax_lines\": [], \"fee_lines\": [], \"_links\": { \"self\": [ { \"href\": \"https://mywootestingstore.mystagingwebsite.com/wp-json/wc/v3/orders/6679/refunds/6680\" } ], \"collection\": [ { \"href\": \"https://mywootestingstore.mystagingwebsite.com/wp-json/wc/v3/orders/6679/refunds\" } ], \"up\": [ { \"href\": \"https://mywootestingstore.mystagingwebsite.com/wp-json/wc/v3/orders/6679\" } ] } } }\r\n```\r\n\r\nGET: `/wc/v3/orders/$ORDER_ID/refunds&_method=get`\r\n\r\nResponse\r\n```\r\n{ \"data\": [ { \"id\": 6680, \"date_created\": \"2022-06-08T09:05:22\", \"date_created_gmt\": \"2022-06-08T09:05:22\", \"amount\": \"0.83\", \"reason\": \":)\", \"refunded_by\": 1, \"refunded_payment\": true, \"meta_data\": [ { \"id\": 3959, \"key\": \"_wcpay_refund_id\", \"value\": \"re_3L8KoO2Ev1jcPAUs1jPqhXeL\" } ], \"line_items\": [ { \"id\": 25, \"name\": \"TEST Product!\", \"product_id\": 6649, \"variation_id\": 0, \"quantity\": -1, \"tax_class\": \"\", \"subtotal\": \"-0.83\", \"subtotal_tax\": \"0.00\", \"total\": \"-0.83\", \"total_tax\": \"0.00\", \"taxes\": [], \"meta_data\": [ { \"id\": 238, \"key\": \"_refunded_item_id\", \"value\": \"24\", \"display_key\": \"_refunded_item_id\", \"display_value\": \"24\" } ], \"sku\": \"\", \"price\": 0.826446, \"parent_name\": null } ], \"shipping_lines\": [], \"tax_lines\": [], \"fee_lines\": [], \"_links\": { \"self\": [ { \"href\": \"https://mywootestingstore.mystagingwebsite.com/wp-json/wc/v3/orders/6679/refunds/6680\" } ], \"collection\": [ { \"href\": \"https://mywootestingstore.mystagingwebsite.com/wp-json/wc/v3/orders/6679/refunds\" } ], \"up\": [ { \"href\": \"https://mywootestingstore.mystagingwebsite.com/wp-json/wc/v3/orders/6679\" } ] } } ] }\r\n```\r\n\r\nNote that `\"refunded_payment\": true` is missing in the POST request.\n\n\n\n###\n\n","completion":" [2258932484]"}
{"prompt":":**\r\n \r\nAdd e2e tests to make sure elements changes don‚Äôt break the step‚Äôs reference and focus element targets\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"The leaderboard endpoints contain \"rows\" of stats. These are formatted like CSV data with headings and rows. The row data is output as HTML, which isn't great for native apps. It's also missing some data and the format makes it hard to add additional data without breaking anything.\r\n\r\nWe should add structured data in a new field called `data`. Instead of returning data like a CSV, each object would be a set of key, value pairs like:\r\n\r\n```\r\n{\r\n  \"id\": 1234,\r\n  \"name\": \"Awesome Steel Keyboard\",\r\n  \"items sold\": \"3371\",\r\n  \"net sales\": \"1944797.32\",\r\n}\r\n```\r\n\r\nAs a bonus, if we can omit `data` from `_fields` by default, this data will only be included if you explicitly ask for it.\n\n### Describe alternatives you've considered\n\nWe could also do this as /v4 analytics endpoints. I suspect there will be some hesitation to start introducing v4 endpoints in a piecemeal way like this though.\n\n### Additional context\n\nA row in the product leaderboard looks like this:\r\n\r\n```\r\n[\r\n    {\r\n        \"display\": \"<a href='https://joshbetz.ngrok.io/wp-admin/admin.php?page=wc-admin&path=/analytics/products&filter=single_product&products=55'>Practical Silk Gloves</a>\",\r\n        \"value\": \"Practical Silk Gloves\"\r\n    },\r\n    {\r\n        \"display\": \"3,345\",\r\n        \"value\": 3345\r\n    },\r\n    {\r\n        \"display\": \"<span class=\\\"woocommerce-Price-amount amount\\\"><bdi><span class=\\\"woocommerce-Price-currencySymbol\\\">&#36;</span>3,329,077.80</bdi></span>\",\r\n        \"value\": 3329077.8000000077\r\n    }\r\n],\r\n```\r\n\r\nIn order to get the product ID, we have to parse the HTML and get the product ID from the URL.\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"Since CLI can run very long we should clear any in-memory cache (including `$wpdb`, in-memory object cache) when a batch is processed completely. This will prevent memory accumulation issues from a bloated cache.\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"In the current version of WooCommerce Admin, a query parameter is appended behind `.js` resource fetches -\r\nit looks like: `https://sticky-aardvark.jurassic.ninja/wp-content/plugins/woocommerce/assets/client/admin/chunks/profile-wizard.js?ver=6.7.0`\r\n\r\nThis could be improved by using `?ver=<file hash>` instead of a version number, which makes it so that the client does not have to re-fetch resources that haven't changed recently.\n\n###\n\n","completion":" [3943104021,472334370]"}
{"prompt":"undefinedThis is a companion to #33221. It probably should only be implemented in conjunction with that, as explained further below.\r\n\r\nCurrently data items in the analytics cache have a theoretical TTL of [one week](https://github.com/woocommerce/woocommerce/blob/35b58245af09042934d9c726786cb3dfcb246838/plugins/woocommerce/src/Admin/API/Reports/Cache.php#L73). However, any time a relevant entity (order, product, coupon, etc.) changes or is created, the entire cache [gets invalidated](https://github.com/woocommerce/woocommerce/blob/35b58245af09042934d9c726786cb3dfcb246838/plugins/woocommerce/src/Admin/API/Reports/Cache.php#L25), so it seems unlikely on an active store that a cache item would ever reach end-of-life. On medium/high traffic stores, this essentially means that analytics requests will never return cached data, and will always end up running expensive, slow queries.\r\n\r\nTo mitigate this, I propose that we make two changes (plus the change in #33221):\r\n\r\n* Change the way that the cache version value ([a second-based Unix timestamp](https://github.com/woocommerce/woocommerce/blob/35b58245af09042934d9c726786cb3dfcb246838/plugins/woocommerce/includes/class-wc-cache-helper.php#L258)) is generated to round to a particular increment, say, 10 minutes. This would mean that several entity changes clustered together, or a high rate of continuous changes, would only cause one invalidation every 10 minutes.\r\n* Change the existing TTL from one week down to one day, or even one hour. This way, if changes happen _after_ an invalidation but still within the same 10-minute window, the data would not remain stale for very long.\r\n\r\nThe benefit of combining these changes with #33221 is that if a user notices stale data, they would be able to send an API request to immediately refresh the cache for that particular data set, rather than having to wait for the cache to expire. In the mobile apps, this would manifest as doing a \"pull to refresh\".\r\n\r\nThe tricky part, I think, is figuring out the best balance between cache version increment and TTL to most benefit stores, regardless of their rate of activity.\r\n\r\n### Describe alternatives you've considered\r\n\r\n* We could simply turn off cache invalidation altogether and rely on a low TTL. I think this would be harder to balance between high/low activity stores, with only one lever to move instead of two.\r\n\r\n### Additional context\r\n\r\np91TBi-8Ro-p2\n\n###\n\n","completion":" [2258932484,3943425133]"}
{"prompt":"## User Story\r\n\r\nAs a Woo developer, I want an ExPlat client pre-configured for use in WooCommerce, so that I don't have to configure it myself for each experiment.\r\n\r\n## Criteria\r\n\r\n* Contribute the existing class back to Jetpack in https://github.com/Automattic/jetpack/issues/19596\r\n* Use Composer to include [automattic/jetpack-abtest](https://packagist.org/packages/automattic/jetpack-abtest).\r\n* Create a new \"Woo flavored\" class, which wraps the Jetpack class. The [decorator pattern](https://sourcemaking.com/design_patterns/decorator/php) can be good for this.\r\n  * Configure the wrapper class to fetch the anonymous ID on its own.\r\n  * Configure the wrapper class to provide custom segment values.\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"https://developer.woocommerce.com/extension-developer-guide/handling-merchant-onboarding/ is out of date.\r\n\r\nCode that implements task list items in the manner described in that article causes deprecation errors in the browser console:\r\nwoocommerce_admin_onboarding_task_list is deprecated and will be removed from @woocommerce/data in version 2.10.0. Please use TaskLists::add_task() instead.\r\n\r\nTaskLists::add_task() seems to be server side (PHP), not JS though, so it's unclear what the *right* way to register these tasks is now.\n\n### Expected behavior\n\n- Documentation is updated so that implementations that follow the documentation do not throw deprecation warnings\r\n- Developer advisory published outlining how to migrate from the old filter-based task adding to its new replacement\n\n### Actual behavior\n\n- Implementations that follow the documentation currently throw deprecation warnings\r\n- No developer advisory available about the change\n\n### Steps to reproduce\n\nFollow documentation, not the deprecation warning in browser console.\n\n\n\n###\n\n","completion":" [3943424887]"}
{"prompt":"WooCommerce allows to set default image sizes via `add_theme_support( 'woocommerce' )`.\r\n\r\nA default WooCommerce theme uses it to set the sizes for archive and singular views: https://github.com/woocommerce/storefront/blob/c012bb5edc58e900cacbe871807a566e9369758d/inc/woocommerce/class-storefront-woocommerce.php#L59-L60\r\n\r\nWooCommerce also allows to set cropping style via _Customize > WooCommerce > Product Images_.\r\n\r\nI use the Storefront theme.\r\n\r\nBy default, Storefront sets **416**px as a size for main image shown in single product views.\r\n\r\nFor my product, I use a featured image that is **1920** by **1222** pixels.\r\n\r\nIn the Customizer, \"Thumbnail cropping\" is set to \"1:1\".\r\n\r\nHowever, main image is not properly cropped in singular view.\r\n\r\n![Issue example](https://i.snipboard.io/dLlmWD.jpg)\r\n\r\n\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nI expect to have the image with size of 416x416px in single product views.\r\n\r\n### Actual behavior\r\n\r\nHowever, I am getting the image which has the proper width but not height.\r\n\r\n![Issue example](https://i.snipboard.io/WY6poa.jpg)\r\n\r\n**Additional info**\r\n\r\nTo further investigate this problem, I've used `wc_get_image_size()` to see what image sizes are used for `woocommerce_thumbnail` and `woocommerce_single`.\r\n\r\nI've used the following code snippet to view sizes:\r\n\r\n```php\r\nvar_dump(wc_get_image_size('woocommerce_thumbnail'));\r\n\t\r\nvar_dump(wc_get_image_size('woocommerce_single'));\r\n```\r\n\r\nAs a result I've got this:\r\n\r\n```\r\narray (size=3)\r\n  'width' => int 324\r\n  'height' => int 324\r\n  'crop' => int 1\r\n\r\narray (size=3)\r\n  'width' => int 416\r\n  'height' => string '' (length=0)\r\n  'crop' => int 0\r\n```\r\n\r\nSo, it looks like saved settings for main image are ignored.\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Make sure WooCommerce and Storefront are active.\r\n2. Create a product with featured image that has at least 416x416px.\r\n3. Publish product.\r\n\r\n\n\n###\n\n","completion":" [33006876]"}
{"prompt":"With a clean install, purchasing a subscription product with an email of an existing user, on checkout page, it will show 'An account is already registered with your email address. Please log in.' error.\r\n\r\n![Screen Shot 2022-05-31 at 08 18 36](https://user-images.githubusercontent.com/73803630/171074884-66d1c49f-41ea-440b-9c68-32dbba24ac23.png)\n\n### Expected behavior\n\nThe 'Please log in' link does something that allows user to login.\n\n### Actual behavior\n\nClicking on the 'Please log in' link doesn't do anything.\n\n### Steps to reproduce\n\n1. Spin up a clean install wordpress site.\r\n2. Install WooCommerce.\r\n3. Install WooCommerce Subscriptions. This is required because we want to ask user to login on checkout and purchasing a subscription product with an existing user's email would do that.\r\n4. Enable 'Direct bank transfer' payment from wp-admin > WooCommerce > Payments. This is so we don't have to install any payment plugins and to make sure the problem is not within other plugins.\r\n5. Enable 'Accept Manual Renewals' from wp-admin > WooCommerce > Subscriptions. This is so the store can accept 'Direct bank transfer' payment for subscription product.\r\n6. Create a 'Simple Subscription' product.\r\n7. Try to purchase that product in an incognito mode.\r\n8. On checkout page, input the admin's email.\r\n9. Expect an error: 'An account is already registered with your email address. Please log in.'\r\n10. Click on the 'Please log in' link and it will not do anything.\r\n\r\nIf 'Allow customers to log into an existing account during checkout' option is enabled from wp-admin > WooCommerce > Accounts & Privacy, clicking the 'Please log in' link will show a login form.\n\n\n\n###\n\n","completion":" [1891051440]"}
{"prompt":"For Atomic site, \"Out of Stock\" and \"On backorder\" fails to display the selected result under \"Show\" on \"Analytics > Stock\" page.\r\n\r\n### Expected behavior\r\n\r\n\"Out of Stock\" and \"On backorder\" should display the selected result under \"Show\" on \"Analytics > Stock\" page.\r\n\r\n### Actual behavior\r\n\r\n\"Out of Stock\" and \"On backorder\" fails to display the selected result under \"Show\" on \"Analytics > Stock\" page.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using Atomic site.\r\n2. Install and activate WooCommerce 6.6.0-rc.1.\r\n3. Complete the setup wizard.\r\n4. Add some sample products.\r\n5. Set some products to \"Out of stock\" and \"On backorder\".\r\n6. Click on the \"Analytics > Stocks\" page.\r\n7. Click on \"All Products\" and select \"Out of stock\" or \"On backorder\".\r\n8. Observe that \"Out of Stock\" and \"On backorder\" fails to display the selected result under Show on \"Analytics > Stock\" page.\r\n\r\n### Note:\r\n1. Unable to update \"Product Status\" label at the bottom of the \"Analytics > Stocks\" page\r\n\r\n### Video:\r\n\r\nhttps://user-images.githubusercontent.com/41110392/171014109-996edbd7-2b96-4f2e-9ac2-58c117f576fe.mp4\r\n\r\n\n\n###\n\n","completion":" [3943104021,3943425133]"}
{"prompt":"Hi!\r\n\r\nJust found following fatal error:\r\n\r\n```\r\nPHP Fatal error:  Uncaught Error: Call to undefined function wc_notice_count()\r\n```\r\n\r\nAfter debugging i found issue in `\\WooCommerce::is_rest_api_request` function. It doesn't properly work when we have `wp-json` in url that is not actually rest api url. This leads to not loading frontend includes.\r\n\r\nIn our specific site we got request to similar url `/test/wp-json/`. Which triggered 404 error and rendering 404.php template that using wc_notice_count function.\n\n### Expected behavior\n\nNo fatal errors.\n\n### Actual behavior\n\nFatal error appears when `wp-json` used in request url.\n\n### Steps to reproduce\n\n-\n\n\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"In analytics overview page, Leaderboard not update data when change date filter to other value and select to previous value again in Leaderboard section data not change.\r\n\r\nsame issues in other site.\n\n### Expected behavior\n\nLeaderboard not update data when change date filter\n\n### Actual behavior\n\nLeaderboard update data correctly when change date filter \n\n### Steps to reproduce\n\nhttps://drive.google.com/file/d/1f53QpiKmmXZxFkk0P4DUUhrH219SnrbI/view?usp=sharing\n\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"For Atomic site, Blank Screen is displayed after clicking \"Woocommerce\"> \"Home\".\r\n\r\n### Expected behavior\r\n\r\nAfter clicking \"Woocommerce > Home\" appropriate page should be displayed.\r\n\r\n### Actual behavior\r\n\r\nBlank Screen is displayed after clicking \"Woocommerce > Home\"\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using Atomic site.\r\n2. Install and activate all the required plugins.\r\n3. Install/use the WooCommerce Beta Tester plugin in order to get WooCommerce 6.6 Beta 1.\r\n4. Go to \"Woocommerce > Home\" page\r\n4. Observe that Blank Screen is displayed.\r\n\r\n### ScreenShot:\r\n\r\n![#33188](https://user-images.githubusercontent.com/41110392/170227580-b469847b-b8c0-4bb7-ab94-53173945254c.jpg)\r\n\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"From a comment in [#33026](https://github.com/woocommerce/woocommerce/pull/33026#discussion_r879165631):\n\n> I wonder if we were to implement locking sometime in the future, should we add a provision in the DB schema itself right now? Maybe at least an edit lock column.\n\nThe output of this issue should be a document detailing possible race conditions, and what can we do in the DB structure to address them (even if we don't implement them now).\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"When we buy a variable product with at least two or three attributes in the variation - the **Analytics > Variations** reports screen would show up the product name in the format below\r\n\r\n**Product Name - Attribute 1, Attribute 2, Attribute 3**\r\n\r\nIf we edit the product and delete any attribute value or change it to \"Any ...\" in the variation that was purchased - for example, Attribute 2 & 3, the **Analytics > Variations** reports screen shows up a blank value or incorrect value.\r\n\r\n![image](https://d.pr/i/3KJRCh+)\r\n\r\nClearing up the Analytics cache does not help.\r\n\r\n\r\n### Expected behavior\r\n\r\nThe product name in Analytics shouldn't be affected by modifying the variation's attribute values.\r\n\r\n### Actual behavior\r\n\r\nThe product name is affected by changing the attribute value or deleting it for a variation that was purchased.\r\n\r\n### Steps to reproduce\r\n\r\n1) Create a variable product and add two or more custom attributes : https://d.pr/i/n0uH1V\r\n2) Press create variations from all attributes: https://d.pr/i/54mdYA (We'll consider # 92 for example)\r\n3) Order any variation \r\n4) You'll see it all normal under **Analytics > Variations** (https://d.pr/i/rFL8on)\r\n5) Edit the variation you've bought and change one of its attribute values to \"Any attribute\" and press Save as well as update the product - https://d.pr/i/UTNpnc\r\n(The step above is equivalent to deleting one of the attribute's values and going to the variation's tab to let it auto adjust the attribute value to \"Any attribute\")\r\n6) Clear Analytics Cache\r\n7) Go to Analytics > Variations, and you'll see blank value with commas : https://d.pr/i/fb3ypt\r\n8) Same way if you choose any other value in an attribute for that variation, the same value gets reflected in Analytics but the fact is that such a variation was never bought. (Example: Changing Fishes to \"Shark\" for variation # 92: https://d.pr/i/rooGod)\r\n\r\nThat may be because the API is dependent on the variable product to fetch the attributes instead of getting the attributes from the line items.\r\n\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"In the Setup Wizard, depending on the store's country, you can install up to 5 recommended business features: WooCommerce Payments, WooCommerce Shipping, WooCommerce Tax, MailPoet, and Google Listings and Adds. As these are installed, the only feedback you get from the page on the progress of installation, is that the \"Continue\"-button shows an animation. Once the installation is done, the Theme-page of the Wizard is shown with in the bottom-left a dark grey box saying \"Plugins were successfully activated\".\r\n\r\nAlthough installing the plugins does not seem to take extremely long (12-15 seconds the two times I timed it), it would be nice to get more feedback on the progress as these plugins are installed.\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [1891051446]"}
{"prompt":"Under particular tax configurations, in combination with a coupon, the `line_items` in the `/orders/` and `/orders/{id}/` responses have excessively precision on fields such as `price`. This has led to issues refunding orders in the mobile apps based on these values, as often they are slightly higher than the order total.\r\n\r\nThese fields are more currency-like when the settings are different, or when no coupon is applied to the order. The fields that are affected are:\r\n\r\n* line_items.taxes.total\r\n* line_items.taxes.subtotal\r\n* line_items.price\r\n\r\nNote that the tax total and subtotal are always at least one place more precise than USD.\r\n\r\n## Impact\r\n\r\nThe impact of this on Woo Mobile app users is that orders cannot be refunded in full if they include a coupon discount and these tax settings.\r\n\r\nThe refunds fail because the apps use the totals from `line_items.price` to build the amount for a refund, and in this scenario the sum will be slightly over the total for the order, which fails the refund API validation. I will also log issues in the apps to have more resilient use of this endpoint.\r\n\r\nFor full context, see p91TBi-8K2-p2.\r\n\r\n## History\r\nThis was previously reported in https://github.com/Automattic/woocommerce-services/issues/2550, but shown to occur even when that plugin was not in use.\n\n### Expected behavior\n\nThe REST API's response will consistently return numbers to two DP (subject to system settings) for both `price` (number) and `item_total` (string), as it does when no coupon is used.\n\n### Actual behavior\n\n## Example responses\r\n\r\n### With $0.20 coupon\r\n\r\n```\r\n{\r\n...\r\n  \"line_items\": [\r\n    {\r\n      \"id\": 709,\r\n      \"name\": \"Beanie\",\r\n      \"product_id\": 16,\r\n      \"variation_id\": 0,\r\n      \"quantity\": 1,\r\n      \"tax_class\": \"\",\r\n      \"subtotal\": \"17.65\",\r\n      \"subtotal_tax\": \"0.35\",\r\n      \"total\": \"17.45\",\r\n      \"total_tax\": \"0.35\",\r\n      \"taxes\": [\r\n        {\r\n          \"id\": 2,\r\n          \"total\": \"0.34902\",\r\n          \"subtotal\": \"0.352941\"\r\n        }\r\n      ],\r\n      \"meta_data\": [],\r\n      \"sku\": \"woo-beanie\",\r\n      \"price\": 17.45098,\r\n      \"parent_name\": null\r\n    }\r\n  ],\r\n  \"tax_lines\": [\r\n    {\r\n      \"id\": 711,\r\n      \"rate_code\": \"TAX-1\",\r\n      \"rate_id\": 2,\r\n      \"label\": \"Tax\",\r\n      \"compound\": false,\r\n      \"tax_total\": \"0.35\",\r\n      \"shipping_tax_total\": \"0.30\",\r\n      \"rate_percent\": 2,\r\n      \"meta_data\": []\r\n    }\r\n  ]\r\n...\r\n}\r\n```\r\n\r\n### Without coupon\r\n\r\n```\r\n{\r\n...\r\n  \"line_items\": [\r\n    {\r\n      \"id\": 724,\r\n      \"name\": \"Beanie\",\r\n      \"product_id\": 16,\r\n      \"variation_id\": 0,\r\n      \"quantity\": 1,\r\n      \"tax_class\": \"\",\r\n      \"subtotal\": \"17.65\",\r\n      \"subtotal_tax\": \"0.35\",\r\n      \"total\": \"17.65\",\r\n      \"total_tax\": \"0.35\",\r\n      \"taxes\": [\r\n        {\r\n          \"id\": 2,\r\n          \"total\": \"0.353\",\r\n          \"subtotal\": \"0.353\"\r\n        }\r\n      ],\r\n      \"meta_data\": [],\r\n      \"sku\": \"woo-beanie\",\r\n      \"price\": 17.65,\r\n      \"parent_name\": null\r\n    }\r\n  ],\r\n  \"tax_lines\": [\r\n    {\r\n      \"id\": 725,\r\n      \"rate_code\": \"TAX-1\",\r\n      \"rate_id\": 2,\r\n      \"label\": \"Tax\",\r\n      \"compound\": false,\r\n      \"tax_total\": \"0.35\",\r\n      \"shipping_tax_total\": \"0.00\",\r\n      \"rate_percent\": 2,\r\n      \"meta_data\": []\r\n    }\r\n  ]\r\n...\r\n}\r\n```\r\n\r\n### With item price reduction by $0.20 to match coupon\r\n\r\n```\r\n{\r\n...\r\n  \"line_items\": [\r\n    {\r\n      \"id\": 746,\r\n      \"name\": \"Beanie but a bit cheaper\",\r\n      \"product_id\": 418,\r\n      \"variation_id\": 0,\r\n      \"quantity\": 1,\r\n      \"tax_class\": \"\",\r\n      \"subtotal\": \"17.45\",\r\n      \"subtotal_tax\": \"0.35\",\r\n      \"total\": \"17.45\",\r\n      \"total_tax\": \"0.35\",\r\n      \"taxes\": [\r\n        {\r\n          \"id\": 2,\r\n          \"total\": \"0.349\",\r\n          \"subtotal\": \"0.349\"\r\n        }\r\n      ],\r\n      \"meta_data\": [],\r\n      \"sku\": \"woo-beanie-1\",\r\n      \"price\": 17.45,\r\n      \"parent_name\": null\r\n    }\r\n  ],\r\n  \"tax_lines\": [\r\n    {\r\n      \"id\": 747,\r\n      \"rate_code\": \"TAX-1\",\r\n      \"rate_id\": 2,\r\n      \"label\": \"Tax\",\r\n      \"compound\": false,\r\n      \"tax_total\": \"0.35\",\r\n      \"shipping_tax_total\": \"0.00\",\r\n      \"rate_percent\": 2,\r\n      \"meta_data\": []\r\n    }\r\n  ]\r\n...\r\n}\r\n```\n\n### Steps to reproduce\n\n## Repro steps:\r\n1. Configure a store with a catch-all tax rate. I used 2%.\r\n2. Set `Prices entered with tax` to `Yes, I will enter prices inclusive of tax`.\r\n3. Place an order including a `Fixed cart discount` coupon for some amount. I tried with $0.20, $1, and $1.55.\r\n4. Fetch the order from the REST API\r\n5. Observe the fields in the list above for precision.\r\n\r\nN.B. Previously I thought that the `Display Prices in Shop` setting was responsible, but while verifying today that seemed not to be the case. It could be to do with the interplay between these two settings, but I can't reproduce that. If you're having difficulty verifying, changing these too and fro may help. I have verified on multiple test sites though.\r\n\r\n![tax settings](https://user-images.githubusercontent.com/2472348/168777399-42072860-73c9-485b-b19c-523c95fa307e.jpg)\n\n\n\n###\n\n","completion":" [1891051437]"}
{"prompt":"There's a well know bug that breaks product attribute filtering because of an issue with the product attribute lookup table which is well documented here:\r\n\r\nhttps://github.com/woocommerce/woocommerce/issues/32065\r\n\r\nA fix is still under testing here:\r\n\r\nhttps://github.com/woocommerce/woocommerce/pull/32893\r\n\r\nWhile waiting for the fix to ship in the next release, the current workaround consists in disabling the product attribute lookup table by unchecking the woocommerce_attribute_lookup_enabled setting.\n\n### Expected behavior\n\nThe unchecked checkbox for woocommerce_attribute_lookup_enabled option in Woocommerce > Settings > Products > Advanced should remain unchecked after any WooCommerce update.\n\n### Actual behavior\n\nWooCommerce enables the product attribute lookup table after any update.\n\n### Steps to reproduce\n\n1. Be sure your WooCommerce store is below version 6.5.1\r\n2. Be sure you're using filters by attributes somewhere\r\n3. Uncheck the woocommerce_attribute_lookup_enabled option in Woocommerce > Settings > Products > Advanced\r\n4. Delete transient and any woocommerce cache, just in case\r\n5. Check your filters in frontend: wow they work!\r\n6. Update WooCommerce to 6.5.1\r\n7. Check your filters in frontend: oh no! They're broken.\r\n8. Go to Woocommerce > Settings > Products > Advanced and notice that the checkbox is checked again :(\n\n\n\n###\n\n","completion":" [3943424824]"}
{"prompt":"Hi, \r\nThe next big update we have wp_wc_order_addresses. But the structure of this table still only have:\r\n\r\n- address_1\r\n- address_2\r\n- city\r\n- state\r\n- postcode\r\n- country\r\n\r\nHow about some country on the world have \"Ward, District\". And they must be use \"Ward, District\" on payment/shipping info?\r\n\r\nCan you add Ward, District Field for wp_wc_order_addresses in next update too?\r\n\r\nThanks\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [3834300886,468434635]"}
{"prompt":"It is not possible to filter messages in the function `check_cart_item_stock()` inside class-wc-cart.php. Other error messages are filterable in the function `add_to_cart()`. There shouldn't be a reason that the exact same error message types cannot be filtered in another function.\r\n\r\nTo change this:\r\n\r\n`$error->add( 'out-of-stock', sprintf( __( 'Sorry, we do not have enough \"%1$s\" in stock to fulfill your order (%2$s available). We apologize for any inconvenience caused.', 'woocommerce' ), $product->get_name(), wc_format_stock_quantity_for_display( $product->get_stock_quantity() - $held_stock, $product ) ) );`\r\n\r\nI have to hook into `woocommerce_check_cart_items` and get the notices from the session, and do a strpos-check to determine if I have the correct notice. It's prone to errors and should not be needed.\n\n### Describe alternatives you've considered\n\nAdd filters.\n\n### Additional context\n\nThe same goes for error messages that get thrown as ReserveStockException in ReserveStock.php and RouteException in CartController. It's confusing to have so many similar or identical error messages, where only some are filterable some of the time.\n\n###\n\n","completion":" [1891051436]"}
{"prompt":"* As of now, this is what we see when we try to create a product during new product flow: `&wc_onboarding_active_task=products&tutorial=true` -> https://d.pr/i/V1xCQM\r\n* Notice that there are no instructions for the downloadable file itself\r\n\r\n    ![image](https://user-images.githubusercontent.com/17475174/169206987-2c64935f-ca31-4e9a-8775-96007906d504.png)\r\n\r\nThe tour/tutorial/tips should include details about the downloadable files and configuring them along with details about the other product configuration options\n\n### Describe alternatives you've considered\n\nN/A\n\n### Additional context\n\nMoved from internal discussion: pbIJXs-1Qb-p2#comment-3923\n\n###\n\n","completion":" [3943424887]"}
{"prompt":"(Logged following a team discussion) as we make further progress, we should pro-actively consider potential backwards-compatibility concerns.\r\n\r\nFor example, we're building alternative implementations of the existing admin list table and order editor which will mimic the existing implementations in many ways: we want a high degree of compatibility, but might this create issues for extensions that are already deeply integrated here?\r\n\r\nLet's consider possible scenarios (though the above example mentions the admin UI, this issue is more general in nature than that) and think about mitigation strategies. \r\n\r\nExpected output is one or more RFCs.\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"In WooCommerce Dashboard/Analytcis, the total sales value is totally different from the on in '/wp-json/wc/v3/reports/sales' endpoint. Is there a way to get the value directly from an endpoint that reflects the exact same values in the Analytics dashboard?\n\n### Expected behavior\n\nThe total sales value needs to be same with the rest api value.\n\n### Actual behavior\n\nThere is a big difference between the analytics dashboard value and the rest api value.\n\n### Steps to reproduce\n\n<img width=\"1087\" alt=\"rest\" src=\"https://user-images.githubusercontent.com/72008989/169080760-b0d125ae-3665-47bf-9f17-7fe2c159cf7c.png\">\r\n\n\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"### Prerequisites\r\n\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\nAdmin's inbox note frontend currently only accepts `thumbnail` layout for images: https://github.com/woocommerce/woocommerce/blob/02ef6c534e6cefbc935731df5a0eb0b55867d8a5/packages/js/experimental/src/inbox-note/inbox-note.tsx#L161\r\n\r\nHowever, our backend code seems to accept `banner`: https://github.com/woocommerce/woocommerce/blob/02ef6c534e6cefbc935731df5a0eb0b55867d8a5/plugins/woocommerce/src/Admin/Notes/Note.php#L581\r\n\r\nWe should remove banner since it's wont be functional in frontend.\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"**User story:**\r\nAs a new merchant, I want to import sample products related to my industry, so that I can preview my store before my products are ready to add.\r\n\r\n**Design overview**\r\ncJQeyyhx9PraQrY3YAtCGM-fi-1517%3A156861\r\n\r\nHere you can find the images and the author for the following industries:\r\n- Clothing and accessories\r\n \r\n<img width=\"1547\" alt=\"image\" src=\"https://user-images.githubusercontent.com/98944206/168595164-ecd8426e-0afc-46f0-9eb5-af263d34ccf5.png\">\r\n\r\n- Beauty and health\r\n\r\n<img width=\"1707\" alt=\"image\" src=\"https://user-images.githubusercontent.com/98944206/168594976-55bdea20-5d64-4f8a-a5c1-9b4240fa116d.png\">\r\n\r\n- Electronics and computers\r\n\r\n<img width=\"1453\" alt=\"image\" src=\"https://user-images.githubusercontent.com/98944206/168595101-8bd4db37-edda-4cde-9db1-107739f225bb.png\">\r\n\r\n- Food and drinks\r\n\r\n<img width=\"1705\" alt=\"image\" src=\"https://user-images.githubusercontent.com/98944206/168595045-07bb62d7-3b2e-441c-b875-a73dd051a860.png\">\r\n\r\n\r\n**Acceptance criteria**\r\n\r\nFor each vertical:\r\n- [ ] New sample data file\r\n- [ ] 12 products in file\r\n- [ ] Products have generic names/description but realistic data for price/weight/stock/etc\r\n- [ ] Product photos are sourced from CC0-licensed images on Pexels\r\n- [ ] Product photos are credited in the product description.\r\n- [ ] Product photos are hosted from https://woocommercecore.mystagingwebsite.com/\r\n\n\n###\n\n","completion":" [3943424887]"}
{"prompt":"I wrote the title update and woocommerce error, but in reality the problem is more extensive.\r\n\r\nThere is no update in Woocommerce > Analysis settings for about 2 months. In other words, 20-30 orders are received during the day, but everything is 0 in the field of statistics.\r\n\r\nWoocommerce > Analytics dashboard,\r\n\r\nhttps://ibb.co/xfvypVz\r\n\r\nother than that, MailChimp synchronization stopped (member, product and analysis etc.)\r\n\r\nFinally, the wordpress database update came, I tried to update it, but unfortunately it went into an endless process!\r\n\r\nImage https://prnt.sc/L6fHvLtFhxGK\r\n\r\nI would greatly appreciate it if you could help me figure out what the problem might be.\r\n\r\nI am attaching images of the error as an attachment.`\n\n### Expected behavior\n\nsmooth running of analysis\r\n\n\n### Actual behavior\n\nWoocommerce > Analytics area is not working. Mailchimb sync not working.\n\n### Steps to reproduce\n\n![Screenshot_3](https://user-images.githubusercontent.com/105641985/168577528-233ee9a3-6a6a-45ed-a3ce-b0533c1552a6.jpg)\r\n![Screenshot_4](https://user-images.githubusercontent.com/105641985/168577531-cd586e49-fa0f-4f44-88d7-9de8697a0e6d.jpg)\r\n![Screenshot_2](https://user-images.githubusercontent.com/105641985/168577532-ce65430c-e8ab-418e-bdf5-13f64edd876a.png)\r\n\n\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"Yay!\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"Perform test via API, admin UI, etc\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"Implement enabling and disabling of COT based on compatibility with installed extensions.\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"Make sure the compatibility between extensions and COT is communicated to the user via notices or inbox notifications, etc.\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"Based on the solution proposed in #32841, implement caching for the COT datastore. This issue scope covers:\r\n1. Invalidating caches on update/delete.\r\n2. Setting caches on read/create.\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"Implement getters and setters for COT datastore.\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"Implement coupon interactions (add/remove/recalculate) from order's perspective. \n\n###\n\n","completion":" [3834300886]"}
{"prompt":"In the context of COT, when orders get processed, ensure the stock levels are updated accordingly, products are blocked during checkout/payment, etc.\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"Starting with WooCommerce 6.4.0, most of the WooCommerce admin pages trigger a PHP warning when `$group === 'general'` at  `wp-content/plugins/woocommerce/packages/woocommerce-admin/src/Loader.php:1048`. The `woocommerce_settings-general` filter has not been added, which causes `WC_REST_Setting_Options_V2_Controller::get_group_settings()` to return a `WP_Error` object.\n\n### Expected behavior\n\n1. The `woocommerce_settings-general` filter should be added.\r\n1. `Automattic\\WooCommerce\\Admin\\Loader::add_component_settings()` should skip the group if `is_wp_error( $group_settings )`.\r\n\n\n### Actual behavior\n\n```\r\nPHP Warning:  Undefined array key \"id\" in C:\\wordpress-develop\\src\\wp-content\\plugins\\woocommerce\\packages\\woocommerce-admin\\src\\Loader.php on line 1048\r\nPHP Stack trace:\r\nPHP   1. {main}() C:\\wordpress-develop\\src\\wp-admin\\admin.php:0\r\nPHP   2. require_once() C:\\wordpress-develop\\src\\wp-admin\\admin.php:297\r\nPHP   3. do_action($hook_name = 'admin_print_footer_scripts') C:\\wordpress-develop\\src\\wp-admin\\admin-footer.php:95\r\nPHP   4. WP_Hook->do_action($args = [0 => '']) C:\\wordpress-develop\\src\\wp-includes\\plugin.php:474\r\nPHP   5. WP_Hook->apply_filters($value = '', $args = [0 => '']) C:\\wordpress-develop\\src\\wp-includes\\class-wp-hook.php:331\r\nPHP   6. Automattic\\WooCommerce\\Blocks\\Assets\\AssetDataRegistry->enqueue_asset_data('') C:\\wordpress-develop\\src\\wp-includes\\class-wp-hook.php:307\r\nPHP   7. Automattic\\WooCommerce\\Blocks\\Assets\\AssetDataRegistry->execute_lazy_data() C:\\wordpress-develop\\src\\wp-content\\plugins\\woocommerce\\packages\\woocommerce-blocks\\src\\Assets\\AssetDataRegistry.php:359\r\nPHP   8. Automattic\\WooCommerce\\Internal\\Admin\\WCAdminSharedSettings->Automattic\\WooCommerce\\Internal\\Admin\\{closure:C:\\wordpress-develop\\src\\wp-content\\plugins\\woocommerce\\packages\\woocommerce-admin\\src-internal\\Admin\\WCAdminSharedSettings.php:60-62}() C:\\wordpress-develop\\src\\wp-content\\plugins\\woocommerce\\packages\\woocommerce-blocks\\src\\Assets\\AssetDataRegistry.php:258\r\nPHP   9. apply_filters($hook_name = 'woocommerce_admin_shared_settings', $value = []) C:\\wordpress-develop\\src\\wp-content\\plugins\\woocommerce\\packages\\woocommerce-admin\\src-internal\\Admin\\WCAdminSharedSettings.php:61\r\nPHP  10. WP_Hook->apply_filters($value = [], $args = [0 => []]) C:\\wordpress-develop\\src\\wp-includes\\plugin.php:189\r\nPHP  11. Automattic\\WooCommerce\\Admin\\Loader::add_component_settings($settings = []) C:\\wordpress-develop\\src\\wp-includes\\class-wp-hook.php:307\r\nPHP Warning:  Undefined array key \"value\" in C:\\wordpress-develop\\src\\wp-content\\plugins\\woocommerce\\packages\\woocommerce-admin\\src\\Loader.php on line 1048\r\nPHP Stack trace:\r\nPHP   1. {main}() C:\\wordpress-develop\\src\\wp-admin\\admin.php:0\r\nPHP   2. require_once() C:\\wordpress-develop\\src\\wp-admin\\admin.php:297\r\nPHP   3. do_action($hook_name = 'admin_print_footer_scripts') C:\\wordpress-develop\\src\\wp-admin\\admin-footer.php:95\r\nPHP   4. WP_Hook->do_action($args = [0 => '']) C:\\wordpress-develop\\src\\wp-includes\\plugin.php:474\r\nPHP   5. WP_Hook->apply_filters($value = '', $args = [0 => '']) C:\\wordpress-develop\\src\\wp-includes\\class-wp-hook.php:331\r\nPHP   6. Automattic\\WooCommerce\\Blocks\\Assets\\AssetDataRegistry->enqueue_asset_data('') C:\\wordpress-develop\\src\\wp-includes\\class-wp-hook.php:307\r\nPHP   7. Automattic\\WooCommerce\\Blocks\\Assets\\AssetDataRegistry->execute_lazy_data() C:\\wordpress-develop\\src\\wp-content\\plugins\\woocommerce\\packages\\woocommerce-blocks\\src\\Assets\\AssetDataRegistry.php:359\r\nPHP   8. Automattic\\WooCommerce\\Internal\\Admin\\WCAdminSharedSettings->Automattic\\WooCommerce\\Internal\\Admin\\{closure:C:\\wordpress-develop\\src\\wp-content\\plugins\\woocommerce\\packages\\woocommerce-admin\\src-internal\\Admin\\WCAdminSharedSettings.php:60-62}() C:\\wordpress-develop\\src\\wp-content\\plugins\\woocommerce\\packages\\woocommerce-blocks\\src\\Assets\\AssetDataRegistry.php:258\r\nPHP   9. apply_filters($hook_name = 'woocommerce_admin_shared_settings', $value = []) C:\\wordpress-develop\\src\\wp-content\\plugins\\woocommerce\\packages\\woocommerce-admin\\src-internal\\Admin\\WCAdminSharedSettings.php:61\r\nPHP  10. WP_Hook->apply_filters($value = [], $args = [0 => []]) C:\\wordpress-develop\\src\\wp-includes\\plugin.php:189\r\nPHP  11. Automattic\\WooCommerce\\Admin\\Loader::add_component_settings($settings = []) C:\\wordpress-develop\\src\\wp-includes\\class-wp-hook.php:307\r\n```\n\n### Steps to reproduce\n\n1. In the WordPress admin menu, go to WooComerce -> Settings.\r\n\n\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"undefinedAs you develop your new tables, I urge you to read up on MySQL InnoDB clustered indexes. \r\nhttps://dev.mysql.com/doc/refman/8.0/en/innodb-index-types.html\r\n\r\n In InnoDB, the whole table's data is stored behind the primary key. There's no separate table data structure. So, you can make the tables more performant by building a composite primary key that can be used to satisfy your most common, or your worst-performing, queries.  \r\n\r\nPrimary Keys serve two purposes.\r\n\r\n1. they uniquely identify the rows of the table. That's why many tables use the autoincrementing ID as the PK.\r\n\r\n2. they provide rapid access to the table: WHERE filters that use the PK have immediate access to the table's data, but filters using other indexes must then look up the data using the PK.   This purpose of PKs is a solid part of RDBMS technology, but often not used. It's used by making the PK into a multicolumn index.\r\n\r\nFor example, on wp_wc_orders. You might define  the PRIMARY KEY as `(post_id, status, id)` rather than just `(id)`. That choice of columns means lookup patterns like\r\n\r\n            SELECT * FROM wp_wc_orders WHERE post_id = ? AND status = 'pending'\r\n            SELECT * FROM wp_wc_orders WHERE post_id = ?\r\n\r\nwould get rapid access via the PK for that query pattern. You'll have to choose the the actual PK based on your actual query patterns if you adopt this suggestion.\r\n\r\nIf your most common access filter pattern were `SELECT * FROM wp_wc_orders WHERE status = 'pending'` you'd flip the order of the columns in the PK to  `(status, post_id, id)`  \r\n\r\nThe inclusion of id as the last column in the composite guarantees the PK's uniqueness.\r\n\r\nTo make the autoincrementing id work correctly, you'll also have to put a UNIQUE KEY id (id) on the table. \r\n\r\n\r\n\r\n### Describe alternatives you've considered\r\n\r\n_No response_\r\n\r\n### Additional context\r\n\r\nI've been proving out this concept with https://wordpress.org/plugins/index-wp-mysql-for-speed/\r\n\r\nThe writeup about the keys is here.  https://www.plumislandmedia.net/index-wp-mysql-for-speed/tables_and_keys/\r\n\r\n\n\n###\n\n","completion":" [3834300886]"}
{"prompt":"Hi,\r\n\r\nI'm having a problem with Scheduled Actions. \r\n\r\n- Scheduled Date is set 0000-00-00 00:00:00 and it clones many actions. Please see this screenshot [https://prnt.sc/26jyi2k](https://prnt.sc/26jyi2k)\r\n- Hook is cloned even Scheduled Date is set correct. Please see this screenshot [https://prnt.sc/26jyhy6](https://prnt.sc/26jyhy6)\r\n\r\nPlease check and fix this issue.\r\n\r\nThank you!\n\n### Expected behavior\n\nStop clone Scheduled Actions!\n\n### Actual behavior\n\nIt creates many actions which are the same\n\n### Steps to reproduce\n\nUpdate WooCommerce\n\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"Issue woocommerce/woocommerce-admin#4314 referenced one particular API call whose error message gets put into a Snackbar via `createNotice()`. As of PR woocommerce/woocommerce-admin#8173 it's possible to preserve tags in messages displayed in a Snackbar if you pass `{ __unstableHTML: true }` as a third parameter to `createNotice()`. This only affects the specific Sample Products Import case, so any other API calls that display server-provided messages in a `Snackbar` might need the same change.\r\n\r\nFrom @joshuatf's review:\r\n\r\nJust noting that we still need a follow-up for this.  This solves the issue in this task, but we would need to do this in all REST API calls since this error has the potential to pop up in any of those.\r\n\r\nI would love a more catch-all solution, but this may be the best to handle this.\r\n\r\n_Originally posted by @joshuatf in https://github.com/woocommerce/woocommerce-admin/issues/8173#issuecomment-1021499624_\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"As of PR woocommerce/woocommerce-admin#8173 it's possible to include markup in Snackbar error notices, though the only place it's currently happening is on server-side errors importing sample products. This can result in some odd padding if the error message has a `p` tag in it.\r\n\r\n![Screen Shot 2022-01-25 at 13 19 34](https://user-images.githubusercontent.com/890809/151044512-dd7d3184-da45-4569-baad-fac834a24f5e.png)\r\n\r\nFrom @louwie17's review:\r\n\r\nI was wondering if we should remove the styling on a `p` tag within the snackbar component (only the direct children). Something like this:\r\n```\r\ncomponents-snackbar__content > div > p { margin: 0; padding: 0 }\r\n```\r\n\r\nI am not totally set on this, as it doesn't seem like a huge issue, just me being slightly picky on the extra spacing.\r\n\r\nAlso for reference I added this filter to my `mu-plugin` to product the error:\r\n\r\n```\r\nadd_filter('woocommerce_product_csv_importer_class', function() {\r\n    throw new \\RuntimeException();\r\n    return '';\r\n});\r\n```\r\n\r\n_Originally posted by @louwie17 in https://github.com/woocommerce/woocommerce-admin/pull/8173#pullrequestreview-862664116_\n\n###\n\n","completion":" [3943104021,3943425720]"}
{"prompt":"We need to have test coverage for the following key tracks events. Please add your GitHub username to the table when you start and complete implementing coverage.\r\n\r\n¬† | ¬† | Started (username) | Completed (username)\r\n-- | -- | -- | --\r\nStore profiler | ¬† | ¬† | ¬†\r\nEvent name | Description | ¬† | ¬†\r\nwcadmin_storeprofiler_store_details_continue | Step 1 proceed | ¬† | ¬†\r\nwcadmin_storeprofiler_store_details_skip | Step 1 skip | ¬† | ¬†\r\nwcadmin_storeprofiler_store_industry_continue | Step 2 proceed | ¬† | ¬†\r\nwcadmin_storeprofiler_store_product_type_continue | Step 3 proceed | ¬† | ¬†\r\nwcadmin_storeprofiler_store_business_details_continue_variant | Step 4.1 proceed | ¬† | ¬†\r\nwcadmin_storeprofiler_store_business_features_continue | Step 4.2 proceed | ¬† | ¬†\r\nwcadmin_storeprofiler_store_theme_choose | Step 5 proceed | ¬† | ¬†\r\nwcadmin_storeprofiler_complete | Profiler completion | ¬† | ¬†\r\nwcadmin_storeprofiler_step_complete | Individual step completion | ¬† | ¬†\r\n¬† | ¬† | ¬† | ¬†\r\nTask list | ¬† | ¬† | ¬†\r\nEvent name | Description | ¬† | ¬†\r\nwcadmin_tasklist_view | Task List view | ¬† | ¬†\r\nwcadmin_task_view | Task view | ¬† | ¬†\r\nwcadmin_tasklist_click | Task click | ¬† | ¬†\r\nwcadmin_tasklist_task_completed | Task completed | ¬† | ¬†\r\nwcadmin_tasklist_completed | Task List dismiss | ¬† | ¬†\r\nwcadmin_tasklist_add_product | Add product task | ¬† | ¬†\r\nwcadmin_tasklist_payment_install_method | Set up payments task - install | ¬† | ¬†\r\nwcadmin_tasklist_payment_setup | Set up payments task click - \"set up\" | ¬† | ¬†\r\nwcadmin_tasklist_payment_connect_method | Set up payments task - connect method | ¬† | ¬†\r\nwcadmin_tasklist_tax_view_options | Tax task - view options | ¬† | ¬†\r\nwcadmin_tasklist_tax_select_option | Tax task - select option | ¬† | ¬†\r\nwcadmin_tasklist_tax_setup_automated_proceed | Tax task - enable automated taxes | ¬† | ¬†\r\nwcadmin_tasklist_shipping_set_costs | Shipping task - set costs | ¬† | ¬†\r\nwcadmin_tasklist_shipping_label_printing | Shipping task - enable printing labels | ¬† | ¬†\r\nwcadmin_tasklist_marketing_install | Marketing task - get started | ¬† | ¬†\r\nwcadmin_marketing_manage | Marketing task - manage | ¬† | ¬†\r\nwcadmin_tasklist_appearance_import_demo | Personalize task - import content | ¬† | ¬†\r\nwcadmin_tasklist_appearance_upload_logo | Personalize task - upload logo | ¬† | ¬†\r\nwcadmin_tasklist_appearance_create_homepage | Personalize task - create homepage | ¬† | ¬†\r\n¬† | Personalize task - finish/add notice | ¬† | ¬†\r\n¬† | ¬† | ¬† | ¬†\r\nStore management | ¬† | ¬† | ¬†\r\nEvent name | Description | ¬† | ¬†\r\nwcadmin_page_view | Page view | ¬† | ¬†\r\nwcadmin_inbox_note_view | Inbox view | ¬† | ¬†\r\nwcadmin_inbox_action_click | Inbox click | ¬† | ¬†\r\nwcadmin_orders_edit_status_change | Update order status | ¬† | ¬†\r\nwcadmin_orders_view | View orders screen | ¬† | ¬†\r\nwcadmin_orders_view_search | Orders search | ¬† | ¬†\r\nwcadmin_settings_view | Settings page view | ¬† | ¬†\r\nwcadmin_settings_change | Settings change | ¬† | ¬†\r\nwcadmin_product_add_publish | Product publish | ¬† | ¬†\r\nwcadmin_product_import_complete | Product import finish | ¬† | ¬†\r\nwcadmin_product_update | Product update | ¬† | ¬†\r\nwcadmin_products_view | Product view | ¬† | ¬†\r\nwcadmin_products_search | Product search | ¬† | ¬†\r\nwcadmin_ces_feedback | CES feedback | ¬† | ¬†\r\nwcadmin_ces_view | CES view | ¬† | ¬†\r\nwcadmin_analytics_filter | Analytics filter | ¬† | ¬†\r\nwcadmin_activity_panel_open | Activity panel open | ¬† | ¬†\r\nwcadmin_activity_panel_orders_orders_begin_fulfillment | Activity panel - begin fulfillment | ¬† | ¬†\r\nwcadmin_activity_panel_stock_update_stock | Activity panel - update stock | ¬† | ¬†\r\n\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"When the `href` (= `https://www.example.com/wp/wp-admin/?service-worker&wc-hide-notice=update&_wc_notice_nonce=[...]`) of the `Thank you` button after a successful database update/maintenance task is followed (e.g. when opening it in a new tab), a JavaScript snippet is sent as response (a white page with the JavaScript text only).\r\n\r\n````\r\n/* global self */\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/skipWaiting\r\nself.addEventListener( 'install', function ( event ) {\r\n\tevent.waitUntil( self.skipWaiting() );\r\n} );\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/API/Clients/claim\r\nself.addEventListener( 'activate', function ( event ) {\r\n\tevent.waitUntil( self.clients.claim() );\r\n} );\r\n\r\n// Necessary for Chrome to show the install button.\r\nself.addEventListener( 'fetch', function () {} );\r\n````\r\n\n\n### Expected behavior\n\nThe `Thank you` button `href` returns back to the original page on which this message was shown, dismissing it on the server-side.\n\n### Actual behavior\n\nA JavaScript snippet is sent as response, the backend is missing (white page with the JavaScript text only).\n\n### Steps to reproduce\n\n1. Trigger a database update/maintenance task and let it complete successfully.\r\n2. Follow the `href` of the `Thank you` button (e.g. by open the link in a new tab).\r\nNote the response with a JavaScript snippet (JavaScript text on a white page).\n\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"For Twenty Twenty-two theme, \"Remember me\" checkbox for \"Login to existing account\" is misaligned on \"Checkout\" page.\r\n\r\n### Expected behavior\r\n\r\nFor Twenty Twenty-two theme, \"Dropdown\" option should be properly aligned on on \"Variable Product\" page.\r\n\r\n### Actual behavior\r\n\r\nFor Twenty Twenty-two theme,\"Dropdown\" option is misaligned on \"Variable Product\" page.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using JN site.\r\n2. Install and activate all the required plugins\r\n3. Complete the onboarding setup wizard.\r\n4. Select Twenty Twenty Two theme.\r\n5. Add some products.\r\n6. Go to shop page on frontend.\r\n7. Select any \"Variable product\".\r\n8. Observe that \"Dropdown\" option is misaligned on \"Variable Product\" page.\r\n\r\n## Screenshot:\r\n\r\n![3#31686](https://user-images.githubusercontent.com/41110392/150154970-400221c9-8894-4de5-8122-afd23f04f7b3.jpg)\r\n\r\n\r\n\n\n###\n\n","completion":" [1891051447,1891051456,1891051461]"}
{"prompt":"For Twenty Twenty-two theme,\"Remember me\" checkbox for \"Login to existing account\" is misaligned on \"Checkout\" page.\r\n\r\n### Expected behavior\r\n\r\nFor Twenty Twenty-two theme, \"Remember me\" checkbox for \"Login to existing account\" should be properly aligned on \"Checkout\" page.\r\n\r\n### Actual behavior\r\n\r\nFor Twenty Twenty-two theme,\"Remember me\" checkbox for \"Login to existing account\" is misaligned on \"Checkout\" page.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using JN site.\r\n2. Install and activate all the required plugins\r\n3. Complete the onboarding setup wizard.\r\n4. Select Twenty Twenty Two theme.\r\n5. Create some products.\r\n6. Go to frontend and add some products in cart.\r\n7. Go to \"Checkout\" page and click on \"click here to login\"\r\n8. Observe that \"Remember me\" checkbox for \"Login to existing account\" is misaligned on \"Checkout\" page.\r\n\r\n### Screenshot:\r\nFor Chrome:\r\n![1#31685](https://user-images.githubusercontent.com/41110392/150153321-612e6cae-7f6f-47dd-ab4f-754ba26bb63a.jpg)\r\n\r\nFor Firefox:\r\n![2#31685](https://user-images.githubusercontent.com/41110392/150153332-d96224b5-7051-48b0-8d3d-d2b24b0d41fa.jpg)\r\n\r\n\r\n\n\n###\n\n","completion":" [1891051440,1891051447]"}
{"prompt":"4686173-zen\r\n\r\nUser here says that they have an external system that updates product stock via the API. When the stock goes below the low or no stock threshold, they do *not* receive an email. \r\n\r\n@vedanshujain [confirmed this was a bug](https://a8c.slack.com/archives/C7U3Y3VMY/p1642191794037300) and not intentional, hence this bug report.\n\n### Expected behavior\n\nLow stock email should be triggered via API when stock goes below the low stock threshold.\n\n### Actual behavior\n\nUser mentioned:\r\n\r\n>  I have tested over API via postman via this call:\r\n> https://visitsiberia.voxop.dk/wp-json/wc/v3/products/16440?stock_quantity=0\r\n> This does write down stock but does not trigger \"sold out\" or \"low\r\n> stock\" emails.\n\n### Steps to reproduce\n\n`wc_maybe_reduce_stock_levels ()` (which eventually fires off the email) is only hooked into order-related actions here: https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/includes/wc-stock-functions.php#L112-L115\n\n\n\n###\n\n","completion":" [1891051461,1891051471,2258932484]"}
{"prompt":"Is there any option to remove the zero dollar orders in WooCommerce Analytics? I don't see relevant settings at Analytics > Settings\n\n###\n\n","completion":" [3943104021,3943425133]"}
{"prompt":"The [order data store](https://github.com/woocommerce/woocommerce/blob/3611d4643791bad87a0d3e6e73e031bb80447417/plugins/woocommerce/includes/data-stores/abstract-wc-order-data-store-cpt.php#L379) fetches the `order_item_type`, `order_item_id` , `order_id`, and `order_item_name`  when querying the order items for a particular order.\r\n\r\nEach found row is then cached as the item. but then when the individual item is read, only the `order_id`, and `order_item_name` are [queried and cached](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/includes/data-stores/abstract-wc-order-item-type-data-store.php#L130).\r\n\r\nIs there a reason to cache different values depending on how the data is fetched?\r\n\r\nI wasn't sure if this was a bug, but it seemed strange to me that the cached values would be different.\n\n### Expected behavior\n\nI would expect to cache the same values.\n\n### Actual behavior\n\nSome fields are cached when the order Items are read in the order data store. If an individual order item is read, different values are cached.\n\n### Steps to reproduce\n\nn/a\n\n\n\n###\n\n","completion":" [2190477857]"}
{"prompt":"### Description\r\nWhen creating or editing an order, users can see a section at the bottom (a postbox component) for managing downloadable product permissions. This section stores the different downloadable product permissions that users want to add to the order. Both the \"Downloadable product permissions\" section and each permission (inside the section) have a toggle button, so that the components can be collapsed or expanded. If users click the toggle button of a single downloadable product permission, the whole \"Downloadable product permissions\" section will be toggled. I expect this section to be toggled only when we click the section's toggle button, not also the children's toggle button.\r\n\r\n### To Reproduce\r\n1. Create a downloadable product.\r\n2. Attempt to create an order.\r\n3. In the order page, go down to the \"Downloadable product permissions\" section.\r\n4. Find the downloadable product you created previously and click the \"Grant access\" button.\r\n5. Ensure there is a new permission for that product.\r\n6. Click the toggle button of the permission so that the permission details are collapsed or expanded.\r\n\r\n### Actual behavior\r\nThe whole \"Downloadable product permissions\" section is collapsed.\r\n\r\n### Video\r\nhttps://user-images.githubusercontent.com/45979455/149621658-c3a92ad0-d56c-4e12-9db1-a12347e4835b.mp4\r\n\r\n### Expected behavior\r\nOnly the permission details are collapsed / expanded (depending on the toggle state), and the \"Downloadable product permissions\" section isn't collapsed or expanded, since we are not clicking the toggle button of that section.\r\n\r\n### Desktop\r\n* Windows 11 Pro 21H2 (64 bits)\r\n* Google Chrome 96.0.4664.110 (64 bits)\r\n* WordPress 5.8.2\r\n* WooCommerce 6.0.0\r\n* PHP 7.4.27\r\n\n\n###\n\n","completion":" [1891051458]"}
{"prompt":"### Description\r\nWhen editing orders, if you go to the \"Downloadable product permissions\" section and click the \"Grant access\" button without selecting any downloadable product, a \"-1\" is rendered in the component.\r\n\r\n### To Reproduce\r\n1. Create an order.\r\n2. Open the order and go to the \"Downloadable product permissions\" section at the bottom.\r\n3. Make sure you have not searched any product.\r\n4. Click the \"Grant access\" button.\r\n\r\n### Actual behavior\r\nA text with the value `-1` appears in the component.\r\n\r\n### Video\r\nhttps://user-images.githubusercontent.com/45979455/149620893-0c46e051-6a58-412c-a33d-3af6972940d2.mp4\r\n\r\n### Expected behavior\r\nI can see 3 expected behaviours, so this would be open to discussion:\r\n- Nothing should happen.\r\n- Users should be notified that they need to enter a valid downloadable product so that they can grant access.\r\n- The \"Grant access\" button is disable is no product is entered.\r\n\r\n### Desktop\r\n* Windows 11 Pro 21H2 (64 bits)\r\n* Google Chrome 96.0.4664.110 (64 bits)\r\n* WordPress 5.8.2\r\n* WooCommerce 6.0.0\r\n* PHP 7.4.27\r\n\n\n###\n\n","completion":" [1891051458]"}
{"prompt":"### Context\r\nWhen editing an order, I was able to add several download product permissions for the same downloadable product. I checked the title and download url were exactly the same in all these duplicated downloadable product permissions, and this looks superfluous to me.\r\n\r\nI can see the point of letting users add multiple download permissions for the same product in the same order. \r\n\r\nBenefits:\r\n - If the number of downloads limit has been exceeded and merchants want to add more, they can just add another permission with another number of downloads.\r\n - If the download has expired, merchants can add another permission with another expiration date.\r\n\r\nDrawbacks:\r\n- Merchants need to have under control all the order's downloadable product permissions, because if there are multiple permissions for the same product in the same order, they might clash and cause unexpected behaviours. Keeping this situation under control when you have several downloadable products in the same order - each one with several permissions - could be messy.\r\n\r\nThere is a way of keeping these benefits and removing the drawback.\r\n\r\n### Improvement suggestion\r\nWe could restrict merchants to add only **one** downloadable product permission for the same product in the same order. This way they just need to **update** the permission's number of downloads or the expiration date to extend the download capability and cover the benefits mentioned above. Also, this way, the drawback exposed earlier would be removed, as there wouldn't be any place for multiple downloadable product permissions for the same product in the same order.\r\n\r\n### Priority\r\nThings just work right now, so I'd say this could be a medium-low priority enhancement. Probably a low one if there are more urgent things to do.\r\n\r\n### Additional context\r\nVideo of the current behaviour (explained in the Context section):\r\nhttps://user-images.githubusercontent.com/45979455/149620167-2d25092f-f783-45d0-a3c2-76202d770d3d.mp4\r\n\r\n\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"### Context\r\nWhen users skip the Setup Wizard in the first page (Store Details), they can start it later again, but it's not trivial finding out how to do so. We could think about ways to ease that step and improve the user experience.\r\n\r\n### Improvement suggestion\r\nWhen users attempt to skip the wizard, it would be interesting showing them a dialog explaining how they can start the wizard again (or providing them the link to the [documentation](https://woocommerce.com/document/woocommerce-setup-wizard/#reusing-the-setup-wizard)).\r\n\r\n### Alternative improvement suggestion\r\nAnother approach would be showing in the dialog suggested in the improvement above how to start the wizard again by clicking the \"Store Details\" task in the Admin/Home page. \r\n\r\nMentioning both flows in the dialog would be also a valid option.\r\n\r\n### Priority\r\nIt's not a bug and it's a minor potential improvement of an existing feature, I'd say it's low priority.\r\n\r\n### Additional context\r\nIn a nutshell, the process of starting again the Setup Wizard is already documented in WooCommerce's site. The improvement request is just about letting users find more easily that piece of documentation.\r\n\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"### Prerequisites\r\n\r\n- [X] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [ ] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\nAfter installing the dummy data using WordPress Importer plugin, when user visits the products (variable) it throws PHP notices & the product gallery images didn't show properly.\r\n\r\nBut, if the user visits that variable product's edit section, update the products and revisit the front end, then the issue is gone.\r\nThe PHP notice is appeared in multiple lines inside the `wc_get_gallery_image_html` function code.\r\n\r\nHere are the sample of that notices : \r\n\r\n<details>\r\n\r\n`PHP Notice:  Trying to access array offset on value of type bool in H:\\REDQ\\Themes\\instafood\\wp-content\\plugins\\woocommerce\\includes\\wc-template-functions.php on line 1634`\r\n`PHP Notice:  Trying to access array offset on value of type bool in H:\\REDQ\\Themes\\instafood\\wp-content\\plugins\\woocommerce\\includes\\wc-template-functions.php on line 1635`\r\n`PHP Notice:  Trying to access array offset on value of type bool in H:\\REDQ\\Themes\\instafood\\wp-content\\plugins\\woocommerce\\includes\\wc-template-functions.php on line 1636`\r\n`PHP Notice:  Trying to access array offset on value of type bool in H:\\REDQ\\Themes\\instafood\\wp-content\\plugins\\woocommerce\\includes\\wc-template-functions.php on line 1637`\r\n`PHP Notice:  Trying to access array offset on value of type bool in H:\\REDQ\\Themes\\instafood\\wp-content\\plugins\\woocommerce\\includes\\wc-template-functions.php on line 1646`\r\n`PHP Notice:  Trying to access array offset on value of type bool in H:\\REDQ\\Themes\\instafood\\wp-content\\plugins\\woocommerce\\includes\\wc-template-functions.php on line 1646`\r\n`PHP Notice:  Trying to access array offset on value of type bool in H:\\REDQ\\Themes\\instafood\\wp-content\\plugins\\woocommerce\\includes\\wc-template-functions.php on line 1634`\r\n`PHP Notice:  Trying to access array offset on value of type bool in H:\\REDQ\\Themes\\instafood\\wp-content\\plugins\\woocommerce\\includes\\wc-template-functions.php on line 1635`\r\n`PHP Notice:  Trying to access array offset on value of type bool in H:\\REDQ\\Themes\\instafood\\wp-content\\plugins\\woocommerce\\includes\\wc-template-functions.php on line 1636`\r\n`PHP Notice:  Trying to access array offset on value of type bool in H:\\REDQ\\Themes\\instafood\\wp-content\\plugins\\woocommerce\\includes\\wc-template-functions.php on line 1637`\r\n`PHP Notice:  Trying to access array offset on value of type bool in H:\\REDQ\\Themes\\instafood\\wp-content\\plugins\\woocommerce\\includes\\wc-template-functions.php on line 1646`\r\n`PHP Notice:  Trying to access array offset on value of type bool in H:\\REDQ\\Themes\\instafood\\wp-content\\plugins\\woocommerce\\includes\\wc-template-functions.php on line 1646`\r\n\r\n</details>\r\n\r\n#### [Steps to replicate](https://github.com/woocommerce/woocommerce/issues/31646/#issuecomment-1017076953)\r\n\r\n---\r\n\r\n**I also have a proposed solution to solve this problem for the product front-end area. If we rewrite this code in the below format then the image broken issue won't be appear.**\r\n\r\n- Set the fallaback condition properly. \r\nfor example, inside file `woocommerce > includes > wc-template-functions.php` on line number 1634 the data-src was printed directly from array rather than checking the validity if array data is exists or not.\r\n\r\ncurrent code `'data-src'  => esc_url($full_src[0]),`\r\n\r\nproposed code `'data-src' => !empty($full_src) ? esc_url($full_src[0]) : [FALLBACK_VALUE_NEED_TO_BE_SET],`\r\n\r\nin the area _[FALLBACK_VALUE_NEED_TO_BE_SET]_ the desired value (e.g. string, array) should be given to avoid the issue.\r\n\r\n\r\n### Expected behavior\r\n\r\n- Product gallery images should not be shown if there are php notice which broken the gallery image html. As the image src didn't load/find properly.\r\n\r\n\r\nI also have a proposed solution given above in the **_Describe the bug_** area.\r\n\r\n### Actual behavior\r\n\r\n- The image gallery was shown with broken markup. In the markup it was shown like this `<img src=\"\" draggable=\"false\">` which don't have the image links & it leads to a broken gallery area.\r\n\r\n### Steps to reproduce\r\n\r\n1. Install WordPress & WooCommerce\r\n2. `define('WP_DEBUG', true);` in the wp-config.php file\r\n3. `define('WP_DEBUG_LOG', true);` in the wp-config.php file.\r\n2. Import dummy content\r\n3. Visit the variable products from the dummy content (e.g. Hoodie, V-Neck T-Shirt) and the product gallery area isn't displayed accordingly.\r\n\r\n\n\n###\n\n","completion":" [1891051454,1891051461]"}
{"prompt":"When the Lebanese Pound is selected as a store's currency, if the currency position is set to `left`, `left with space`, `right`, or `right with space`, the currency symbol placement is not applied consistently.\r\n\r\n### Expected behavior\r\n\r\nThe `ŸÑ.ŸÑ` symbol should adhere to the currency position setting, and the cart total and currency symbol should be listed separately from the cart contents in the cart widget.\r\n\r\n### Actual behavior\r\n\r\nIt always appears on the right in the shopping cart widget (even if `left` or `left with space` is selected), but it always appears on the left on the `/cart/` page, even if `right` or `right with space` is selected.\r\n\r\nAdditionally, on default themes like Storefront, the cart total and the number of items in cart are spliced together, making it difficult to read how many items are in the cart (e.g. `15.00 1 ŸÑ.ŸÑ item` instead of `15.00 ŸÑ.ŸÑ` and `1 item`.\r\n\r\n### Steps to reproduce\r\n\r\n1. Change the currency to Lebanese Pound.\r\n2. Choose any currency position, and make note.\r\n3. Enable the Storefront theme.\r\n4. Add a product to the cart.\r\n5. Navigate to the cart page.\r\n6. Notice that the currency symbol positions do not match, regardless of what currency position is set in WooCommerce > Settings.\r\n7. Notice that the cart widget at the top of the page will read `[Cart Price]` `[Number of products in the cart]` `ŸÑ.ŸÑ` `item(s)`.\r\n\r\n\n\n###\n\n","completion":" [1891051440,1891051444]"}
{"prompt":"### Description\r\nSeems there is no characters count limit in the ‚ÄúAddress line 1‚Äù, ‚ÄúAddress line 2‚Äù, ‚ÄúCity‚Äù and ‚ÄúPost code‚Äù fields from the ‚ÄúStore Details‚Äù page. I could add really long texts in those fields and the browser got way slower. The requests got slower too, so performance was compromised as shown in the video and HAR file, and if someone malicious gained access to the Setup Wizard, the server could be in risk due to multiples requests with a large amount of data that might consume a high amount of bandwidth.\r\n\r\n### To Reproduce\r\n1. Start the Setup Wizard\r\n2. Introduce as much text as you can in the ‚ÄúAddress line 1‚Äù, ‚ÄúAddress line 2‚Äù, ‚ÄúCity‚Äù and ‚ÄúPost code‚Äù fields from the ‚ÄúStore Details‚Äù page\r\n\r\n### Actual behavior\r\nThere isn't any characters limit.\r\n\r\n### Video\r\nhttps://user-images.githubusercontent.com/45979455/149222752-210643f7-4a5e-415b-b563-4da42ec15598.mp4\r\n\r\n### Expected behavior\r\nFields should have a characters count limit.\r\n\r\n### Desktop\r\n* Windows 11 Pro 21H2 (64 bits)\r\n* Google Chrome 96.0.4664.110 (64 bits)\r\n* WordPress 5.8.2\r\n* WooCommerce 6.0.0\r\n* PHP 7.4.27\r\n\r\n### Additional context\r\nPlease find attached the HAR file of the session, just in case it could be helpful for debugging the issue:\r\n[DP01.zip](https://github.com/woocommerce/woocommerce-admin/files/7857836/DP01.zip)\r\n\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"### Description\r\nWhen using Chrome with an **iPhone X resolution**, the first question of the form at the Business Details page is not fully readable. Users familiar to WooCommerce won‚Äôt have any problem to answer that question, but those new users might not be sure about what is the form asking about. It would be nice to find about a way to show the full question in the dropdown.\r\n\r\n### To Reproduce\r\n1. Start the Setup Wizard\r\n2. Complete all the pages until you reach the \"Business Details\" one\r\n3. Check the first question of the \"Business Details\" form (_How many products do you want to display?_)\r\n\r\n### Actual behavior\r\nIt doesn't fit in the component and is not fully readable.\r\n\r\n### Screenshots\r\n![CP01](https://user-images.githubusercontent.com/45979455/149219353-433acdc6-b645-4af4-8c78-5964686d9ee5.png)\r\n\r\n### Expected behavior\r\nIt should be fully readable by the user.\r\n\r\n### Desktop\r\n* Windows 11 Pro 21H2 (64 bits)\r\n* Google Chrome 96.0.4664.110 (64 bits) **running on iPhone X resolution**\r\n* WordPress 5.8.2\r\n* WooCommerce 6.0.0\r\n* PHP 7.4.27\r\n\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"### Description\r\nWhen I submitted the ‚ÄúStore Address‚Äù field from the ‚ÄúStore Details‚Äù page, everything looked fine, I was redirected to the ‚ÄúIndustry‚Äù page and no error message appeared on the UI. However, I checked the response from the `POST /wp-json/wc-analytics/settings/general/batch?_locale=user endpoint` and saw the following object in the response body:\r\n```\r\n\"update\": [\r\n        {\r\n            \"id\": \"store_address\",\r\n            \"error\": {\r\n                \"code\": \"rest_setting_setting_invalid\",\r\n                \"message\": \"Invalid setting.\",\r\n                \"data\": {\r\n                    \"status\": 404\r\n                }\r\n            }\r\n        },\r\n        ...\r\n```\r\n\r\n### To Reproduce\r\n1. Start the Setup Wizard\r\n2. Complete the Setup Details form and click 'Continue'.\r\n3. Check the response body of the `POST /wp-json/wc-analytics/settings/general/batch?_locale=user` request sent to the API.\r\n\r\n### Actual behavior\r\nAlthough everything looks fine in the UI, the following error message appears the response body:\r\n```\r\n\"update\": [\r\n        {\r\n            \"id\": \"store_address\",\r\n            \"error\": {\r\n                \"code\": \"rest_setting_setting_invalid\",\r\n                \"message\": \"Invalid setting.\",\r\n                \"data\": {\r\n                    \"status\": 404\r\n                }\r\n            }\r\n        },\r\n        ...\r\n```\r\n\r\n### Video\r\nhttps://user-images.githubusercontent.com/45979455/149217807-27ae6f3d-f7aa-4e31-bbe4-48ab68e38fae.mp4\r\n\r\n### Expected behavior\r\nNo error should be shown in the response body, considering everything looks fine in the UI and seems data is persisted.\r\n\r\n### Desktop\r\n* Windows 11 Pro 21H2 (64 bits)\r\n* Google Chrome 96.0.4664.110 (64 bits)\r\n* WordPress 5.8.2\r\n* WooCommerce 6.0.0\r\n* PHP 7.4.27\r\n\r\n### Additional context\r\nPlease find attached the HAR file of the session, just in case it could be helpful for debugging the issue:\r\n[DQ02.zip](https://github.com/woocommerce/woocommerce-admin/files/7857619/DQ02.zip)\r\n\n\n###\n\n","completion":" [2258932484,3943104021]"}
{"prompt":"### Description\r\nSeems there isn't any file size restriction when uploading themes. I could start uploading a +700MB zip file that resulted in a HTTP 500 after 36 seconds loading, with the following message: \r\n```\r\n{\r\n   \"code\":\"internal_server_error\",\r\n   \"message\":\"<p>There has been a critical error on this website.<\\/p><p><a href=\\\"https:\\/\\/wordpress.org\\/support\\/article\\/faq-troubleshooting\\/\\\">Learn more about troubleshooting WordPress.<\\/a><\\/p>\",\r\n   \"data\":{\r\n      \"status\":500\r\n   },\r\n   \"additional_errors\":[\r\n      \r\n   ]\r\n}\r\n``` \r\n\r\n### To Reproduce\r\n1. Start the Setup Wizard.\r\n2. Fill the \"Store Details\", \"Industry\", \"Product Types\" and \"Business Details\" forms and go to the \"Theme\" page.\r\n3. Click on \"Upload a theme\" at the bottom.\r\n4. Select a really big zip file (greater than 500 MB at least, as this is the default WordPress file size restriction).\r\n\r\n### Actual behavior\r\nThe file starts loading and - after a while - the page raises a critical error.\r\n\r\n### Video\r\nhttps://user-images.githubusercontent.com/45979455/149211085-1ecd6bbd-def0-453e-9d0b-f964d1224cc2.mp4\r\n\r\n### Expected behavior\r\nThe page should check the file size before starting the upload and let the user know that the file couldn't be uploaded because it increase the allowed limit. Apart from that, the API should return a different HTTP status code, like 408 or 413, and provide a more appropriate  error message.\r\n\r\n### Desktop\r\n* Windows 11 Pro 21H2 (64 bits)\r\n* Google Chrome 96.0.4664.110 (64 bits)\r\n* WordPress 5.8.0\r\n* WooCommerce 6.1.0-dev\r\n* PHP 7.4.25\r\n\r\n### Additional context\r\nPlease find attached the HAR file of the session, just in case it could be helpful for debugging the issue:\r\n[Setup Wizard P01.zip](https://github.com/woocommerce/woocommerce-admin/files/7857324/Setup.Wizard.P01.zip)\r\n\r\n### Comments\r\nIn the video you won‚Äôt see the OS window that opened after I clicked the button to upload the file, and where I selected the file to be uploaded. There is nothing wrong about that in WooCommerce, it‚Äôs just that the software I used for recording the screen can‚Äôt record multiple applications at the same time.\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"### Description\r\nIf you are at the \"Theme\" page, and you have uploaded a theme successfully, when you go back to another page in the form and go to Theme again, the theme is not found in the list. If you try to upload it again, a message raises saying \"Destination folder already exists\", but you won't be able to see the new theme in the list in order to select it. This is solved once you exit the Setup Wizard and open it again.\r\n\r\n### To Reproduce\r\n1. Start the Setup Wizard.\r\n2. Fill all the forms until you reach the \"Theme\" page.\r\n3. Upload a valid theme.\r\n4. Go back to the \"Business Details\" page.\r\n5. Go again to the \"Theme\" page.\r\n\r\n### Actual behavior\r\nThe new theme is not shown in the list, and you are not able to upload it again.\r\n\r\n### Video\r\nhttps://user-images.githubusercontent.com/45979455/149210107-bfdc5000-ef82-48f2-9613-5fae73dd15dc.mp4\r\n\r\n### Expected behavior\r\nThe new theme should be in the list.\r\n\r\n### Desktop\r\n* Windows 11 Pro 21H2 (64 bits)\r\n* Google Chrome 96.0.4664.110 (64 bits)\r\n* WordPress 5.8.2\r\n* WooCommerce 6.0.0\r\n* PHP 7.4.27\r\n\r\n### Comments\r\nIn the video you won‚Äôt see the OS window that opened after I clicked the button to upload the theme, and where I selected the theme to be uploaded. There is nothing wrong about that in WooCommerce, it‚Äôs just that the software I used for recording the screen can‚Äôt record multiple applications at the same time.\r\n\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"The Webhook `product.deleted` is not triggered for when deleting product variation of variable product.\r\n\r\nThis is asymmetric with the `created` and `updated` Webhooks that _will_ be triggered for variations.\n\n### Expected behavior\n\nWebhook `product.deleted` triggered when removing product variation\n\n### Actual behavior\n\nThe Webhook does not trigger\n\n### Steps to reproduce\n\n1. Create a webhook for `product.deleted`\r\n2. Remove any product variation\n\n\n\n###\n\n","completion":" [2046308337]"}
{"prompt":"When settings are : price excluding vat and you have several vat that applies it is impossible to have fix amount  coupons that applies accordingly to the tax code. \r\nAll my price are excluding VAT, I have 2 VAT that applies depending on the product.\r\nIf I want to give a coupon of 5‚Ç¨ to my customer when they subscribe, the system ask to enter coupons without VAT, but as I have 2 VAT, I can't have 2 coupons depending on the product they will choose. Coupons cannot be managed the same way as a product.\r\nThe proper way to apply a coupon to a cart, according to tax code, is to have the full cart price with VAT, reduces this full VAT price with full coupon value and to calculate the VAT of the coupons depending on the product from the full coupon value.\r\n\n\n### Expected behavior\n\nCoupons should always be entered in the system with full value, whatever the VAT system chosen for product (including or excluding). Coupons are not products. VAT applied to the coupons depending on the products in the cart based on the full coupons.\r\n\n\n### Actual behavior\n\nI have to enter coupon without VAT . nonsense\n\n### Steps to reproduce\n\nset price exclufdiing vat\r\nset 2 vat\r\nset a price coupon\r\ntry to shop as a customer > the coupon sent by the merchant does not apply properly accodring to the communication sent to each and every product in the shop.\n\n\n\n###\n\n","completion":" [1891051440,1891051442,1891051453]"}
{"prompt":"### Prerequisites\r\n\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\nWhen loading the \"Payments\" page in WooCommerce settings, a PHP notice occurs:\r\n````\r\nUndefined index: woocommerce_wc_pay_promotion_payment_methods_table_v2\r\n````\r\n\r\n### Expected behavior\r\n\r\nNo PHP notices, especially not because for missing indices.\r\n\r\n### Actual behavior\r\n\r\nPHP notice for a missing index.\r\n\r\n### Steps to reproduce\r\n\r\n1. New WordPress installation.\r\n2. Install and enable WooCommerce plugin.\r\n3. For unknown reasons the WooCommerce setup appears to be unfinished, the WooCommerce setup Dashboard widget lists `0 / 6 steps`, which already seems to be an unexpected internal state.\r\n4. Open the WooCommerce (general) settings page - no PHP notices/warnings/errors yet.\r\n5. Open the WooCommerce payments settings page. \r\nThe described PHP notice occurs.\r\n\r\n````\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"New accounts created from the checkout page with special characters in the password do not work.\r\n\r\nIt is similar to https://github.com/woocommerce/woocommerce/issues/23922. The fix for #23922 was unfortunately incomplete. In https://github.com/woocommerce/woocommerce/blob/acbe200c79815deda60e9fd5cc1aa63fccdda070/plugins/woocommerce/includes/class-wc-checkout.php#L669 all posted fields including the password are still getting unslashed. This leads to an account creation with unslashed passwords. Everywhere else the passwords have the slashes.\r\n\r\n### Expected behavior\r\n\r\nThe new account should work.\r\n\r\n### Actual behaviour\r\n\r\nLogin denied with an invalid password error message.\r\n\r\n### Steps to reproduce\r\n\r\n1. Ensure that your Account Settings in WooCommerce are like this: \r\n![image](https://user-images.githubusercontent.com/16253818/150527311-b2800268-35df-4e53-8364-6b0dc9d9b323.png)\r\n\r\n(basically, you want automatic password creation disabled so that the option to set the password on the checkout page shows). \r\n2. Create a new account via the checkout page, and when setting the password, use a double quote `\"` somewhere in the password.\r\n3. Try to log in with the new account in an incognito window.\r\n4. Login is denied with an invalid password error.\r\n\r\n\n\n###\n\n","completion":" [1891051440,1891051451]"}
{"prompt":"A merchant noticed that they had multiple transactions for a single product within a 10 minute time period. It seems that the stock is not being reduced when the order status is _Pending Payment_, although in at least one case it is reduced despite payment failing.\r\n\r\nThe result seems to be unexpected and inappropriate stock reductions.\r\n\r\nIn other words, stock management is failing, and the merchant finds themselves overselling products.\r\n\r\nThis issue seems to be related to #30348 except this affects both Stripe and PayPal processing.\r\n\r\nOur ticket is 4642984-zen\r\n\r\n### Expected behavior\r\n\r\nStock should be reduced when an order is _Pending Payment_\r\n\r\n### Actual behavior\r\n\r\nStock is not being reduced when an order is _Pending Payment_, with the result that stock levels are not being adjusted based on orders received taking into account the payment status.\r\n\r\n### Steps to reproduce\r\n\r\nAt some stage, the stock was reduced to `-1` after a customer's payment intent was processed, as you can see here:\r\n\r\n<img width=\"1076\" alt=\"4642984_stock_reduction\" src=\"https://user-images.githubusercontent.com/2912202/148023086-3b5b468d-1f5b-4ece-a73d-b1b533d57470.png\">\r\n\r\nDuring that time, a few more purchases went through for the product, including one at 7:36pm that reduced stock to 0, as you can see here:\r\n\r\n<img width=\"1080\" alt=\"4642984_stock_reduction_1\" src=\"https://user-images.githubusercontent.com/2912202/148023187-1bb432fe-8f2f-432c-987a-570953b0de7f.png\">\r\n\r\nThe first payment that stalled at 7:24pm, finally succeeded at 7:42pm and then reduced stock to -1.\r\nWe suspect that this is some intermingling of how the `hold stock` action and the `reduce stock` action work between PayPal and Stripe. Please also take a look at this internal discussion as this seems to be related: p1625465858228500-slack-C7U3Y3VMY\r\n\r\nThe _Allow backorders_ option is set to _Do not allow_. The site is also configured to hold stock for 10 minutes.\r\n\r\n\n\n###\n\n","completion":" [1891051471]"}
{"prompt":"If you navigate to **Analytics > Orders** and change the `Rows Per Page` to `100`, the following error occurs on the page:\r\n\r\n```\r\nThere was an error getting your stats. Please try again.\r\n```\r\n\r\nAdditionally, a fatal error occurs:\r\n\r\n```\r\n2022-01-02T16:22:13+00:00 CRITICAL Uncaught Error: Call to a member function get_id() on bool in /Users/chris/Local Sites/woosites/cm/app/public/wp-content/plugins/woocommerce/packages/woocommerce-admin/src/API/Reports/Controller.php:202\r\nStack trace:\r\n#0 /Users/chris/Local Sites/woosites/cm/app/public/wp-content/plugins/woocommerce/packages/woocommerce-admin/src/API/Reports/Orders/Controller.php(86): Automattic\\WooCommerce\\Admin\\API\\Reports\\Controller->get_order_number(8640)\r\nwoocommerce/woocommerce-admin#1 /Users/chris/Local Sites/woosites/cm/app/public/wp-includes/rest-api/class-wp-rest-server.php(1140): Automattic\\WooCommerce\\Admin\\API\\Reports\\Orders\\Controller->get_items(Object(WP_REST_Request))\r\nwoocommerce/woocommerce-admin#2 /Users/chris/Local Sites/woosites/cm/app/public/wp-includes/rest-api/class-wp-rest-server.php(987): WP_REST_Server->respond_to_request(Object(WP_REST_Request), '/wc-analytics/r...', Array, NULL)\r\nwoocommerce/woocommerce-admin#3 /Users/chris/Local Sites/woosites/cm/app/public/wp-includes/rest-api/class-wp-rest-server.php(414): WP_REST_Server->dispatch(Object(WP_REST_Request))\r\nwoocommerce/woocommerce-admin#4 /Users/chris/Local Sites/wo in /Users/chris/Local Sites/woosites/cm/app/public/wp-content/plugins/woocommerce/packages/woocommerce-admin/src/API/Reports/Controller.php on line 202\r\n```\r\n\r\nLastly, the following console error appears:\r\n\r\n```\r\nFailed to load resource: the server responded with a status of 500 (Internal Server Error)\r\n```\r\n\r\n### To Reproduce\r\n\r\n1. Go to **Analytics**.\r\n2. Go to **Orders**.\r\n3. Modify the dates to get a large number of orders.\r\n4. The `Rows Per Page` field defaults to `25`. Change the `Rows Per Page` field to `100`.\r\n5. Notice the server answers with Error 500, an error occurs on the page, and a fatal error log is generated.\r\n\r\n### Actual behavior:\r\n\r\nThe server answers with Error 500, an error occurs on the page, and a fatal error log is generated.\r\n\r\n### Screenshots\r\n\r\n![Markup on 2022-01-02 at 10:29:58](https://user-images.githubusercontent.com/82999806/147882462-82d842bb-0bb9-497d-9585-f966e901de4b.png)\r\n\r\n![Markup on 2022-01-02 at 10:30:19](https://user-images.githubusercontent.com/82999806/147882468-ed8da63a-e451-48ce-bdb8-7f08e81f0607.png)\r\n\r\n### Expected behavior\r\n\r\nReports should display without an error.\r\n\r\n### Desktop (please complete the following information):\r\n\r\n* OS: macOS 12.1\r\n* Browser: Chrome\r\n* Version: 96.0.4664.110\r\n\r\n### Additional context\r\n\r\nMay be similar to woocommerce/woocommerce-admin#1948\r\nReported in 4648836-zen\r\n\r\n### System Status Report\r\n\r\n<details>\r\n`\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"We have a plugin who register an action hook \"woocommerce_new_order\", which works fine when the action is triggered by the application. But when the action is triggered by an API call fails. \r\n\r\n**It seems the action is passing different arguments when the order is created by the application:** \r\n\r\nhttps://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/includes/data-stores/class-wc-order-data-store-cpt.php#L173\r\n\r\n**But when the action is triggered by orders created via API second argument '$order' is missing:** \r\n\r\nhttps://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/includes/legacy/api/v2/class-wc-api-orders.php#L465\r\n\r\nhttps://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/includes/legacy/api/v3/class-wc-api-orders.php#L505\r\n\r\n\r\nWe believe this could be a bug; or at least something not documented properly. \r\nIs also true is possible fetch the order with the order_id, and fix any issue. We understand that, however, why is only passing one argument.  \r\n\r\n\n\n### Expected behavior\n\nWhen woocommerce_new_order action is triggered via API, will pass the same arguments\n\n### Actual behavior\n\nWhen woocommerce_new_order action is triggered via API, is only passing order_id argument\n\n### Steps to reproduce\n\n1. Install and activate any plugin which register an action like the following: \r\n\r\n`add_action( 'woocommerce_new_order', 'callback_action_woocommerce_new_order', 10, 2 ); `\r\n\r\n```\r\nfunction callback_action_woocommerce_new_order($order_id, $order) {\r\n// do something with the arguments\r\n}\r\n```\r\n\r\n2. Trigger an order via API. Second argument is missed. \n\n\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"Currently, if we update the ‚ÄòExcluded statuses‚Äô on Analytics settings and navigate to another page like ‚Äòoverview‚Äô, we need to hard refresh the page to see the changes on the analytics dashboard, which can be confused and not user friendly.\r\n\r\n### To Reproduce\r\n<!-- Describe the steps to reproduce the behavior.-->\r\n\r\n1. Go to Analytics > Settings\r\n2. Toggle some options on 'Excluded statuses'\r\n3. Navigate to Analytics > Overview\r\n\r\n### Actual behavior:\r\n<!-- A clear and concise description of what actually happens. -->\r\n\r\nThe analytics dashboard was not updated immediately after changing the analytics settings.\r\n\r\n### Screenshots\r\n<!-- If applicable, add screenshots to help explain your problem. -->\r\n\r\n\r\n\r\nhttps://user-images.githubusercontent.com/4344253/147633011-82df698d-b730-4ddb-84fe-2e01bae83fa7.mov\r\n\r\n\r\n\r\n### Expected behavior\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\nShould update the dashboards immediately after changing the analytics settings.\r\n\r\n### Desktop (please complete the following information):\r\n\r\n* OS: MacOS\r\n* Browser: chrome\r\n* Version:  96.0.4664.110\r\n\r\n### Additional context\r\n\r\nWooCommerce: 6.0.0\r\nWooCommerce Admin: Version 3.1.0-beta.1 \r\n\r\n\r\n\n\n###\n\n","completion":" [3943104021,3943425133]"}
{"prompt":"For every WooCommerce REST API request using a WooCommerce API key, the key's last access time (stored in the database field `wp_woocommerce_api_keys.last_access`) gets updated 10 times.  This is obviously sub-optimal for performance.\r\n\r\n### Expected behavior\r\n\r\nI would expect the last access time to be updated only once (with one single SQL `UPDATE` query) per API request.\r\n\r\n### Actual behavior\r\n\r\nThe last access time gets updated 10 times (with 10 separate SQL `UPDATE` queries) per API request.\r\n\r\n### Steps to reproduce\r\n\r\n1. First, I recommend using Firefox for testing this since it's going to be necessary to make REST API calls in a web browser and Firefox automatically formats JSON to make viewing much easier.  So you should start by logging in to WordPress with an Administrator account using Firefox.\r\n\r\n2. In the WordPress admin section, click \"WooCommerce\", then \"Settings\".  Click the \"Advanced\" tab and then \"REST API\".\r\n\r\n3. Click the \"Add key\" button to create a new API key.  Enter anything in the \"Description\" field; the \"User\" field should be pre-filled with your (Administrator) user account. For \"Permissions\", read-only access will be enough for testing purposes.  Click \"Generate API key\".  Copy the \"Consumer key\" and \"Consumer secret\" values and record them somewhere for future use.\r\n\r\n4. Install the [Query Monitor](https://wordpress.org/plugins/query-monitor/) plugin.  We will use this for [analyzing REST API requests](https://querymonitor.com/blog/2021/05/debugging-wordpress-rest-api-requests/).\r\n\r\n5. In your web browser (while you are still logged in as WordPress administrator - you need to be logged in for Query Monitor to work), visit the following URL:\r\n\r\n```\r\nhttps://example.com/path/to/wordpress/wp-json/wc/v3?consumer_key=ck_...&consumer_secret=cs_...&_envelope\r\n```\r\n\r\nChange `example.com`, `/path/to/wordpress`, `ck_...` and `cs_...` to match your site's URL and the API credentials you generated in step 3.  You should NOT change `https://` to `http://` because the REST API requires SSL to work.  If you only have an `http://` URL set up, as a quick hack you can edit your `wp-config.php` and add `$_SERVER['HTTPS'] = 'on';` somewhere before the \"stop editing\" line.  This will trick WordPress and WooCommerce into thinking that the site is being served over SSL, which is sufficient for testing the REST API.\r\n\r\nIn the JSON output you should see a `qm` key.  The duplicate SQL queries are under `qm.db_queries.dupes.queries`.  This should contain a query which looks something like:\r\n\r\n```\r\nUPDATE wp_woocommerce_api_keys SET last_access = '2021-12-25 04:14:03' WHERE key_id = 1\r\n```\r\n\r\nIf your server is slow you might see some queries with one timestamp and other queries with a timestamp one second later, etc.  If your server is incredibly slow - suppose that it takes 10 seconds or more to handle the API request - then it's theoretically possible that you might not see any duplicate queries because each query could get a different timestamp.  But if your server handles the API request in a reasonable time (less than 10 seconds), you should see the duplicate queries there.\r\n\r\n![screenshot](https://user-images.githubusercontent.com/1156399/147377290-e521adf7-c2c9-47e2-9690-f69249703973.png)\r\n\r\n\n\n###\n\n","completion":" [2258932484,472334370]"}
{"prompt":"When a smoke test is triggered on a PR the job fails with a 500 error on updating WooCommerce. I see two issues:\n\n- The workflow updates the smoke test site with the nightly build vs the PR build\n  - https://github.com/woocommerce/woocommerce/blob/trunk/.github/workflows/pr-smoke-test.yml#L53\n  - https://github.com/woocommerce/woocommerce/blob/trunk/.github/workflows/pr-smoke-test.yml#L71:L82\n  - https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/tests/e2e/specs/smoke-tests/update-woocommerce.js#L26:L30\n\n- The 500 error is occurring in the first step. \n\nReference log: https://github.com/woocommerce/woocommerce/runs/4620667540?check_suite_focus=true\n\n###\n\n","completion":" [3845073088]"}
{"prompt":"**Description**: We should remove the existing WCPayments menu from https://github.com/Automattic/wc-calypso-bridge once we're ready to release WCPayments menu in WCA to prevent duplication.\n\n###\n\n","completion":" [3943104021,3943425903]"}
{"prompt":"Currently any note is displayed to any user that has access to the **WooCommerce > Home** screen. Some of these notes focus on specific tasks like creating a product, or enabling a payment gateway and it could be that users don't have those privileges, but are still shown this note while on the WC homescreen.\r\n\r\nWe should filter notes by a users capability. This will require, either adding a `capability` column to the `wp_wc_admin_notes` table and/or adding this to our Note class, the second approach would not work for any notes coming from the remote inbox notification.\r\n\r\nSee here for more context: p90Yrv-2vK-p2#comment-6480\r\n\r\n### Acceptance criteria\r\n- Notes on home screen should be filtered by user capability\r\n- A capability option should be added to the Note class\r\n- We should be able to define the capability in our json for remote inbox notifications\n\n###\n\n","completion":" [3943104021,3943424960]"}
{"prompt":"We should update the `wcSettings` documentation to make clear to 3PDs how to use this and to be cautious using settings that are not set by the plugin themselves. All we might need to do on wc-admin is point to documentation in the WC Blocks repo somewhere -> https://github.com/woocommerce/woocommerce-gutenberg-products-block/tree/trunk/assets/js/settings/shared.\r\n\r\nSome of these settings set by the blocks package might be set in stone, like `locale` or `currency` for example, these items should be clarified.\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"We are [currently hydrating a bunch](https://github.com/woocommerce/woocommerce-admin/blob/main/client/index.js#L30-L33) of our mutable settings into our @wc/admin/settings datastore by making use of `wcSettings`. This allows a user to retrieve mutable settings two way's, using our data store or making use of `wc.wcSettings.getSetting`. This could add confusion, and the latter is only for static settings.\r\n\r\nWe should try out the `createPreloadingMiddleware` for any settings that are only used through our settings store (or any settings that are mutable). This is a spike, so feel free to try out other approaches, like a custom REST route or so, and see if this approach would be best (at-least for now).\r\n\r\nHere is an example of someone making use of `createPreloadingMiddleware` -> https://github.com/woocommerce/woocommerce-gutenberg-products-block/pull/5022\r\nAnd here is the [source code for the middleware](https://github.com/WordPress/gutenberg/blob/trunk/packages/api-fetch/src/middlewares/preloading.js).\r\n\r\n### Acceptance Criteria\r\n- Have a sample PR ready making use of `createPreloadingMiddleware`\r\n- Post any feedback in this issue, on why we should (or should not) use this\r\n     - If not, what is a good alternative? \n\n###\n\n","completion":" [3943104021]"}
{"prompt":"For pricing, it stated in the docs like this \"Accepts a float: Unrounded amount to match on.\"\r\n=> https://github.com/woocommerce/woocommerce/wiki/wc_get_orders-and-WC_Order_Query#price\r\n\r\nSo lets try it:\r\n1. set your 'Number of decimals' in woocommerce Currency options to '0'\r\n\r\n2. Create an order with unique total for example the total is 12345 (the end result will not have decimal point since we set like this)\r\n\r\n3. Find this order using wc_get_order using:\r\n$args = array(\r\n    'total' => 12345.00,    //important! include the decimal point. since woocommerce wants float\r\n);\r\n$orders = wc_get_orders( $args );\r\n\r\n4. Your order will not be found, but if you change the total from '12345.00' to '12345'. It will be found\r\n\n\n### Expected behavior\n\nWith pricing,  12345.00 should be treated same as  12345. Currently it treated differently\n\n### Actual behavior\n\nWith pricing,  12345.00 should be treated same as  12345. Currently it treated differently\n\n### Steps to reproduce\n\nRead above\n\n\n\n###\n\n","completion":" [2190477857]"}
{"prompt":"Updated from 5.8 to 6.0.0\r\n\r\nAdmin immediately running slow. \n\n### Expected behavior\n\nNo change in responsiveness. \n\n### Actual behavior\n\nOver 8 seconds to present any page in admin.\r\nFront end still running fine.\r\n\n\n### Steps to reproduce\n\nOn a site with a substantial number of products (mine had 400,000):\r\nUpgrade from 5.9.0 to 6.0.0\r\n\r\nWait for database update and scheduled tasks to complete. \r\n\r\nLoad up query monitor.\r\nGo to any product, order or pretty much any page in admin.\r\nThis query pops up 7 times, each taking over a second to run:\r\nSELECT wp_posts.ID\r\nFROM wp_posts\r\nLEFT JOIN wp_term_relationships\r\nON (wp_posts.ID = wp_term_relationships.object_id)\r\nWHERE 1=1\r\nAND ( wp_term_relationships.term_taxonomy_id IN (2,3,4,5) )\r\nAND wp_posts.post_type = 'product'\r\nAND ((wp_posts.post_status = 'publish'))\r\nGROUP BY wp_posts.ID\r\nORDER BY wp_posts.post_date DESC\r\nLIMIT 0, 1\r\n\r\nI've rolled back to 5.9.0 and the site's admin is back up to speed. \r\n\r\nNot sure how to proceed from here. \r\n\r\nSorry, the status report I have is from after I rolled back. I can't leave the live site slow. \r\n\r\nThe 2 out of date plugins were updated prior to upgrading woocommerce. \r\n\r\nI'll have to clone the site to work the problem. \r\n\r\nCheers, \r\n\r\nAndy \r\n\r\n\r\n\n\n\n\n###\n\n","completion":" [3943424887]"}
{"prompt":"### Is your feature request related to a problem? Please describe.\r\nExporting customer reports with a phone number would be quite useful to use your list with Facebook audiences and other CRM software.\r\n\r\n### Describe the solution you'd like\r\nAdding phone number (billing and shipping) to customer reports.\r\n\r\n### Describe alternatives you've considered\r\nI tried to find a way to add the phone number via hooks but cannot find a way.\r\n\r\nThe only related documentation I found is this: https://developer.woocommerce.com/2020/02/20/extending-wc-admin-reports/\r\n\r\nIt's over a year old and I cannot find a useful way to use this in customer reports.\r\n\r\n### Should this be prioritized? Why?\r\nHaving the structure in place, it should be really easy to add another field to the query.\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"### Describe the bug\r\nWhen viewing an ecommerce plan or business plan site on mobile (when the new WooCommerce navigation is turned off), the wc-admin app bar overlaps the WordPress.com unified navigation.\r\n\r\n### To Reproduce\r\n<!-- Describe the steps to reproduce the behavior.-->\r\n\r\n1. On any WordPress.com hosted site with Woo navigation turned off, go to any WooCommerce area such as 'WooCommerce Home' or 'Orders'\r\n2. See error\r\n\r\n### Expected behavior\r\nWhen the navigation is open in the mobile view, the wc-admin app bar shouldn't be visible.\r\n\r\n### Screenshots\r\n![Screenshot_20211214-182207](https://user-images.githubusercontent.com/5121465/146103878-0f19cc04-d101-4373-93e7-d0ec646d3e22.png)\r\n![Screenshot_20211214-182437](https://user-images.githubusercontent.com/5121465/146103893-bb5535ab-7dd8-4323-8476-f354b2f7e1b0.png)\n\n###\n\n","completion":" [3943104021,3943425968]"}
{"prompt":"The \"Tax based on subtotal amount\" snippet shown here no longer works:\r\n\r\nhttps://woocommerce.com/document/configuring-specific-tax-setups-in-woocommerce/#section-7\r\n\r\nFiling a bug per @jeffstieler in Slack: p1639115119214600-slack-C7U3Y3VMY\n\n### Expected behavior\n\nThe snippet should work.\n\n### Actual behavior\n\nIt does not.\r\n\r\n![image](https://user-images.githubusercontent.com/5512652/146056376-e25c58f1-1018-4b08-9855-fc7d148dddbc.png)\r\n\n\n### Steps to reproduce\n\nN/A\n\n\n\n###\n\n","completion":" [1891051437]"}
{"prompt":"**Just some brief context**, the following bug occurred during the project WooCommerce Store Editing Templates where we are converting WC Core PHP templates into Block Templates (https://github.com/woocommerce/woocommerce-gutenberg-products-block/issues/4926). For V1 we essentially rendered the entire template as a single block represented as a placeholder within the editor (see screenshot below).\r\n\r\n![Screenshot 2021-12-11 at 09 44 40](https://user-images.githubusercontent.com/8639742/145672110-c0bc8e85-6391-466d-9bd8-f7c4facadaf0.png)\r\n\r\n**The Bug**\r\n\r\nDuring this project we found that users were unable to add variable products to their cart. The cause of this bug was because the code that [enqueues the required scripts](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/includes/wc-template-functions.php#L1710) is running _before_ the code that [registers the required scripts](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/includes/class-wc-frontend-scripts.php#L169).\r\n\r\nThis is only an issue for block templates because we are getting the block template html by running `get_the_block_template_html` which enqueues the required scripts, before we run `wp_head()`, which registers the required scripts [here](https://github.com/WordPress/WordPress/blob/master/wp-includes/template-canvas.php#L12). Resulting in a scenario where we are trying to enqueue scripts before they are registered, meaning they don't get included on the frontend.\r\n\r\nWe were able to implement a fix which meant running the `load_scripts()` method in our block template code, you can see the PR for this [here](https://github.com/woocommerce/woocommerce-gutenberg-products-block/pull/5346). I am wondering if there is a better way to solve this problem upstream rather than patching it downstream in our template code.\n\n### Expected behavior\n\nVariable products get added to the users cart\n\n### Actual behavior\n\nAdding variable products to the cart returns an error, and they do not get added.\n\n### Steps to reproduce\n\n* Install WooCommerce 6.0.0 (inc beta) or greater.\r\n* Install Woo Blocks. If the fix linked above is included in your Woo Blocks build please comment this out.\r\n* Install and activate Gutenberg plugin and a block theme such as TT1.\r\n* Load variable product on the frontend and try add it to the cart.\r\n* Observe error.\n\n\n\n###\n\n","completion":" [33006876]"}
{"prompt":"## Bug Description:\r\nFor Twenty Twenty-One theme, \"Set new password\" and \"Lost Password\" field are misaligned after clicking received mail link for setting new password.\r\n\r\n## Environment:\r\nWoocommerce Version : \r\nWooCommerce 6.0 RC-2\r\nWordpress version: 5.9.Beta-2 \r\n\r\nPC:\r\nWindows 10\r\nFirefox(Version 95.0)\r\nChrome(96.0.4664.93)\r\n\r\n## Steps To Reproduce:\r\n1. Create any test site using JN site.\r\n1. Install and activate all the required plugins.\r\n1. Install and activate WooCommerce 6.0 RC-2.\r\n1. Complete the setup wizard and task list to setup your site.\r\n1. Add the sample products.\r\n1. Go to Woo > Settings > Accounts & Privacy and enable Allow customers to create an account during checkout and Allow customers to create an account on the \"My account\" page\r\n1. On frontend, go through the checkout and enable the checkbox to create a new user account.\r\n1. Verify the email receives a link to set a new password.\r\n1. Click on \"Click here to set your new password\".\r\n1. Observe that both the field to \"Set new password\" field are misaligned.\r\n1. Similarly, for \"Lost Password\".\r\n1. Open the test site in incognito window.\r\n1. Go to \"My Account\" page click \"Lost your password?\" and provide your email.\r\n1. Verify the email receives a link to set a new password.\r\n1. Click on \"Click here to set your new password\".\r\n1. Observe that both the field to \"Lost Password\" field are misaligned.\r\n\r\n\r\n## Actual Result:\r\nFor Twenty Twenty-One theme, \"Set new password\" and \"Lost Password\" field are misaligned after clicking received mail link for setting new password.\r\n\r\n## Expected Result:\r\nFor Twenty Twenty-One theme, \"Set new password\" and \"Lost Password\" field should be in proper aligned after clicking received mail link for setting new password.\r\n\r\nScreenshot:\r\n\r\n<img width=\"1361\" alt=\"Lost Pass\" src=\"https://user-images.githubusercontent.com/41110392/145420672-f00db814-5fb6-4bd7-844e-64c45d6cda31.png\">\r\n\r\n![Set Pass](https://user-images.githubusercontent.com/41110392/145420678-bce2f508-9e37-4272-b776-f7ba878c2432.jpg)\r\n\r\n\r\n\r\n*Isolating the problem (mark completed items with an [x]):*\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n\r\n<details>\r\n\r\n`\r\n\n\n###\n\n","completion":" [1891051447,1891051451,33006876]"}
{"prompt":"Using the Customers report, when filtering customers by No. of Orders, refunded orders are not counted correctly. \r\n\r\nHere's a specific example. If I filter by customers who have more than 1 order, I get this report with 5 customers ‚Äì which is correct:\r\n\r\n![](https://d.pr/i/8DKrCT+)\r\nImage Link: https://d.pr/i/8DKrCT\r\n\r\nI have one customer who has only placed one order on the site. If I go and refund that single order for this customer, and then refresh the above report, this customers appears under the same filter:\r\n\r\n![](https://d.pr/i/rI8AQX+)\r\nImage Link: https://d.pr/i/rI8AQX\r\n\r\nYou'll see that the report now shows 6 customers. This customer with the refunded order should not appear there, as they only have 1 order and the filter should only be showing customers with more than one order on the site.\r\n\r\n###  Additional context\r\n\r\nI was able to reproduce this on two separate sites, on a default setup. \n\n###\n\n","completion":" [3943104021]"}
{"prompt":"Thanks to @zdenys for originally identifying this issue!\r\n\r\n### Steps to Reproduce\r\n\r\n1. Navigate to WooCommerce section on a site with the [the new WooCommerce navigation on WordPress.com](https://wordpress.com/support/new-woocommerce-experience-on-wordpress-dot-com/), such as an WordPress.com eCommerce Plan site.\r\n2. Resize the browser window being until you see the vertical scrollbar appear in the left sidebar\r\n\r\n### What I expected to happen\r\n\r\nThe style of the vertical scrollbar should likely be improved to be consistent with the rest dark colors of the new WooCommerce Navigation\r\n\r\n### What actually happened\r\n\r\nThe vertical scrollbar appears unstyled and grey and stands to from the rest of the dark background\r\n\r\n### Context\r\n\r\nNoticed during a Quick Start session 4267078-zd-woothemes and manually tested further\r\n\r\n### Operating System\r\n\r\nmacOS\r\n\r\n### OS Version\r\n\r\nBigSur 11.5.2\r\n\r\n### Browser\r\n\r\nChrome/Chromium\r\n\r\n### Browser Version(s)\r\n\r\n92\r\n\r\n### Is this specific to applied theme? If so, what is the theme name?\r\n\r\nNo\r\n\r\n### Simple/Atomic\r\n\r\nAtomic\r\n\r\n### Console and/or error logs\r\n\r\nNo\r\n\r\n### Number of Users Impacted\r\n\r\nSome users (<50%)\r\n\r\n### Available Workarounds\r\n\r\nNo\r\n\r\n### Reproducibility\r\n\r\nConsistent\r\n\r\n### Other information\r\n\r\n\r\nhttps://user-images.githubusercontent.com/39308239/131828556-3a20d444-89dc-4997-918b-b868fde3f5a8.mov\r\n\n\n###\n\n","completion":" [3943104021,3943425968]"}
{"prompt":"### Describe the bug\r\nWith the new Woo Navigation, clicking into our out of a category triggers a \"slide\" animation within the nav. This should only be triggered when changing categories, although I've noticed at least one instance of it being triggered while changing to other screens within the same category.\r\n\r\n### To Reproduce\r\n<!-- Describe the steps to reproduce the behavior.-->\r\n\r\n1. Ensure Woo Nav is enabled (WooCommerce -> Settings -> Advanced -> Features -> Check the checkbox next to Navigation)\r\n2. Navigate to Analytics -> Overview \r\n3. Now, navigate from the Overview to the Analytics -> Products screen\r\n4. Notice the animation within the nav, which shouldn't happen.\r\n5. Navigate from the Products to the Analytics -> Revenue screen.\r\n6. Notice that there is no animation, as is expected.\r\n\r\n### Expected behavior\r\n<!-- A clear and concise description of what you expected to happen. -->\r\nThe animation should only be triggered when switching in and out of a category, not within one.\r\n\n\n###\n\n","completion":" [3943104021,3943425968]"}
{"prompt":"### Is your feature request related to a problem? Please describe.\r\nRelated to https://github.com/Automattic/wc-calypso-bridge/issues/720\r\n\r\n### Describe the solution you'd like\r\nBeing able to extend the main content area of pages with SlotFill would greatly improve the extensibility of all WCA pages.\r\n\r\n### Describe alternatives you've considered\r\nWe could hardcode these elements in WCA, but that feels very messy and outside the scope of WooCommerce Admin.\r\n\r\n### Should this be prioritized? Why?\r\nIn general, SlotFill extensibility needs to be addressed, but we need a thorough plan on how we plan to tackle.\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\n\r\nIt's not clear if Coupon Usage Restrictions are Product AND Categories, or Products OR Categories. \r\n\r\nIf you specify Products = `Vneck Tshirt`, and Product categories = `Hoodies`, I would expect the coupon to apply when either `Vneck Tshirt` OR a `Hoodies` category product is in the cart. However, if it's not `Vneck Tshirt` AND a `Hoodies` category product, when entering the coupon code you get: \r\n\r\n<img width=\"1108\" alt=\"Coupon-related error message: Sorry, this coupon is not applicable to selected products\" src=\"https://user-images.githubusercontent.com/15178758/144626311-47c07540-6cae-4c78-940e-2ec408361246.png\">\r\n\r\nThe tooltip for products and product categories respectively are also ambiguous as it uses OR as well:\r\n\r\n> Products that the coupon will be applied to, or that need to be in the cart in order for the \"Fixed cart discount\" to be applied.\r\n\r\n> Product categories that the coupon will be applied to, or that need to be in the cart in order for the \"Fixed cart discount\" to be applied.\r\n\r\nThere is nothing in the [Usage Restriction](https://woocommerce.com/document/coupon-management/#usage-restriction) docs to give clarity either. \r\n\r\nReported in 4566639-zen\r\n\r\n**Expected behavior**\r\n\r\nThe expectation is that coupons would apply to individual products OR products from categories as specified, as that is how I'm interpreting the tool-tips next to those fields. \r\n\r\n**Actual behavior**\r\n\r\nCoupons apply when either an individual product AND a product from categories specified are in the cart. \r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Go to Marketing > Coupons > Add Coupons\r\n2. General tab > Discount Type > Cart Discount or Percentage Discount\r\n3. Amount > anything\r\n4. Usage Restrictions tab > Products > Vneck Tshirt\r\n5. Products > Vneck Tshirt\r\n6. Product categories > Hoodies\r\n7. Click update. \r\n8. Add Vneck Tshirt to the cart, apply coupon. \r\n9. Notice the error. \r\n\r\n**Screenshots**\r\n\r\n<img width=\"873\" alt=\"Coupon - General tab settings\" src=\"https://user-images.githubusercontent.com/15178758/144627428-05c59c40-41ba-47a5-95f4-46fbcdf307ac.png\">\r\n\r\n<img width=\"874\" alt=\"Coupon - Usage restriction settings\" src=\"https://user-images.githubusercontent.com/15178758/144627483-588751e0-751e-484c-beb0-3cd4753f5936.png\">\r\n\r\n<img width=\"1150\" alt=\"Error when only the product is in the cart and coupon is applies\" src=\"https://user-images.githubusercontent.com/15178758/144627720-cc5d9383-c40d-4205-81f9-a84a4436fb8f.png\">\r\n\r\n<img width=\"1094\" alt=\"Error when only a product from the category is in the cart and coupon is applied\" src=\"https://user-images.githubusercontent.com/15178758/144627861-4c7dba92-93f3-4f17-b8d3-f89c893207ad.png\">\r\n\r\n<img width=\"1129\" alt=\"When both are in the cart, the coupon works\" src=\"https://user-images.githubusercontent.com/15178758/144627542-1fe37d65-e107-4927-aaaf-387cc402ff6d.png\">\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051442]"}
{"prompt":"**Prerequisites**\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nFor logged in users, the default user email address overrides session data during checkout in case the customer removes the input value and submits the form (while JS is disabled). In this case the user sees the _Billing email is mandatory_ error message but at the same time the input value is filled with the current user's email address. That is due to the override in [WC_Customer_Data_Store_Session::set_defaults()](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/includes/data-stores/class-wc-customer-data-store-session.php#L150). Maybe some null vs. empty string checking might be necessary here which would affect the underlying `WC_Customer` implementation as well.\r\n\r\n**Expected behavior**\r\nThe email address value should allow empty state and should not be overridden with default data during checkout/session.\r\n\r\n**Actual behavior**\r\nThe submitted value is overridden with the current user's email address.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Turn off JavaScript\r\n2. Make sure you are a logged in as a user\r\n3. Add any product to the cart and go to checkout\r\n4. Remove the current value from the email input field\r\n5. Submit the form\r\n6. You will now notice the error message and the misleading input value filled with the default email address\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\nTested with latest Woo + WP version.\n\n###\n\n","completion":" [1891051440]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\n\r\nWhen a payment gateway is set on manual order, WooCommerce displays all available payment gateways to the customer, even though it will only allow them to pay via the payment gateway defined in the manual order:\r\n\r\n![image](https://user-images.githubusercontent.com/17475174/144158401-38ddaa94-3729-4616-834a-fb16c8d53994.png)\r\n\r\n**Expected behavior**\r\n\r\nEither hide other payment gateways available on the store, or clearly display an error message that says customer can pay only via the configured payment method for the order.\r\n\r\n**Actual behavior**\r\n\r\n* All available payment gateways on the store are displayed to the customers\r\n* The error message displayed when another payment gateway is used is specific to the payment gateway selected by the admin for the manual order, and does not clarify that they're using the wrong payment gateway:\r\n\r\n    \r\n![image](https://user-images.githubusercontent.com/17475174/144158620-775699cb-8e70-45f0-84db-71a1602bc318.png)\r\n\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Create a manual order and assign a payment gateway. Let us say [WooCommerce Payments](https://woocommerce.com/products/woocommerce-payments/?aff=10486&cid=1131038)\r\n2. Click on the customer payment page, or the link shared with the customer when using the `Email invoice / Order details to the customer` option\r\n3. Notice that all the payment methods enabled on the store are displayed to the customer, but they can only pay for via the configured payment gateway\r\n4. Also notice that the system does not notify that the customer is using an incorrect payment gateway for the particular order\r\n\r\n**Screenshots**\r\n\r\n![image](https://user-images.githubusercontent.com/17475174/144158897-fbbb6a53-ef73-4183-b3a9-7c3bd3baed70.png)\r\n\r\n![image](https://user-images.githubusercontent.com/17475174/144158913-751c4286-a1f2-4fcd-b2ea-8e6b09243343.png)\r\n\r\n![image](https://user-images.githubusercontent.com/17475174/144158933-4092055b-0d6e-4a9d-bbb8-4bd578e9f7f7.png)\r\n\r\n![image](https://user-images.githubusercontent.com/17475174/144158948-80f338b0-cb47-4fbb-8474-75f43f0c7c01.png)\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n\r\nWordPress: 5.8.2\r\nWooCommerce: 5.9\n\n###\n\n","completion":" [1891051449]"}
{"prompt":"### Describe the bug\r\nA site owner reported a fatal error in the `WooSubscriptionsNotes` class.\r\n\r\n```\r\nAn error of type E_ERROR was caused in line 204 of the file /home/customer/www/crefovi.com/public_html/wp-content/plugins/woocommerce/packages/woocommerce-admin/src/Notes/WooSubscriptionsNotes.php. Error message: Uncaught Error: Call to a member function get_content_data() on bool in /home/customer/www/crefovi.com/public_html/wp-content/plugins/woocommerce/packages/woocommerce-admin/src/Notes/WooSubscriptionsNotes.php:204 \r\nStack trace: \r\n#0 /home/customer/www/crefovi.com/public_html/wp-content/plugins/woocommerce/packages/woocommerce-admin/src/Notes/WooSubscriptionsNotes.php(224): AutomatticWooCommerceAdminNotesWooSubscriptionsNotes->get_product_id_from_subscription_note(false) \r\nwoocommerce/woocommerce-admin#1 /home/customer/www/crefovi.com/public_html/wp-content/plugins/woocommerce/packages/woocommerce-admin/src/Notes/WooSubscriptionsNotes.php(417): AutomatticWooCommerceAdminNotesWooSubscriptionsNotes->prune_inactive_subscription_notes() \r\nwoocommerce/woocommerce-admin#2 /home/customer/www/crefovi.com/public_html/wp-content/plugins/woocommerce/packages/woocommerce-admin/src/Notes/WooSubscriptionsNotes.php(97): AutomatticWooCommerceAdminNotesWooSubscriptionsNotes->refresh_subscription_notes() \r\nwoocommerce/woocommerce-admin#3 /home/customer/www/crefovi.com/public_html/wp-includes/class-wp-hook.php(3\r\n```\r\n\r\nWe can see in the stacktrace, a call is made to `get_product_id_from_subscription_note ` with a note of `false`, rather than a valid `Note` object. A possible quick fix is to check for `false` return values and defensively handle them.\r\n\r\nA possible reason for the `false` return value is due to a race condition. The `refresh_subscription_notes` method is run on the  WordPress `admin_init` hook, but does not have a locking system to prevent multiple users on the site triggering the refresh at the same time. I think a fix for this situation would be bringing the routine into a cron or Action Scheduler job.\r\n\r\n\r\n\r\n### To Reproduce\r\n<!-- Describe the steps to reproduce the behavior.-->\r\n\r\nNot yet available.\r\n\r\n### Actual behavior:\r\n\r\nThe resulting fatal error causes WordPress to send an email to the site owner with the stacktrace.\r\n\r\n\r\n### Expected behavior\r\n\r\nGraceful handling and logging of the error instead of fatal error.\r\n\r\n### Additional context\r\nOriginal zendesk issue: 4553364-zd-woothemes \r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nAt some screen widths, the date part of auto renewal information on the My Subscriptions page can be partially cropped-off/hidden behind an invisible element. This is more-likely to occur where the date text is long, e.g. in French where the text _Renouvellement automatique le_ is used in place of _Auto renews on_; it's also more-likely to occur with long month names e.g. \"November\" rather than \"May\". It's probably a CSS issue.\r\n\r\n**Expected behavior**\r\nThe renewal date of an extension should be readable in any language and screen width.\r\n\r\n**Actual behavior**\r\nFor long dates and especially in French, the renewal date can be partially hidden at some screen resolutions.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Go to WooCommerce > My Subscriptions\r\n2. Have a connected WooCommerce.com account and a plugin installed and set to auto-renew\r\n2. Resize the window and watch for cropping-off of the date (this is more-likely to occur if your site is configured via Settings > General to be in French, and/or if the renewal date has a long month name e.g. November\r\n\r\n**Screenshots**\r\n![novembe](https://user-images.githubusercontent.com/53293/143872871-c48ad897-42aa-4ee4-8cda-9a3d150004b2.png)\r\n\r\nScreenshot above shows the word \"November\" cropped so that the last letter is not visible.\r\n\r\nVideo at https://d.pr/v/fFMIdd demonstrates the problem. As the window is resized, parts of the words \"novembre 29th, 2022\" are cropped off.\r\n\r\nScreenshot taken on a WordPress.com-hosted site with WooCommerce and the shown extension installed, using Firefox 94.0.1 on MacOS Monterey.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051447,641282302]"}
{"prompt":"\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nThe `Orders` Widget on `WP Admin > WooCommerce > Home`  (a.k.a WooCommerce Dashboard page) seems to show erratic names against each order number. The names do not match with the name of the actual customer on the order.\r\n\r\n**Expected behavior**\r\nOrder numbers should have matching names of the customer that gave the order\r\n\r\n**Actual behavior**\r\nOrder number has a different customer's name against it\r\n\r\nOn dashboard: \r\n![image](https://user-images.githubusercontent.com/4162931/143382089-7e48d231-9caf-4384-b2a6-652c65c68582.png)\r\n \r\nOn order details:\r\n![image](https://user-images.githubusercontent.com/4162931/143382168-4a3a003f-6440-4f30-a8c1-7a2e76383b4f.png)\r\n\r\nCustomer name is from a different order:\r\n![image](https://user-images.githubusercontent.com/4162931/143382243-d1d9a786-04d7-43c0-9ec0-d6443959d676.png)\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Create a test site with WooCommerce plugin installed and onboarding completed\r\n2. Import test products using sample data or using plugin like [WooCommerce Product Generator ](https://wordpress.org/plugins/woocommerce-product-generator/)\r\n3. Create test orders. I used this [Order simulator plugin](https://github.com/75nineteen/order-simulator-woocommerce/archive/master.zip) to generate fake orders quickly \r\n4. Browse to `WP Admin > WooCommerce > Home` and check the `Orders` section in the dashboard widgets. \r\n5. Examine the name that appears on the order number, click the order to get into the details and compare the name you see there. \r\n\r\n**Screenshots**\r\nShared above. \r\n\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051458,3943104021]"}
{"prompt":"**Is your feature request related to a problem? Please describe.**\r\nOur POS system has an integration to WooCommerce for updating inventory status.\r\nSome customers might have a large number of products and product variations (20 000+)\r\nThe batch operation can manage 100 items in one request which is working very well when we handle only normal products because the url used is `/wp-json/wc/v3/products/batch`\r\n\r\nHowever, if there are product variations, the url used is `/wp-json/wc/v3/products/<product_id>/variations/batch`\r\nBecause of the <product_id> part, our server have to split up this batch operation into several different requests, which will result in a huge amount of small http request. Doing this will then futher result in the woocommerce server rejecting requests because of rate limit or some other kind of protection against to many requests from same source.\r\n\r\nI've googled quite a lot but have not been able to find any kind of plugin that solves this and I worry that it might have to do how the database is designed when it comes to product variations.\r\n\r\n\r\n**Describe the solution you'd like**\r\nThe best solution from our point of view is to be able to perform batch operation on product variations on the same url as for normal products, `/wp-json/wc/v3/products/batch`\r\nand the body would look like this\r\n\r\n```\r\n{\r\n  \"update\": [\r\n    {\r\n      \"id\": 733,  <<< the product id for a normal product\r\n      \"stock_quantity\": 10\r\n    },\r\n    {\r\n      \"id\": 734,  <<< the product id for a product variation\r\n      \"variation_id\": 1453,\r\n      \"stock_quantity\": 10\r\n    }\r\n  ],\r\n}\r\n\r\n```\r\n\r\n**Describe alternatives you've considered**\r\nOr the body could look like this\r\n\r\n```\r\n{\r\n  \"update\": [\r\n    {\r\n      \"id\": 733,  <<< the product id for a normal product\r\n      \"stock_quantity\": 10\r\n    },\r\n    {\r\n      \"id\": 1453,  <<< the product variation id for a product variation\r\n      \"stock_quantity\": 10\r\n    }\r\n  ],\r\n}\r\n\r\n```\r\n\r\nAnother solution would be a completely new url for mixing products and product variations.\r\n\r\nEither way, the way product variations are handled today is not very efficient when it comes to batch operations.\r\n\r\n\r\n\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"Hello.\r\nHere is a request that would be handy for many developers. On product archives and single product page, if we want to alter the alt text from an image, we can use the hook wp_get_attachment_image_attributes and supply an alt text (for example product title)\r\n\r\nThat is not working on flexslider though (wc-product-gallery-slider). On the function wc_get_gallery_image_html(), we have a filter woocommerce_gallery_image_html_attachment_image_params but it cannot affect the \"alt\" text. \"Alt\" text is read from attachment's _wp_attachment_image_alt custom field. \r\n\r\nCan we add a filter so we can modify alt, as we do with the wp_get_attachment_image_attributes?\r\n\r\nThat would be handy for having alt texts related to products, with no need to modify wc_get_gallery_image_html()\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"Please provide us with the information requested in this bug report. Without these details, we won't be able to fully evaluate this issue. \r\nBug reports lacking detail, or for any other reason than to report a bug, may be closed without action.\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [ x ] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [ x ] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\n\r\nWhen using bulk edit on products, even on a single product, the value of a global attribute is changed if the failure mode criteria are met (described below).\r\n\r\n**Expected behavior**\r\n\r\nBulk editing products should leave attributes untouched.\r\n\r\n**Actual behavior**\r\n\r\nBulk editing a product that has a global attribute of \"Second-hand grade\" set to \"MINT-\" has the attribute value changed to \"MINT\".\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Create a product attribute \"Second-hand grade\" with terms: UNUSED, MINT, EXC++, EXC+, EXC, VG, VG-, NEW, MINT-\r\n2. Create a product with the attribute \"Second-hand grade\" set to \"MINT-\" and publish\r\n3. Bulk edit the product and change something, eg., add a tag\r\n4. The \"Second-hand grade\" is now set to \"MINT\"\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ x ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ x ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [ x ] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n`\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"**Is your feature request related to a problem? Please describe.**\r\nWhen integrating WooCommerce into a theme which uses an existing CSS framework such as Bootstrap, it would be useful to be able to add classes from that framework to different elements rather than override the CSS manually.  This functionality already exists for the add-to-cart button on the Shop page, see solution.\r\n\r\n**Describe the solution you'd like**\r\nA hook similar to the `woocommerce_loop_add_to_cart_args` filter, which allows the modification of classes applied to the add-to-cart button used on the main Shop page.\r\n\r\n**Describe alternatives you've considered**\r\nOverriding the WC `button` class CSS manually by copy and pasting the CSS from Bootstrap.\r\n\n\n###\n\n","completion":" [1891051447]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen selected the **Yes, I will enter prices inclusive of tax** as **Prices entered with tax** at WooCommerce -> Settings, variable product has prices with tax, but in **schema**, it is priced without tax.\r\n\r\n**Expected behavior**\r\nIn variable product schema, price should be shown with tax.\r\n\r\n**Actual behavior**\r\nVariable products show price with tax, but in the schema, the tax is not included.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Go to WooCommerce -> Settings.\r\n2. Click on  **Enable tax rates and calculations**\r\n3. Click on the tab named **Tax**\r\n4. Scroll to **Prices entered with tax** option at **Tax options** tab.\r\n5. Select **Yes, I will enter prices inclusive of tax**\r\n6. Add standard tax of 10%\r\n7. View any variable product.\r\n8. Copy the page source.\r\n9. Page it to https://validator.schema.org/\r\n10. The lowPrice and highPrice at offers are different than the variable product page\r\n\r\n**Screenshots**\r\n1. ![image](https://user-images.githubusercontent.com/11308328/142825776-c833bf27-6161-469a-8d84-0bdbe8ce08c3.png)\r\n2. ![image](https://user-images.githubusercontent.com/11308328/142825699-e8c1c09a-cc0b-465f-996e-6670bb106228.png)\r\n3. ![image](https://user-images.githubusercontent.com/11308328/142832747-405f8030-e2a6-47f3-9602-1b29cc7bee7e.png)\r\n\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n`\r\n\n\n###\n\n","completion":" [1891051453,1891051456]"}
{"prompt":"https://github.com/woocommerce/woocommerce/blob/3611d4643791bad87a0d3e6e73e031bb80447417/plugins/woocommerce/includes/wc-formatting-functions.php#L1296\r\n\r\nNeed to replace with:\r\n```\r\n$weight_string .= ' ' . __(get_option( 'woocommerce_weight_unit' ), 'woocommerce');\r\n```\r\n\r\nThe same inside **wc_format_dimensions** function.\n\n###\n\n","completion":" [468434635]"}
{"prompt":"### Is your feature request related to a problem? \r\n\r\nAn install routine runs every time Woo Admin is updated, performing jobs such as migrating the database.\r\n\r\nhttps://github.com/woocommerce/woocommerce-admin/blob/aa608396ce1427b58d2573c3971089bf95dc3e5a/src/Install.php#L189-L214\r\n\r\nHowever when the install routine fails for some reason, it can leave the site in an expected state with not all jobs being completed. \r\n\r\nThese types of issues were reported in PR https://github.com/woocommerce/woocommerce-admin/pull/6726.\r\n\r\nundefinedThe progress of the install routine could be tracked, with the ability for admin users to resume it after a failure. Logging could also be added to report failures.\r\n\r\n### Describe alternatives you've considered\r\n\r\nN/A\r\n\r\n### Should this be prioritized? Why?\r\n\r\nYes, the current situation leaves users without a path to perform corrective actions when the site is in an unexpected state.\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nA user has a coupon code that has either the `Usage limit per coupon` or `Usage limit per user` set to `1`.\r\nIf they try to checkout with the coupon and the payment fails, the coupon gets stuck. The next retry fails and removes the coupon, even if payment would have succeeded. The coupon is no longer usable.\r\nThis issue is reproducible on both the woocommerce.com platform and on a fresh installation.\r\n\r\nIt looks like the `WC_Discounts::validate_coupon_usage_limit()` and `WC_Discounts::validate_coupon_user_usage_limit` methods don't account for re-trying an order that already has a coupon attached.\r\n\r\n**Expected behavior**\r\nThe coupon doesn't get stuck on payment retries. It was already successfully applied to the order being checked out. \r\n\r\n**Actual behavior**\r\nThe coupon gets stuck on the first payment failure and get's removed on retry. The coupon is no longer usable.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n- Add a coupon with `Usage limit per coupon` or `Usage limit per user` set to `1`.\r\n- Add a product to the cart and proceed to checkout.\r\n- In the cart or checkout pages add the coupon.\r\n- Try to complete the checkout with a Stripe test card that fails payment, like `4000000000000002` which returns a `card_declined` error. The payment will fail.\r\n- Now try using a test card that works like `4242424242424242`.\r\n- See an error at the top claiming there's a problem with the coupon and confirm that the coupon was removed.\r\n- Trying to re-add the coupon fails with the same error.\r\n- The coupon is now stuck and can't be used even though `wp-admin` reports `0/1` usages.\r\n- Canceling the failed order releases the coupon.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n\r\n\n\n###\n\n","completion":" [1891051442]"}
{"prompt":"Please provide us with the information requested in this bug report. Without these details, we won't be able to fully evaluate this issue. \r\nBug reports lacking detail, or for any other reason than to report a bug, may be closed without action.\r\n\r\n<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\naddress-i18n assumes that all \":inputs\" are inputs when it comes to hidden fields.\r\n``` PHP\r\n\r\n// Hidden fields.\r\nif ( 'state' !== key ) {\r\n    if ( typeof fieldLocale.hidden !== 'undefined' && true === fieldLocale.hidden ) {\r\n        field.hide().find( ':input' ).val( '' );\r\n    } else {\r\n        field.show();\r\n    }\r\n}\r\n``` \r\n\r\nSpecifically speaking, this line here.\r\n\r\n``` PHP\r\nfield.hide().find( ':input' ).val( '' );\r\n```\r\n\r\nThis line is a problem because, on checkbox fields, WooCommerce adds a static ```<input ... value=\"1\" />``` to all checkbox fields on address/checkout forms. When you clear this value using ```.val('')``` this field will always be treated as \"unchecked\" and submit an ambiguous empty value when submitted.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\n \r\n### Custom Code \r\n_**NOTE: Certain names have been changed to protect IP and code has been simplified for demo purposes so I apologise for bugs (if any)**_\r\n```PHP\r\n// Setup the custom field\r\nadd_filter( 'woocommerce_checkout_fields', function( $fields ) {\r\n    $fields['billing']['my_custom_field'] = array(\r\n            'type'      => 'checkbox',\r\n            'label'     => __( 'My custom field '  ),\r\n            'required'  => false, \r\n            'priority'  => 310,\r\n            'class'     => [\r\n                'form-fow-wide'\r\n            ],\r\n    )\r\n    return $fields\r\n}  );\r\n\r\n// Add internationalization for checkbox field\r\nadd_filter( 'woocommerce_get_country_locale', function( $locale ) {\r\n    $locale['NZ']['my_custom_field'] =  [\r\n        'hidden' => true\r\n    ];\r\n    \r\n    return $locale;\r\n}, 100 );\r\n```\r\n\r\nNow inspect the code at checkout and look for the new field. Take note of ```<input ... value=\"1\" />```\r\n\r\nChange the Billing Country to \"New Zealand\"\r\n\r\nNow inspect the code for the new field. You should see ```<input ... value />``` instead.\r\n\r\nNow when this form is submitted WooCommerce will assume this checkbox is unticked regardless of whether it was ticked or not. \r\n\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nn/a\r\n\n\n###\n\n","completion":" [1891051440]"}
{"prompt":":**\r\nWooCommerce renders sale products with the old price wrapped by `<del>` tags and the current price next to it.\r\nCurrently, screen readers read both prices without specifying which one is the old one and which one is the current one.\r\n\r\n**Expected behavior**:\r\nIdeally, the screen reader should read something along these lines:\r\n```\r\nPrevious price: 123$, Discounted price: 100$\r\n```\r\n\r\nMore details on https://github.com/woocommerce/woocommerce-gutenberg-products-block/issues/1668\n\n###\n\n","completion":" [702347761]"}
{"prompt":"### Describe the bug\r\nWhen a user moves back to the Store profile page of Setup Wizard flow from Buisness details page and again move back to Business Details page by clicking on continue then following options has spacing issues-\r\n1.  `How many products do you plan to display?` --> \r\n`- 1000 is showing as 1 000 `\r\n`- 1000+ is showing as 1 000+`\r\n2.  `What's your current annual revenue?` ---->\r\n-` Up to 3000,00 ‚Ç¨  is showing as Up to 3 000,00 ‚Ç¨`\r\n-` Up to 3000,00 ‚Ç¨ - 10000,00 ‚Ç¨ is showing as Up to 3 000,00 ‚Ç¨ - 1 0000,00 ‚Ç¨`\r\n\r\n\r\n### To Reproduce\r\n<!-- Describe the steps to reproduce the behavior.-->\r\n\r\n1. Install WooCommerce plugin\r\n2. Activate the WooCommerce plugin and wait for the WooCommerce Setup Wizard flow to open\r\n3. Now complete the setup flow and move to the Business details page by selecting `√Öland Islands` as input for country.\r\n3. Again move back to `store profier` page from `business details` page and then again move back to Business Details page by clicking on continue\r\n4. Observe the `How many products do you plan to display?` and `What's your current annual revenue?` options for spacing issue.\r\n\r\n### Actual behavior:\r\nThere should not be any spacing issue for the above said options.\r\n\r\n### Screenshots\r\n\r\nhttps://user-images.githubusercontent.com/19307354/140278286-0f1bf49a-dd32-4911-b9c7-1870087ba131.mp4\r\n\r\n\r\n\r\n### Expected behavior\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n### Desktop (please complete the following information):\r\n\r\n* OS: Windows OS\r\n* Browser: Chrome\r\n* Version: 95.0.4638.69\r\n\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"### Describe the bug\r\nWhen a user moves back to the `Product page` of Setup Wizard flow from `Business details page` and make some changes on the page and saves it, Now if the user moves back to `Product page` again and do the browser refresh then the selected items are getting unselected.\r\n\r\n### To Reproduce\r\n\r\n1. Install WooCommerce plugin\r\n2. Activate the WooCommerce plugin and wait for the WooCommerce Setup Wizard flow to open\r\n3. Now complete the setup flow and move to the Business details page.\r\n4. Now move back to the `Product page` of Setup Wizard flow from `Business details page` and make some changes on the page and save it by clicking continue.\r\n5. Now again move back to `Product page` and do the browser refresh and verify the items which were selected on step 4.\r\n\r\n### Actual behavior:\r\nIf the user moves back to the `Product page` again and do the browser refresh then the selected items are getting unselected.\r\n\r\n### Screenshots\r\n\r\nhttps://user-images.githubusercontent.com/19307354/140269741-fcf7dab4-d926-41d7-b227-d36fcfe1d15a.mp4\r\n\r\n\r\n\r\n### Expected behavior\r\nUser-selected items should not be unselected/unchecked on doing the browser refresh.\r\n\r\n### Desktop (please complete the following information):\r\n\r\n* OS: Windows OS\r\n* Browser: Chrome\r\n* Version: 95.0.4638.69\r\n\r\n\r\n\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"### Describe the bug\r\n[Setup Wizard]- When the User is navigated to the WooCommerce Setup Wizard flow and is on the `Free features` section of the `Business details` page, then if the user unselects them and move to the next step which is for choosing the theme now if the user moves back to `Business Details` page and check for `free features` sections then all the options are shown as selected even though user unselected them while setting up the store.\r\n\r\n### To Reproduce\r\n\r\n1. Install WooCommerce plugin\r\n2. Activate the WooCommerce plugin and wait for the WooCommerce Setup Wizard flow to open\r\n3. Now move on to the `Free features` section of the `Business details` page, Uncheck all the checked items and press continue.\r\n4. When the user is on the `Choose a theme ` section now again move back to the `Free features` section of the `Business details` page using the browser back button or by selecting `Business details` present on top.\r\n5. When a user is on the `Free features` section of the `Business details` page check that all the options present on `Free features` are coming as checked.\r\n\r\n### Actual behavior:\r\nIf the user moves back to the `Business Details` page and checks for the `free features` sections then all the options are shown as selected even though the user unselected them while setting up the store.\r\n\r\n### Screenshots\r\n\r\nhttps://user-images.githubusercontent.com/19307354/140267060-02ced7db-7c5f-479f-bab4-b385038bc034.mp4\r\n\r\n\r\n\r\n### Expected behavior\r\nIf the user has unchecked the items on the` Free features` page during the setup then those items should not be shown as selected once he moves back to the same page.\r\n\r\n### Desktop (please complete the following information):\r\n\r\n* OS: Windows OS\r\n* Browser: Chrome\r\n* Version: 95.0.4638.69\r\n\r\n\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"### Describe the bug\r\n- When a user is on the Industry page of Setup Wizard flow with few checked options and when the user tries to refresh the browser, the checked options are getting unchecked for the user.\r\n- This issue is also happening if a user is trying to move back to the Industry page from some other sections and then do the browser refresh then in that case also user saved check options are getting unchecked.\r\n\r\n\r\n### To Reproduce\r\n1. Install WooCommerce plugin\r\n2. Activate the WooCommerce plugin and wait for the WooCommerce Setup Wizard flow to open\r\n3. Navigate to the Industry page of the flow and check some options and then do the browser refresh.\r\n4. Observe your previously checked items on the page and see if they are getting unchecked.\r\n5. To reproduce the second scenario, Save your checked options on the Industry page and continue to the product page. After moving to the product page, again move back to the Industry page by the browser back button and again do the browser refresh.\r\n6. Observe your previously checked items on the Industry page and see if they are getting unchecked.\r\n\r\n\r\n### Actual behavior:\r\nChecked options of industry page is getting unchecked on doing browser refresh.\r\n\r\n### Screenshots\r\n\r\nhttps://user-images.githubusercontent.com/19307354/140187102-b7fa67aa-8144-4c7d-b7e1-b649a1d5f36c.mp4\r\n\r\n\r\n\r\n### Expected behavior\r\nThe checked options should not be unchecked on doing the browser refresh\r\n\r\n### Desktop (please complete the following information):\r\n\r\n1. OS: Windows OS\r\n2. Browser: Chrome\r\n3. Version: 95.0.4638.69\r\n\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [X] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [X] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWith the setting ‚ÄúRound tax at subtotal level, instead of rounding per line‚Äù and the \"number of decimals to 0\", woocommerce would wrongly save the tax amount as rounding.\r\n\r\n**Expected behavior**\r\ntax amount should not be saved rounded.\r\n\r\n**Actual behavior**\r\nthe tax amount is saved as rounded.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\n\r\n1‚Äì use the theme ‚ÄústoreFront‚Äù\r\n2‚Äì activate only 2 plugins : woocommerce and WooCommerce Stripe Gateway (I guess you can use another gateway if you want)\r\n\r\n‚Äì in the woocommerce general settings:\r\n3. enable tax rate and calculation\r\n4. set the number of decimals to 0\r\n\r\n‚Äì in the TAX settings:\r\n5. enable Yes, I will enter prices inclusive of tax\r\n6. DO NOT check ‚ÄúRound tax at subtotal level, instead of rounding per line‚Äù\r\n\r\n7‚Äì set your payment in test mode\r\n8‚Äì go to the shop, and purchase something with some taxes.\r\ndo all the checkout process until the end, up to the ‚ÄúOrder received‚Äù confirmation\r\n\r\n9‚Äì on the backend, go to woocommerce->orders and select the order you just did to see the details.\r\nHere is what I have : https://ibb.co/ySKXWZX\r\n\r\nas you can see, everything (prices/taxes) is rounded. all good.\r\n\r\n10‚Äì go back to the general settings, and set the number of decimals to 2\r\n\r\n11‚Äì refresh the order page you were looking at previously. I have that : https://ibb.co/K9xWjPG\r\n\r\nas you can see the vat is not correctly updated, it is still rounded. this is a bug. woocommerce has stored the order total taxes as rounded.\r\n\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [X] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [X] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [X] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051453]"}
{"prompt":"The switch to remote payment gateways resulted in an inadvertent change for the ID for the Paypal gateway. \r\n\r\nPreviously identified as `paypal`, it's now referred to as `ppcp-gateway` in tracks events. Explore options for restoring the previous ID of `paypal` in events such as `wcadmin_tasklist_payment_setup` currently fired [here](https://github.com/woocommerce/woocommerce-admin/blob/a6e35e94333cb07f95327c0f4629d44343c4d587/client/tasks/fills/PaymentGatewaySuggestions/components/List/Item.js#L91).\r\n\r\nFor additional background on why this was created, see https://github.com/woocommerce/woocommerce-admin/issues/7836.\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen editing an order in the backend, it is possible to add a product with a negative quantity. However, after that, the **Update** button does not work anymore.  Error in console: \"_An invalid form control with name 'order_item_qty[2767] is not focusable._\"\r\n\r\n**Expected behavior**\r\nEither it should be made impossible to add a product with a negative quantity, **OR** the Update button should work again after that.\r\n\r\n**Actual behavior**\r\nI believe it should not be possible to add products with a negative quantity to begin with.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. In the backend, open an order that can be edited (e.g. \"Pending Payment\")\r\n2. Add an item to the order with quantity -1 (you have to *type* it, as the arrows will only let you go to 0).\r\n3. Select the Update button.\r\n\r\n**Screenshots**\r\nhttps://d.pr/i/4zDXYS\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"<!--  Make sure to look through existing issues to see whether your idea is already being discussed. Feel free to contribute to any existing issues. -->\r\n\r\n<!-- Search tip: You can filter issues using our enhancement label https://github.com/woocommerce/woocommerce/issues?q=is%3Aissue+label%3Aenhancement -->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nSometimes, when product meta _stock_status is set to out of stock, or out of stock term is assigned to the product, but the product lookup table is set to in stock, the product appears as in stock in the admin area, but is out of stock on the front end.\r\n\r\n**Describe the solution you'd like**\r\nOne source of truth (ideally a performant one) should be used across the product.\r\n\r\n**Describe alternatives you've considered**\r\nSyncing it regularly.\r\n\r\n**Additional context**\r\nRelated to several issues we've seen and got in support.\r\n\n\n###\n\n","completion":" [1891051471]"}
{"prompt":"If in our CSV the product have weight set to \"1,800\". Which converted by default in excel if we convert from xlsx to csv.\r\n\r\nOur final imported weight will be set to: \"2 g\" instead of \"1800 g\"\n\n###\n\n","completion":" [1891051450]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\n\r\nThis issue can be replicated when using the [WooCommerce Local Pickup Plus](https://woocommerce.com/products/local-pickup-plus/) extension and enabling a discount for orders when choosing the Local Pickup option. SkyVerge mentioned that we need to address this from our end. They say: \"We leverage WooCommerce's core fees API to implement this discount. Would it be possible to adjust the fees API to exclude tax from negative fees?\"\r\n\r\nOn the Checkout, Order Details and Admin Emails, the calculations are perfect. The issue only occurs when reviewing the Order via WooCommerce > Orders > Edit Order. The values don't match up and can cause issues when importing the data to an accounting system. \r\n\r\n**Expected behavior**\r\n\r\nThe discount should be applied to the product and not the tax, and the values should be showing how they do on the Checkout/Order Details Pages. \r\n\r\n**Actual behavior**\r\n\r\nThe tax amount is having a discount applied to it and this does not match up. The discount should just be applied to the items. \r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. You can install [WooCommerce Local Pickup Plus](https://woocommerce.com/products/local-pickup-plus/) on your site\r\n2. Go to WooCommerce > Shipping, and set it up like [this](https://docs.woocommerce.com/document/local-pickup-plus/#section-4)\r\n3. Ensure you have taxes enabled on your site\r\n4. Checkout with a product, then compare the Checkout/Order Details page with what you see via WooCommerce > Orders\r\n\r\n**Screenshots**\r\n\r\nThe checkout and order details information which is correct:\r\n\r\n![image](https://user-images.githubusercontent.com/16253818/139402325-8ee08c83-733f-4afa-9c39-2c4dae96f19e.png)\r\n\r\nThe edit order page: \r\n\r\n![image](https://user-images.githubusercontent.com/16253818/139402655-05b44072-1253-4eb0-b413-cbf8e04349fb.png)\r\n\r\nThe discount settings in Local Pickup Plus: \r\n![image](https://user-images.githubusercontent.com/16253818/139402785-76320a87-e8d3-4f77-9c40-8bc31705d305.png)\r\n\r\n\r\n\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins besides Local Pickup Plus and WooCommerce and confirmed this bug occurs\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n\r\n4409822-zd-woothemes\n\n###\n\n","completion":" [1891051437]"}
{"prompt":"<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [ x ] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [ x ] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen the sale date ends on scheduling, the price remains same as the sale price.\r\n\r\n**Expected behavior**\r\nWhen the sale date ends on scheduling, the price will be reset back to it's original price.\r\n\r\n**Actual behavior**\r\nWhen the sale date ends on scheduling, there still shows sale price.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Go to products page and edit a product\r\n2. Set a sale price\r\n3. Click on schedule\r\n4. Set start and end date\r\n\r\n**Screenshots**\r\n\r\nhttps://user-images.githubusercontent.com/44554636/139307461-b3f0611e-ad10-43f9-9888-2fe0cfbaa3dc.mp4\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ x ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ x ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [ x ] I can reproduce this bug consistently using the steps above.\r\n\r\n<details>\r\n\r\n\n\n###\n\n","completion":" [1891051440]"}
{"prompt":"This is a feature request. \r\n\r\nWe would like to see the ability to filter orders by meta_data key and key + value. I would like to see a way to filter by meta_data key and  meta_data key + value since I think this would be useful for a number of integrations and would save us from having to make a bunch of extra calls to the WooCommerce API and tons of data in a single call.\r\n\r\nI think that this would be a useful thing to have for multiple use cases.\r\nThe current use case I have is that I would like to look at a list of orders with specific meta_data key or meta_data key + value\r\nThis could additionally be useful for integrations with list of orders so that they could check only specific orders without having to request the entire list of orders.\r\nIt looks like one way to solve this would be to put in a code change around here to add the ability to filter by meta_data key or meta_data key + value.\r\n\r\nAdditionally this change can be an addition to the existing API and is not a breaking change so it wouldn't require any versioning issues and wouldn't break anyone's existing integrations.\r\n\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nHello)\r\nIn `fontend/add-to-cart.js` you have `updateFragments` method. \r\nThis method calls after AJAX add to cart for update cart on-page.\r\nBefore replace you add to replaced block opacity and fade https://take.ms/skSOq\r\nThis part of the code adds styles for all cart elements on the page if the page has more than one cart element this code very slows down.\r\nThis browser performance test on add to cart with one cart element https://prnt.sc/1x2hstg (166ms)\r\nThis browser performance test on add to cart with five cart elements https://prnt.sc/1x2hxgl (310ms)\r\n\r\nI suggest adding the ability to disable a part of the code that affects performance, for example by adding a filter.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051436,472334370]"}
{"prompt":"<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen having large numbers of products (4000+) using the sort feature in the product list, the request will take more than 5 minutes to complete because it fetches the menu order of all products and updates the order of all 4000 products one by one in one request and so times out in many setup as well make the feature clearly unusable from a UX standpoint\r\n\r\nThe issue lies within [this piece of code](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/includes/class-wc-ajax.php#L1868) as you can see\r\n```php\r\n$menu_orders = wp_list_pluck( $wpdb->get_results( \"SELECT ID, menu_order FROM {$wpdb->posts} WHERE post_type = 'product' ORDER BY menu_order ASC, post_title ASC\" ), 'menu_order', 'ID' );\r\n$index       = 0;\r\n\r\nforeach ( $menu_orders as $id => $menu_order ) {\r\n\t$id = absint( $id );\r\n\r\n\tif ( $sorting_id === $id ) {\r\n\t\tcontinue;\r\n\t}\r\n\tif ( $nextid === $id ) {\r\n\t\t$index ++;\r\n\t}\r\n\t$index ++;\r\n\t$menu_orders[ $id ] = $index;\r\n\t$wpdb->update( $wpdb->posts, array( 'menu_order' => $index ), array( 'ID' => $id ) );\r\n\r\n\t/**\r\n\t\t* When a single product has gotten it's ordering updated.\r\n\t\t* $id The product ID\r\n\t\t* $index The new menu order\r\n\t*/\r\n\tdo_action( 'woocommerce_after_single_product_ordering', $id, $index );\r\n}\r\n```\r\nA different approach should be used to sort products efficiently that only needs to fetch and update a limited number of products (3) by using this method https://stackoverflow.com/a/25432597/2977175\r\n\r\n**Expected behavior**\r\nThe sort to complete within less than 10 seconds in all setup and not just on sites with less than 100 products\r\n\r\n**Actual behavior**\r\n```\r\nPOST /wp-admin/admin-ajax.php 504 Gateway Timeout 60071ms\r\naction | \"woocommerce_product_ordering\"\r\nid | \"165506\"\r\nprevid | \"153572\"\r\nnextid | \"163317\"\r\n```\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Insert more than 5000 products\r\n2. Go to 'Products > Sorting'\r\n3. Move up or down one product \r\n4. See error\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n\n\n###\n\n","completion":" [472334370]"}
{"prompt":"In #28745 we reverted some of the performance enhancements we were planning to add in 4.9 because of a bug that we found during the release process.\r\nThis issue scopes re-implementing those enhancements for orders, by making sure that wc_get_orders and wc_get_products support WP_Query filter parameters, along with adding tests for all those params.\n\n###\n\n","completion":" [2258932484,472334370]"}
{"prompt":"Currently we preload the notices queue and use `updateOptions` to track notices that have been viewed.\r\n\r\nhttps://github.com/woocommerce/woocommerce-admin/blob/c1f4ebfb7747584387be74f8a613e3726506b4d0/client/layout/transient-notices/index.js#L39-L41\r\n\r\nhttps://github.com/woocommerce/woocommerce-admin/blob/c1f4ebfb7747584387be74f8a613e3726506b4d0/client/layout/transient-notices/index.js#L54-L56\r\n\r\nThis could benefit from creating 2 new endpoints and removing the use of `updateOptions` and `getOption` in this component.\r\n\r\n* `/notices` - Get all queued notices (possibly with a filter param for user ID)\r\n* `/notices/{$id}/dismiss` Dismiss a given notice.\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"### Describe the bug\r\nToggling between the monthly and yearly pricing on the Product Types step of the Setup Wizard produces different pricing (because of rounding, and you can't have partial cents).\r\n\r\nFor example, Subscriptions are $16.58 per month.  $16.58 * 12 = $198.96 but the displayed yearly pricing is $199.  \r\n\r\n### To Reproduce\r\n\r\n1. Go to /wp-admin/admin.php?page=wc-admin&path=%2Fsetup-wizard&step=product-types\r\n2. Note the monthly prices.  One would expect the yearly price to be this number * 12\r\n3. Click toggle\r\n4. Compare prices\r\n\r\n### Actual behavior:\r\nThe pricing is out by a few cents for Subscriptions, Memberships, Bundles and Customizable Products ($4.08 * 12 = $48.96)\r\n\r\n### Expected behavior\r\nIt's clear that this is a rounding issue.  The price for each service is billed annually, so the monthly prices are just an approximation -- but the default is to display the approximation, not the actual price -- which is a little misleading.  \r\n\r\n### Desktop (please complete the following information):\r\n\r\n* OS: MacOS\r\n* Browser: Chrome\r\n* Version: 94\r\n\r\n### Additional context\r\n\r\nIt's not a huge deal financially, but if one price is displayed and a different price is charged, that's a bit misleading.  What if people don't notice the toggle, and just assume that the price will be $monthly * 12?\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"Similar to woocommerce/woocommerce#32230 - the prices listed on the Themes page aren't clear.  The $ currency symbol is used by a number of countries, and it's not clear that the prices shown are in USD.\r\n\r\n### To Reproduce\r\n\r\n1. Go to /wp-admin/admin.php?page=wc-admin&path=%2Fsetup-wizard&step=theme\r\n2. Click on 'Paid themes'\r\n\r\n### Actual behavior:\r\n\r\nSeveral themes are listed at $79.00 per year.  It's not clear if that's Canadian Dollars, US Dollars, Australian Dollars or some other currency.\r\n\r\n### Screenshots\r\n\r\n![Screen Shot 2021-10-11 at 5 19 26 PM](https://user-images.githubusercontent.com/80276/136870123-6327d633-237c-4d83-910c-453d8c652174.png)\r\n\r\n### Expected behavior\r\n\r\nThe simplest solution would be to add some test to the footer stating \"Prices shown are billed in US dollars\", or to implement the currency code (USD, CAD, AUD). Optionally, it would be great if an estimated price in the local currency was shown (based on the selection in step 1).\r\n\r\n### Desktop (please complete the following information):\r\n\r\n* OS: MacOS\r\n* Browser Chrome\r\n* Version  94.0.4606.71\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"### Describe the bug\r\nWhen working through the Setup Wizard, if you're interrupted and have to return later (maybe your browser crashes, or you have a power failure, or just get distracted and close the window!), your progress is forgotten and you're returned to the first step of the Setup Wizard.\r\n\r\nYour address data is pre-populated, however your response to the Usage Tracking modal is forgotten if you answered No.  If you answered Yes, you are not presented with the modal again\r\n\r\n### To Reproduce\r\n\r\n1. Go to /wp-admin/admin.php?page=wc-admin&path=%2Fsetup-wizard&step=store-details\r\n2. Complete the required address information\r\n3. Click Continue\r\n4. Click \"No\" for allowing tracking usage\r\n5. Close your browser\r\n6. Open a new window, go to the Wordpress Admin (/wp-admin) and click on \"WooCommerce\" on the left\r\n7. Click on Continue\r\n\r\n### Actual behavior:\r\nYou are directed back into the setup wizard, but starting at step 1.  You can still click forward to step 2, 3, 4, or 5 (assuming you had gotten that far previously).  Additionally, the modal to allow usage tracking is displayed again.  If you answer \"Yes\" the first time through, you are not shown the dialog again\r\n\r\n### Expected behavior\r\nIdeally, you'd pick up where you left off.  If you made it to Product Types, you should start at Product Types when resuming the Setup Wizard.\r\n\r\nThere should be consistent behavior for both options in usage tracking.  Either save the response for both yes and no, or don't save the response at all until the wizard has been completed.\r\n\r\n### Desktop (please complete the following information):\r\n\r\n* OS: MacOS\r\n* Browser: Chrome, Safari\r\n* Version: 94, 15.1\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"### Describe the bug\r\nA number of prices are listed on the Product Types step.  They are all listed as a dollar amount, but it isn't clear what currency those are using.  Are they Canadian Dollars?  US Dollars?  Australia Dollars?  A number of countries use the dollar sign for their currency, but there's no indication on this page what the currency is.\r\n\r\nI thought maybe the prices changed based on your country selection in Step 1 (if I select \"Canada\" I'll get one set of prices, whereas if I select \"United States\", I'll get a different set) but that doesn't appear to be the case\r\n\r\n### To Reproduce\r\n\r\n1. Go to /wp-admin/admin.php?page=wc-admin&path=%2Fsetup-wizard&step=product-types\r\n2. Note the prices displayed\r\n3. (Optionally) toggle \"Display monthly prices\"\r\n\r\n### Actual behavior:\r\n\r\nMonthly (or yearly) prices are displayed in dollars.  There isn't any indication that prices listed are in (US|Canadian|Australian...) dollars.  Even clicking through to \"Learn more\" doesn't clarify which currency is being used for billing.\r\n\r\n### Screenshots\r\n\r\n![Screen Shot 2021-10-11 at 12 24 05 PM](https://user-images.githubusercontent.com/80276/136845178-b70e270e-bf2d-4e16-9bf8-d1614309c814.png)\r\n\r\n![Screen Shot 2021-10-11 at 12 23 36 PM](https://user-images.githubusercontent.com/80276/136845126-74c616e9-02d1-4886-9fd2-f05b1db9bd86.png)\r\n\r\n### Expected behavior\r\n\r\nThe simplest solution would be to add some test to the footer stating \"Prices shown are billed in US dollars\".  Optionally, it would be great if an estimated price in the local currency was shown (based on the selection in step 1).\r\n\r\n### Desktop (please complete the following information):\r\n\r\n* OS: MacOS\r\n* Browser: Chrome\r\n* Version: 94.0.4606.71\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"- [X] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [X] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nCoupons are not included in usage stats or analytics when an order is paid via the My Account page. A \"Discount\" is applied to the order, but the data/stats related to the coupon that provided the discount is not available in any meaningful way.\r\n\r\n**Expected behavior**\r\nAll orders that receive discounts from coupons should be included in the coupon usage included in the analytics reporting (**Analytics > Coupons**) and coupon usage count (**Analytics > Coupons**).\r\n\r\n**Actual behavior**\r\nIf an order is successfully paid via the My Account page, any coupons that were applied to the order (either through a manually-created order or an order that was not initially successful when payment was attempted on the Checkout page- i.e. \"Failed\" or \"Pending Payment\" orders but paid for later via the My Account \"Pay\" button) are removed from the order details in every location except the order admin page for that specific order.\r\n\r\nThis means that the customer only sees a nondescript/generic \"Discount\" on the order when paying via My Account (no specific coupon code is shown) and the data from that sale is not included in the coupon usage stats (**Marketing > Coupons**) or the analytics (**Analytics > Coupons**).\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nThe following steps can be used to reproduce the bug:\r\n1. Create a Fixed cart discount coupon, assigned to a specific product.\r\n2. Create a manual order as an admin, adding that product and coupon code to the order, and assigning to a user account on the site.\r\n3. Log in with the assigned user and click the \"Pay\" button on the **My Account > Orders** page.\r\n4. Notice that the coupon code is not visible to the customer.\r\n5. Successfully pay for that order.\r\n6. View the paid order as an admin and notice the coupon code being specified.\r\n7. As an admin, look at the coupon usage stats (**Marketing > Coupons**) andz coupon analytics (**Analytics > Coupons**) and notice the paid order is not included in the reporting in either location.\r\n\r\n**Screenshots**\r\nFor the \"Failed\" order status, I used the Stripe gateway and test card number `4000008400001280`, which will decline:\r\n\r\n![](https://d.pr/i/WA5r6J+)\r\nLink to screenshot: https://d.pr/i/WA5r6J\r\n\r\n\"Pay\" button on the **My Account > Orders** page:\r\n\r\n![](https://d.pr/i/tnApTa+)\r\nLink to screenshot: https://d.pr/i/tnApTa\r\n\r\nThe coupon code is removed and replaced with a \"Discount\" for that amount:\r\n\r\n![](https://d.pr/i/Da4NRJ+)\r\nLink to screenshot: https://d.pr/i/Da4NRJ\r\n\r\nOrder admin view, showing the coupon having been applied:\r\n\r\n![](https://d.pr/Gz746N+)\r\nLink to screenshot: https://d.pr/Gz746N\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [X] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [X] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [X] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n<details>\r\n\r\n```\r\n\n\n###\n\n","completion":" [1891051442]"}
{"prompt":"### Is your feature request related to a problem? Please describe.\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [‚Ä¶] -->\r\nWhen developing Google Listings and Ads plugin. We have a number of button links: \r\n![image](https://user-images.githubusercontent.com/17435/135122371-f6b67c02-d599-43f5-b9e7-ad49aad55d2c.png)\r\nWe use [`@wordpress/components.Button`](https://wordpress.github.io/gutenberg/?path=/story/components-button--secondary), to achieve the look, to make it an accessible link, we just set the `href` component - easy and convenient.\r\n```jsx\r\nimport { Button } from '@wordpress/components';\r\nimport { getNewPath } from '@woocommerce/navigation';\r\n// ‚Ä¶\r\n<Button isSecondary\thref={ getNewPath( null, '/google/settings' ) } >Edit</Button>\r\n```\r\n\r\n\r\n\r\nBut it does the full page reload and does not use WC SPA feature.\r\n\r\nIn few places we tried making some use of `@woocommerce/components.Link` element:\r\n```jsx\r\nimport { Button } from '@wordpress/components';\r\nimport { Link } from '@woocommerce/components';\r\nimport { getNewPath } from '@woocommerce/navigation';\r\n// ‚Ä¶\r\n<Link href={ getNewPath( null, '/google/settings' ) }><Button isSecondary href={ getNewPath( null, '/google/settings' ) } >Edit</Button></Link>\r\n```\r\nWhich uses the Woo navigation features, and looks good at the first sight.\r\n\r\nBut it has a few drawbacks:\r\n- :red_circle:  A11Y is impaired, as the screenreader finds it as \"Edit, button\", instead of \"Edit, visited link\"\r\n- :red_circle:  It produces invalid HTML `<a><button>`\r\n- :factory_worker: Requires additional, fragile CSS workarounds\r\n- :nail_care: HTML markup is a bit redundant `<Link><KindaLink>`\r\n- :nail_care: :crystal_ball:  We may loose any features of WP.Button, for link buttons, like specific stling for visited button links, etc.\r\n\r\n\r\n----\r\n\r\nSo we need to choose either:\r\n- impaired experience for everybody, or\r\n- impaired experience, for people using assistive technology\r\n\r\n### Describe the solution you'd like\r\n<!-- A clear and concise description of what you want to happen. -->\r\nI'd like to be able to use an accessible link button, without compromising UX.\r\n\r\nI was thinking of two solutions:\r\n1. Make `@woocommerce/components` proxy `@wordpress/~` Buttons, adding the [`wc-admin` type handler](https://github.com/woocommerce/woocommerce-admin/blob/main/packages/components/src/link/index.js#L47-L49).\r\n\t- + This could help cover other issues related to WC vs WP Links, like woocommerce/woocommerce#32236\r\n\t- - Requires significant implementation and maintenance effort.\r\n2. Let the `Link` module export its intercepting logic, in the form of \r\n\t- component hook (p7H4VZ-2IH-p2, @diegohaz is that the applicable use-case?)\r\n\t- more composable component\r\n\t- or just a bare function, that a consuming developer, could use to attach `onClick` to WP or any other component.\r\n\tBasically, export https://github.com/woocommerce/woocommerce-admin/blob/main/packages/components/src/link/index.js#L18-L40\r\n\r\n### Describe alternatives you've considered\r\n<!-- A clear and concise description of any alternative solutions or features you've considered. -->\r\nWe could also think of a more sophisticated way to intercept any navigation on the DOM, or history API level. So any link pointing to a location within wc-admin would use SPA flow. With opt-in or opt-out strategy.\r\n\r\n(For example, In my previous Web Components based project, we had a solution, that was intercepting all navigation, then was finding the originating `<a>` element (even in shadow/composed events), checking if it was within a scope/subtree of a specific custom element, let's call it `<wc-page>` for our case, and without opt-out via an attribute or another component. Then it was either doing page morph, or letting the default behavior)\r\n\r\n### Should this be prioritized? Why?\r\nI believe the longest we have this uncovered, the more workarounds will popup in the plugins, effectively increasing the global maintenance cost for A8C and 3PDs.\r\n\r\n### Additional context\r\n<!--Any additional context, screenshots, or details you think might be helpful.-->\r\n- The problem sparked to me at https://github.com/woocommerce/google-listings-and-ads/pull/1025#discussion_r717329726\n\n###\n\n","completion":" [3943104021,3943425720,3943425968,702347761]"}
{"prompt":"Please provide us with the information requested in this bug report. Without these details, we won't be able to fully evaluate this issue. \r\nBug reports lacking detail, or for any other reason than to report a bug, may be closed without action.\r\n\r\n<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nthe `delete_option` function, which is triggering a SQL query in order to evaluate if an option exists before proceeding with deletion, is being called on every admin screen load via `WC_Admin_Notices::remove_notice` method, which is called on `wp_loaded` hook from `WC_Admin_Notices::add_redirect_download_method_notice`. (and the same goes for `WC_Regenerate_Images::regenerating_notice`)\r\n\r\n**Expected behavior**\r\nIMHO, the code should take advantage of the internal caching inside the `get_option` function to check whether the option has to be deleted, before calling the `delete_option`.\r\n\r\n**Actual behavior**\r\nNo check is performed.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. have a plugin allowing to check SQL queries run on a specific screen (eg.: Query Monitor) installed\r\n2. Go to wp-admin screen\r\n3. See the SQL query coming from the `delete_option` being run\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\n\n\n###\n\n","completion":" [472334370]"}
{"prompt":"When using links like this: `https://example.com/checkout?products[1][id]=12345` I get the following warning:\r\n> **Warning**: Array to string conversion in **...\\wp-content\\plugins\\woocommerce\\includes\\wc-template-functions.php** on line **763**\r\n\r\n<img src=\"https://i.imgur.com/rKN0wM5.png\">\r\n\r\nAfter clicking on the button, it redirects me to the following link: `https://example.com/checkout?products[1]=Array`\r\n\r\n**Additional Info**\r\nWordpress 5.8.1\r\nWooCoommerce 5.7.1\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"If you get this message from woo-commerce for products with no price.\r\n\r\nWarning: A non-numeric value encountered in /homepages/19/d384478960/htdocs/clickandbuilds/phhenvnew/wp-content/plugins/woocommerce/includes/class-wc-cart.php on line 2032\r\n\r\nDownload or access the file, and then replace the code on 2032 with the following code to fix it: -\r\n\r\n if (is_numeric($price)){\r\n\t\t\t $row_price = $price * $quantity;\r\n\t\t\t \r\n\t\t\t } else {\r\n        \r\n\t\t\t $row_price = 0;\r\n\t\t\t}\r\n\t\t\t   \r\n\t\t\t$product_subtotal = wc_price( $row_price );\r\n\t\t}\r\n\r\nSimply amend your class-wc-cart.php file with the above and replace it on your server. \r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"This is a follow-up issue for woocommerce/woocommerce-admin#7301\r\n\r\n**Description**: WIth completion of https://github.com/woocommerce/woocommerce-admin/issues/7706 issue, we should be able to capture `express_checkout` value from the Stripe plugin.\r\n\r\nCapture `express_checkout` value from the Stripe plugin in WooCommerce Analytic module.\r\n\r\nWe already worked on capturing `express_checkout` value from the WC Payment plugin. You can see the PR [here](https://github.com/Automattic/jetpack/pull/20812)\r\n\r\n\r\n\n\n###\n\n","completion":" [3943104021,3943425133]"}
{"prompt":"This issue is related only on variable products and structured data schema is not compliant with Google Merchant Center guidelines.\r\n\r\nitem_group_id is not provided\r\nhttps://support.google.com/merchants/answer/6324507?hl=en#zippy=%2Cgeneral-examples%2Capparel-products\r\n\r\nfor a specific variation lowPrice, highPrice attributes are included in structured data schema and this is causing Price missmatch error when Google is crawling website to validate data.\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [ X] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [ X] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nLet me give you an example to make it more clear. Let's say we have a variable product \"Google Shirt\" that comes in 2 sizes \"small\" and \"medium\". Also the price for the small is 10EUR and for medium 20EUR. The Google Shirt product has an sku=google_shirt and it's url would be: https://domain.com/google-shirt for the parent product.\r\n\r\nCreating the xml file for the Google Merchant Feed will be having two records. One for the \"Google Shirt small\" and the other for \"Google shirt medium\". So each record will contain for the \"Google Shirt small\" a url https://domain.com/google-shirt?size=small and price 10EUR and for the \"Google Shirt medium\" a url https://domain.com/google-shirt?size=medium and price 20EUR.\r\n\r\n\r\n**Expected behavior**\r\nWhen a product is part of a variable product structured data should contain one price (act as simple product) but also have the item_group_id property of the parent product. That way Google can verify it's price and also group all product variations.\r\n\r\n{\r\n....\r\nitem_group_id: 'google_shirt',\r\noffers: {\r\n  price: 10,\r\n  ....\r\n },\r\n....\r\n}\r\n\r\n**Actual behavior**\r\nWhen Google retrieve the feed is trying to verify that price is correct. When parsing the \"Google Shirt medium\" structured data it get a json like: \r\n\r\n{\r\n....\r\noffers: {\r\n ....\r\n  lowPrice: 10,\r\n  highPrice: 20,\r\n  ....\r\n},\r\n....\r\n}\r\nwhen Google see a json like that it always consider that product price = lowPrice and through a missmatch because in our case the price 20EUR != lowPrice.\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"When we list shipping options, we need to be able to list the rates. Right now the StoreAPI can give us the rates for a given cart, but we also need a way to calculate the rates in the WC Core API.\r\n\r\nSince there's no concept of a cart in the core API, we'll need a way to supply a list of products. A couple initial ideas:\r\n\r\n1. Save the order as a draft and then add a new endpoint like `GET /wp-json/wc/v3/orders/:id/shipping-methods`.\r\n2. Supply the \"cart\" as the request body -- this could even be the existing `POST  /wp-json/wc/v3/shipping-methods` endpoint.\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nIf you press the Update button on the order edit screen multiple times accidentally(like a double click), various WooCommerce actions will be run multiple times too. For example if you change the order status to completed and you double click the update button, the completed e-mails are sent twice and the order status change action is called twice too. I have an invoicing extension that runs on status change and i got multiple reports of duplicated invoices, so this issue affects multiple stuff.\r\n\r\n**Expected behavior**\r\nMultiple form submits should be prevented on order update.\r\n\r\n**Actual behavior**\r\nMultiple form submits are not prevented on order update. \r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Go to an order\r\n2. Change the order status to completed\r\n3. Duple click the Update button\r\n4. Check the order notes to see that the status was changed twice\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\n\n\n###\n\n","completion":" [1891051458]"}
{"prompt":"### Describe the bug\r\nThe WC Pay task installs WC Pay and redirects, but nothing seems to occur while this is happening.  A busy state should be placed on this task while we await install.\r\n\r\n@elizaan36 do you have thoughts on the loading state for this task?  Disable the input and gray overlay on the entire task?\r\n\r\nThis issue may exist in the current task list, but we should address in the new REST API driven task list since that will take over.\r\n\r\nSee https://github.com/woocommerce/woocommerce-admin/pull/7616#discussion_r711301805 for more context.\r\n\r\nDev note:  We previously handled this by allowing `onClick`s from tasks to return Promises and resolving once they were complete.\r\n\r\n```\r\nsetIsBusy( true );\r\nPromise.resolve( taskOnClick ).then( () => setIsBusy( false ) );\r\n```\r\n\r\n### To Reproduce\r\n<!-- Describe the steps to reproduce the behavior.-->\r\n\r\n1. Install WC Pay through business extensions in the onboarding profiler.\r\n2. Make sure to set your store to a WC Pay supported country.\r\n3. (preferably) enable the new `tasks` feature flag.\r\n4. Click on the WC Pay task and not the delay without indication of busy state.\r\n\r\n### Actual behavior:\r\nPage sits until the install/activate/connect function completes.\r\n\r\n### Screenshots\r\n<!-- If applicable, add screenshots to help explain your problem. -->\r\n![Screen Shot 2021-09-21 at 9 59 28 AM](https://user-images.githubusercontent.com/10561050/134184656-390bf141-5bf7-4ee3-8008-1b70a6419c32.png)\r\n\r\n### Expected behavior\r\nExpected some indication of busy state.\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"### Describe the bug\r\nI'm unable to install extensions in the free business features step of the store profiler, and I'm getting the error \"Your business details cannot be updated.\"\r\n\r\nThere's also a \"Retry\" button in the business features step and another link to \"Continue without installing\". I had to choose continue without installing in order to proceed to the next step.\r\n\r\nThis is extremely confusing for users because there's no way to know they have to go back to the previous tab to move forward without installing the extensions. They could essentially be getting stuck on the free features screen with no way out.\r\n\r\n### To Reproduce\r\n1. Create a new site and install WooCommerce\r\n2. Go through the steps of the store profiler until the business features step\r\n3. Try to install extensions\r\n4. See error\r\n\r\n### Screenshots\r\n<img width=\"1392\" alt=\"Screen Shot 2021-09-17 at 10 42 07 AM\" src=\"https://user-images.githubusercontent.com/5121465/133835993-753c316d-73a9-4c3e-b1fa-01b4f1921352.png\">\r\n<img width=\"482\" alt=\"Screen Shot 2021-09-17 at 10 42 21 AM\" src=\"https://user-images.githubusercontent.com/5121465/133836000-b3e9100c-ad92-4ef0-a67b-a6bb61df75fc.png\">\r\n\r\n### Expected behavior\r\nThe extensions should install in the free business features step.\r\n\r\n### Desktop (please complete the following information):\r\nI'm testing on Mac/Firefox\r\n\r\n\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\n_woommerce_adjust_non_base_location_prices_ filter with false return value, does not have any effect if order is created via REST API. \r\n\r\n**Expected behavior**\r\nExpecting the filter to work the same way it works via normal checkout flow.\r\n\r\n**Actual behavior**\r\nSetting the return value of the filter to _false_ has no effect. In other words if the tax rate for the order tax location differs from the base tax rate, the sum of the order changes. \r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Add ```add_filter( 'woocommerce_adjust_non_base_location_prices', '__return_false' );``` to functions.php of the active theme.\r\n2. Go to **WooCommerce -> Settings -> General** and check 'Enable tax rates and calculations'\r\n2. Go to **WooCommerce -> Settings -> Tax** and make the following changes: \r\n  - _Yes, I will enter prices inclusive of tax_ for _Prices entered with tax_ setting \r\n  - _Customer shipping address_ for _Calculate tax based_ on setting. \r\n  - To help with debugging I recommend also choosing _Including tax_ for both _Display prices..._ settings\r\n3. Create a product for testing with a price of e.g. 100 euros\r\n4. Go to **WooCommerce -> Settings -> Tax -> Standard rates** and add two new lines e.g. for Finland (FI) and Sweden (SE) with different rates (e.g. 10 percent and 50 percent)\r\n5. Create two orders via checkout. One shipping to Finland and the other shipping to Sweden. \r\n6. Create orders identical orders via REST API and see the difference\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"### Is your feature request related to a problem? Please describe.\r\nCurrently the customer effort score survey is turned off for mobile devices. This creates a gap in knowledge for potential improvements to mobile web, as well as better alignment of the core and mobile experience.\r\n\r\n### Describe the solution you'd like\r\nTurn on the customer effort score survey for mobile devices. On mobile, the feedback options are stacked vertically.\r\n![CES mobile](https://user-images.githubusercontent.com/5121465/132575977-6f3ea832-7e0c-4f44-93ae-7f0ba6a4400f.png)\r\n\n\n###\n\n","completion":" [3943104021,3943426309]"}
{"prompt":"<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nA bug got introduced in https://github.com/woocommerce/woocommerce/pull/29149, by default dashboard widgets are only displayed now if WooCommerce Admin is disabled, but #29149 made WCA a requirement for those widgets, since it's now fetching data from WCA.\r\n\r\nReported by an user in https://wordpress.org/support/topic/warning-class-wc-admin-dashboard/#post-14851346\r\n\r\n**Expected behavior**\r\nNo PHP errors in that widget, and make this widget functional, or maybe just remove it forever, since we don't plan to allow users to disable WCA anymore.\r\n\r\n**Actual behavior**\r\nA PHP error message is displayed, since no results is returned from `wp-json/wc-analytics/reports/revenue/stats` endpoint since WCA is disabled.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n\r\n1. In a fresh WooCommerce installation disable WCA.\r\n2. Check the dashboard widgets.\r\n\r\n\n\n###\n\n","completion":" [1891051454]"}
{"prompt":"### Is your feature request related to a problem? Please describe.\r\nAs a plugin developer, I'd like to use `@woocommerce/components` and `@wordpress/components` to build consistent UI and UX. Also, I'd like to know which elements should I use for what.\r\n\r\n#### TL;DR\r\nThere are [WC`<Link type=\"external\">`](https://woocommerce.github.io/woocommerce-admin/#/components/) and [WP`<ExternalLink>`](https://wordpress.github.io/gutenberg/?path=/docs/components-externallink--default), which seems to serve a similar purpose, but look different.\r\n![image](https://user-images.githubusercontent.com/17435/131871674-0fd4be6b-4701-4396-8633-ee830c44bdbc.png)\r\nIs that a conscious design decision? Which one should we use in WC?\r\n\r\n\r\n#### Long story\r\nIf I find a `Woocommerce/` element I assume, I should use it as it's more WooCommerce-specialized.\r\nSo, in Google Listings and Ads plugin we started to use [`@woocommerce/components.Link`](https://woocommerce.github.io/woocommerce-admin/#/components/). Then, in few places, when the links were pointing to external domains, we added `type=\"external\"`. \r\n![image](https://user-images.githubusercontent.com/17435/131871250-7335eeb9-c784-45fd-bc83-f00c79705e49.png)\r\n\r\nIt does not have a visual indicator that we wanted to have in our UI so we and added `<ExtarnalIcon>` and styled it.\r\n![image](https://user-images.githubusercontent.com/17435/131871285-f11429a2-8a41-41d3-8ced-6a59b61c6db0.png)\r\n\r\nBut then we realized, there is an [`@wordpress/components.ExternalLink`](https://wordpress.github.io/gutenberg/?path=/docs/components-externallink--default)\r\nThat has it build in, and aligned better.\r\n![image](https://user-images.githubusercontent.com/17435/131872109-c0caf4d3-3935-4ce2-a5ed-dfd590cdcdfd.png)\r\n\r\nNow we are pretty confused.\r\n1. Should we stick to WC`<Link type=\"external\">`, as it was a conscious design decision not to have a visual indication for external links?\r\n2. Should we use WP`<ExternalLink>`, as WooCommerce's `type=\"external\"` has a different purpose?\r\n3. Should I make a PR to use WP`<ExternalLink>` in WC`<Link>`, as that's something that was missed\r\n4. Should I make a plugin-specific version of WC`<Link>`, if I want to have a visual indicator, as wc-admin does not want that, but it's OK for other plugins to use it?\r\n\r\n\r\n### Describe the solution you'd like\r\nI'd prefer 3. from above:\r\nMake `<Link type=\"external\">` use WordPress's `<ExternalLink>` inside, so the merchant would get a visual indication, to expect when they will get redirected away. But also get the consistent UI across WP, WC and my plugin.\r\n\r\n### Describe alternatives you've considered\r\n1,2,4 from above.\r\n\r\n### Should this be prioritized? Why?\r\nNo big rush, as nothing is fundamentally broken, just UI and UX is inconsistent.\r\n\r\n### Additional context\r\n- Google Listings and Ads issue - https://github.com/woocommerce/google-listings-and-ads/issues/984\r\n- an example of desired use \r\n\t![image](https://user-images.githubusercontent.com/17435/131873850-5aa08fde-ebbc-49e7-bca2-162dd64800cf.png)\r\n\r\n\r\n----\r\n//cc  @j111q \r\n\n\n###\n\n","completion":" [3943104021,3943425720]"}
{"prompt":"Create k6 test for the flow: Merchant - Search Products\n\n###\n\n","completion":" [3845016070]"}
{"prompt":"Create k6 test for the flow: Merchant - Analytics Overview\r\n\r\n\r\n\n\n###\n\n","completion":" [3845016070]"}
{"prompt":"Create k6 test for the flow: Shopper - New customer can create account\n\n###\n\n","completion":" [3845016070]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nAfter adding a Shipping Method to your Shipping Zone, the **Save Changes** button gets greyed out. You then need to remove the Zone Region and add it again for the button to become clickable. The changes do save automatically without clicking it, however, you would expect the button to stay clickable. \r\n\r\n**Expected behavior**\r\nThe Save Changes button should be clickable (blue)\r\n\r\n**Actual behavior**\r\nThe Save Changes button becomes greyed out and unclickable. It does actually save but you would still expect the button to be clickable. \r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Go to WooCommerce > Settings > Shipping > Add shipping zone\r\n2. Add a Zone Name, Zone Regions, and then add a Shipping method\r\n3. You should then notice that the Save Changes button gets greyed out and removing the Zone Region and adding it again fixes it. \r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/16253818/131828339-130d0ce7-2690-4a13-bd7c-bcd325c1d56f.png)\r\n\r\n**Screen Recording**\r\n\r\nhttps://user-images.githubusercontent.com/16253818/131828481-d0ae2d2e-2f75-4045-92dc-b1c885f5ee3a.mp4\r\n\r\n\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051459]"}
{"prompt":"**Note: This bug only manifests itself when filtering by attributes on simple products. - @mattsherman** \r\n\r\n### Describe the bug\r\nOur shop has multiple additional attributes, one of them is 'author' of the product. We want to filter by advanced filter in the Reports > Orders tab. When choosing specific attribute value for example: Attribute => Author = 'Author Name'. The list shows that there is no results, but clearly i've bought the product with same attribute as i filtered.   \r\n\r\n### To Reproduce\r\n<!-- Describe the steps to reproduce the behavior.-->\r\n\r\n1. Create attribute, in my case author.\r\n2. Assign attribute to product, name it 'John Doe'\r\n3. Buy the product\r\n4. Mark the order as completed\r\n5. Go to Reports > Orders\r\n6. Change the date to from beginning of the year to today\r\n7. Filter by advanced search\r\n8. Choose attribute from the list \r\n9. Set to \"is\", and chose Author\r\n10. Pick attribute value as \"John Doe\"\r\n11. Click filter\r\n\r\n### Actual behavior:\r\nNo results is shown. It shows empty list.\r\n\r\n### Screenshots\r\n**Before filtering by Advanced Filters**\r\n<img width=\"1233\" alt=\"Screen Shot 2021-09-02 at 11 29 09@2x\" src=\"https://user-images.githubusercontent.com/52801365/131819744-17c93771-e46a-4bca-804a-ef124be1c458.png\">\r\n**After filtering by Advanced Filters**\r\n<img width=\"1246\" alt=\"Screen Shot 2021-09-02 at 11 29 17@2x\" src=\"https://user-images.githubusercontent.com/52801365/131819815-ba4fd5a1-c688-4d00-9425-bc2da2812561.png\">\r\n\r\n\r\n### Expected behavior\r\nIt shows the list of orders with the provided attribute. \r\n\r\n### Desktop (please complete the following information):\r\n\r\n* OS: MacOS 11.5.2 \r\n* Browser Brave\r\n* Version 1.29.76 Chromium: 93.0.4577.58 (Official Build) (arm64)\r\n\n\n###\n\n","completion":" [3943425133]"}
{"prompt":"Create an e2e test to cover the test case in https://github.com/woocommerce/woocommerce/issues/29679. \n\n###\n\n","completion":" [5222415782]"}
{"prompt":"Create an e2e test to cover the test case described in https://github.com/woocommerce/woocommerce/issues/30075. \r\n\n\n###\n\n","completion":" [5222415782]"}
{"prompt":"[The `reserve_stock_for_order` function seen here](https://github.com/woocommerce/woocommerce/blob/b19500728b4b292562afb65eb3a0c0f50d5859de/src/Checkout/Helpers/ReserveStock.php#L66-L67) can be unpredictable if `$minutes` are not provided, because it uses the `woocommerce_hold_stock_minutes` setting. Someone using this function may incorrectly assume the default is `60` when in fact it's based on store settings. If this setting is set to 0, it would completely prevent `reserve_stock_for_order` from working, even if an extension has a legitimate case for holding stock, unless it passes in a `$minutes` value.\r\n\r\n`woocommerce_hold_stock_minutes` is a niche setting that should only affect core checkout, so I think we should instead pass this value to the `reserve_stock_for_order` method when called. This can be added here: https://github.com/woocommerce/woocommerce/blob/e4fec5b914d523ca7312506bd07f86ccc5cb30d5/includes/wc-stock-functions.php#L354\r\n\r\nThe default for $minutes can then be set to 60.\n\n###\n\n","completion":" [1891051471]"}
{"prompt":"This problem was originally noted in a WooCommerce payments issue\r\n\r\nhttps://github.com/Automattic/woocommerce-payments/issues/2269 \r\n\r\nHowever, the problem lies with the underlying search component component. This component is used through out the analytics experience, as well as through out the merchant dashboard of WooCommerce Payments. \r\n\r\n**Problems with the current UX**\r\n\r\nThe search component supports multiple strings. Each time you enter a new string, it's wrapped in a pill with its own X button to remove it from the search query. Additionally the search field has its own X button that will clear all search strings from the field. This creates a bit of visual confusion with all of the X floating around. Even after you add a string, the helper text reappears. If there are only one or two strings, on a desktop viewport this isn't very problematic, however, on smaller screens or with many or long search strings, the preview text overflows the container. The X button to clear the strings is easily lost in the text. \r\n\r\n<img width=\"1873\" alt=\"Screen Shot 2021-08-25 at 1 37 39 PM\" src=\"https://user-images.githubusercontent.com/4500952/130895276-7bea6b62-e486-4f7a-8a85-403106fdd1f0.png\">\r\n\r\n\r\nThe component doesn't scale well to mobile devices, currently the strings are wrapping to two or more lines and blowing out of the field. \r\n\r\n<img width=\"421\" alt=\"Screen Shot 2021-08-25 at 8 14 43 PM\" src=\"https://user-images.githubusercontent.com/4500952/130895561-e2b845a1-e654-4e8d-9e11-8dc8dadc4cf2.png\">\r\n\r\nImprovements to the UX: \r\n\r\n<img width=\"925\" alt=\"Screen Shot 2021-08-25 at 8 38 16 PM\" src=\"https://user-images.githubusercontent.com/4500952/130896680-5de99ab3-029b-4779-9283-dd3c0352fa12.png\">\r\n\r\n\r\n1. Helper text is only visible when there are no strings added to the search query. The helper text disappears as soon as the the merchant begins to type the first string. \r\n2. We replace the X button on the field with a less ambiguous \"Clear all\" interaction. Clear all only appears after two or more strings are added to the field. \r\n3. instead of wrapping, search strings should overflow the container and be hidden from view. The field should scroll horizontally. As strings are added, the latest string should always be in view, scrolling any previous strings out of view on the left side of the field. I don't think wrapping is a viable option since in most (all) places we're using this component, the vertical height of the field is limited by the content that surrounds it.\r\n4. Both the search icon and \"Clear all\" components should have solid white backgrounds with slight gradients, so that overflowing search strings fade smoothly out as they reach the end of the container and flow under these elements. \r\n\r\nYou can use[ this prototype](https://www.figma.com/proto/7slT5vNKNLqoW078P77RqB/WC-Admin-Search?page-id=0%3A1&node-id=2%3A12&viewport=472%2C48%2C0.7&scaling=min-zoom) to preview the overflow UI. \r\n\r\n\r\ncc @elizaan36 @pmcpinto @Mayisha \n\n###\n\n","completion":" [3943104021,3943425720]"}
{"prompt":"## Bug Description:\r\nUploaded images fail to display on media editor pop up and Media library screen while adding as a downloadable file to a downloadable product.\r\n\r\n## Environment:\r\nWoocommerce Version : WooCommerce 5.7.0 Beta-1\r\nWordPress version: v5.8\r\n\r\nPC:\r\nWindows 10, Mac 10.14.6\r\nChrome(Version 92.0.4515.131) \r\nFirefox(Version 90.0.2)\r\nSafari: v14.1.2\r\n\r\n## Steps To Reproduce:\r\n1. Create any test site using JN site.\r\n1. Install and activate all the required plugins.\r\n1. Install and activate WooCommerce 5.7.0 Beta-1.\r\n1. Complete the setup wizard.\r\n1. Add a downloadable Product.\r\n1. Click on the downloadable Product to edit the product.\r\n1. Add a downloadable file that is an image and make sure it is a new uploaded image.\r\n1. Note that uploaded image fail to display on media editor pop up.\r\n1. Go to Media Library page.wp-admin/upload.php.\r\n1. Observe that uploaded images fail to display\r\n\r\n## Actual Result:\r\nUploaded images fail to display while adding as a downloadable file to a downloadable product.\r\n\r\n## Expected Result:\r\nUploaded images should be display on media editor pop up and Media library screen.\r\n\r\n## Screenshot:\r\n\r\n![#30575](https://user-images.githubusercontent.com/41110392/130828695-b2078970-4b01-4f18-ac17-644817603a61.png)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n*Isolating the problem (mark completed items with an [x]):*\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n\r\n\r\n<details>\r\n\r\n`\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"Please see https://github.com/woocommerce/woocommerce/issues/30365 for context, but in brief:\r\n\r\n* Suppose a tax rate is removed.\r\n* And that an order (that referenced that tax rate) is then updated.\r\n* When saved, the order's `rate_percent` meta data will consequently be set to 0, even though that was not the rate that was actually applied when the order was placed.\r\n\r\nIn the linked issue, the scenario is one where tax rates are frequently updated with some % of the rules being dropped altogether, however this could also surface in other cases where things are not updated so frequently (initial internal conversation here: p1629826720269200-slack-C0E1AV8T0).\r\n\r\nCreating a spike for this to:\r\n\r\n* Decide if we do indeed need to take further action.\r\n* If we do, figure out if we should \"archive\" tax rates (rather than delete them), or some other solution.\r\n\n\n###\n\n","completion":" [1891051453]"}
{"prompt":"WooCommerce Analytics\r\n\r\nI‚Äôm wondering if it‚Äôs possible to allow multiple selections from the same filter type, or add an ‚Äòand/or‚Äô option to the Advanced Filters section, and allow the same filter type to be used multiple times please?\r\n\r\nI‚Äôm trying to remove orders that are ‚Äòon hold‚Äô or ‚Äòpending payment‚Äô from my filtered results, but can only use the ‚ÄòOrder Status‚Äô filter once and am only able to select a single option for it to be applied to.\r\nSo as it stands I can only remove ‚Äòon hold‚Äô or ‚Äòpending payment‚Äô rather than both from the results.\r\n\r\nPlease let me know if there is already a workaround for this.\r\n\r\nThank you!\r\n\n\n###\n\n","completion":" [3943104021,3943425133]"}
{"prompt":"## Bug Description:\r\nWhen user updates the order status to \"Completed\" for the first order of the store, it redirects user to the \"Posts\" screen.\r\n\r\n## Environment:\r\nWoocommerce Version : WooCommerce 5.7.0 Beta-1\r\nWordPress version: v5.8\r\n\r\nPC:\r\nWindows 10, Mac 10.14.6\r\nChrome(Version 92.0.4515.131) \r\nFirefox(Version 90.0.2)\r\nSafari: v14.1.2\r\n\r\n## Steps To Reproduce:\r\n1. Create any test site using JN site.\r\n1. Install and activate all the required plugins.\r\n1. Complete the setup wizard.\r\n1. Add or Import some Products.\r\n1. Go to Store page.\r\n1. Place an order for any of the product.\r\n1. Go to WooCommerce->Orders.\r\n1. Click on the order to edit the order.\r\n1. Change the order status to \"Completed\".\r\n1. Observe that user redirects to the \"Posts\" screen.\r\n\r\n## Actual Result:\r\nUser redirects to the \"Posts\" screen upon updating the order status to \"Completed\" for first order.\r\n\r\n## Expected Result:\r\nUser should get redirect to the \"Edit order\" page.\r\n\r\n\r\n## Video:\r\n\r\n\r\nhttps://user-images.githubusercontent.com/41110392/130472305-6587605a-14f9-4bde-bae7-a46775880b30.mp4\r\n\r\n\r\n\r\n\r\n\r\n\r\n*Isolating the problem (mark completed items with an [x]):*\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n\r\n\r\n<details>\r\n\r\n`\r\n\n\n###\n\n","completion":" [1891051458]"}
{"prompt":"## Bug Description:\r\nRefund amount field validation message appears misaligned on Edit order screen.\r\n\r\n## Environment:\r\nWoocommerce Version : WooCommerce 5.5.2 and 5.6.0\r\nWordPress version: v5.8\r\n\r\nPC:\r\nWindows 10, Mac 10.14.6\r\nChrome(Version 92.0.4515.131) \r\nFirefox(Version 90.0.2)\r\nSafari: v14.1.2\r\n\r\n## Steps To Reproduce:\r\n1. Create any test site using JN site.\r\n1. Install and activate all the required plugins.\r\n1. Complete the setup wizard.\r\n1. Place order for any product.\r\n1. Go to \"WooCommerce -> Orders\"\r\n1. Click on \"Order\".\r\n1. Click on \"Refund\" button.\r\n1. Enter any text in \"Refund amount\" field.\r\n1. Observe that validation message appears misaligned.\r\n\r\n## Actual Result:\r\nRefund amount field validation message appears misaligned on Edit order screen.\r\n\r\n## Expected Result:\r\nValidation message should be properly aligned.\r\n\r\n## Screenshot:\r\n\r\n![#30527](https://user-images.githubusercontent.com/41110392/129921148-da06f8b1-d4a0-4aa0-9608-3009215cb592.png)\r\n\r\n\r\n\r\n\r\n*Isolating the problem (mark completed items with an [x]):*\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n\r\n\r\n<details>\r\n\r\n`\r\n\n\n###\n\n","completion":" [1891051445]"}
{"prompt":"As noted in #30395, there may be filters that would affect API responses in ways that a consumer of an API will not expect. The purpose of this task is to catalogue the filters that affect our API responses.\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"One of the problems that often occurs for consumers of the API is that the values returned aren't of the type that that might be expecting. This may be happening because a filter along the way is changing the value returned to another type.\n\nThe desired outcome for this spike is a proposal for type-casting or type-checking existing endpoints.\n\nConsiderations:\n* Would this only happen in the presence of a new parameter (to maintain backwards compat?)\n* Should we cast the value as well?\n* How should the warnings look?\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"WooCommerce database update as done (after clicking \"Thanks!\") on the latest version. It throws an Uncaught (in promise) error.\r\n\r\n### To Reproduce\r\n\r\n* Create a site with a version of WooCommerce that will trigger a DB migration (I used 5.5) that is enabled and active\r\n* Upload the latest 5.6 zip (RC-2 in this case)\r\n* Run the Database update and wait for it to complete\r\n* Refresh the page so the notice is updated to the done message and the `Thanks` button is available\r\n* Click \"Thanks!\" and notice that nothing happens and it logs the error noted above into the console\r\n\r\n### Actual behavior:\r\n\r\nThe database upgrade message can't be removed.\r\n\r\n### Expected behavior\r\n\r\nThe database upgrade message can be acknowledged and removed.\r\n\r\n### Desktop (please complete the following information):\r\n\r\n* OS: macOS\r\n* Browser Firefox\r\n* Version 91.0\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\n\r\nPayPal logos are being loaded from and external site (PayPal's). This creates 3 issues:\r\n\r\n1. When changing the background of the containing element, the logo looks unprofessional, because it has a white background\r\n2. Possible performance issue due to having yet another domain for the browser to look up\r\n3. Possible user experience issue when PayPal site has a problem and the logo is unavailable\r\n\r\n**Suggested solution**\r\n\r\nIt would be better to bundle images with no background with WooCommerce. This removes all of the issues and provides the opportunity to use better images (within PayPal terms, of course, so mostly from a technical perspective).\r\n\r\nThe `woocommerce_paypal_icon` allows for this to occur on individual sites, but the default images used by WooCommerce should be better, thus saving many site owners (and plugin developers, like Linear Checkout by Cartimize) from having to create images on a case-by-case basis.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\n\r\nSteps to reproduce the bug:\r\n1. Add a product to the cart\r\n2. Go to Checkout\r\n3. Choose PayPal\r\n4. Change the background color of the element containing the PayPal logo (`class=\"wc_payment_method payment_method_paypal\"`) to something other than white\r\n\r\n**Screenshots**\r\n\r\n![image](https://user-images.githubusercontent.com/7981897/129283292-524e99e5-319e-4e3f-8c60-c2c30ddee7b4.png)\n\n###\n\n","completion":" [1891051443]"}
{"prompt":"I want to send an HTTP GET request to get all the products with a specific attribute using WooCommerce REST API. I am following [this](https://woocommerce.github.io/woocommerce-rest-api-docs/?shell#list-all-products) WooCommerce document.\r\n\r\nI have successfully limited the result with below properties:\r\n/wp-json/wc/v3/products?per_page=20&page=2\r\n/wp-json/wc/v3/products?category=745\r\n\r\nHowever, I am trying to get a product with attribute, but it is not working:\r\n/wp-json/wc/v3/products?attribute=pa_brand&attribute_term=899\r\n\r\nI have checked, and my attribute name (**pa_brand**) & term_id/tag_id (**899**) both are correct.\r\n\r\nThanks in advance.\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nAs we have created order from admin panel and want to apply coupon on that order, and changed the order status from pending to processing then usage count increases twice for that coupon.\r\n\r\n\r\n**Expected behavior**\r\nOnce coupon is applied then usage count should be increase only once per order.\r\n\r\n**Actual behavior**\r\nOnce we applied coupon on the order then usage count is increasing twice.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Go to WooCommerce->Orders\r\n2. Click on 'Add order' \r\n![image](https://user-images.githubusercontent.com/48907421/128849419-6aa9aab9-bbb7-4dd1-99b3-3c1674ba5630.png)\r\n\r\n3. Now add billing details.\r\n![image](https://user-images.githubusercontent.com/48907421/128866605-3c0d9ce7-17fc-4ba1-9115-33abecd0ff10.png)\r\n\r\n4. Now scroll down click on 'Add Items' and add any products into the order. \r\n![image](https://user-images.githubusercontent.com/48907421/128866699-76396c3b-1deb-4b31-b523-a5bacb86e055.png)\r\n\r\n5. Now click on 'Apply coupon' and apply any valid coupon from the store.\r\n![image](https://user-images.githubusercontent.com/48907421/128866729-f41017a3-812c-4247-957e-78edddba7f75.png)\r\n\r\n6. Now scroll up and click on 'create' and after that order will create, now coupon usage count increase by one.\r\n![image](https://user-images.githubusercontent.com/48907421/128866776-efb4c28c-aa44-48f4-abe7-022184493550.png)\r\n\r\n7. Now Change order status from 'Pending' to 'Processing', then click on 'Update' again coupon usage count increase.\r\n![image](https://user-images.githubusercontent.com/48907421/128866840-ee16a3bb-144a-4f81-a581-3a37ad9a7ceb.png)\r\n![image](https://user-images.githubusercontent.com/48907421/128866871-872c3995-c554-4e17-bbd7-950432656b93.png)\r\n\r\n\r\n**Screenshots**\r\nplease check the video for more details.\r\nhttps://www.loom.com/share/d1ab29b6aec0423a98a79f68be506b04\r\n\r\n\r\n**WordPress Environment**\r\nWP version: 5.8\r\nWC version: 5.5.2\r\nTheme: Twenty Twenty-One\r\nVersion: 1.4\r\n\n\n###\n\n","completion":" [1891051442]"}
{"prompt":"Yesterday I discovered a bug that does not allow using the drop-down list when the WordPress admin bar is active.\r\n\r\nI created a [topic](https://wordpress.org/support/topic/bug-dropdown-widgets-do-not-work-with-the-active-wordpress-admin-bar-video/) (**be sure to check it out**!). But so far no one has answered anything sensible to me.\r\n\r\nI am adding ONE MORE video showing the bug!\r\n\r\nAnd just don't say that everything is all right! Finally open your eyes and test the plugin with the current version of WordPress!\r\n\r\nlast video:\r\nhttps://youtu.be/Wiy2cWiWLB0\r\nEnjoy!\n\n###\n\n","completion":" [1891051454,1891051461]"}
{"prompt":"Clarify the method of deleting a coupon using WC REST API in the docs. Reference: https://github.com/woocommerce/woocommerce/issues/30401.\r\n\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [X] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [X] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nIt would appear that for whatever reason if someone places an order and then hit the browser back button, the \"return to merchant\" button they see on the Paypal website, takes them to the order cancellation page.\r\n\r\nThere is no apparent reason for this to happen, but it has been affecting a handful of customers per day, which makes us wonder how it's not been reported previously.\r\n\r\nThe only vaguely related bug we came across was https://github.com/woocommerce/woocommerce/issues/26743\r\n\r\nThe auto-return values are set [as per the docs](https://docs.woocommerce.com/document/paypal-standard/#auto-return)\r\n\r\n**Expected behavior**\r\nYou have paid for the order and for whatever reason you went back to Paypal. Pressing this button should take you to the order confirmation page or the homepage.\r\n\r\n**Actual behavior**\r\nThe page redirects to https://site.com/cart/?cancel_order=true&order=wc_order_XXXXXXXXX&order_id=XXXXXXX&redirect&_wpnonce=XXXXX\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Add a product to the cart\r\n2. Go to checkout and fill in all details correctly\r\n3. Select Paypal as the gateway\r\n4. Go to Paypal and pay\r\n5. Wait for Paypal to redirect you, or press the \"return to merchant\" button\r\n6. While on the order confirmation page, press the browser back button\r\n7. On the Paypal page, press the \"Return to Merchant\" button\r\n\r\n**Cause**\r\nThis is caused by the variable passed to PayPal here https://github.com/woocommerce/woocommerce/blob/5.5.2/includes/gateways/paypal/includes/class-wc-gateway-paypal-request.php#L129\r\nThey most likely changed the purpose of that value a while ago, but WC hasn't updated it.\r\nThis should be an easy fix. All it needs, is changing to the cart or checkout page.\r\n\r\n**Screenshots**\r\nThe Paypal page you see on step 7\r\n![screenshot-www paypal com-2021 07 30-20_51_53](https://user-images.githubusercontent.com/10516403/127711442-5b59d4df-27dc-4cc6-b168-c1959b5553be.png)\r\n\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [X] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [X] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [X] I can reproduce this bug consistently using the steps above.\n\n###\n\n","completion":" [1891051440,1891051443,1891051449]"}
{"prompt":"Desired outcome of the spike: a post detailing a possible approach for surfacing wp-admin ajax endpoints from the REST API.\r\n\r\nConsiderations:\r\n* Proper handling of request variables.\r\n* Authentication via cookie.\r\n* Handling of nonces.\r\n* CORS handling.\r\n* Security concerns.\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"### Describe the bug\r\nWhen a WordPress.com account doesn't exist, during WooCommerce onboarding you land on this create account screen with a confusing bit of text at the bottom including \"Continue without a user account\"\r\n<img width=\"895\" alt=\"Screen Shot 2021-07-27 at 9 59 10 AM\" src=\"https://user-images.githubusercontent.com/5121465/127198956-2a3c0b36-fba2-424e-b09d-65c8dd6456df.png\">\r\n\r\nSince recent updates to the Jetpack onboarding flow, the \"Continue without a user account\" link directs to the Jetpack site with all plan options.\r\n<img width=\"1093\" alt=\"Screen Shot 2021-07-27 at 9 59 23 AM\" src=\"https://user-images.githubusercontent.com/5121465/127200368-eb11ce9e-807a-4c47-b67e-8eebc8ad6b7a.png\">\r\n\r\nThe new WooCommerce user is stuck at this point if they don't want to create an account or choose a Jetpack product.\r\n\r\n### To Reproduce\r\nI tested this in a private window on a Jurassic Ninja site.\r\n\r\n1. Install and activate WooCommerce\r\n2. Complete the store profiler and install free business features\r\n3. In the last step on the create account screen, click on the link \"Continue without a user account\"\r\n4. See error\r\n\r\n### Proposed solution\r\nThe link \"Continue without a user account\" should redirect to WooCommerce home with the free version of Jetpack selected by default.\r\nHere's an updated layout for the text on this screen.\r\n\r\n![Jetpack create account screen](https://user-images.githubusercontent.com/5121465/127200909-b0daad00-152d-4e99-88b6-ed0160ce0a74.png)\r\n\r\ncc @pmcpinto since we chatted about this on Slack\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"Writing to database every pageload is very bad idea (especially on frontend)\r\n\r\nTo replicate:\r\n-) Install Query Monitor\r\n-) Load product page\r\n-) see list of 'UPDATE' queries from QM  console\r\n\r\nPlease read Wordpress code quality & best pratice here:\r\n=> https://docs.wpvip.com/technical-references/code-review/vip-warnings/#h-front-end-database-writes\r\n=> https://docs.wpvip.com/technical-references/code-quality-and-best-practices/term-queries-should-consider-include_children-false/\r\n\r\nThe problem is in wc_get_related_products() function here:\r\nhttps://github.com/woocommerce/woocommerce/blob/b19500728b4b292562afb65eb3a0c0f50d5859de/includes/wc-product-functions.php#L894\r\n\r\nIf the related products count is under limit it will keeps doing this expensive taxonomy queries every single pageload. and set_transient is the one which will do 'UPDATE' query to db to update the transient_timeout\r\n\r\nProposed solution:\r\n-) If related products count is under limit we just need to lower the timeout, from the default 'DAY_IN_SECONDS' to 'MINUTE_IN_SECONDS' or 'HOUR_IN_SECONDS'\n\n###\n\n","completion":" [1891051454,472334370]"}
{"prompt":"**Describe the bug**\r\n\r\nI‚Äôve set the stock of a product to 1, added it to cart, placed an order with PayPal Standard but didn‚Äôt actually pay, now I see that the order status is ‚Äúpending payment‚Äù (no notes/stock reduction) but, opening it in an incognito window lets me add it to the Cart still.\r\n\r\nHold stock is set for 3 minutes, but it doesn‚Äôt sound like it‚Äôs doing anything to avoid double purchase while the order status is ‚ÄúPending payment‚Äù with PayPal Standard?\r\n\r\n**Expected behavior**\r\n\r\nStock should be reduced when a PayPal Standard order is Pending Payment.\r\n\r\n**Actual behavior**\r\n\r\nPending Payment doesn't reduce stock with PayPal Standard as payment gateway.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Add a product with 1 stock\r\n2. Add to Cart, go through Checkout with PayPal Standard, but don't complete payment\r\n3. Notice the Pending Payment order is created\r\n4. Visit the product page from a different browser - It is still possible to add the item to the cart\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n![Markup 2021-07-11 at 15 32 20](https://user-images.githubusercontent.com/13640239/126913251-f8b18187-d989-4d69-ae48-34b80646e1aa.png)\r\n\r\n![Markup 2021-07-11 at 15 28 23](https://user-images.githubusercontent.com/13640239/126913254-efcd8cc2-4afd-42a3-86d1-97f6c879060f.png)\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\nThe System Status Report is found in your WordPress admin under **WooCommerce > Status**. \r\nPlease select ‚ÄúGet system report‚Äù, then ‚ÄúCopy for support‚Äù, and then paste it here.\r\n```\r\n</details>\r\n\n\n###\n\n","completion":" [1891051443,1891051449,1891051471]"}
{"prompt":"Add two shipping zones. The first say for \"Washington State\" and the second for Washington State 98012\"\r\n\r\nIf the state level zone is at the top of the list, the ZIP code level zone will never take effect. There should be a visible warning on the zone setup page that this is happening and prompt the user to drag the narrower shipping zone above the broader one in the list to correct the problem.\n\n###\n\n","completion":" [1891051459]"}
{"prompt":"## Bug Description:\r\nOn Products screen, \"Other types of products\" section fails to load upon visiting first time.\r\n\r\n\r\n## Environment:\r\nWoocommerce Version : WooCommerce 5.5.1\r\nWordPress version: v5.8\r\n\r\nPC:\r\nWindows 10, Mac 10.14.6\r\nChrome(Version 91.0.4472.77) \r\nFirefox(Version 89.0.2)\r\nSafari: v14.0\r\n\r\n## Steps To Reproduce:\r\n1. Create any test site using JN site.\r\n1. Install and activate all the required plugins.\r\n1. Complete the onboarding setup wizard.\r\n1. Visit to Products screen.\r\n1. Note that \"Other types of products\" section not loaded.\r\n1. Refresh the screen.\r\n1. Observe that \"Other types of products\" section fails to load until user refresh the screen.\r\n\r\n## Note:\r\nSame scenario observed on orders screen for \"Tools for your store\" section.\r\n\r\n## Actual Result:\r\nOn Products screen, \"Other types of products\" section fails to load upon visiting first time.\r\n\r\n## Expected Result:\r\n\"Other types of products\" section should load on products screen.\r\n\r\n## Video:\r\n\r\n\r\nhttps://user-images.githubusercontent.com/41110392/126664824-907b8275-e3a2-4455-9a38-56d063e4f6f0.mp4\r\n\r\n\r\n\r\n\r\n\r\n*Isolating the problem (mark completed items with an [x]):*\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n\r\n\r\n<details>\r\n\r\n`\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"### Is your feature request related to a problem? Please describe.\r\n\r\nIssue https://github.com/woocommerce/woocommerce-admin/issues/6790 describes the problem in detail. The issue only describes a problem with the Products page, but the problem also applies to Categories, Coupons, and Taxes as well where we have the search input.\r\n\r\nundefined1. The report pages currently set `per_page=10` when searching. We have a [PR](https://github.com/woocommerce/woocommerce-admin/pull/7385) to increase the #, but it is a temporary solution.\r\n\r\n2. Support pagination. \r\n\r\n### Additional context\r\n\r\nSearch is performed in this [file](https://github.com/woocommerce/woocommerce-admin/blob/main/client/analytics/report/index.js#L103) when `?search` query is provided.\r\n\n\n###\n\n","completion":" [3943104021,3943425133]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nIt's possible to add a tax rate to an order with an amount that does not match the tax rate percent. For example, I can add a state tax of 10% to a $100 order and set the amount to $5.\r\n\r\nIs this expected behavior?\r\n\r\n**Expected behavior**\r\nI would expect the added tax rate amount to be required to match the tax rate percent.\r\n\r\n**Actual behavior**\r\nWhen you add a tax, you can set this amount to something other than the expected amount, and create the order. \r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. From `wp-admin`, go to **WooCommerce > Orders** and select the **Add order** button\r\n2. Fill in order details, add a product, and add a tax (do not use the recalculate button)\r\n3. Set the tax to something that does not match the tax rate percent and save\r\n4. Create the order\r\n\r\n**Screenshots**\r\n\r\n![IMG_0054](https://user-images.githubusercontent.com/17905991/126265906-d295bdf4-d836-4087-862a-cd60198976a2.jpg)\r\n\r\n![IMG_0055](https://user-images.githubusercontent.com/17905991/126265923-444b5f4d-c0a6-4980-b581-9ea5c0596904.jpg)\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\n\n\n###\n\n","completion":" [1891051437,1891051453]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\n\r\nWith `Round tax at subtotal level, instead of rounding per line` enabled, a subtotal of 4.1832 is rounded up to 4.19 instead of down to 4.18.\r\n\r\n**Expected behavior**\r\n\r\nExpected to round down to 4.18.\r\n\r\n**Actual behavior**\r\n\r\nRounds up to 4.19.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Add a product with price 15.42\r\n2. Add flat rate shipping of 4.50\r\n3. Add a tax rate of 21%\r\n4. Set prices Exclusive of Tax.\r\n5. Check `Round tax at subtotal level, instead of rounding per line`\r\n6. See cart tax total as 4.19 instead of 4.18.\r\n\r\nPer [this explanation](https://github.com/woocommerce/woocommerce/issues/30159#issuecomment-868420007) of the setting, the following math should be happening:\r\n\r\n* Product line item tax: 15.42 * 0.21 = 3.2382\r\n* Shipping line item tax: 4.50 * 0.21 = .945\r\n* Total to be rounded: 4.1832\r\n\r\n**Screenshots**\r\n\r\n![image](https://user-images.githubusercontent.com/35117248/125475111-0e691146-d457-4d86-957a-32bac6c5c83d.png)\r\n\r\n![image](https://user-images.githubusercontent.com/35117248/125475252-71bb8e77-1f8a-4125-afed-483ffdba1fb3.png)\r\n\r\n![image](https://user-images.githubusercontent.com/35117248/125475311-da875cc2-9952-4ea0-bee8-b5fa15aa1f9c.png)\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n`\r\n\n\n###\n\n","completion":" [1891051437,1891051440,1891051453]"}
{"prompt":"Hi Guys\r\n\r\nI have noted some odd behaviour when a person has shipping address completed under their profile and then goes to the checkout. The Billing Address copied to Shipping Address when the cart page is revisited. This issue can also lead to other odd behaviours like the opposite happening to some billing fields but this is more difficult to recreate than this. I have also noted that this copying can happen on the first load of the page if there are a lot of plugins running.\r\n\r\n\r\n1. Go to my account and add a different shipping address.\r\n\r\nhttps://snipboard.io/uKZfe8.jpg\r\n\r\n2. Go to the cart and click ‚ÄòDeliver to a different address‚Äô. The Deliver fields will be correct and match your account.\r\n\r\n3. Untick ‚ÄòDeliver to a different address‚Äô.\r\n\r\n3. Click on the url bar and press enter (do not refresh! as that will have mixed results)\r\n\r\n4. Tick ‚ÄòDeliver to a different address‚Äô again to see that most of the ship to address fields will now have changed to match the Bill To address.\r\n\r\nhttps://snipboard.io/0bFQox.jpg\r\n\r\nTested on the default theme with no under plugins on Nginx and Linux with no server caching.\r\n\r\n<details>\r\n\n\n###\n\n","completion":" [1891051440]"}
{"prompt":"## Bug Description:\r\nDownload file name seems wrapped on \"My Account->Downloads\" screen of Storefront theme.\r\n\r\n## Environment:\r\nWoocommerce Version : WooCommerce 5.5 RC 2 and 5.4.1\r\nWordPress version: (v5.8 RC 2)\r\n\r\nPC:\r\nWindows 10, Mac 10.14.6\r\nChrome(Version 91.0.4472.77) \r\nFirefox(Version 89.0.2)\r\nSafari: v14.0\r\n\r\n## Steps To Reproduce:\r\n1. Create any test site using JN site.\r\n1. Install and activate all the required plugins.\r\n1. Complete the onboarding setup wizard.\r\n1. Add a Downloadable Product.\r\n1. As a Shopper go to Shop page and place a order for downloadable product.\r\n1. As a Shopper go to My Account->Downloads screen.\r\n1. Observe that Download file name text displayed as Cut off.\r\n\r\n## Actual Result:\r\nDownload file name seems wrapped on \"My Account->Downloads\" screen of Storefront theme.\r\n\r\n\r\n## Expected Result:\r\nDownload file name text should be display properly aligned on \"My Account->Downloads\" screen for Storefront theme.\r\n\r\n## Screenshot:\r\n\r\nFor Storefront Theme:\r\n\r\n![#30241](https://user-images.githubusercontent.com/41110392/124948648-80dcbf00-e02e-11eb-917f-4908a1b44215.png)\r\n\r\nFor Twenty Twenty One Theme:\r\n\r\n![#30241_1](https://user-images.githubusercontent.com/41110392/124948640-7de1ce80-e02e-11eb-8273-1505e6cb2400.png)\r\n\r\n\r\n\r\n\r\n*Isolating the problem (mark completed items with an [x]):*\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n\n\n###\n\n","completion":" [1891051447,1891051451]"}
{"prompt":"Please provide us with the information requested in this bug report. Without these details, we won't be able to fully evaluate this issue. \r\nBug reports lacking detail, or for any other reason than to report a bug, may be closed without action.\r\n\r\n<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen applying coupons to the cart during checkout, the success handler for the JavaScript `wc_checkout_coupons.submit` function's AJAX call will always be triggered because the PHP `WC_AJAX::apply_coupon()` method will always trigger a 200 response with a rendered notice element.  This makes it impossible for sites to listen for the `applied_coupon_in_checkout` event in JavaScript and conditionally do something based on whether a coupon was successfully applied as the event is triggered so long as there is a notice in the response and the event data only contains the user-supplied coupon code.\r\n\r\n**Expected behavior**\r\nOne of:\r\n\r\n- The `applied_coupon_in_checkout` JavaScript event (and probably other JavaScript events) include enough context for developers to work out whether an action succeeded or failed, or the event to only be triggered contextually based on success or fail state\r\n- The `WC_AJAX::apply_coupon()` PHP method configure the HTTP response in a way to indicate whether coupons were successfully applied to the cart (whether it be by including additional data beyond a HTML snippet or changing the status code, doesn't necessarily matter here)\r\n\r\n**Actual behavior**\r\nThe `applied_coupon_in_checkout` JavaScript event is always triggered as long as the server emits a 200 response (which, it should short of a fatal error it appears) and the server response and JavaScript event lack context to decide whether a coupon was actually applied.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Create a coupon in the WooCommerce plugin admin\r\n2. From the WordPress frontend, add any product to your cart and go to the checkout screen\r\n3. Open your browser's developer console to be able to inspect the responses from the upcoming AJAX calls\r\n4. Click the \"Have a coupon? Click here to enter your code\" message to show the coupon code form\r\n5. Enter in your coupon and apply it, note that the AJAX call to the `?wc-ajax=apply_coupon` endpoint returns a 200 response with the HTML for the notice shown on the screen\r\n6. Try to apply the same coupon again, note that the AJAX call to the `?wc-ajax=apply_coupon` endpoint returns a 200 response with the HTML for the notice shown on the screen\r\n7. Now enter a non-existing coupon code and try to apply it, note that the AJAX call to the `?wc-ajax=apply_coupon` endpoint returns a 200 response with the HTML for the notice shown on the screen\r\n\r\n**Screenshots**\r\nN/A\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWP Version: 5.7.2\r\nWC Version: 5.4.1\r\nPHP Version: 7.4.16\n\n###\n\n","completion":" [1891051440]"}
{"prompt":"This epic is to track work needed to improve `@woocommerce/components`.\r\n\r\nDiscussion here: p90Yrv-2k8-p2\r\n\r\n- [ ] Documentation - introduce longform MDX docs alongside Storybook stories. Finish adding args support to the existing component stories\r\n\r\n- [ ] Explore css-in-js solution (start with Linaria). First step is spike/experimentation. Deliverable would be a doc with some findings and some demo code.\r\n\r\n- [ ] TypeScript conversion, start by migrating low-effort components to TS and also publish the type defs with the package.\r\n\r\n- [ ] Size reduction\r\n\r\n\n\n###\n\n","completion":" [3943104021,3943425720]"}
{"prompt":"This is in line with this issue: https://github.com/woocommerce/woocommerce/issues/24029\r\nWhen we issue a refund from backend, the same does not reflect neither on revenue or the taxes under the analytics section. Its very difficult to track down thing while filing for taxes. \r\nLike if we do refund for the product, I can see its taxes is still shown  and added in the cummulative taxes , under the taxes column. It should be removed if we offered the refund.\r\nCheck this case:\r\nI have refunded for two products whose total value were 4950.\r\nAfter discount it was: 4838\r\nI did full refund of 4838 but here in the report it is showing net sales of 112 which is wrong and on top of that 594 tax on it too.\r\n\r\n![Screen Shot 2021-07-03 at 8 50 02 PM](https://user-images.githubusercontent.com/71723936/124358946-4b0b9500-dc40-11eb-8e97-fd4b0aeb59fd.png)\r\n\n\n###\n\n","completion":" [3943104021,3943425133]"}
{"prompt":"**Describe the bug**\r\nI'm running E2E tests against the WP nightly and seeing \r\n\r\n```\r\nconsole.warn\r\n    wp.components.DropZoneProvider is deprecated. Note: wp.component.DropZone no longer needs a provider. wp.components.DropZoneProvider is safe to remove from your code.\r\n```\r\n\r\nI searched and the only instance appears to be https://github.com/woocommerce/woocommerce-admin/blob/38fbb4aedd0f21cf21ddaa6af93e48564fd35324/client/profile-wizard/steps/theme/uploader.js#L11\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n1. Clone the `woocommerce` repo & `npm install`\r\n2. Create `tests/e2e/docker/nightly.sh`\r\n```\r\n#!/bin/bash\r\n\r\necho \"Initializing WooCommerce E2E\"\r\n\r\nwp plugin activate woocommerce\r\nwp theme install twentynineteen --activate\r\nwp user create customer customer@woocommercecoree2etestsuite.com --user_pass=password --role=customer --path=/var/www/html\r\n\r\n# we cannot create API keys for the API, so we using basic auth, this plugin allows that.\r\nwp plugin install https://github.com/WP-API/Basic-Auth/archive/master.zip --activate\r\n\r\n# install the WP Mail Logging plugin to test emails\r\nwp plugin install wp-mail-logging --activate\r\n\r\necho \"Updating to WordPress Nightly Point Release\"\r\nwp core update https://wordpress.org/nightly-builds/wordpress-latest.zip\r\n\r\necho \"Updating the database\"\r\nwp core update-db\r\n```\r\n3. Run `npx wc-e2e docker:up tests/e2e/docker/nightly.sh`\r\n4. Run `npx wc-e2e test:e2e`\r\n5. Message is logged on the second test\r\n\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen there are more than 100 standard tax rates, and we try to add an order manually, and then try to add a tax rate, a popup screen will appear. However, only 100 lines are shown. There is no way to scroll further to check the rates beyond 100.\r\n\r\n![Annotation on 2021-06-29 at 14-59-23](https://user-images.githubusercontent.com/17371139/123771524-520b6e00-d8f5-11eb-958f-3b50401e946a.png)\r\n\r\n\r\n**Expected behavior**\r\nIt's expected that we can still scroll past 100 items to see all of the tax rates\r\n\r\n**Actual behavior**\r\nOnly 100 tax rates are shown on the popup screen\r\n\r\n\r\n\r\n\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Import a tax data file in CSV with more than 100 tax rates\r\n2. Create a manual order on the backend\r\n3. Add items and then add a tax, a popup will appear\r\n\r\n**Screenshots**\r\n![Screen Capture on 2021-06-29 at 14-56-53](https://user-images.githubusercontent.com/17371139/123771565-5a63a900-d8f5-11eb-9acc-15cac67b86d7.gif)\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051453]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWooCommerce Related Products don't show all random related products within the same category. It only shows some of the products within the same category. This was also reported in the WooCommerce Forum here: https://wordpress.org/support/topic/related-products-are-always-the-oldest/#post-14577127.\r\n\r\n**Expected behavior**\r\nI've created a shop with 30 products and expected to see all random related products from 1 to 30.\r\n\r\n**Actual behavior**\r\nNo matter how hard you try it shows only products from 1 to 25 and the products from 26 to 30 are never being shown.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Go to http://staging.onlinewebshop.net/\r\n2. Click on any of the products from 1 to 30 (all products are within the same category 'Numbers')\r\n3. Refresh that page to see random related products\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n\r\n<details>\r\n\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [X ] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [ X] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nA clear and concise description of what the bug is. \r\n\r\nIn WooCommerce v5.4.1 the class-wc-rest-crud-controller.php class calls the ‚Äúrest_{$this->post_type}_collection_params‚Äù filter incorrectly:\r\n\r\n```\r\n/**\r\n * Filter collection parameters for the posts controller.\r\n *\r\n * The dynamic part of the filter <code>$this->post_type</code> refers to the post\r\n * type slug for the controller.\r\n *\r\n * This filter registers the collection parameter, but does not map the\r\n * collection parameter to an internal WP_Query parameter. Use the\r\n * 'rest_{$this->post_type}_query' filter to set WP_Query parameters.\r\n *\r\n * @param array        $query_params JSON Schema-formatted collection parameters.\r\n * @param WP_Post_Type $post_type    Post type object.\r\n */\r\nreturn apply_filters( \"rest_{$this->post_type}_collection_params\", $params, $this->post_type );\r\n```\r\n\r\nThe PHPDoc states the $post_type variable is meant to be of type WP_Post_Type, however this call provides the parameter as a string.\r\n\r\nWhen WP calls the same filter it provides a WP_Post_Type object.\r\n\r\n**Expected behavior**\r\nThe correct parameter type (WP_Post_Type ) should be passed to the function.\r\n\r\n**Actual behavior**\r\nThe string slug of the post type is passed instead of the object.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Add a hook using the relevant collection_params name.\r\n2. Call the API endpoint.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [X] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [X] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [X] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\n\r\n\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"I would like to attach images to products for the context of migrating from Shopware to WordPress (‚Ä¶ don't ask).\r\n\r\n* WordPress Version 5.7.2\r\n* WooCommerce 5.4.1\r\n\r\nThe images which are already located on the server have already been bulk-registered with WP CLI.\r\n\r\n* https://managewp.com/blog/bulk-upload-wordpress-media-library-ftp\r\n* https://developer.wordpress.org/cli/commands/media/import/\r\n* https://make.wordpress.org/cli/handbook/guides/installing/\r\n\r\nExample paths:\r\n\r\n* `uploads/media/image/ab/cd/ef/image-001.jpg`\r\n* `uploads/media/image/01/00/e2/image-002.jpg`\r\n\r\n---\r\n\r\n| Input | Issue |\r\n|--------|---------|\r\n| `https://mysite.com/wp-content/uploads/media/image/ab/cd/ef/image-001.jpg` | Uploads image anew |\r\n| `media/image/ab/cd/ef/image-001.jpg` | Failure message `Unable to use image \"mediaimageabcdefimage-001.jpg\".` ‚Äì Why are the slashes stripped? Is this an error with the import or with the mere message display? |\r\n| `38191` (attachment-ID) | Failure message `Unable to use image \"38191\".` |\r\n\r\nNone of the methods work to **attach a pre-registered image.**\r\n\r\n\r\n**WordPress Environment**\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051450]"}
{"prompt":"Please provide us with the information requested in this bug report. Without these details, we won't be able to fully evaluate this issue. \r\nBug reports lacking detail, or for any other reason than to report a bug, may be closed without action.\r\n\r\n<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen you set a WooCommerce order to Cancelled, the stock is updated and if you set the same order back to Completed, you can purchase more than the stock even with ‚ÄúAllow backorders‚Äù set to ‚ÄúDo not allow.‚Äù\r\n\r\nHere's the WordPress.org support thread: https://wordpress.org/support/topic/woocommerce-stock-order-cancellation-bug/\r\n\r\n**Expected behavior**\r\nI should not be able to place more order than available stock.\r\n\r\n**Actual behavior**\r\nI was able to place more orders than available stock\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Create a simple product.\r\n2. Enable stock management at product level.\r\n3. Set stock quantity\r\n4. Place an order buying all of the stock\r\n5. Cancel the order you just made\r\n6. Place another order for just one\r\n7. Set the order you made previously to Completed.\r\n\r\n**Screenshots**\r\nHere‚Äôs a video recording: https://www.loom.com/share/5cbbaa39fc6f4121b89da1df0220cfb9 \r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\n\n\n###\n\n","completion":" [1891051471]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nIf a webhook is scheduled to be delivered asynchronously (by the Action Scheduler), and that webhook is deleted before the scheduled action is executed, WooCommerce will create a new empty webhook.\r\n\r\n**Expected behavior**\r\nI'm not actually sure what would be the best thing to do in this situation, but I would *not* expect it to insert a useless empty record in the webhooks database table.\r\n\r\n**Actual behavior**\r\nWooCommerce will insert a new webhook in the webhooks database table with an empty name, an empty topic, an empty delivery URL, and status \"Disabled\".\r\n\r\n**Steps to reproduce the bug**\r\n1. Install and activate [this plugin](https://github.com/woocommerce/action-scheduler-disable-default-runner) to temporarily disable scheduled actions.\r\n2. Go to WooCommerce &rarr; Settings &rarr; Advanced &rarr; Webhooks.  Create a new webhook with Name = \"Test\", Status = \"Active\", Topic = \"Product updated\", Delivery URL = `https://example.com/` (it doesn't really matter what the URL is, we are going to be deleting this before the webhook is delivered anyway).\r\n3. Go to the \"Products\" page and edit a product.  This will trigger the webhook.\r\n4. Go to WooCommerce &rarr; Status &rarr; Scheduled Actions.  Click \"Pending\".  You should see a scheduled action with hook `woocommerce_deliver_webhook_async`.  (Because scheduled actions were disabled in step 1, this action should remain \"Pending\" indefinitely without manual intervention.)\r\n5. Go back to the \"Webhooks\" page, look for the webhook you created in step 2, and click \"Delete permanently\".\r\n6. Go back to the \"Scheduled Actions\" page and view the \"Pending\" webhooks again.  The `woocommerce_deliver_webhook_async` scheduled action should still be there (remember that scheduled actions were disabled in step 1).  Click \"Run\" to execute it manually.  The page should display the message: \"Successfully executed action: `woocommerce_deliver_webhook_async`\".\r\n7. Go back to the \"Webhooks\" page.  You should see that a new webhook has been created with an empty name, an empty topic, an empty delivery URL, and status \"Disabled\".\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n<details>\r\n\r\n\n\n###\n\n","completion":" [2046308337]"}
{"prompt":"## Bug Description:\r\nWhen the Set up task list is Hidden, the \"Show things to do next\" option gets disappear from the \"Display\" menu upon hiding it once.\r\n\r\n## Environment:\r\nWoocommerce Version : WooCommerce 5.4.1\r\nWordPress version: (v5.7.2)\r\nWooCommerce Admin: v2.4.0 Beta 1.\r\n\r\nPC:\r\nWindows 10, Mac 10.14.6\r\nChrome(Version 91.0.4472.77) \r\nFirefox(Version 88.0)\r\nSafari: v13.1.1\r\n\r\n## Steps To Reproduce:\r\n1. Create any test site using JN site.\r\n1. Install and activate all the required plugins.\r\n1. Complete the OBW setup.\r\n1. Go to WooCommerce->Home and hide the Set up task list.\r\n1. Click Display menu button.\r\n1. Uncheck the \"Show things to do next\" option.\r\n1. Observe that \"Show things to do next\" option gets disappear from the \"Display\" menu.\r\n\r\n## Actual Result:\r\nThe \"Show things to do next\" option gets disappear from the \"Display\" menu upon hiding it once, when the Set up task list is Hidden.\r\n\r\n## Expected Result:\r\n\"Show things to do next\" option should not be hidden when the set up task list is hidden.\r\n\r\n\r\n## Video:\r\n\r\n\r\nhttps://user-images.githubusercontent.com/41110392/121715631-ba3c1080-cafc-11eb-97f6-8dd1e92bb5c5.mp4\r\n\r\n\r\n\r\n\r\n*Isolating the problem (mark completed items with an [x]):*\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n\r\n\r\n<details>\r\n\r\n`\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nThe [products] shortcode is looking for $GLOBALS['post'] in order to reset back to it later. But, with AJAX calls, there's not global post. When using an AJAX call to fetch a products shortcode markup, this triggers an error: 'Undefined index: post'.\r\n\r\nline 640 in class WC_Shortcode_Products.\r\n\r\n**Expected behavior**\r\nCheck if global 'post' exists.\r\n\r\n**Actual behavior**\r\nThere's no validation if global 'post' exists.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\nuse output buffering or directly echo a products shortcode in an AJAX action callback.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"Please provide us with the information requested in this bug report. Without these details, we won't be able to fully evaluate this issue. \r\nBug reports lacking detail, or for any other reason than to report a bug, may be closed without action.\r\n\r\n<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nDouble quantity multiplication in cart when sorting the items leads to cheap items with quantity > 1 to be sorted incorrectly for discounts.\r\nIn class WC_Discounts the public function set_items_from_cart multiplies the product price with the quantity when setting item->price. Then when performing the uasort inside that function the price is again multiplied with the quantity when sorting with the function sort_by_price.\r\n\r\n**Expected behavior**\r\nItems being sorted by product price * quantity.\r\n\r\n**Actual behavior**\r\nCheaper products with quantity > 1 gets sorted before more expensive products.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Add a coupon with limit usage to x items set to 1\r\n2. Add two products to cart, one being less than half the price but more than a quarter of the other price\r\n3. Go to cart\r\n4. Apply the coupon\r\n5. Set quantity of the cheaper product to 2\r\n6. The cheaper product now gets the discount even though it should be sorted after the more expensive one.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\nThe System Status Report is found in your WordPress admin under **WooCommerce > Status**. \r\n`\r\n\n\n###\n\n","completion":" [1891051437,1891051442]"}
{"prompt":"\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen cart quantity is updated in Safari 12.x or 13.x, the product image disappears\r\n\r\n**Expected behavior**\r\nI expect the product image to show in the cart even when product quantity updated.\r\n\r\n**Actual behavior**\r\nA clear and concise description of what actually happens. Please be as descriptive as possible; \r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Go to https://themes.woocommerce.com/storefront/product/lowepro-slingshot-edge-250-aw/ with Safari 13.x or 12.x\r\n2. Add the product to the cart and go to the Cart\r\n3. Increase the product quantity and update\r\n4. Notice that the image is missing\r\n\r\n**Screenshots**\r\n\r\n![Annotation on 2021-06-07 at 16-04-31](https://user-images.githubusercontent.com/30090682/121030803-1aa01a80-c7aa-11eb-97ae-53543b268fa2.png)\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051436]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nThe informational message \"Enter your address to view shipping options\" in the \"Your order\" pane of the checkout page, is unexpectedly not shown when using a specific set of settings in WooCommerce.\r\n\r\n**Expected behavior**\r\nHaving a product in the cart, navigating to the checkout page and before entering any address, I was expecting to be shown the informational message \"Enter your address to view shipping options\" in the \"Your order\" pane.\r\n\r\n**Actual behavior**\r\nHaving a product in the cart, navigating to the checkout page and before entering any address, the shipping methods for \"Locations not covered by your other zones\" are shown in the \"Your order\" pane.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nAll steps require the WooCommerce plugin and the Storefront theme. No other plugins were activated.\r\n\r\n1. Go to WooCommerce > General > Default custom location, and set it to \"No location by default\"\r\n2. Go to WooCommerce > Shipping > Shipping options, and make sure the \"Hide shipping costs until an address is entered\" is not enabled.\r\n3. Go to WooCommerce > Shipping > Shipping zones, and create a custom zone with a postcode as seen [here](https://i.ibb.co/9vZZWPG/woo-bug-1.png).\r\n4. Go to WooCommerce > Shipping > Shipping zones, and add any shipping method to the \"Locations not covered by your other zones\" as seen [here](https://i.ibb.co/6XgBLCh/woo-bug-2.png).\r\n5. Add a product in your cart and navigate to the checkout page. Do not enter any information in any fields.\r\n6. Check the shipping in \"Your order\" pane. Even without entering any addresses it is showing the shipping methods for \"Locations not covered by your other zones\", like in this [image](https://i.ibb.co/wgDRcHJ/woo-bug-3.png).\r\n\r\nIf you delete all the shipping methods from the Zone \"Locations not covered by your other zones\" and run the steps again, then you will be presented with the informational message \"Enter your address to view shipping options\" as excepted, like in this [image](https://i.ibb.co/Bjcd1Zs/woo-bug-4.png).\r\n\r\n**Screenshots**\r\nScreenshots are added inline with the steps above.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\n\n\n###\n\n","completion":" [1891051436,1891051440,1891051459]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [X] I have checked that my issue type is not listed here https://github.com/woocommerce/woocommerce/issues/new/choose\r\n- [x] My issue is not a security issue, support request, bug report, enhancement or feature request (Please use the link above if it is).\r\n\r\nHi,\r\nwhen we browse my account pages all endpoints have specific classes in the body tag as in the examples below:\r\n\r\n.woocommerce-account.woocommerce-orders\r\n\r\n.woocommerce-account.woocommerce-downloads\r\n\r\nbut when we are on the my account panel page the class placed in the body tag is just .woocommerce-account\r\nthere is no other more specific, so to select elements on this page it ends up being by exclusion as in the example below:\r\n\r\n.woocommerce-account:not(.woocommerce-orders):not(.woocommerce-downloads)\r\n\r\nyou could introduce the **.woocommerce-panel** or **.woocommerce-dashboard** class\r\n\n\n###\n\n","completion":" [1891051447]"}
{"prompt":"Please add a feature to WooCommerce to display the desired image to the user before the product images are fully loaded.\r\nOf course, this image that we specify will be displayed to the user if the internet speed is slow or the site is loaded late for any reason.\r\nThis feature makes the user not tired of waiting for the product images to load. Currently, if the site loads late, the product image is white and does not have an interesting user interface.\r\nIf you add this feature to WooCommerce, the preloaded images will look like this : https://prnt.sc/13ud543\r\nPlease add this feature if possible. It will be very useful.\r\n\r\nthanks\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"## Bug Description:\r\nContent on \"Pay for Order\" page appears misaligned for Twenty Twenty One theme.\r\n\r\n## Environment:\r\nWoocommerce Version : WooCommerce 5.4 RC 1 and 5.3\r\nWordPress version: (v5.7.2)\r\n\r\nPC:\r\nWindows 10, Mac 10.14.6\r\nChrome(Version 90.0.4430.93) \r\nFirefox(Version 88.0)\r\nSafari: v13.1.1\r\n\r\n## Steps To Reproduce:\r\n1. Create any test site using JN site.\r\n1. Install and activate all the required plugins.\r\n1. Complete the onboarding setup wizard.\r\n1. Select Twenty Twenty One theme.\r\n1. Add some Products.\r\n1. Go to Orders->Add New.\r\n1. Create a order with status Pending payment.\r\n1. Now click on \"Customer Payment page\" link.\r\n1. Observe that Content on \"Pay for Order\" page appears misaligned.\r\n\r\n## Actual Result:\r\nContent on \"Pay for Order\" page appears misaligned for Twenty Twenty One theme.\r\n\r\n## Expected Result:\r\nContent on \"Pay for Order\" page should be properly aligned for Twenty Twenty One theme.\r\n\r\n## Screenshot:\r\n\r\n![#30033](https://user-images.githubusercontent.com/41110392/120669533-2b504800-c4ad-11eb-8ca5-771c7426b604.png)\r\n\r\n\r\n\r\n\r\n*Isolating the problem (mark completed items with an [x]):*\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\n\n###\n\n","completion":" [1891051447]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\n\r\nProducts with variations appear in filtered results when the price filter widget is set to a range between the variation prices (i.e. not encapsulating either variation price).\r\n\r\nFor example, if the variations are priced at $10 and $40 respectively and the price range filter is set to $20-$30, the product appears in the results.\r\n\r\n**Expected behavior**\r\n\r\nThe product should not appear because the range encapsulates neither of the variation prices.\r\n\r\n**Actual behavior**\r\n\r\nThe product appears despite both variation prices being out of range.\r\n\r\n**Steps to reproduce the bug**\r\n\r\n1. Start with new install of WordPress, WooCommerce, and Storefront.\r\n2. Create a variable product.\r\n3. Create custom attribute with a couple of values (e.g. size, small|large).\r\n4. Generate variations from these attributes.\r\n5. Price one variation at $10 and the other at $40.\r\n6. Save the product.\r\n7. Add the price filter widget to the sidebar.\r\n8. Go to the shop view and set the filter to $20-$30.\r\n9. Observe that the product appears in results.\r\n\r\n**Screenshots**\r\n\r\n![image](https://user-images.githubusercontent.com/5625168/120545316-65a2e200-c3e6-11eb-9ec0-57cf94d2a63a.png)\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\n\n\n###\n\n","completion":" [1891051456]"}
{"prompt":"\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nVariations created from identical attribute values only show one of the variations in the dropdown on the front end.\r\n\r\nNot sure if this is even supposed to work.\r\n\r\n**Expected behavior**\r\nEven with identical variation (attribute value) names, all existing variations should appear in the dropdown.\r\n\r\n**Actual behavior**\r\nOnly one of the variations is displayed.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Variable product - create a custom attribute with two identical values https://d.pr/i/Y4gdst\r\n2. Create variations from those: https://d.pr/i/kWvMTH\r\n3. See the product page - only one variation in the dropdown: https://d.pr/i/Hrnp08\r\n4. See error\r\n\r\n**Screenshots**\r\nhttps://d.pr/i/Y4gdst\r\nhttps://d.pr/i/kWvMTH\r\nhttps://d.pr/i/Hrnp08\r\n\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\nIrrelevant, but let me know if it's necessary and I'll add it.\r\n```\r\n</details>\r\n\n\n###\n\n","completion":" [1891051456,1891051461]"}
{"prompt":"Please provide us with the information requested in this bug report. Without these details, we won't be able to fully evaluate this issue. \r\nBug reports lacking detail, or for any other reason than to report a bug, may be closed without action.\r\n\r\n<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [X] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [X] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nIn the New WooCommerce Analytics Taxes screen, if a Tax Rate line item is deleted/replaced from the WC tax rates in Settings the order record still shows the old tax rate identifier but shows nothing in the admin chart. The legacy reports maintains and displays the old, deleted tax rate name in the chart. Importing Historical Data does not fix.\r\n\r\nI looked at the orders in question in the database and they indeed had the tax rate from the deleted rates. I modified the record in the database to use the current tax rate identifier and now the orders show in the chart as they should, but use the new tax rate name instead of the old one. The old identifier name still appears in the legacy chart fyi.\r\n\r\nFYI, I was requested to open a bug ticket here by the WC Support Forum staff..\r\n\r\n**Expected behavior**\r\nWe should see all tax rate line items in the new WC/Taxes chart regardless if a tax rate has been modified in the WC Taxes settings. This is the behavior that we see in the old WC Tax Reports chart.\r\n\r\n**Actual behavior**\r\nWhen a tax rate in WC/Settings/Taxes is removed the Analytics/Taxes does not show the Tax Rate i the chart. The old WC Tax Report DOES show it.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n\r\n1. Create a standard tax rate with a unique name.\r\n2. Place an order using that tax rate\r\n3. Complete the order (mark as completed/shipped)\r\n4. Delete the standard tax rate\r\n5. Add the same tax rate back in but with a new name.\r\n\r\nYou should see that in the legacy reports the old tax rate shows in the report. In the new analytics it does not.\r\n\r\n**Screenshots**\r\nNot showing in new Analytics/Taxes chart:\r\nhttps://i.postimg.cc/SKWBPpHd/not-showing.jpg\r\n\r\nShowing in old Tax Reports Chart:\r\nhttps://i.postimg.cc/cJyqTJk6/showing.jpg\r\n\r\n\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [X] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ X] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [ X] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [3943104021,3943425133]"}
{"prompt":"Please provide us with the information requested in this bug report. Without these details, we won't be able to fully evaluate this issue. \r\nBug reports lacking detail, or for any other reason than to report a bug, may be closed without action.\r\n\r\n<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen force deleting a Simple Product that is listed in a Grouped Product, the Grouped Product list does not get updated to remove that product. This makes it so that seemingly the Grouped Product is empty (on the site, and product settings page) whereas there are still ghost products, only visible by the API.\r\n\r\n**Expected behavior**\r\nWhen force deleting products the Grouped Product should be updated to have that product removed from it's list.\r\n\r\n**Actual behavior**\r\nThe deleted product stays in some sort of ghost state and is only visible/fetchable using the API\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Have a Grouped Product listing one or more Simple Products\r\n2. Via the API force delete one or more of said simple products\r\n3. The webpage of the Grouped Product does indeed not show those products\r\n4. Check the API data of said Grouped Product to see that the WooCommerce Product ID is still listed as related product.\r\n\r\n\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\n\n\n###\n\n","completion":" [1891051461,2258932484]"}
{"prompt":"## Bug Description:\r\nText from \"Reason for refund (optional)\" field appears in the \"Refund amount\" field when the user tries to do partial refund for the second time.\r\n\r\n## Environment:\r\nWoocommerce Version : WooCommerce 5.4 Beta and 5.3\r\nWordPress version: (v5.7)\r\n\r\nPC:\r\nWindows 10\r\nFirefox(Version 88.0.1)\r\n\r\n## Steps To Reproduce:\r\n1. Create any test site using JN site.\r\n1. Install and activate all the required plugins \r\n1. Complete the onboarding setup wizard.\r\n1. Add few products to the website.\r\n1. Create a order.\r\n1. Navigate to WooCommerce->Orders.\r\n1. Now click on the order link which you want to refund.\r\n1. Scroll down and click on the \"Refund\" button to show Refund menu.\r\n1. Select the Quantity, enter the partial Refund amount, add Reason for refund and click on the refund button.\r\n1. Again click on the \"Refund\" button.\r\n1. Observe that the text from \"Reason for refund (optional)\" field appears in the \"Refund amount\" field.\r\n\r\n## Actual Result:\r\nText from \"Reason for refund\" field appears in \"Refund amount\" field when the user tries to do partial refund. \r\n\r\n## Expected Result:\r\nText from \"Reason for refund (optional)\" field should not appear in the \"Refund amount\" field.\r\n\r\n## Video:\r\n\r\nhttps://user-images.githubusercontent.com/41110392/119009144-76983000-b9b0-11eb-8261-f496c5e7e2cd.mp4\r\n\r\n\r\n\r\n*Isolating the problem (mark completed items with an [x]):*\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n\r\n\r\n<details>\r\n\r\n`\r\n`\r\n\n\n###\n\n","completion":" [1891051445]"}
{"prompt":"## Bug Description:\r\n\"State\" field on checkout page fails to read by screen reader as it displays \"Select an option\" upon selecting State field.\r\n\r\n## Test Instructions: \r\nhttps://github.com/woocommerce/woocommerce/wiki/Release-Testing-Instructions-WooCommerce-5.4#state-and-country-field-labels-on-the-checkout-page-should-be-read-by-screen-readers-closes-27317\r\n\r\n## Environment:\r\nWoocommerce Version : WooCommerce 5.4.0\r\nWordPress version: (v5.7)\r\n\r\nPC:\r\nWindows 10, Mac 10.14.6\r\nChrome(Version 90.0.4430.93) \r\nFirefox(Version 88.0)\r\nSafari: v13.1.1\r\n\r\n## Steps To Reproduce:\r\n1. Create any test site using JN site.\r\n1. Install and activate all the required plugins \r\n1. Complete the onboarding setup wizard.\r\n1. Go to Shop page and add products to the Cart.\r\n1. Proceed to Checkout page.\r\n1. Enable screen reader in operating system (on Mac, it's called \"Voiceover\" and is located in accessibility settings)\r\n1. Go to \"State\" field. \r\n1. Observe that \"State\" field on checkout page fails to read by screen reader as it displays \"Select an option\" upon selecting State field.\r\n\r\n## Actual Result:\r\n\"State\" field on checkout page fails to read by screen reader.\r\n\r\n## Expected Result:\r\n\"State\" field titles should be readable by screen readers.\r\n\r\n## Screenshot:\r\n![#29942](https://user-images.githubusercontent.com/41110392/118848445-61f26400-b8ec-11eb-8e7d-66d91147933b.png)\r\n\r\n*Isolating the problem (mark completed items with an [x]):*\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n<details>\r\n\r\n`\r\n\n\n###\n\n","completion":" [702347761]"}
{"prompt":"We have several new task list features coming down the line ([task hierarchy](https://github.com/woocommerce/woocommerce-admin/pull/6916), [remind me later support](https://github.com/woocommerce/woocommerce-admin/pull/6923), and potentially changing the structure using slot fill).\r\n\r\nThis issue will be a reminder to write a developer blog post covering the above features, once things have settled a bit, and all the kinks have been worked out (if there were any).\n\n###\n\n","completion":" [3943104021,3943424841,3943426545]"}
{"prompt":"This was reported by a user on #3965783-zen.\r\n\r\n<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [ ] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\n\r\nThe user was using the API to submit reviews via an app they're developing.\r\n\r\nThis is the API URL that the user called that showed this problem (I‚Äôve changed the sensitive information):\r\n```\r\nhttps://usersite.com/wp-json/wc/v3/products/reviews?review=this is review body4&title=this is title11&rating=5&product_id=1647&reviewer=username&reviewer_email=user@usersite.com\r\n```\r\n\r\n**Expected behavior**\r\nThe average rating should be updated.\r\n\r\n**Actual behavior**\r\nThe review was created but the average wasn‚Äôt updated.\r\n\r\n**Screenshots**\r\n![Markup on 2021-05-14 at 19:43:13](https://user-images.githubusercontent.com/74066241/118266066-ad6fd100-b4ec-11eb-8759-f4139eaeb97c.png)\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] The user has deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [ ] I can reproduce this bug consistently using the steps above.\r\n\r\n**User's Findings and Suggested Fix**\r\n\r\nThe user's solution was to call this action in their API call after creating the review:\r\n```\r\ndo_action( 'wp_update_comment_count', $p['product_id']);\r\n```\r\nIt calls the clear_transients method which resets all averages and arrays.\r\n\r\nThe user further investigated why that action wasn't being called by default. They found that, when a comment is created on the website, and not through the API, the following action is supposed to be triggered:\r\n\r\n```\r\nadd_action( 'comment_post', array( __CLASS__, 'add_comment_rating' ), 1 );\r\n```\r\nHowever, this action is not called by the API.\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"_This is a follow-up from a discussion started in https://github.com/woocommerce/woocommerce-admin/pull/6911/#discussion_r629020311_\r\n\r\n### **Is your feature request related to a problem? Please describe.**\r\n`CompareFilter` and `FilterPicker` take a number of props that are forwarded directly to the inner `Search` component:\r\n- `type`\r\n- `(labels.)placeholder`\r\n- `autocompleter`\r\n\r\n@becdetat [suggested](https://github.com/woocommerce/woocommerce-admin/pull/6911/files/fd9998403c4e2aa23c8c34b76d07b19344e0bdb5#r629020311):\r\n> What do you think about changing this to `searchAutocompleter`? That could make it more obvious that it is used by search.\r\n\r\nI agree, with the idea of emphasizing that some props are going to be used for the `<Search>` only. However, I'd prefer to have it consistent across all props, and preferably, not too verbose.\r\n\r\n### **Describe the solution you'd like**\r\n\r\nI was thinking of all props together like:\r\n1. a curated list of props\r\n\t  ```js\r\n\t  searchProps: PropTypes.shape( {\r\n\t\t    placeholder: PropTypes.string,\r\n\t\t    type: PropTypes.string.isRequired,\r\n\t\t    autocompleter: PropTypes.object,\r\n\t  } ),\r\n\t  ```\r\n2. or a transparent props obj, that we will simply forward (and extend where needed)\r\n\t  ```js\r\n\t  searchProps: Search.propTypes\r\n\t  ```\r\n\r\n### **Describe alternatives you've considered**\r\nWe could also keep the props list flat as today:\r\n```js\r\nsearchPlaceholder: PropTypes.string,\r\nsearchType: PropTypes.string.isRequired,\r\nsearchAutocompleter: PropTypes.object,\r\n```\r\nBut I find it verbose, and we already have a precedent of non-flat prop - `labels`\r\n\r\n### **Should this be prioritized? Why?**\r\nI don't see any rush here. Probably it's better to have it later but change it once, as it is a non-functional but breaking change.\r\n\r\n\n\n###\n\n","completion":" [3943104021,3943425133]"}
{"prompt":"I am trying to: Give clients outside EU the view of prices excl. tax, and clients within EU incl. tax\r\n\r\nI expected to see: If a client is registered, or has set the address on checkout that is outside EU the prices should show without VAT. This works as intended.\r\n\r\nInstead, I got: It also makes everyone else to see prices on VARIABLE PRODUCTS without VAT regardless if they are from EU or not.\r\n\r\nAfter extensive testing and troubleshooting it turns out woocommerce make use of transients to fetch the price information and thus displaying the prices on the variable products incorrectly store-wide after a visitor from OUTSIDE EU adds their delivery address to the checkout page. Single products works ok as far as we have been testing this issue.\r\n\r\nI have setup a clean WP/WC (Storefront theme) staging to confirm this bug is not theme related, and I am able to reproduce this issue there.\r\n\r\nTemporary correction of product prices: Edit a variable product, save it (without making any changes). This restores the correct prices incl.tax untill next visitor from outside EU comes to play.\r\n\r\nSteps on how to reproduce the error:\r\n\r\n1. Browse the site in incognito mode to view the correct product prices. All the products are set to display 10‚Ç¨ (incl. tax)\r\n\r\n2. Add the variable product hoodie-with-logo-copy/ to the cart and head to checkout page.\r\n\r\n3. You can use this address for delivery and activate the 0% tax that has been configured for clients from Norway:\r\nStreet: Storgatan 5\r\nZIP: 4010\r\nCity: Stavanger\r\nCountry: Norway\r\n\r\n4. Complete checkout and return to main page. Verify all the simple product prices are now displayed without VAT and the variable product incorrectly with VAT.\r\n\r\n5. Close the incognito window, and open a new incognito window.\r\n\r\n6. You will notice that all the single product prices are OK (with vat), and the Variable item ‚ÄòHoodie with OPTIONS‚Äô is showing the price without VAT. This is the bug.\r\n\r\nImportant step on testing is also to close the incognito window after one test, and open a whole new incognito window to verify results. Simply opening a new tab on incognito mode does not always work.\r\n\r\nRegarding geolocation ‚Äì MaxMind is active & license added (just like on the live environment) The display of taxes however has been set to assign the taxes on checkout page based on the client shipping address.\r\n\r\nFor testing the view with VAT you can use this address:\r\n\r\nStreet: H√§meentie 11\r\nZip: 00530\r\nCity: Helsinki\r\nCountry: Finland\r\n\r\nOne further clarification to avoid any misunderstandings:\r\n\r\nHow the prices should be displayed:\r\nNorway = VAT 0% (Not a EU member state)\r\nFinland = VAT 24%\r\nSweden = VAT 24%\r\n\r\nBut also please note: The main issue is displaying prices without VAT for new customers entering the site (before adding an address), once there has been customers browsing the site eligible to view prices without VAT‚Ä¶ Default should always be to display prices with VAT.\r\n\r\nInitially I thought this might be an issue with WPML, and the support thread with their support can be seen here: https://wpml.org/forums/topic/tax-is-displayed-incorrect-on-variable-product-prices-on-multilingual-site/\r\n\r\nAccording to their conclusions the issue however lies in WooCommerce itself.\r\n\r\nthe problematic transient is _transient_wc_var_prices_740\r\nThis transient is stored based on the user session, so it could be that something from woocommerce_sessions table or a custom config is causing this behaviour.\r\n\r\nThe sandbox site is a clean install with only WP+WC installed without any customisations made.\n\n###\n\n","completion":" [1891051437]"}
{"prompt":"I have a very specific issue where a third-party plugin feeds WooCommerce with dynamic coupons using the `woocommerce_get_shop_coupon_data` hook in the constructor of _WC_Coupon_. My goal is to provide an additional post meta field on the coupon. Attempting to append my post meta field like so ...\r\n\r\n```php\r\nadd_filter( 'woocommerce_get_shop_coupon_data', function( $return_val ) {\r\n    if ( is_array( $return_val ) && array_key_exists( 'id', $return_val ) ) {\r\n        $return_val['meta_data'] = [ // this will be reached for external dynamic coupons\r\n            'is_voucher' => 'yes' // my custom post meta field\r\n        ];\r\n    }\r\n    return $return_val;\r\n}, 1000 );\r\n```\r\n\r\n... will not work, because the returning array will be processed in `WC_Coupon::read_manual_coupon` and `WC_Data::set_props`, eventually. This function will not set post meta field values to the _WC_Coupon_ object. I documented [my issue at StackOverflow](https://stackoverflow.com/questions/67440898/how-to-append-meta-data-to-a-third-party-coupon-dynamically) in detail.\r\n\r\nI was also looking for a bypass to circumvent this issue, but WooCommerce seems to re-use the coupons by passing the string of the code to a new _WC_Coupon_ instance over and over, again. This makes it impossible for me to modify the post meta field reliably, so some other logic is triggered from another plugin of which I have no control.\r\n\r\nAfter all, post meta fields for dynamic coupons are not load from the database, so storing any fields in the database has no effect.\r\n\r\nEventually, the third-party plugin provided a hook for us to bypass this limitation, but I think it would be nice in general to be able to set post meta field on dynamic coupons.\n\n###\n\n","completion":" [1891051442]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen granting permission via OAuth for another app to connect to a WooCommerce store, the screen has the old purple color, and some missing spacing/padding around the main logo.\r\n\r\n**Expected behavior**\r\nI expected the colors to be the newer, richer purple, and for there to be consistent spacing around the logo.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Attempt to connect your store to anything that allows for OAuth based connections (e.g. https://www.pirateship.com/)\r\n2. See broken layout\r\n\r\n**Screenshots**\r\n![image-2](https://user-images.githubusercontent.com/108942/117368771-364d9380-ae81-11eb-9e5f-bc6612bd8a52.png)\r\n\n\n###\n\n","completion":" [1891051448]"}
{"prompt":"## Bug Description:\r\n \"Products and Expires\" column appears misaligned for \"Downloads\" section on \"My Account->Orders->View\" Page for \"Twenty Twenty- One\" theme\r\n\r\n## Test Instructions:\r\nAdded parameter to function wc_downloadable_file_permission and filter hook woocommerce_downloadable_file_permission\r\nhttps://github.com/woocommerce/woocommerce/wiki/Release-Testing-Instructions-WooCommerce-5.3#added-parameter-to-function-wc_downloadable_file_permission-and-filter-hook-woocommerce_downloadable_file_permission\r\n\r\n## Environment:\r\nWoocommerce Version : WooCommerce 5.2.2 and 5.3 RC 1\r\nWordPress version: (v5.7)\r\n\r\n**PC:**\r\nWindows 10, Mac 10.14.6\r\nChrome(Version 89.0.4389.90) \r\nFirefox(Version 87.0)\r\nSafari: v13.1.1\r\n\r\n## Steps To Reproduce:\r\n1. Create any test site using JN site.\r\n1. Install and activate all the required plugins \r\n1. Complete the onboarding setup wizard setup \r\n1. Complete \"Get ready to start selling\" section on WooCommerce->Home Page\r\n1. Create a \"Downloadable\" product by clicking on \"Add New\" button on \"Products\" page \r\n1. Select \"Downloadable\" checkbox for simple product say tickets and add multiple downloadable files say \"file1\",\"file2\"and \"file3\" as well as Set the expiry date \r\n1. Go to frontend and add purchase the \"tickets\" products to cart from shop by clicking on \"Add to Cart\" button\r\n1. Click on \"View Cart\" button \r\n1. Click on \"Proceed to Checkout\" \r\n1. Click on \"Place Order\" after entering the address and selecting a payment method \r\n1. Go to backend, WooCommerce->Orders and \"Edit\" the order you had just placed (tickets)\r\n1. Change the status from \"on-Hold\" to \"processing\" and click on \"Update\" button\r\n1. Go to front-end, \"My Account->Orders->View\" Page \r\n1. Observe that  \"Products and Expires\" column appears misaligned for \"Downloads\" section on \"My Account->Orders->View\" Page\r\n\r\n**Note:**\r\nFor \"Twenty Twenty\" theme, \"Products and Download Remaining\" columns are misaligned for the \"Downloads\" section on \"My Account->Orders->View\" Page\r\nFor \"Store Front\" theme, \"Download Remaining\" column is misaligned for the \"Downloads\" section on \"My Account->Orders->View\" Page\r\n\r\n## Actual Result:\r\n \"Products and Expires\" column appears misaligned for \"Downloads\" section on \"My Account->Orders->View\" Page for \"Twenty Twenty- One\" theme\r\n\r\n## Expected Result:\r\n \"Products and Expires\" column should appear properly aligned for \"Downloads\" section on \"My Account->Orders->View\" Page for \"Twenty Twenty- One\" theme\r\n\r\n## ScreenShot:\r\nFor \"Twenty Twenty- One\" theme- \"Products and Expires\" column \r\n![#29831](https://user-images.githubusercontent.com/41110392/117166280-d9e86680-ade3-11eb-8bf9-7190fa7609e9.png)\r\n\r\nFor \"Twenty Twenty\" theme- \"Products and Download Remaining\" column\r\n![#29831_1](https://user-images.githubusercontent.com/41110392/117169664-ea4e1080-ade6-11eb-8ad8-41c1c1829101.png)\r\n\r\nFor \"Store Front\" theme- \"Download Remaining\" column \r\n![#29831_2](https://user-images.githubusercontent.com/41110392/117170070-4dd83e00-ade7-11eb-865f-5f4ff58f0aea.png)\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\n\n###\n\n","completion":" [1891051447]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nI believe the function `WC_Product_Importer::get_percentage_complete` incorrectly overestimates the completion of the product import progress. In particular it may report a progress of `100` even though the import has not read the entire file yet.\r\nThis causes early termination of the import process due to `WC_Product_Importer::do_ajax_product_import` checking if `get_percentage_complete() === 100` to determine whether the import has completed. As a direct result, the final lines in a CSV file are, in some cases, skipped during the import process. This problem may also occur in other places, however I have not verified it.\r\n \r\nThe root of this behaviour is the use of `NumberUtil::round` when calculating the percentage, since it may round up to `100`. https://github.com/woocommerce/woocommerce/blob/b19500728b4b292562afb65eb3a0c0f50d5859de/includes/import/abstract-wc-product-importer.php#L163\r\n\r\nBelow is the snippet from `WC_Product_Importer::do_ajax_product_import` in which the return value is checked against `100`.\r\nhttps://github.com/woocommerce/woocommerce/blob/b19500728b4b292562afb65eb3a0c0f50d5859de/includes/admin/class-wc-admin-importers.php#L236-L241\r\n\r\n**Expected behavior**\r\n`WC_Product_Importer::get_percentage_complete` should return `100` if and only if `$this->file_position === $size`.\r\n\r\n**Actual behavior**\r\n`WC_Product_Importer::get_percentage_complete` returns `100` if e.g. `$this->file_position === 995` and `$size === 1000`.\r\n\r\n**Steps to reproduce the bug**\r\nI have created a CSV file that, when imported, triggers the aforementioned bug. You can find it [here](https://pastebin.com/uMVnxGzy).\r\n1. Go to `/wp-admin/edit.php?post_type=product&page=product_importer`\r\n2. Upload the file and start the import, keeping the default settings\r\n3. Wait for the import to finish (might take a while)\r\n4. Notice that 990 products were imported, despite there being 991 products in the file. The final line (SKU 990) has been skipped.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**Possible fix**\r\nI believe a valid fix for this problem would be to simply remove the `NumberUtil::round` call and keep the `absint` call so as to truncate the result to an integer. This would ensure that `WC_Product_Importer::get_percentage_complete` only returns `100` once `$this->file_position === $size`, thereby remedying the aforementioned problem.\r\nHowever I am not familiar enough with the codebase to evaluate the impact of this change, which is why I raised this as an issue instead of submitting a PR.\n\n###\n\n","completion":" [1891051450]"}
{"prompt":"**Is your feature request related to a problem? Please describe.**\r\n\r\nI would like to use the TableCard component and hide the \"per page\" picker in the Pagination using `showPerPagePicker={ false }`, but there isn't a way to do that, or to pass other Pagination props.\r\n\r\nhttps://github.com/woocommerce/woocommerce-admin/blob/dde6b184ed6d14985402dc76f7078bf03b7985d7/packages/components/src/table/index.js#L246-L253\r\n\r\n**Describe the solution you'd like**\r\n\r\nAllow the TableCard component to accept more Pagination props and pass it down to Pagination.\r\n\r\nA third-party reference example: [Ant Design Table](https://ant.design/components/table/#API)'s `pagination` props. You can pass any [Ant Design Pagination](https://ant.design/components/pagination/) props via `<Table pagination={ /* pagination config here */ }>`\r\n\r\n**Describe alternatives you've considered**\r\n\r\nBuild my own TableCard component by using Table and Card components.\r\n\r\n**Should this be prioritized? Why?**\r\n\r\n**Additional context**\r\n\r\n\n\n###\n\n","completion":" [3943104021,3943425720]"}
{"prompt":"**Is your feature request related to a problem? Please describe.**\r\n\r\nCurrently the Pagination component has [hardcoded `PER_PAGE_OPTIONS`](https://github.com/woocommerce/woocommerce-admin/blob/dde6b184ed6d14985402dc76f7078bf03b7985d7/packages/components/src/pagination/index.js#L12), i.e. 25, 50, 75, 100.\r\n\r\nIt would be great for it to be customizable. For my project's use case, we would like to have a small table with a default page size of 5.\r\n\r\n**Describe the solution you'd like**\r\n\r\nMake the per page options customizable via props.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nCurrent workaround that I'm using is to hide the page size picker by specifying `showPerPagePicker={ false }`.\r\n\r\n**Should this be prioritized? Why?**\r\n\r\n**Additional context**\r\n\r\nAn example / reference of other third party Pagination component: [Ant Design Pagination](https://ant.design/components/pagination/) (See `pageSizeOptions`)\r\n\n\n###\n\n","completion":" [3943104021,3943425720]"}
{"prompt":"## Bug Description:\r\nDuplicate entries are displayed for downloadable products with 2+ download files on the \" Edit Order\" page when one of the files is granted access after revoking it \r\n\r\n## Test Instructions:\r\nAdded parameter to function wc_downloadable_file_permission and filter hook woocommerce_downloadable_file_permission:\r\nhttps://github.com/woocommerce/woocommerce/wiki/Release-Testing-Instructions-WooCommerce-5.3#added-parameter-to-function-wc_downloadable_file_permission-and-filter-hook-woocommerce_downloadable_file_permission\r\n\r\n## Environment:\r\nWoocommerce Version : WooCommerce 5.2.2 and 5.3 RC 1\r\nWordPress version: (v5.7)\r\n\r\n**PC:**\r\nWindows 10, Mac 10.14.6\r\nChrome(Version 89.0.4389.90) \r\nFirefox(Version 87.0)\r\nSafari: v13.1.1\r\n\r\n## Steps To Reproduce:\r\n1. Create any test site using JN site.\r\n1. Install and activate all the required plugins \r\n1. Complete the onboarding setup wizard setup \r\n1. Complete \"Get ready to start selling\" section on WooCommerce->Home Page\r\n1. Create a \"Downloadable\" product by clicking on \"Add New\" button on \"Products\" page \r\n1. Select \"Downloadable\" checkbox for simple product say tickets and add multiple downloadable files say \"file1\",\"file2\"and \"file3\"\r\n1. Go to frontend and add purchase the \"tickets\" products to cart from shop by clicking on \"Add to Cart\" button\r\n1. Click on \"View Cart\" button \r\n1. Click on \"Proceed to Checkout\" \r\n1. Click on \"Place Order\" after entering the address and selecting a payment method \r\n1. Go to backend, WooCommerce->Orders and \"Edit\" the order you had just placed (tickets)\r\n1. Revoke access for any one of the downloadable file say for \"file2\" \r\n1. Try Granting access to \"file2\"  \r\n1. Observe that duplicate entry are created for \"file1\" and \"file3\"\r\n\r\n**Note:** \r\nFrontend the entries are properly displayed for downloadable products when viewed from \"My Account->Orders\" page\r\n\r\n## Actual Result:\r\nDuplicate entries are displayed for downloadable products with 2+ download files on \" Edit Order\" page when one of the file is granted access after revoking it \r\n\r\n## Expected Result:\r\nThe website should validate at the backend which files needs to be granted access when a downloadable product with multiple files is purchased and accordingly display entries on Orders Page\r\n\r\n## Video:\r\n\r\nhttps://user-images.githubusercontent.com/41110392/116429196-49e67200-a863-11eb-9d63-6cb960d8c4ea.mp4\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051458]"}
{"prompt":"**Is your feature request related to a problem? Please describe.**\r\n\r\nUsing the current [Orders Report filters](https://docs.woocommerce.com/document/woocommerce-analytics/#orders-report__filters) it isn't possible to have a report for \"Orders containing this product AND this other product\"\r\n\r\n**Describe the solution you'd like**\r\n\r\nAnd advanced filter that uses `AND` in addition to the current `OR`\r\n\r\n**Describe alternatives you've considered**\r\n\r\nI looked at combining products on the same \"line\" but this brings up order that have either product not both in the same order https://d.pr/i/YdU0NH\r\n\r\n**Should this be prioritized? Why?**\r\n\r\nUnsure.\r\n\r\n**Additional context**\r\n\r\n3945179-zen\r\n\n\n###\n\n","completion":" [3943104021,3943425133]"}
{"prompt":"**Describe the bug**\r\n\r\nThere are cases when the product gallery, shown in singular product views, displays a border/line on the side. Based the investigation, this line/border is a part of the previous image in the gallery, meaning that the left and/or right picture is bleeding onto main picture in view just 1 or 2px (just very noticeable on something that has a white background against other pics either side that are darker).\r\n\r\nFirst, I've thought that the issue is caused by the current theme. So, I've activated official WooCommerce theme (\"Storefront\") but it did not resolve the problem.\r\n\r\n**Expected behavior**\r\nThe gallery should shown only the main picture in the gallery.\r\n\r\n**Actual behavior**\r\nThe gallery shows a part of the previous image (1px-2px) in the main gallery.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Create a new product\r\n2. Set featured image\r\n3. Add image to the gallery\r\n4. Publish the product\r\n5. See error\r\n\r\n**Screencast**\r\n\r\nhttps://cloudup.com/cMoGMuImqGK\r\n\r\n**Screenshots**\r\n\r\nOriginally, the issue was spotted on [this site](https://davidperryglassceramics.uk/product/4x4cm-chequered-magnets/). The same issue using an official WooCommerce theme:\r\n\r\n![Gallery issue](https://snipboard.io/HNovaO.jpg)\r\n\r\n**Environment**\r\n\r\nWordPress: 5.7.1\r\nWooCoomerce: 5.2.2\r\nStorefront: 3.5.1\r\n\r\n\r\n\r\n\r\n\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"Spun out of an observation made in [#28759](https://github.com/woocommerce/woocommerce/issues/28759#issuecomment-815295121):\r\n\r\n- Suppose `Settings ‚Ä£ Shipping Options ‚Ä£ Shipping Destination` is set to `Default to customer billing address`\r\n- And we have a logged-in customer who has updated their account with a saved billing address and a saved shipping address\r\n- When they add a shippable item to the cart, the cart page will show their *shipping* address as the shipping address (contrary to the above setting, which should mean the billing address is used)\r\n- On proceeding to the checkout the problem is corrected\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Expected behavior**\r\n\r\nIf `Settings ‚Ä£ Shipping Options ‚Ä£ Shipping Destination` is set to `Default to customer billing address` then the saved **billing address** (and not the saved shipping address) should be used as the shipping destination unless the customer manually decides to specify a different address.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n\n\n###\n\n","completion":" [1891051459]"}
{"prompt":"## Bug Description:\r\nThe refund label gets replaced by \"Reason for Refund\" when the refunded email is sent to the respective customer.\r\n\r\n## Environment:\r\nWoocommerce Version : WooCommerce 5.2.2 and 5.3.0 Beta\r\nWordPress version: (v5.7)\r\n\r\n**PC:**\r\nWindows 10, Mac 10.14.6\r\nChrome(Version 89.0.4389.90) \r\nFirefox(Version 87.0)\r\nSafari: v13.1.1\r\n\r\n## Steps To Reproduce:\r\n1. Create any test site using JN site.\r\n1. Install and activate all the required plugins \r\n1. Complete the onboarding setup wizard setup \r\n1. Complete \"Get ready to start selling\" section on WooCommerce->Home Page\r\n1. Go to frontend and add some products to cart from shop by clicking on \"Add to Cart\" button\r\n1. Click on \"View Cart\" button say that you have added \"t-shirt\"\r\n1. Click on \"Proceed to Checkout\" \r\n1. Click on \"Place Order\" after entering the address and selecting a payment method \r\n1. Go to backend, WooCommerce->Orders and \"Edit\" the order you had just placed (t-shirt)\r\n1. Click on \"Refund\" button\r\n1. Select the quantity and refund amount will be updated, mention the \"Reason for Refund\" say bad quality or size dosen't fit\r\n1. Click on \"Refund Manually\" button\r\n1. Click on \"OK\" button when \"Are you sure?\" popup is displayed\r\n1. Click on \"Update\" button, Status changes from processing to refunded \r\n1. Go to email you had set while purchasing the order, refund notification mail will be recieved \r\n1. Open the mail and Note that instead of refund label beside the refund amount , reason has been mentioned\r\n1. Observe that refund label gets replaced by \"Reason for Refund\" when the refunded email is sent to the respective customer.\r\n\r\n## Actual Result:\r\nThe refund label gets replaced by \"Reason for Refund\" when the refunded email is sent to the respective customer.\r\n\r\n## Expected Result:\r\nThe refund label should not get replaced by \"Reason for Refund\" when the refunded email is sent to the respective customer.\r\nThe reason should be displayed separately below the refund amount\r\n\r\n## ScreenShot:\r\n![#29742](https://user-images.githubusercontent.com/41110392/115746723-309c7c00-a3b2-11eb-9cb5-974b37e3bfa6.png)\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\n\n###\n\n","completion":" [1891051445]"}
{"prompt":"## Bug Description:\r\n\"Change Payment Method and Add Payment Method\" page appears misaligned for \"Twenty Twenty-One\" theme\r\n\r\n## Environment:\r\nWoocommerce Version : WooCommerce 5.2.2 and 5.3.0 Beta\r\nWordPress version: (v5.7)\r\n\r\n**PC:**\r\nWindows 10, Mac 10.14.6\r\nChrome(Version 89.0.4389.90) \r\nFirefox(Version 87.0)\r\nSafari: v13.1.1\r\n\r\n## Steps To Reproduce:\r\n1. Create any test site using JN site.\r\n1. Install and activate all the required plugins \r\n1. Complete the onboarding setup wizard setup \r\n1. Install and activate WooCommerce Payments plugin\r\n1. Import Products and create subscription products after uploading the subscriptions plugin\r\n1. Go to frontend and purchase some subscription products\r\n1. Go to \"My Account-> Subscriptions\" page and click on \"View\" button\r\n1. Click on \"Change Payment\" button\r\n1. Note that \"Change Payment\" page appears misaligned\r\n1. Go to \"Payment Methods\"\r\n1. Click on \"Add Payment Method\" button\r\n1. Observe that \"Credit Card\" option appears misaligned\r\n \r\n**Note:**\r\nFor \"Twenty-Twenty\" theme the radio buttons appears misaligned for saved cards on \"Change Payment Method\" page\r\n\r\n## Actual Result:\r\n\"Change Payment Method and Add Payment Method\" page appears misaligned for \"Twenty Twenty-One\" theme\r\n\r\n## Expected Result:\r\n\"Change Payment Method and Add Payment Method\" page should appear properly aligned for \"Twenty Twenty-One\" theme\r\n\r\n## Video and ScreenShot:\r\n\r\nhttps://user-images.githubusercontent.com/41110392/115745320-f2528d00-a3b0-11eb-821a-01648da79909.mov\r\n\r\n![#29740](https://user-images.githubusercontent.com/41110392/115745428-0bf3d480-a3b1-11eb-86b9-573905fb6bb1.png)\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\n\n###\n\n","completion":" [1891051447,1891051451]"}
{"prompt":"Please provide us with the information requested in this bug report. Without these details, we won't be able to fully evaluate this issue. \r\nBug reports lacking detail, or for any other reason than to report a bug, may be closed without action.\r\n\r\n<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nAdmin backend orders tab. Writing inside a \"order item meta\" input or textarea and pressing spacebar it opens a product search dialog in top of the page. \r\n\r\n**Expected behavior**\r\nWriting inside a \"order item meta\" input or textarea lets press spacebar to split words.\r\n\r\n**Actual behavior**\r\nIn a order backend page, adding a product and selecting edit it will let you add a meta field.\r\nUsing the spacebar inside the meta field input or textarea will open a search product dialog in the top of the screen, with a 'forced focus'. This dialog will not disappear until you write and select one of the product listed. \r\nThis behavior seems to happen only if you add products to list's without having 'created' the order yet.\r\nThis behavior is reproducible on Apple iPad Air with IOS 11.4\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Go to Wordpress admin backend\r\n2. Click on Woocommerce-> Orders\r\n3. Click on 'Add order'\r\n4. Scroll to the product list section\r\n5. Click on 'Add product'\r\n6. Add a product\r\n7. Click on edit\r\n8. Click on \"add meta\"\r\n9. press the spacebar\r\n\r\n**Screenshots**\r\n![1](https://user-images.githubusercontent.com/79157646/115581955-c65bdc80-a2c8-11eb-9774-1a9d7a7ea405.png)\r\n\r\n![2](https://user-images.githubusercontent.com/79157646/115581962-c8be3680-a2c8-11eb-87b7-0445257dae5e.png)\r\n\r\n![3](https://user-images.githubusercontent.com/79157646/115581972-cb209080-a2c8-11eb-8446-772c3648ffb1.png)\r\n\r\n![4](https://user-images.githubusercontent.com/79157646/115581987-cd82ea80-a2c8-11eb-8fd3-98b6cba38ce9.png)\r\n\r\n\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n\n\n###\n\n","completion":" [1891051458]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\n\r\nFirst of all I have the following attributes defined:\r\n\r\n<img src=\"https://user-images.githubusercontent.com/1025173/115490018-dcaf5d00-a222-11eb-8e88-78a83d95a187.png\" width=\"538\"/>\r\n\r\nMy variable product has the following variations:\r\n\r\n<img src=\"https://user-images.githubusercontent.com/1025173/115490586-fe5d1400-a223-11eb-9fc5-a0cfb0d0df0d.png\" width=\"533\"/>\r\n\r\n```\r\nRegular Price for the \"medium - Any color\" variation is: $15.00\r\nRegular Price for the \"medium - green\" is: $25.00\r\n```\r\n\r\nWhen creating a Variable product with the variations like above and also selecting values for \"Default Form Values\" the **amount** displayed to the user on the **Product's Page** is incorrect.\r\n\r\nIf there's an exact variation defined that matches with the exact values picked for \"Default Form Values\" that variation should be considered over \"Any {attribute name}...\". \r\n\r\n**Expected behavior**\r\nAmount should be `$25.00` since \"Default Form Values\" is defined to \"medium - green\".\r\n\r\n**Actual behavior**\r\nAmount is `$15.00` because is taking the Regular Price from the \"medium - Any color\" variation.\r\n\r\n**Steps to reproduce the bug**\r\n\r\nWith only WooCommerce installed:\r\n- Create a variable product with the attributes mentioned above.\r\n- Go to product's page and you'll see the price displayed belongs to the \"Medium - Any color\" variation even though there's a price for the \"medium - green\" variation.\r\n<img src=\"https://user-images.githubusercontent.com/1025173/115491588-d8387380-a225-11eb-94bd-bfbaaf254e40.png\" width=\"343\" />\r\n\r\nI can confirm the first occurrence is considered first if we move the \"medium - green\" variation to the top. The amount on the product's page is correct.\r\n\r\n<img src=\"https://user-images.githubusercontent.com/1025173/115492104-c0adba80-a226-11eb-9070-2f6fc175ebb0.png\" width=\"572\" />\r\n\r\n<img src=\"https://user-images.githubusercontent.com/1025173/115492189-ef2b9580-a226-11eb-9e2e-37e667c96f7d.png\" width=\"343\"/>\r\n\r\n\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n\r\n<details>\r\n\r\n```\r\n\n\n###\n\n","completion":" [1891051456]"}
{"prompt":"Hello,\r\n\r\nWe have a category with hidden products. If we use Product categories widget with the list view and check Hide empty categories then category with these hidden products does not appear in the list - http://prntscr.com/11pdh7w. But once we switch to drop-down type in the widget settings category is there (http://prntscr.com/11pdj2y) and this is the problem for us because we don't want to show the category with the hidden products. Could you fix this, please?\r\n\r\nRegards, @stas0238\n\n###\n\n","completion":" [1891051438]"}
{"prompt":"**Describe the bug**\r\nIf you run an analytics report on a date range that includes February in a leap year, the chart misses the 29th of February.\r\n\r\nRaised here - woocommerce/woocommerce-admin#6584 - discussion here - p90Yrv-2f6-p2\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n1. Go to Analytics -> Revenue\r\n2. Select \"Year to date\" and compare to \"Previous year\"\r\n3. Update\r\n4. The chart will include 28 Feb for both years but not 29 Feb for 2020\r\n\r\n**Expected behavior**\r\nA zero value should be created for 29 Feb 2021 so that the value for 29 Feb 2020 can be displayed in the chart.\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/224531/115186594-5b25d500-a125-11eb-94fb-5e650e6a2756.png)\r\n\n\n###\n\n","completion":" [3943104021,3943425133]"}
{"prompt":"**Is your feature request related to a problem? Please describe.**\r\nA leap year has 29 days in February, while a non-leap year only has 28 days. Therefore there is a possibility that a comparison is made between February in a leap year and a non-leap year. This can be confusing.\r\n\r\nFirst raised here - woocommerce/woocommerce-admin#6584 - discussed here - p90Yrv-2f6-p2\r\n\r\n**Describe the solution you'd like**\r\nA note added to the chart if there is a comparison involving a leap year.\r\n\r\nText is \"Note: This chart compares data from February in a leap year which may result in inconsistent totals.\"\r\n\r\nMockup:\r\n![image](https://user-images.githubusercontent.com/224531/115184477-4ba48d00-a121-11eb-8ead-dac64342e556.png)\r\n\r\n**Describe alternatives you've considered**\r\nA clear and concise description of any alternative solutions or features you've considered.\r\n\r\n**Should this be prioritized? Why?**\r\n\r\nLow to medium priority - it is an edge case that hasn't been reported by users.\n\n###\n\n","completion":" [3943104021,3943425133]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen making an export of products, a Variable Product that is set to `Draft` will have value `-1` in its \"Published\" column.\r\nIt's children will also have this same value.\r\n\r\nWhen making an import however, it will only consider status `0` or `1` for the children. As a result, the product will be imported, it will have a `Draft` status, but the variations do not show.\r\n\r\n**Expected behavior**\r\nThe status code `-1` (for `Draft`) for children/variations should apply for both **imports** and **exports**.\r\n\r\n**Actual behavior**\r\nThe status code `-1` (for `Draft`) for children/variations only applies for **exports**. \r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Create a Variable Product with a number of variations and set it to `Draft`.\r\n2. Go to Products ‚Üí Export and make an export of this Variable Product.\r\n3. Open the CSV and observe that both the parent, and its variations, all have status `-1`.\r\n4. Delete the Variable Product (also remove it from Trash) and import the CSV -- or import the CSV into another site.\r\n5. The Variable Product exists, but it does not show any variations.\r\n\r\n**Additional details**\r\nUntil a few months ago, it was normal that variations/children could only have status `0` or `1`. Only the **parent** could have status `-1` (ref: https://github.com/woocommerce/woocommerce/issues/27308#issuecomment-673516931 ).\r\n\r\nThis was changed in PR #27046, where the status of children/variations would always follow the status of the parent, so now, children/variations would have status `-1` as well in the CSV file after an export.\r\n\r\nBut imports would then ignore this status, as it would only consider `0` or `1` as a valid status for a child/variation.\r\n\r\nFor consistency, I suggest one of the two fixes:\r\n\r\n- For **exports**, a Variable Product in `Draft` mode should have `-1` for the parent, and `1` for the children.\r\n\r\n*- OR -* \r\n\r\n- For **imports**, the status of the children of a Variable Product should be ignored or considered `1`.\r\n\r\n\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n\r\n\n\n###\n\n","completion":" [1891051456]"}
{"prompt":"## Bug Description:\r\nProduct count fails to update for \"Out of Stock\" section on WooCommerce Status widget if the \"Manage stock\" option is disabled under product settings.\r\n\r\n## Environment:\r\nWoocommerce Version : WooCommerce 5.2.2 and 5.1\r\nWordPress version: (v5.7)\r\n\r\n**PC:**\r\nWindows 10, Mac 10.14.6\r\nChrome(Version 89.0.4389.90) \r\nFirefox(Version 87.0)\r\nSafari: v13.1.1\r\n\r\n## Steps To Reproduce:\r\n1. Create any test site using JN site.\r\n1. Install and activate all the required plugins \r\n1. Complete OBW setup.\r\n1. Add some products.\r\n1. Disabled the \"Manage Stock\" option for all the products.\r\n1. Now change the \"In Stock\" status to \"Out of Stock\" under product settings.\r\n1. Go to Dashboard->Home->WooCommerce Status widget.\r\n1. Observe that Product count fails to update for \"Out of Stock\" section.\r\n\r\n## Actual Result:\r\nProduct count fails to update for \"Out of Stock\" section on WooCommerce Status widget if the \"Manage stock\" option is disabled under product settings.\r\n\r\n## Expected Result:\r\nProduct count should get update for \"Out of Stock\" section on WooCommerce Status widget.\r\n\r\n## Video:\r\n\r\nhttps://user-images.githubusercontent.com/41110392/114891491-8e1c5000-9e29-11eb-887a-a5347d1c359c.mp4\r\n\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051471]"}
{"prompt":"## Bug Description:\r\nFor \"Twenty Twenty One\" theme, Content appears misaligned on Cart page for Multiple variable products.\r\n\r\n## Environment:\r\nWoocommerce Version : WooCommerce 5.2.2 and 5.1\r\nWordPress version: (v5.7)\r\n\r\n**PC:**\r\nWindows 10, Mac 10.14.6\r\nChrome(Version 89.0.4389.90) \r\nFirefox(Version 87.0)\r\nSafari: v13.1.1\r\n\r\n## Steps To Reproduce:\r\n1. Create any test site using JN site.\r\n1. Install and activate all the required plugins \r\n1. Complete OBW setup.\r\n1. Select Twenty Twenty One theme.\r\n1. Add Some Variable products.\r\n1. Go to frontend and add multiple variable products to the cart with different variations.\r\n1. Go to Cart page.\r\n1. Observe that content appears misaligned on Cart page for Multiple variable products.\r\n\r\n## Actual Result:\r\nFor \"Twenty Twenty One\" theme, Content appears misaligned on Cart page for Multiple variable products.\r\n\r\n## Expected Result:\r\nAll content should be properly aligned.\r\n\r\n## ScreenShot:\r\n![#29697](https://user-images.githubusercontent.com/41110392/114890996-21a15100-9e29-11eb-80b7-7278ef390b9b.png)\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\n\n###\n\n","completion":" [1891051447]"}
{"prompt":"## Bug Description:\r\nFont is too large for \"Email Address\" and \"Phone Number\" displayed under \"Billing Address\" on \"My Account->Addresses/Subscriptions\" page for \"Twenty Twenty One theme\"\r\n\r\n## Environment:\r\nWoocommerce Version: WooCommerce 5.2 and 5.1\r\nWordPress version: (v5.7)\r\n\r\nPC:\r\nWindows 10, Mac 10.14.6\r\nChrome(Version 89.0.4389.90) \r\nFirefox(Version 87.0)\r\nSafari: v13.1.1\r\n\r\n## Steps To Reproduce:\r\n1. Create any test site using JN site.\r\n1. Install and activate all the required plugins \r\n1. Complete OBW setup\r\n1. Go to Products->Add New \r\n1. Add payment method say \"Cash on Delivery\" from WooCommerce->Payments\r\n1. Go to front-end, add a product to cart by clicking on \"Add to Cart\" button\r\n1. Click on \"View Cart\" button\r\n1. Click on \"Proceed to Checkout\" button\r\n1. Click on \"Place Order\" button\r\n1. Go to \"My Account-> Orders\" \r\n1. Click on \"View\" button\r\n1. Observe that font is too large for \"Email Address\" and \"Phone Number\" displayed under \"Billing Address\" on \"My Account->Addresses/Subscriptions\" page for \"Twenty Twenty One theme\"\r\n\r\n## Actual Result:\r\nFont is too large for \"Email Address\" and \"Phone Number\" displayed under \"Billing Address\" on \"My Account->Addresses/Subscriptions\" page for \"Twenty Twenty One theme\"\r\n\r\n## Expected Result:\r\nFont should be same as the other details under \"Billing Address\" for \"Email Address\" and \"Phone Number\" field on \"My Account->Addresses/Subscriptions\" page for \"Twenty Twenty One theme\"\r\n\r\n## ScreenShot:\r\n![#29673](https://user-images.githubusercontent.com/41110392/114731918-bd668a80-9d5f-11eb-91a8-2ec65da9c814.png)\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\n\n###\n\n","completion":" [1891051447]"}
{"prompt":"While working on updates to the store profiler I noticed that we have a large percentage of users choosing the \"Other\" option in the \"What platform is the store using\" dropdown. \r\n<img width=\"1274\" alt=\"Screen Shot 2021-04-09 at 1 27 59 PM\" src=\"https://user-images.githubusercontent.com/5121465/114224995-6d3e9100-9937-11eb-82a2-b21104c78b74.png\">\r\n\r\nOther option compared to the others (orange line):\r\n<img width=\"1725\" alt=\"Screen Shot 2021-04-06 at 11 22 32 PM\" src=\"https://user-images.githubusercontent.com/5121465/114224751-189b1600-9937-11eb-81c7-8d236ec5235a.png\">\r\nWhat merchants specified for \"Other\":\r\n<img width=\"465\" alt=\"Screen Shot 2021-04-06 at 11 18 27 PM\" src=\"https://user-images.githubusercontent.com/5121465/114224784-23ee4180-9937-11eb-877e-ba32d3f63aff.png\">\r\n\r\nAfter looking closer at the data, it's clear that Facebook and Instagram have become a top choice. We should add them to the dropdown to reduce this added friction in the setup flow.\r\n\r\ncc @pmcpinto since we chatted about this already.\r\n\r\n\r\n\r\n\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen manually adding a negative fee to an order, the fee doesn't show in the order summary - https://d.pr/i/fXpvgA\r\n\r\n**Expected behavior**\r\nI would expect it to show a new line item to the order summary just like it does for positive fees - https://d.pr/i/SoTQhP\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Go to **WooCommerce > Orders** and edit an order.\r\n2. Click on **Add Item > Add Fee**, type in a negative value, and click **OK**\r\n3. Click on **Save** and then **Recalculate**. \r\n4. Notice that a **Fee** line item hasn't been added to the order summary. \n\n###\n\n","completion":" [1891051458]"}
{"prompt":"Woocommerce 5.0.0 , Wordpress 5.7 , local dev with default docker image.\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nA call to `woo_api.get('products/attributes?slug=the_slug_used_as_filter')` endpoint doesn't return the filtered list of product attributes. Similar query to other endpoints (like product or category) work fine.\r\n\r\n**Expected behavior**\r\nThe list of attributes where the slug is equal to the filter.\r\n\r\n**Actual behavior**\r\nThe query returns all product attributes.\r\n\r\n**Important notes**\r\nThe behaviour isn't a real problem but the online docs doesn't reflect the real implementation and it's missing some important notes about the use of `_fields[]` get parameter. Maybe the rest endpoint it's not tested at all? \r\n\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x ] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x ] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nUpdating the sale price of products to blank using bulk update actually sets the sale price to zero. \r\n\r\nThis is how I have always turned my sales off. i.e. I would select all products and set sale price to regular price -30% to start the sale. Then at the end of the sale I would set the sale price to blank. This worked fine up to my last sale - when I came to turn if off I bulk updated all the sale prices to blank. But when I check the site all products were FREE. In the back end the sale price showed as zero. I had to put my site in maintenance mode while I figured out how to remove the sale price without editing 100+ products by hand. \r\n\r\nObviously sale price = blank and sale price = 0 are very different things, and interpreting blank as zero in this case is not correct, and not what used to happen.\r\n\r\nI am not sure what version of Woo this changed in. It was fine when we ran our Cyber sale at the end of 2020, but I have updated all plugins since then.\r\n\r\nI have also tested this with all plugins disabled and using the storefront theme.\r\n\r\n**Expected behavior**\r\nBulk updating products using Sale Price Change to Blank removes the sale price and leaves products at the regular price.\r\n\r\n**Actual behavior**\r\nBulk updating products using Sale Price Change to Blank sets sale price to 0 resulting in products being free\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n\r\n1. Go to Woocommerce products\r\n2. Select (check) one or more products\r\n3. Select Bulk Actions, Edit\r\n4. Select Sale, Set to Regular price decreased by 30% (for example)\r\n5. Select Update\r\n6. Product prices(s) are now sale price\r\n7. Select (check) one or more products on sale\r\n3. Select Bulk Actions, Edit\r\n4. Select Sale, Change To\r\n5. Leave the Sale Price box blank\r\n5. Select Update\r\n6. Product prices(s) are now 0 and products are free\r\n\r\n**Screenshots**\r\nHere's a video from my test site. All plug ins deactivated and storefront theme. I am just doing one product for speed - when this happened on my live site I did all 100+ paid products and made my whole site free!\r\n\r\nhttps://duncan-gmail.tinytake.com/tt/NTI2MzgzMV8xNjQ2OTUyMA\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ X] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ X] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [ X] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n\r\n`\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\n\r\nOn page load/refresh, a content shift is visible on some admin pages such as Products and Orders lists. This is partly due to the Import/Export buttons loading slower than the `Add` button. This has been present for some time but reporting as this is a bug.\r\n\r\n**Expected behavior**\r\n\r\nAll content is loaded at the same time. \r\n\r\n**Actual behavior**\r\n\r\nThe content jumps only happens when WC Admin is loaded. When the page is loading, there is a shift between the top of the WP content area and the WC Admin white header. Different report for this in - https://github.com/woocommerce/woocommerce-admin/issues/6743\r\n\r\nOn the Products list, the `Import/Export` buttons load slower than the `Add` button, with WooCommerce Admin disabled, the jump isn't seen but the `Import/Export` buttons still load with a short delay.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Go to Products\r\n2. Refresh page and notice page jump\r\n3. Disable the WooCommerce Admin interface via a plugin - https://gist.github.com/joshuatf/006111b6f43c3ab3d2cad39e3443822b\r\n4. Refresh and notice the jump is no longer present but the button load is still present\r\n\r\n**Screenshots**\r\n\r\nWith WooCommerce Admin:\r\n![Page_load_jump_products_page](https://user-images.githubusercontent.com/52214/113552541-2f1b3780-95ee-11eb-98c1-e952546b9783.gif)\r\n\r\nWithout WooCommerce Admin:\r\n\r\n![Import_Export_buttons_slower_loading](https://user-images.githubusercontent.com/52214/113552566-39d5cc80-95ee-11eb-85d1-6b655fff80c5.gif)\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"As of [a recent PR](https://github.com/woocommerce/woocommerce-admin/pull/6614#pullrequestreview-627263942) we're using logic stored within the navigation data store to keep the persisted query. This is currently only actually utilized via the new navigation, but it would be best to centralize all of our persisted query logic around this.\r\n\r\nPrior art in `client/layout/navigation.js`, and the implementation looks something like this:\r\n```js\r\nconst { persistedQuery } = useSelect((select) => {\r\n  return {\r\n    persistedQuery: select(NAVIGATION_STORE_NAME).getPersistedQuery(),\r\n  };\r\n});\r\n```\r\n\r\nWe're using the persisted query in various other parts of the app (including reports), but they're generally fetched from the `getPersistedQuery()` utility method located in the `@woocommerce/navigation` package, which in turn just fetches it ultimately from `location.search`.\r\n\r\nWe'd like to change all persisted query logic to use the data store. this may remove the need for the `getPersistedQuery()` utility function, so we could remove that to avoid confusion.\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"We noticed recently a set of root variables has been added which includes colors: https://github.com/woocommerce/woocommerce/issues/28707\r\n\r\nCan Woo's stylesheets use these rather than hardcoding colors like this:\r\nhttps://github.com/woocommerce/woocommerce/blob/23710744c01ded649d6a94a4eaea8745e543159f/assets/css/woocommerce.scss#L85\r\n\r\nThis would mean a theme developer can then override the root variables to effect the colors across the website rather than needing to override every single element where the colors are hardcoded. This is particular useful if you need to update (for example) the red color WooCommerce uses throughout the website (remove from cart buttons, error notices, etc) to be a website's red hex color from brand guidelines.\r\n\r\nWe added a similar request previously at: https://github.com/woocommerce/woocommerce/issues/28546 - I'm not sure now we have these root variables if it's best to also include a filter/settings for this or just leave as CSS overrides.\r\n\r\nWhat do you think?\n\n###\n\n","completion":" [1891051447]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [X] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [X] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nA product with limited stock, where all remaining units are reserved in unpaid orders, is displayed as \"In stock\" in the product page, allowing customers to add it to their basket. Once they add it and move to the basket or checkout, they see a message saying \"Sorry, we do not have enough \"Product\" in stock to fulfill your order (0 available). We apologise for any inconvenience caused.\"\r\n\r\n**Expected behavior**\r\nThe product should be displayed as \"Out of stock\" while all units are reserved.\r\nThere is no reason to allow users to add products to their cart if they cannot buy them. Makes for bad UX.\r\nSome sites might turn off hold stock (or reduce it to a few minutes) but if they do abandoned carts (AutomateWoo) they need to retain the stock in the carts for days to allow for customers to return to their carts.\r\n\r\n**Actual behavior**\r\nThe product is displayed as \"In Stock\" and the customer can add it to their basket.\r\nWhen they move to their basket or checkout, they see an error message\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Create a new product\r\n2. Set stock to 1\r\n3. Go to that product as a customer, add to your cart, go to checkout, and create an unpaid order. Close browser\r\n4. Starting a new session, go to the product page. See how the product is showing as \"in stock\"\r\n5. Click to add the product to your basket\r\n6. Go to your basket\r\n\r\n**Screenshots**\r\nProduct page when all units are reserved\r\n![screenshot-2021 03 29-11_05_26](https://user-images.githubusercontent.com/10516403/112823951-d4c82700-9081-11eb-83fd-bf7ca684b437.png)\r\n\r\nCart page when all units are reserved\r\n![screenshot-2021 03 29-11_05_50](https://user-images.githubusercontent.com/10516403/112823924-cbd75580-9081-11eb-90d5-d8b98a229124.png)\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [X] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [X] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [X] I can reproduce this bug consistently using the steps above.\n\n###\n\n","completion":" [1891051471]"}
{"prompt":"## Bug Description:\r\n\"Review\" count fails to update until user refresh the full page, after user moves multiple reviews into \"Approve, Mark as Spam or Delete\" from \"WooCommerce->Home\" Page\r\n\r\n## Environment:\r\nWoocommerce Version : WooCommerce 5.1 and 5.0\r\nWordPress version: (v5.7)\r\nWooCommerce Admin version: v2.0.2\r\n\r\nPC:\r\nWindows 10, Mac 10.14.6\r\nChrome(Version 88.0.4324.104) \r\nFirefox(Version 86.0)\r\nSafari: v13.1.1\r\n\r\n## Steps To Reproduce:\r\n1. Create any test site using JN site.\r\n1. Install and activate all the required plugins\r\n1. Complete the onboarding setup wizard.\r\n1. Go to Products->Add New and Add multiple Products /Import Products csv file\r\n1. Go to frontend by clicking on \"Visit Site\" at top left corner under Home icon \r\n1. Add multiple reviews from frontend \r\n1. Backend: Go to Comments\r\n1. Unapproved all the comments\r\n1. Go to WooCommerce->Home page\r\n1. Under the reviews section, move the review into \"Approve, Mark as Spam or Delete\" by clicking on the respective options\r\n1. Observe that the count fails to update, as we move the reviews\r\n1. Refresh the page and note that now the count for Review starts updating\r\n\r\n**Note:**\r\nFor one review its updating properly, for multiple reviews this issue is observed\r\n\r\n## Actual Result:\r\n\"Review\" count fails to update until user refresh the full page on \"WooCommerce->Home\" Page\r\n\r\n## Expected Result:\r\n\"Review\" count should update simultaneously when moved from \"WooCommerce->Home\" Page\r\n\r\n## Video:\r\n\r\nhttps://user-images.githubusercontent.com/41110392/111493113-45f30a80-8763-11eb-85c3-cec90539b49e.mov\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\n\n###\n\n","completion":" [3943104021,3943426545]"}
{"prompt":"## Bug Description:\r\n\"Select Options\" button for variable product appears misaligned when added in a grouped product on frontend  for \"Twenty Twenty-One\" and \"Twenty Nineteen\" theme\r\n\r\n## Environment:\r\nWoocommerce Version : WooCommerce 5.1 and 5.0\r\nWordPress version: (v5.7)\r\nWooCommerce Admin version: v2.0.2\r\n\r\nPC:\r\nWindows 10, Mac 10.14.6\r\nChrome(Version 88.0.4324.104) \r\nFirefox(Version 86.0)\r\nSafari: v13.1.1\r\n\r\n## Steps To Reproduce:\r\n1. Create any test site using JN site.\r\n1. Install and activate all the required plugins\r\n1. Complete the onboarding setup wizard.\r\n1. Select any one of the theme among these two: \"Twenty Twenty-One\" and \"Twenty Nineteen\" \r\n1. Go to Products->Add New and create a simple product and a variable product\r\n1. Go to Products->Add New and create a grouped product\r\n1. Link the simple and variable product to the grouped product\r\n1. Click on \"Publish\" button and \"Preview\" button\r\n1. Observe that \"Select Options\" button for variable product appears misaligned when added in a grouped product on frontend  for Twenty Twenty-One and Twenty Nineteen\r\n\r\n**Note:**\r\nDidn't observe this issue on \"StoreFront\" and \"Twenty-Twenty\" theme\r\n\r\n## Actual Result:\r\n\"Select Options\" button for variable product appears misaligned when added in a grouped product on frontend  for Twenty Twenty-One and Twenty Nineteen\r\n\r\n## Expected Result:\r\n\"Select Options\" button for variable product should appear properly aligned when added in a grouped product on frontend for Twenty Twenty-One and Twenty Nineteen\r\n\r\n## ScreenShot:\r\n![ #29409_2](https://user-images.githubusercontent.com/41110392/111488314-22c65c00-875f-11eb-8c8d-8a0dc6fe12a7.png)\r\n![#29409_1](https://user-images.githubusercontent.com/41110392/111488341-278b1000-875f-11eb-8aa9-7f43ffab6229.png)\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\n\n###\n\n","completion":" [1891051447]"}
{"prompt":"For stores that allow guest checkouts, if a customer creates an account after they've ordered, the guest's order remains disconnected from their new user account.\r\n\r\nIdeally, this should happen automatically as documented in Issue [#29138](https://github.com/woocommerce/woocommerce/issues/29138).\r\n\r\nFor now, previous orders can be linked manually here:\r\n**WooCommerce > Reports > Customers > Customer List > Actions > Link Previous Orders**\r\n\r\nThis manual function is only available in the above section which shows the following alert: \r\n\r\n> \"With the release of WooCommerce 4.0, these reports are being replaced. There is a new and better Analytics section available for users running WordPress 5.3+‚Ä¶\"\r\n\r\nYet the ‚Äúnew and better‚Äù analytics section does not include the ‚ÄúLink Previous Orders‚Äù functionality.\r\n\r\nI‚Äôm asking that before the existing Reports > Customers > Customer List section is removed/replaced/depreciated, that the ‚ÄúLink Previous Orders‚Äù functionality be maintained in some capacity.\n\n###\n\n","completion":" [3943104021,3943425133]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\n\r\nWhen \"Product data\" section is moved to the editor sidebar the section becomes almost unusable. The layout for that section is broken completely.\r\n\r\n**Expected behavior**\r\n\r\nSection should be usable and rendered properly.\r\n\r\nOn the other hand the **Section is displayed correctly on mobile but when placed on the main column**:\r\n\r\n<img src=\"https://user-images.githubusercontent.com/1025173/110711443-93a0cd80-81cd-11eb-8142-2cc42efe3507.png\" width=\"200\"/>\r\n\r\n^ Viewed on mobile - Main column\r\n\r\n**Actual behavior**\r\n\r\n<img src=\"https://user-images.githubusercontent.com/1025173/110711615-d95d9600-81cd-11eb-8340-7eb50131d2fd.png\" width=\"200\" />\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\n\r\nOn a fresh WordPress install, with only WooCommerce installed:\r\n\r\n1. Go to Products > Add New\r\n2. Click on arrow icons until section is moved to the sidebar\r\n  ![image](https://user-images.githubusercontent.com/1025173/110711923-56890b00-81ce-11eb-99be-e471b1063599.png)\r\n4. See error. Content is displayed incorrectly.\r\n\r\n**Screenshots**\r\n\r\n<img src=\"https://user-images.githubusercontent.com/1025173/110712030-82a48c00-81ce-11eb-9f10-f030c594902a.png\" width=\"500\" />\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051447]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen using Twenty Twenty Theme, a long product description doesn't start from the beginning of the editor. \r\n\r\nTested this using the following:\r\n- WP 5.7 RC3\r\n- PHP 8.0\r\n- WC 5.1 RC1 (pre-release)\r\n- Twenty Twenty v 1.6\r\n\r\nNote that this is not specific to WC 5.1 release as the issue is present in WC 5.0. \r\n\r\n![space](https://user-images.githubusercontent.com/19143190/110395739-b354bc00-803c-11eb-837b-27d4a96b9be7.png)\r\n\r\n**Expected behavior**\r\n\r\nI expected the long product description to start at the beginning of the editor when using Twenty Twenty thme. here is how it looks in Storefront (as expected):\r\n\r\n![storefront](https://user-images.githubusercontent.com/19143190/110395911-03338300-803d-11eb-8500-3f702752212d.png)\r\n\r\n**Steps to reproduce the bug**\r\n\r\n1. Create a simple product using the Twenty Twenty theme. \r\n2. Note that the long product description doesn't start from the beginning of the editor. \r\n\r\n**Screenshots**\r\n\r\nSee above. \r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051447]"}
{"prompt":"**Is your feature request related to a problem? Please describe.**\r\nNot notifying the admin user that they have met the ajax variation threshold. Not good UI. Ive spent the last three days trying to figure out/trouble shoot why adding 10 variations works as intended but with a much higher variation count it was displaying all the color variations I had set for a specific attribute. Which was giving a broken experience on the front end.\r\n\r\n**Describe the solution you'd like**\r\nThere should be some kind of admin notice that lets the admin know they have meet the ajax variation threshold. And for developers a link with that notice to explain how to increase this limitation via the WooCommerce documentation. Even better an option for non developers that lets them change this default somewhere in the settings.\r\n\r\n```\r\nadd_filter( 'woocommerce_ajax_variation_threshold', 'tweak_wc_inc_ajax_threshold' );\r\nfunction tweak_wc_inc_ajax_threshold() {\r\n    return 50;\r\n}\r\n```\r\n\r\n**Describe alternatives you've considered**\r\nIf there are some other thresholds that are getting decided in the background on any other features/functions this admin notice should apply to those as well. Having something work in once instance but appear to be broken in another makes a very bad time for developers and lots of time wasted. A simple notification of some kind to let us know WooCommerce is making decision (thresholds) in the background to know things won't function as intended.\r\n\n\n###\n\n","completion":" [1891051456]"}
{"prompt":"<!--  Make sure to look through existing issues to see whether your idea is already being discussed. Feel free to contribute to any existing issues. -->\r\n\r\n<!-- Search tip: You can filter issues using our enhancement label https://github.com/woocommerce/woocommerce/issues?q=is%3Aissue+label%3Aenhancement -->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nI want/need to present a list of Woo products via the REST API ordered by their SKU. Unfortunately sku is not included in the list of options for the orderby statement.\r\n\r\n**Describe the solution you'd like**\r\nI'd like to see **sku** to be added to the list of options for the **orderby** statement.\r\n\r\n**Describe alternatives you've considered**\r\nI'm now working on a workaround but it would be a lot easier and much more server resource friendly if this could be done straight away via the REST API.\r\n\r\n**Additional context**\r\nhttp://woocommerce.github.io/woocommerce-rest-api-docs/#list-all-products\r\nSee **orderby**: string: Sort collection by object attribute. Options: **date**, **id**, **include**, **title** and **slug**. Default is date.\r\n\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"~ curl -X POST https://some.site/wp-json/wc/v3/products \\\r\n    -u consumer_key:consumer_secret \\\r\n    -H \"Content-Type: application/json\" \\\r\n    -d '{\r\n  \"name\": \"Product name\",\r\n  \"type\": \"simple\",\r\n  \"regular_price\": \"21.99\",\r\n  \"description\": \"Testing sku duplication.\",\r\n  \"meta_data\": [\r\n        {\r\n                \"key\": \"_sku\",\r\n                \"value\": \"1234567890\"\r\n        }\r\n  ]\r\n}'\r\n\r\nUsing the code above, I was able to add multiple products with the same SKU. I am not sure if this is a bug or better said a future feature, but I think this should be prevented from happening in the future. Possibly using the wc_product_has_unique_sku() function at the right step would fix the issue.\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"**Describe the bug**\r\nThe product management guide tooltips are causing poor accessibility on mobile. Considering that they aren't optimized for mobile it might be best to turn them off completely on mobile.\r\n\r\n**Expected behavior**\r\nI'd either expect the tooltips to align with the content they're referring to, or not see them at all.\r\n\r\n**Actual behavior**\r\nOn mobile devices the product management tooltips are misaligned and blocking areas of the navigation.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nOne way:\r\n- Go to 'WooCommerce > Products > All Products'\r\n- Press Create Product\r\n- Open the sidebar.\r\n- See error\r\n\r\nAnother way:\r\n- Go to Woocommerce home page task card\r\n- Add products -> Add manually\r\n- See error\r\n\r\n**Screenshots**\r\nhttps://share.getcloudapp.com/wbu9JY2G\r\n\r\nThis was tested on multiple devices in [this issue in WooCommerce Admin](https://github.com/woocommerce/woocommerce-admin/issues/6250).\r\n\n\n###\n\n","completion":" [1891051446]"}
{"prompt":"As mentioned in [this issue](https://github.com/woocommerce/woocommerce/issues/29239), the product importer is using an outdated color in the progress bar and primary action. This makes the user experience disjointed as users navigate here from other areas of WooCommerce and WordPress.\r\n\r\n<img width=\"1402\" alt=\"Screen Shot 2021-03-02 at 4 31 54 PM\" src=\"https://user-images.githubusercontent.com/5121465/109724248-e991c780-7b74-11eb-9f00-1fed852c973d.png\">\r\n\r\n<img width=\"1092\" alt=\"Screen Shot 2021-03-02 at 4 38 12 PM\" src=\"https://user-images.githubusercontent.com/5121465/109725100-3de97700-7b76-11eb-9b20-e65f9c4a1308.png\">\r\n\r\nRather than using the legacy Woo color here, we can update this to the `wp-admin-theme-color` that the user has chosen to maintain a cohesive color palette throughout their experience.\r\n\r\nThis would apply to the progress bar for all four steps, as well as the primary actions for the four screens in the importer, and the loader image. (Only two screens are shown above.)\r\n\r\n-----\r\n[Similar issue](https://github.com/woocommerce/woocommerce-admin/issues/6619) identified by @danhauk:\r\n\r\n**Describe the bug**\r\nWhen clicking to update WooCommerce from the plugins screen I got a confirmation modal about compatibility and some plugins being untested. This modal uses the old purple and old button style with the box shadow on it.\r\n\r\n![Screenshot_2021-03-18 WordPress Updates ‚Äπ wc playground ‚Äî WordPress](https://user-images.githubusercontent.com/448298/111649799-17187b00-87db-11eb-89e5-e5fc5e854771.png)\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n1. Run a site with an older version of WooCommerce (mine was 5.0) and Mailchimp for WooCommerce (tested up to WC 4.8)\r\n2. Visit `/wp-admin/update-core.php` to update the plugins\r\n3. Click the checkmark to update WooCommerce\r\n4. View the modal\r\n\n\n###\n\n","completion":" [1891051450]"}
{"prompt":"Hello\r\n\r\nIm not sure if this is a bug or expected behaviour but to me seems like a bug..\r\n\r\nAttribue fiters have next to them in bracekts the number of products that match that particulr atribute, so e.g.\r\n\r\n[digital receivers](https://tvtronics.co.uk/product-category/digital-receivers/) has :-\r\n\r\nBrands ‚Äì ‚ÄúAir Digital (6)‚Äù\r\nOperating System ‚Äì ‚ÄúEnigma 2 (4)‚Äù\r\n\r\nif the filter ‚ÄúEnigma 2 (4)‚Äù was checked then automatically the Bands filter ‚ÄúAir Digital now changes from (6) to (4) which is correct and expected and 4 products are displayed which have the Brand ‚ÄúAir Digital‚Äù **AND** the Operating System ‚ÄúEnigma 2‚Äù\r\n\r\nso why is it that when I apply the price filter the e.g. range between ¬£90-¬£110 there is only 1 result (which is correct and expected) but the\r\nBrands filter still shows ‚Äì Air Digital (4) \r\nand the\r\nOperating System filter still shows ‚Äì Enigma 2 (4)\r\n\r\n[see here price filter applied](https://tvtronics.co.uk/product-category/digital-receivers/?min_price=90&max_price=110&filter_operating-system=enigma-2)\r\n\r\nI would have thought that the attribute filters\r\n\r\nBrands ‚Äì Air Digital (4)\r\nOperating ‚Äì Enigma 2 (4)\r\n\r\nwould change to\r\n\r\nBrands ‚Äì Air Digital (1)\r\nOperating ‚Äì Enigma 2 (1)\r\n\r\nbecause there is only 1 result which falls in the price range ¬£90-¬£110 **and** has the Enigma 2 operating system\n\n###\n\n","completion":" [1891051456]"}
{"prompt":"**Is your feature request related to a problem? Please describe.**\r\nFor more cohesiveness across WooCommerce and WordPress, and to clean up the UI for regular store management activity feedback, we should transition the legacy core WP notice style to the new snackbar component ([in Gutenberg Storybook here](https://wordpress.github.io/gutenberg/?path=/story/components-snackbar--default).)\r\n\r\n**Existing notices:**\r\n<img width=\"1068\" alt=\"Screen Shot 2021-02-26 at 12 48 59 PM\" src=\"https://user-images.githubusercontent.com/5121465/109343169-83363d80-7832-11eb-91c0-cef695ef67d9.png\">\r\n<img width=\"1065\" alt=\"Screen Shot 2021-02-26 at 12 54 21 PM\" src=\"https://user-images.githubusercontent.com/5121465/109343176-85000100-7832-11eb-90d9-d0e971a9d537.png\">\r\n<img width=\"1071\" alt=\"Screen Shot 2021-02-26 at 12 56 21 PM\" src=\"https://user-images.githubusercontent.com/5121465/109343182-87faf180-7832-11eb-970b-0d7f4816d096.png\">\r\n\r\n**Describe the solution you'd like**\r\nUsing the Gutenberg snackbar component, the `Order updated` (which is also used for when an order is created), `Product published`, and `Product updated` messages would appear as a snackbar that disappears after 5 seconds. For the product notices, the snackbar contains a link to view the product on the front end.\r\n\r\n![Frame 2061](https://user-images.githubusercontent.com/5121465/109344844-e88b2e00-7834-11eb-8477-d28cf835a588.png)\r\n\r\nAlso, as a nice-to-have we should change \"Product published\" to \"Product created\" as that's the terminology used for creating products.\r\n\r\nExample of the `Product updated` notice in the snackbar component rather than the banner notice style.\r\n![Frame 58](https://user-images.githubusercontent.com/5121465/109343981-bb8a4b80-7833-11eb-888e-070dd4b52801.png)\r\n\r\nAre there any notices I've missed for regular store activity that could transition to the snackbar component as well? The banner notice style will soon be deprecated so will be good to get ahead of the curve on that.\r\n\r\ncc @pmcpinto \n\n###\n\n","completion":" [1891051448]"}
{"prompt":"## Bug Description:\r\nFor \"Twenty Twenty One\" theme, Footer section appears misaligned.\r\n\r\n## Environment:\r\nWindows 10\r\nBrowser:IE11(version:11.00.18362.1)\r\n\r\n## Steps To Reproduce:\r\n1. Create any test site using JN site.\r\n1. Install and activate all the required plugins\r\n1. Complete the onboarding setup wizard.\r\n1. Choose Twenty Twenty One theme.\r\n1. Go to Frontend.\r\n1. Observe that footer section appears misaligned.\r\n\r\n## Actual Result:\r\nFor \"Twenty Twenty One\" theme, Footer section appears misaligned.\r\n\r\n## Expected Result:\r\nFor \"Twenty Twenty One\" theme, Footer section should be properly aligned.\r\n\r\n## Screenshot:\r\n\r\n![#29223_1](https://user-images.githubusercontent.com/41110392/109176415-cd74db80-77ac-11eb-883d-0f517dc07924.png)\r\n\r\n![#29223_2](https://user-images.githubusercontent.com/41110392/109176444-d796da00-77ac-11eb-81f9-0c9a33e70c5d.png)\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\n\n###\n\n","completion":" [1891051447]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen exporting the products using the build in feature the product's related variations are not being attached to it\r\n\r\n**Expected behavior**\r\nThe export list should be sorted by default with the variation product above and below it all it's related variations.\r\ni noticed that if the list is not sorted like i mentioned above by default, the attributes will be empty.\r\n\r\n**Actual behavior**\r\nThe variation product attributes are not being added to the product\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Export all the products with the default settings\r\n2. Import into a new website with non matching product ids\r\n3. Edit some variation product\r\n4. see that no attributes are to be found in that product\r\n\r\n**Screenshots**\r\n\r\nThe default sort of the export untouched\r\n[https://imgur.com/0vXmrS2](url)\r\n\r\nthe expected default export (have been modified to allow the non matching ids of the variation product attributes to be attached to it)\r\n[https://imgur.com/A1p2CHM](url)\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\n\n###\n\n","completion":" [1891051450,1891051456]"}
{"prompt":"In #28745 we reverted some of the performance enhancements we were planning to add in 4.9 because of a bug that we found during the release process.\r\nThis issue scopes re-implementing those enhancements, by making sure that `wc_get_orders` and `wc_get_products` support WP_Query filter parameters, along with adding tests for all those params.\n\n###\n\n","completion":" [2258932484,472334370]"}
{"prompt":"Please provide us with the information requested in this bug report. Without these details, we won't be able to fully evaluate this issue. \r\nBug reports lacking detail, or for any other reason than to report a bug, maybe closed without action.\r\n\r\n<!-- This template is for confirmed bugs only. If you have a support request or custom code-related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\n**Store settings:**\r\nAdd to cart behaviour  -> Add to cart behaviour¬†Redirect to the cart page after successful addition (selected)\r\n\r\nWhen having a product with the \"manage stock\" selected and adding to the cart more than the available stock it redirects straight to the home page without showing any error.\r\n\r\nI also tried to access the \"woocommerce_add_to_cart\" action and many others like\r\nwoocommerce_before_add_to_cart\r\nwoocommerce_add_to_cart_validation\r\nwoocommerce_cart_redirect_after_error\r\n\r\nbut none of them are triggered if I'm using URL that is exceeded the total available quantity \r\nfor e.g. http://testings.local/?add-to-cart=10&quantity=9999\r\n\r\n**Expected behavior**\r\nRedirect to cart with the maximum amount in stock, or at least in the minimum access to these hooks so we developers can fix it manually by settings validation if it exceeded so reset the cart or something.\r\n\r\n**Actual behavior**\r\nIf I'm adding to cart more than the available quantity for e.g. http://testings.local/?add-to-cart=10&quantity=9999.\r\nSo the cart is stuck and now even if I trying to add just 1 to the cart http://testings.local/?add-to-cart=10&quantity=1 it redirects me to the home page, and until I don't go manually to the /cart page, the issue is not resolved and whenever I will try to add the product to the cart I will be sent to home page\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n**Store settings:**\r\n1. Enable Add to cart behaviour¬†Redirect to the cart page after successful addition by going to WooCommerce -> Settings -> Add to cart behaviour\r\n2. Create a product and select \"Manage stock\" in the \"Inventory\" tab\r\n3. Set a Stock quantity\r\n4. Go to the website and add product to the cart mote than the stock quantity for e.g. http://testings.local/?add-to-cart=10&quantity=9999\r\n5. You can also try to use \"woocommerce_add_to_cart\" hook and see that the function is not triggered if you adding more than the stock quantity \r\n\r\n**Screenshots**\r\nhttps://www.loom.com/share/e8fa168cc46a4bb9b310262d73b4112d\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\n\n\n###\n\n","completion":" [1891051436,1891051471]"}
{"prompt":"**Is your feature request related to a problem? Please describe.**\r\nWe held stock for when user check out with product and payment is not yet completed. The stock is held and cannot be used unless payment is completed (which reduces the stock), or if the order is cancelled (which increases the stock).\r\n\r\nA small enhancement, like adding in order note that \"Stock is held for X minutes for payment\" will go a long way and make it transparent for merchant. Most likely, this notes addition will make sense inside `wc_reserve_stock_for_order` function after stock reserve operation is successful.\r\n\r\nIn the product edit window, a non editable meta box displaying held stock quantity will also be very helpful, but optional. \r\n\r\n\r\n**Additional context**\r\nSee issue https://github.com/woocommerce/woocommerce/issues/26652\n\n###\n\n","completion":" [1891051471]"}
{"prompt":"When using \"authorize\" instead of \"capture\", there is no way to void the authorization from within WP if shop owner wants to cancel the order. Instead, they must go to PayPal (or wait the 30 days, which isn‚Äôt quite acceptable). A woocommerce ‚Äúrefund‚Äù should check to see if the PayPal payment has in fact been processed, and if not, it should then void the authorization instead of attempting a refund.\n\n###\n\n","completion":" [1891051443]"}
{"prompt":"WooCommerce uses tooltips to provide additional information in WP-admin on certain menu items. However, this information is only accessible if you can use a mouse. When you tab through the settings of the product in WP-admin, the tooltip is skipped. Same when you use voice over.\r\n\r\n![image](https://user-images.githubusercontent.com/29769622/107493648-24b06480-6b8e-11eb-990c-392f6f82f536.png)\r\n\r\n**Issue Solution**\r\nObviously, making the tooltips accessible. But as a first step, it would be nice if there would be a place where developers can add a descriptive text to the label to give a short cue of what needs to be done. The tooltip should only be used for longer , additional instructions. Information that is essential for users to perform a task and doesn't require much space, should be visible any time.\r\n\r\n![image](https://user-images.githubusercontent.com/29769622/107494035-98527180-6b8e-11eb-8e7f-383742f5aee4.png)\r\n\r\nThe tooltip text in the screenshot here is very short and might as well be visible in the UI all the time. In this case, the information is not that relevant, but solely posted as an example.\r\n\n\n###\n\n","completion":" [702347761]"}
{"prompt":"\r\n<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nI had originally reported this [on the WooCommerce WP Plugins Support page](https://wordpress.org/support/topic/missing-template-parts-on-default-themes/) and was directed to report it here.\r\n\r\nWP default themes such as Twenty Twenty are missing theme parts (particularly the footer widgets section) on WC-controlled pages using templates such as `woocommerce/templates/single-product.php` . While Cart, Checkout, and My Account simply create regular pages that contain WC shortcodes for embedding the specific functionalities, Shop and single product pages instead use WC‚Äôs built-in templates rather than leverage the active theme‚Äôs parts or checking for theme-specific part existence and falling back to built-in if missing, and do not leverage its existing theme-checking functionality to more closely replicate what the default themes actually do for theme template parts and such.\r\n\r\nUsing a default theme like Twenty Twenty, the result is some content (all non-WC and some WC) with proper loading of Twenty Twenty‚Äôs theme parts and some content (only WC) only loading Twenty Twenty‚Äôs header (`get_header`) and footer (`get_footer`) without realizing that Twenty Twenty puts its footer widgets and menu loading (`get_template_part( 'template-parts/footer-menus-widgets' )`) in the page templates, index.php, and singular.php, rather than in footer.php . Twenty Twenty‚Äôs index.php in particular also tries to load multiple other template parts that WC‚Äôs shop page template doesn‚Äôt account for. The Shop page in particular also no longer has the Template dropdown option in the Page Attributes meta box even though Twenty Twenty is still the active theme, but this portion of the bug will be filed separately as I haven't yet figured out where in WC's system to suggest adding back in the Template support.\r\n\r\nI found that WC has basic functionality in place to check if a default theme is active, but as far as I can tell none of it is used in WC-specific templates to conditionally include theme-specific parts that are outside `header.php` and `footer.php` . Admittedly, it looks like Twenty Twenty seems to be the first default theme that has these theme parts loaded directly in the page templates rather than rolled into header or footer, and I haven't yet checked if Twenty Twenty One does the same thing or not.\r\n\r\n**Expected behavior**\r\nWith a default theme such as Twenty Twenty active, all pages (both WC-controlled and non-WC controlled) properly load all template parts of the theme without needing to create theme-specific copies of WC's templates,\r\n\r\n**Actual behavior**\r\nBecause some theme parts are not rolled into Twenty Twenty's header or footer, theme parts such as the footer widgets section do not get loaded on pages like Shop or item details with WC-controlled templates.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Activate a default theme such as Twenty Twenty or a child theme of such that doesn't have copies of WC-specific templates.\r\n2. Activate WooCommerce and either assign an existing page as the Shop page or create a new one for such. Optionally, publish shop items as well.\r\n3. Populate any footer widgets sidebar with any valid widget.\r\n4. Visit the site as normal and see that the Shop page as well as any item detail pages do not load the footer widgets theme part.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**Proposed Solution**\r\nRight now, as a workaround the active child theme has two WC template overrides, `single-product.php` and `archive-product.php` , with only one line added each before `get_footer` to load the missing footer widgets theme part. Ultimately, these additions (simply the addition of `get_template_part( 'template-parts/footer-menus-widgets' );` right before `get_footer('shop');` in each of the templates) should be in the vanilla WC templates inside a conditional to check if the active theme is a default theme such as Twenty Twenty or a child of such. The default theme Twenty Twenty One may or may not also load theme template parts in a similar fashion, but I haven't yet personally checked to confirm.\r\n\r\n**WordPress Environment**\r\nNote: the active child theme has two WC template overrides, `single-product.php` and `archive-product.php` , with only one line added each before `get_footer` to load the missing footer widgets theme part.\r\n\r\n<details>\r\n\n\n###\n\n","completion":" [1891051454,1891051461]"}
{"prompt":"<!--  Make sure to look through existing issues to see whether your idea is already being discussed. Feel free to contribute to any existing issues. -->\r\n\r\n<!-- Search tip: You can filter issues using our enhancement label https://github.com/woocommerce/woocommerce/issues?q=is%3Aissue+label%3Aenhancement -->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nPurchase notes for WooCommerce variable products only accept one single message, but I need to add a different note for each variation. Creating a single product for each variation just to have different notes is not an option for me.\r\n\r\n**Describe the solution you'd like**\r\nEach variation should have its own optional purchase note field, just like the price or other variation fields.\r\n\r\n**Describe alternatives you've considered**\r\nI haven't found any.\r\n\r\n\n\n###\n\n","completion":" [1891051456,1891051461]"}
{"prompt":"**Describe the bug**\r\nSelecting any radio button (checkbox) under Product permalinks and clicking `Save changes` results in `Custom base` being selected. This is counterintuitive and behaves unlike the WordPress permalinks in the **WP Admin > Settings > Permalinks > Common Settings** where the chosen option sticks after saving changes.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n1. Go to **WP Admin > Settings > Permalinks > Product Permalinks**\r\n2. Select any of the available radio boxes\r\n3. Click `Save Changes`\r\n4. See the radio box revert to `Custom base`\r\n\r\n**Expected behavior**\r\nSee the chosen option stick exactly as it is the case for the WordPress permalinks in the **WP Admin > Settings > Permalinks > Common Settings**.\r\n\r\n**Screenshots**\r\n\r\n![](https://d.pr/i/299kPZ+)\r\n_Link: https://d.pr/i/299kPZ_\r\n\r\n![](https://d.pr/i/PVA0bw+)\r\n_Link: https://d.pr/i/PVA0bw_\r\n\r\n**Additional context**\r\nThis was discovered in manual testing together with @tsetend\r\n\n\n###\n\n","completion":" [1891051457]"}
{"prompt":"\r\n<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\n\r\nQuick editing a sale price for a product removes its sale price dates.\r\n\r\n**Expected behavior**\r\n\r\nThe sale price dates remain unaffected.\r\n\r\n**Actual behavior**\r\n\r\nThe sale price dates are removed. User has to open the product editor to schedule the sale price dates again.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\n\r\n- Start by creating a simple product\r\n- Set a regular price and a sale price\r\n- Set sale price dates\r\n- On the WordPress wp-admin dashboard's products list, quick edit that product and update the sale price\r\n\r\n**Screenshots**\r\n\r\nHere is a video indicating the issue:\r\n\r\n\r\nhttps://user-images.githubusercontent.com/18581859/107015329-a1c09000-67c2-11eb-8626-6c7b5a4e7abb.mov\r\n\r\n\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":":**\r\nThis relates to an online clothing store. We have variable products set up with colour and size attributes, for example a product might have 2 variations; Green/Any Size and Black/Any Size.\r\n\r\nThere is an image of the product in the corresponding colour for each variation, but at the moment the image doesn't switch unless a colour and size is selected (I'm aware this is how Woo works out of the box). We would like to make it so that the image switches when just a colour is selected.\r\n\r\nI understand that a variation is sum of all parts; it won't match a variable product with images until all attributes are chosen. Nevertheless I find this very strange as most ecommerce sites I‚Äôve used so far as a client don't require to choose every possible option to change the product image. Just the color or the design of the product. You see the product, and if you like it you chose size. It doesn't make any sense. \r\n\r\nHow are people getting around this? Are there any plugins (paid or free) that make it behave correctly? Or is there any information on how to resolve this?\r\n\n\n###\n\n","completion":" [1891051454]"}
{"prompt":"When you use the JSON-LD for Schema.org, WooCommerce adds the @id param using the permalink + #product.\r\n\r\nhttps://github.com/woocommerce/woocommerce/blob/e5a3ac48aa14d674ce041e9580c01278f461dc33/includes/class-wc-structured-data.php#L200\r\n\r\nEven if not reported in [Facebook microdata guidelines](https://developers.facebook.com/docs/marketing-api/catalog/guides/microdata-tags), an hard limit exists on the @id field length (which is 100 chars accordingly to the [Facebook microdata debugger](https://business.facebook.com/ads/microdata/debug).\r\n\r\nSo, we should instead use `$product->get_id() . '#product` or any other shorter version of the identificator.\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nBecause of this bug, Facebook is not connecting to Pixel on site to parse the WooCommerce products.\r\n\r\n**Temporary solution**\r\nThis is the workaround: https://gist.github.com/mircobabini/38374f8c2e2ee466f2a6ce0f2d34364d\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nEverything at its latest.\n\n###\n\n","completion":" [1891051454]"}
{"prompt":"## Bug Description:\r\nFor Twenty Twenty One theme ‚ÄùApply coupon\" and \"Update cart\" buttons are misaligned on Cart page.\r\n\r\n## Environment:\r\nmacOS High Sierra v10.13.6\r\nBrowser: Safari: v13.1.2(13609.3.5.1.5)\r\n                \r\n## Steps To Reproduce:\r\n1. Create any test site using Jurassic Ninja.\r\n1. Install and activate all the required plugins\r\n1. Complete the Onboarding setup wizard.\r\n1. Select Twenty Twenty One Theme.\r\n1. Add some products.\r\n1. Go to frontend and click on of the Product.\r\n1. Click on \"Add to Cart\" button.\r\n1. Click on \"View Cart\" button.\r\n1. Observe that for Twenty Twenty One theme ‚ÄùApply coupon\" and \"Update cart\" buttons are misaligned for WordPress 5.7 on frontend.\r\n\r\n## Actual Result:\r\nFor Twenty Twenty One theme ‚ÄùApply coupon\" and \"Update cart\" buttons are misaligned on Cart page.\r\n\r\n## Expected Result:\r\nFor Twenty Twenty One theme ‚ÄùApply coupon\" and \"Update cart\" buttons should be properly aligned.\r\n\r\n## Screenshot:\r\n\r\n![#29015](https://user-images.githubusercontent.com/41110392/106771778-5b095380-6665-11eb-9a30-2b079ed0c233.png)\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\n\n###\n\n","completion":" [1891051436,33006876]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [X] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [X] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nThe \"Add new\" and other actions on Orders and Products pages are overlapping with Screen options and Help buttons on mobile. Not only is it visually disorienting, this is an accessibility issue since buttons are obstructed.\r\n\r\n**Expected behavior**\r\nI'd consider hiding the Screen options button on mobile so that the buttons don't overlap, or having more vertical padding between the button groups.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Go to 'WooCommerce > Products' (or Orders) on a mobile device\r\n2. See that the Screen options and Help buttons are inaccessible\r\n\r\n**Screenshots**\r\n![Screenshot_20210202-135108](https://user-images.githubusercontent.com/5121465/106671059-801d9980-6573-11eb-94ff-2b06ba445743.png)\n\n###\n\n","completion":" [702347761]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen converting simple products into grouped, the stock status remains unchanged.\r\n\r\n**Expected behavior**\r\nWhen converting simple product into grouped, the stock status should act as if it was created from scratch (instock).\r\n\r\n**Actual behavior**\r\nWhen converting simple products that are out of stock into a grouped product, the stock status of the grouped product is unchanged. Meaning the class names on the product archive and single product can be inconsistant for grouped products. This is also the case on the admin \"view all products\"\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Create an out of stock simple product\r\n2. Convert to a grouped product\r\n3. View classes on archive and single product page\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n`\r\n\n\n###\n\n","completion":" [1891051471]"}
{"prompt":"This logic allows a logged user to visit page `/my-account/lost-password/`\r\n\r\nhttps://github.com/woocommerce/woocommerce/blob/af3077bca9990260feae2850cd63762d06035f9c/includes/shortcodes/class-wc-shortcode-my-account.php#L42\r\n\r\nA possible fix would be:\r\n```diff\r\n-- if ( ! is_user_logged_in() || isset( $wp->query_vars['lost-password'] ) ) {\r\n++ if ( ! is_user_logged_in() && isset( $wp->query_vars['lost-password'] ) ) {\r\n```\n\n###\n\n","completion":" [1891051451]"}
{"prompt":"## Bug Description:\r\n‚ÄúMinute‚Äù field appears truncated on ‚ÄúEdit Order‚Äù page.\r\n\r\n## Environment:\r\n\r\nmacOS High Sierra v10.13.6\r\nSafari: v13.1.2(13609.3.5.1.5)\r\n\r\n## Steps To Reproduce:\r\n1. Create any test site using Jurassic Ninja.\r\n1. Install and activate all required plugins.\r\n1. Go to WooCommerce-> Order.\r\n1. Edit any order.\r\n1. Observe that ‚ÄúMinute‚Äù field appears truncated on ‚ÄúEdit Order‚Äù page.\r\n\r\n## Actual Result:\r\n‚ÄúMinute‚Äù field appears truncated on ‚ÄúEdit Order‚Äù page.\r\n\r\n## Expected Result:\r\n‚ÄúMinute‚Äù field should display correctly on ‚ÄúEdit Order‚Äù page.\r\n\r\n## Screenshot:\r\n\r\n![#28954](https://user-images.githubusercontent.com/41110392/106015029-15d4a700-60e4-11eb-8f19-9c2b0d5aa2d3.png)\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\n\n###\n\n","completion":" [1891051458]"}
{"prompt":"## Bug Description:\r\n\"Add to cart\" button appears vertically stretched for TAB/PAD view if products per row is set to 5.\r\n\r\n## Environment:\r\nWindows 10, macOS Mojave v10.14.6 (18G103)\r\nBrowser: Chrome(Version 87.0.4280.88 (64-bit))\r\n                Firefox(Version 83.0)(64-bit)\r\n                Safari: v13.1.1 (14609.2.9.1.3)\r\n\r\n## Steps To Reproduce:\r\n1. Create any test site using Jurassic Ninja.\r\n1. Install and activate all the required plugins\r\n1. Complete the Onboarding setup wizard.\r\n1. Select Twenty Twenty One Theme.\r\n1. Add some products.\r\n1. Go to Appearances->Customize.\r\n1. Select WooCommerce->Product catalog.\r\n1. Set products per row value to 5.\r\n1. Choose Tab view.\r\n1. Observe that \"Add to cart\" button appears vertically stretched\r\n\r\n## Actual Result:\r\n\"Add to cart\" button appears vertically stretched for TAB/PAD view if products per row is set to 5.\r\n\r\n## Expected Result:\r\n\"Add to cart\" button should be properly display.\r\n\r\n## Screenshot:\r\n\r\n![#28953](https://user-images.githubusercontent.com/41110392/106014509-90e98d80-60e3-11eb-92ab-57674b509367.png)\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\n\n###\n\n","completion":" [1891051454]"}
{"prompt":"On old version of the rest-api (v2) its easy to get product details by sku. \r\nVia this route: GET /products/sku/<product sku>\r\nBut this feature is not available anymore in new rest api.\r\n\r\nThis is very important feature to integrate woocomerce to other multichannel ecommerce management.\r\nFor example to easily sync product stock across wocoommerce stores by using product sku via rest-api , we can only find same product by sku because the product id will be different accross channel\r\n\r\nEdit:\r\nWhen updating order details via rest api, and we didnt provide the product_id but sku. Woocommerce will inteligently find product id based on that sku instead. This ability didnt exist when updating product via rest-api. Why not do the same?. see this: https://github.com/woocommerce/woocommerce/blob/ab4a46e32e338cbf33094ab26144744a021a21a9/includes/legacy/api/v3/class-wc-api-orders.php#L926\r\n\r\n\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"When using PayPal‚Äôs authorize option, it errors when trying to capture more than 115% (as it is supposed to!). However, the error isn‚Äôt showing up in the order notes, which makes it difficult for a regular shop-keeper to know what‚Äôs going on.\r\nwoocommerce/includes/gateways/paypal/class-wc-gateway-paypal.php:424 looks for a ‚ÄúComplete‚Äù payment status, or any other payment status. However, if you try and capture more than 15% over your original authorisation, no payment status is returned. Example of the capture information returned:\r\n2021-01-11T04:50:05+00:00 INFO Capture Result: stdClass Object\r\n(\r\n[AUTHORIZATIONID] => *************\r\n[TIMESTAMP] => 2021-01-11T04:50:05Z\r\n[CORRELATIONID] => *************\r\n[ACK] => Failure\r\n[VERSION] => 84.0\r\n[BUILD] => 55100925\r\n[L_ERRORCODE0] => 10610\r\n[L_SHORTMESSAGE0] => Amount limit exceeded.\r\n[L_LONGMESSAGE0] => Amount specified exceeds allowable limit.\r\n[L_SEVERITYCODE0] => Error\r\n)\r\n\r\nRather than removing the action and adding my own, this could be fixed very simply.\r\n\r\nelseif(! empty($result->ACK)){\r\n$order->add_order_note( sprintf( __( ‚ÄòPayment could not be captured ‚Äì Auth ID: %1$s, Status: %2$s‚Äô, ‚Äòwoocommerce‚Äô ), $result->AUTHORIZATIONID, $result->L_LONGMESSAGE0 ) );\r\n}\n\n###\n\n","completion":" [1891051443]"}
{"prompt":"This ticket is an addition to woocommerce/woocommerce-admin#5296\r\n\r\nWhen creating a variable template through the onboarding steps **Add my products > Start with a template > Variable product** we want to have a default variation added [#76 from the sample data](https://github.com/woocommerce/woocommerce/blob/master/sample-data/sample_products.csv).\r\n\r\nCurrently we use the [product importer class](https://github.com/woocommerce/woocommerce-admin/blob/main/src/API/OnboardingTasks.php#L195) to create these templates and pass a csv, see the [variable csv](https://github.com/woocommerce/woocommerce-admin/blob/main/src/API/Templates/variable_product.csv). We can add a variation to the same csv (like [sample data](https://github.com/woocommerce/woocommerce/blob/master/sample-data/sample_products.csv#L2)), which would add one if you include the SKU column.\r\nThe only problem with the SKU is, that if a user creates a product template with the original SKU, and then tries to create another product template, it will fail, as the SKU already exists.\r\n\r\n**Describe the solution you'd like (feel free to do something different)**\r\nAdd the SKU column, and variation data to the variable csv template.\r\nAdd auto update SKU option to the current [import sample products function](https://github.com/woocommerce/woocommerce-admin/blob/main/src/API/OnboardingTasks.php#L150) and create a unique sku if one already exists (you should be able to update the `parsed_data` in the `$importer_class`.\r\n\r\nThe variation sku would need updating to match the format of the new variable product.\r\n\r\n**Describe alternatives you've considered**\r\nI have tried without the SKU, or only adding a SKU to the variable product, both of these options didn't work.\r\n\r\nOne option could be to separate the variation in another file, and just run the importer on the variation after the variable has been created, with the matching SKU.\r\n\r\n**Acceptance criteria**\r\n- When creating a variable product template (**Add my products > Start with a template > Variable product**) a variation should be added, similar to the sample-data:\r\n<img width=\"1435\" alt=\"Screen Shot 2021-01-25 at 1 21 23 PM\" src=\"https://user-images.githubusercontent.com/2240960/105741042-3ea44300-5f10-11eb-8ece-1fb1822c8ddb.png\">\r\n\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] We have have carried out troubleshooting steps and we believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nOn mobile devices, full size images are loaded\r\n\r\n**Expected behavior**\r\nIdeally, optimized images should be loaded as per [this thread](https://a8c.slack.com/archives/C7U3Y3VMY/p1611261041018800).\r\n\r\n**Actual behavior**\r\nFull size images are loaded.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. With Storefront theme enabled, check the image sizes on a mobile device.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] We have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] We can reproduce this bug consistently using the steps above.\r\n\r\nReported in 3654598-zen\n\n###\n\n","completion":" [472334370]"}
{"prompt":"I'm using WooCommerce Rest API to fetch order data (List all orders or retrieve a single order).\r\nOne of the available properties in order data is **line_items** and for each product inside line_items, there is a property called **parent_name**.\r\n**parent_name** is expected to be a string, but when the product does not have a parent, this property's value is **null**.\r\nWhich brings us to the issue. When I try to update the order, I receive an error (status \"400\" and \"rest_invalid_param\" code) telling me that parent_name must be a string, but it's currently null.\r\n\r\n<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nparent_name property inside line_items must be a string, but when product **variation_id** is 0, parent_name value is null. which causes an issue when updating the order.\r\n\r\n**Expected behavior**\r\nparent_name value must always be a string.\r\n\r\n**Actual behavior**\r\nparent_name value is null sometimes.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. List all orders OR fetch a single order\r\n2. Look at line_items\r\n3. Inside line_items, find product_name property for each product\r\n4. product_name property must be a string, but it's null sometimes\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n\r\n\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"Webhook queue must have a retry mechanism in time interval. Currently woocommerce only retry to send webhook for 5 times (at the same period) if failure happens (other than 2xx code). Which doesnt make any sense. If the webhook listener's server down for couple minutes. The webhook will not be send anymore and marked as disabled.\r\n\r\nThe basic mechanism for corporate system to handle webhook delivery is  usually like this:\r\n-) retry the request as much as 10 times with intervals of 15 minutes. OR\r\n-) 300 seconds after the first failure, 30 minutes after the second failure, 1 hour after third failure, 3 hours after fourth failure, 3 hours after the fourth failure. no further action after fifth failure.\r\n\n\n###\n\n","completion":" [2046308337]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nIf a costumer bought one unit from an item that unit can be refunded more than one time. \r\n\r\n**Expected behavior**\r\nRefunded quantity should be limited to the quantity bought.\r\n\r\n**Actual behavior**\r\nIn the order admin panel a user can refund more quantity of an item then the quantity that the client bought.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nGoto the front end, add to the cart one unit from three different products and then checkout.\r\nGo to the backend of the order, refund one unit from the cheapest product. Then try to do a second refund and chose one unit from the item that was already refunded. The second refund will be successful meaning that the client bought one unit and you refunded two units. \r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWP 5.6, Woo 4.9.0\n\n###\n\n","completion":" [1891051445]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nA customer ordered a single item that was 'in stock' on the web. (quantity was 1)\r\nThe customer paid for the item.\r\nUpon completing the order we realised that the product was physically out of stock. ie (quantity was 0)\r\nSo we then had to refund the customer. \r\nso we navigated to **WooCommerce - Orders - (Any Customer Order) - Refund **.\r\nwe refunded the item and unchecked the 'Put item back in stock button' (so that the quantity would remain at 0 as it was out of stock) **See Image**\r\n![image](https://user-images.githubusercontent.com/20243306/105067442-9a398100-5a77-11eb-9f67-e3f80911094f.png)\r\n\r\n\r\n**Expected behavior**\r\nWe Expected that once the item had been refunded and the 'Put item back in stock button' was unchecked that the product would remain out of stock. ie (quantity would remain 0)\r\n\r\n**Actual behavior**\r\nthe item was put back into stock regardless of the  'Put item back in stock button' being unchecked, which means that the quantity was actually set back to 1 \r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Go to **WooCommerce - Orders - (Any Customer Order)**.\r\n2. Click on Refund\r\n3. Refund a single item (any item)\r\n4. Uncheck the 'put item back in stock' checkbox\r\n4. Update/Save\r\n5. Navigate to 'WooCommerce - Products - (the product you refunded and left out of stock) and see that the item was actually put back in stock regardless \r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n`\r\n\n\n###\n\n","completion":" [1891051445]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nThe store country in admin and customer‚Äôs billing country in the front-end are used to determine the term for ‚ÄòSort Code‚Äô.\r\n\r\nThis was introduced in https://github.com/woocommerce/woocommerce/pull/6814\r\n\r\nUnfortunately this doesn't quite solve the problem, since the label should be specific to where the bank account is located, not where the customer or store are located.\r\n\r\nA US account has a routing number (ACH or wire). It isn't called a sort code, even if the customer is in the UK, or anything else anywhere else. Calling it such is confusing at best, and at worst could prevent the customer from completing payment. (\"Sort code\" for example is specific the the UK banking system ‚Äì as is BACS (Bacs?) for that matter.)\r\n\r\n**Expected behavior**\r\nThe label should be specific to where the bank account is located, possibly through an additional field in the account details list.\r\n\r\n**Actual behavior**\r\nPayment details are sometimes displayed incorrectly, labelling UK sort codes as routing numbers, US routing numbers as sort codes, etc, depending on the customer's billing address.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Configure direct bank transfer\r\n2. Create an order\r\n3. Check out\r\n4. Note that the routing number is labelled according the billing country, so may by incorrectly labelled, depending on the bank account country and payment system used.\r\n\r\n**Screenshots**\r\nUK Billing Country, US Bank Account:\r\n![Screenshot 2021-01-19 at 00 57 25](https://user-images.githubusercontent.com/357702/104975138-c1e60600-59f1-11eb-8256-c212654c552a.png)\r\n\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051449]"}
{"prompt":"## Describe the bug\r\nClearly describe the issue. Please be as descriptive as possible; issues lacking detail, or for any other reason than to report a bug, may be closed without action.\r\n\r\nIsolating the problem (mark completed items with an [x]):\r\n- [x ] I have deactivated other plugins and themes and confirmed this bug occurs when only WooCommerce + Storefront theme are active.\r\n- [x ] I can reproduce this bug consistently using the steps below.\r\n\r\n## To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Go to https://themes.woocommerce.com/storefront/product-category/clothing/bags/\r\n2. Copy the address\r\n3. Go to https://wave.webaim.org/\r\n4. Paste the adress from step 1 in the form field and run the validation\r\n5. You get two \"Missing form label\" errors \r\n\r\n## Screenshots\r\nIf applicable, add screenshots to help explain your problem.\r\n![image](https://user-images.githubusercontent.com/6008212/104819466-658ab700-5836-11eb-81e9-e4b366ddb92f.png)\r\n\r\n\r\n## Expected behavior\r\nThe validation should be error free and in compliance with [WCAG2](https://www.w3.org/TR/WCAG20/)\r\n\r\n### Browser Environment\r\n- Platform: Windows \r\n- Browser(s): Chrome\r\n\r\n\n\n###\n\n","completion":" [702347761]"}
{"prompt":"**Describe the bug**\r\n[The CSS that handles buttons](https://github.com/woocommerce/woocommerce/blob/ab4a46e32e338cbf33094ab26144744a021a21a9/assets/css/woocommerce.scss#L690\r\n) is quite greedy and impacts all the buttons on the page, not just those inside the woocommerce area.\r\n\r\nYou can see an example of this on the Spearhead theme:\r\n\r\nRegular menu:\r\n<img width=\"243\" alt=\"Screenshot 2021-01-14 at 17 16 46\" src=\"https://user-images.githubusercontent.com/275961/104625176-5c5de680-568c-11eb-9de9-a48e910d3014.png\">\r\n\r\nMenu on Woo pages:\r\n<img width=\"241\" alt=\"Screenshot 2021-01-14 at 16 05 55\" src=\"https://user-images.githubusercontent.com/275961/104625083-3f291800-568c-11eb-9523-745cfb960a22.png\">\r\n\r\n**Expected behavior**\r\nI would expect this CSS to be constrained to the content of the page that contains Woo products etc.\r\n\r\n**Actual behavior**\r\nInstead the CSS leaks out into the whole site. We could override this CSS in our themes but that would mean writing CSS to fight against this in every theme. I think it would be more performant to simply scope the CSS to the page itself.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Install WooCommerce plugin on a site\r\n2. Activate the Spearhead theme\r\n3. Go to the Shop page\r\n4. Resize the browser window to be mobile size\r\n5. Notice that the buttons look different\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051447]"}
{"prompt":"## Bug Description:\r\n-1 value is displayed upon tapping \"Grant Access\" button without entering product name in \"Downloadable product permissions\"\r\n\r\n## Environment:\r\nWindows 10, Mac 10.15.7 (19H114).\r\nBrowser: Chrome(Version 87.0.4280.88 (64-bit)) \r\n               Firefox(Version 83.0)(64-bit)\r\n               Safari: v13.1.1 (14609.2.9.1.3)\r\n                                \r\n \r\n## Steps To Reproduce:\r\n1. Create any test site using Jurassic Ninja.\r\n1. Install and activate all required plugins.\r\n1. Complete the Onboarding setup wizard.\r\n1. Select Twenty Twenty One theme.\r\n1. Add Some products.\r\n1. Proceed for checkout..\r\n1. Do not complete the payment.\r\n1. Go to woocommerce Home page.\r\n1. Click on \"Orders\".\r\n1. Click on \"Processing\" order.\r\n1. Scroll down the page upto \"Downloadable product permissions\".\r\n1. Do not enter any product name and click on \"Grant Access\" button.\r\n1. Observe that -1 value is displayed.\r\n\r\n## Actual Result:\r\n-1 value is displayed upon tapping \"Grant Access\" button without entering product name in \"Downloadable product permissions\"\r\n \r\n## Expected Result:\r\nUpon tapping \"Grant Access\" button without entering product name proper error message should be displayed.\r\n\r\n## Video:\r\n\r\nhttps://user-images.githubusercontent.com/41110392/104472496-05033c00-55e2-11eb-9814-d03afb3adcce.mp4\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [X] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [X] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen you export products that have the `Pending Review` status, they have the `-1` value in their status field, but when you import them again, the product is created as a `Draft` instead.\r\n\r\n**Expected behavior**\r\nThe product should be imported with the same status (`Pending Review`) that the one that was exported. \r\n\r\n**Actual behavior**\r\nThe product is imported as a `Draft` instead.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Create a new product and set its status to `Pending Review`\r\n2. Export the product using the built-in CSV export tool\r\n3. Update the CSV file to change its ID and name (to make sure that a new product is imported) \r\n4. Import the product\r\n5. Edit the imported product from the backend and check its status \r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [X] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [X] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [X] I can reproduce this bug consistently using the steps above.\r\n\r\n\n\n###\n\n","completion":" [1891051450]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\n\r\nProduct image is too large on the Shop Page and on the Cart Page when using IE 11 and Windows 10 + 2021 theme v 1.1. \r\n\r\n**Expected behavior**\r\n\r\nI expected the product images to be of reasonable size on the Shop and Cart pages. \r\n\r\n**Steps to reproduce the bug**\r\n\r\n1. Create a product.\r\n2. View it on the Shop Page - see how large it is:\r\n\r\n![Screen Shot 2021-01-11 at 12 47 11 PM](https://user-images.githubusercontent.com/19143190/104220814-0c71ec00-540e-11eb-95ee-4e109116cc79.png)\r\n\r\nInstead, if you view the same page in Chrome, for example, the page will look as follows and as expected:\r\n\r\n![Screen Shot 2021-01-11 at 1 09 00 PM](https://user-images.githubusercontent.com/19143190/104220962-3c20f400-540e-11eb-8c84-eea14eb06bee.png)\r\n\r\n3. Add product to cart and view it in the cart - see how much space it takes in IE 11:\r\n\r\n![](http://g.recordit.co/OxMf0ct8cA.gif)\r\n\r\nI expected it look as follows instead - for example in Chrome it looks OK as far as the size:\r\n\r\n![Screen Shot 2021-01-11 at 1 10 43 PM](https://user-images.githubusercontent.com/19143190/104221096-712d4680-540e-11eb-8b53-c7865646c980.png)\r\n\r\n**Screenshots**\r\n\r\nSee above. \r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051436,1891051454]"}
{"prompt":"## Bug Description:\r\nFor Twenty Twenty One theme, \"Add to Cart\" button labels are not visible on Shop Page\r\n\r\n## Environment:\r\nWindows 10\r\nBrowser: IE11(Version:11.1139.18362.0)\r\n                \r\n ## Steps To Reproduce:\r\n1. Create any test site using Jurassic Ninja.\r\n1. Install and activate all required plugins.\r\n1. Complete the Onboarding setup wizard.\r\n1. Select Twenty Twenty One theme.\r\n1. Add Some products.\r\n1. Go to frontend and visit to store page.\r\n1. Observe that \"Add to Cart\" button labels are not visible.\r\n\r\n**Note:**\r\n\"Add to Cart\" button label only appears when mouse is hovered over the button.\r\n\r\n## Actual Result:\r\nFor Twenty Twenty One theme, \"Add to Cart\" button labels are not visible on Shop Page\r\n \r\n## Expected Result:\r\n\"Add to Cart\" button labels should be visible.\r\n\r\n## Screenshots:\r\n\r\n![#28784](https://user-images.githubusercontent.com/41110392/104200376-980b6d00-544e-11eb-974e-2fe36a7a18e2.png)\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\n\n###\n\n","completion":" [1891051454]"}
{"prompt":"## Bug Description:\r\nRandomly user receives \"There is been critical error message on this website\" when user completes on boarding wizard and tries to import product csv file from \"Finish Setup\" section\r\n\r\n## Environment:\r\nWindows 10, macOS Mojave v10.14.6 (18G103)\r\nBrowser: Firefox(Version 83.0)(64-bit)\r\n               Safari: v13.1.1 (14609.2.9.1.3)\r\n                \r\n \r\n## Steps To Reproduce:\r\n1. Create any test site using Jurassic Ninja.\r\n1. Install all required plugins.\r\n1. Activate query monitor and then activate WooCommerce (Do not activate WC Beta Tester)\r\n1. Complete the Onboarding setup wizard and goto WooCommerce->Home\r\n1. Click on \"Add my products->Import\" option under Finish Setup section.\r\n1. Observe that user receives error message stating \"There as been critical error message on this website\" \r\n\r\n\r\n## Actual Result:\r\nRandomly user receives \"There is been critical error message on this website\" when user completes on boarding wizard and tries to import product csv file from \"Finish Setup\" section\r\n \r\n## Expected Result:\r\nWebsite should be free from these error messages and should smoothly allow user to import products.\r\n\r\n## Screenshots:\r\n\r\n![#6043](https://user-images.githubusercontent.com/41110392/104200125-46fb7900-544e-11eb-90e6-f063d678f919.png)\r\n\r\n<details>\r\n```\r\n\n\n###\n\n","completion":" [3943104021,3943424841]"}
{"prompt":"when i have multiple product page for example 3 product on the same page,  the review section appear as select and not as star.  only on one page appear the star but multiply for the number of the product \r\n\r\n\r\nhttps://ibb.co/cgLmZ2c\r\nhttps://ibb.co/8dcLSVH\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nThe WP CLI command `wp wc product_variation list` produces an error \r\n\r\n> usage: wp wc product_variation list <product_id> [--product_id=<product_id>]....\r\n\r\nThis limits listing variations to a single variable product. The option of specifying a product_id is redundant because specifying product_id is a requirement, and using other filters such as `--category_id` won't work unless product_id is specified.\r\n\r\n**Expected behavior**\r\nCommand will generate a list of variations, similar to exporting the variations with to a csv file. Description of the command is \r\n\r\n> List All Items\r\n\r\n**Actual behavior**\r\nCommand requires a variable product_id, and can only list variations associated with that product. \"usage: wp wc product_variation list <product_id> [--product_id=<product_id>]...\".\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\nexecute `wp wc product_variation list`. Also tried with filtering options such as `--category-id=<category_id>`\r\n\r\n\r\n**WordPress Environment**\r\nwp core version 5.6\r\nWP-CLI version:\t2.5.0-alpha-59d879d\r\nwoocommerce 4.8.0\r\nPHP version:\t7.4.13\r\n\n\n###\n\n","completion":" [1891051460]"}
{"prompt":"<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen `Apply minimum order rule before coupon discount` is active and prices are entered inclusive of tax and displayed that way in cart and checkout, free shipping is applied based on the minimum order amount including tax. \r\n\r\nHowever, when a coupon is applied, it uses the pre-tax amount and free shipping is no longer available.\r\n\r\nThis was reported in 3616232-zen and confirmed on a test site.\r\n\r\n**Expected behavior**\r\nThe rule should be consistently applied and allow free shipping on the product's actual entered price.\r\n\r\n**Actual behavior**\r\nInstead, the free shipping rule seems to shift before and after a coupon is applied. See screenshots below for an example.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Go to **WooCommerce > Settings > Tax**\r\n2. Set **Prices entered with tax** to **Yes, I will enter prices inclusive of tax**\r\n3. Set **Display prices during cart and checkout** to **Including tax**\r\n3. Add a tax rate\r\n3. Add Free shipping with a required minimum order amount\r\n4. Check the **Apply minimum order rule before coupon discount** option for Free shipping\r\n5. Add a physical product with a price inclusive of tax is above the minimum order amount, but the pre-tax amount is below the minimum order amount\r\n6. Add a coupon that doesn't include free shipping\r\n7. Add the product to the cart\r\n8. Confirm free shipping is available\r\n9. Add the coupon\r\n10. Confirm free shipping is no longer available\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\nFor the test case, I found that this occurs when both **Yes, I will enter prices inclusive of tax** and **Display prices during cart and checkout - Including tax** are selected.\r\n\r\n![](https://d.pr/i/M58AEQ+)\r\nImage Link: https://d.pr/i/M58AEQ\r\n\r\nTest tax rate:\r\n\r\n![](https://d.pr/i/RW9nFm+)\r\nImage Link: https://d.pr/i/RW9nFm\r\n\r\nFree shipping settings, with a minimum order amount of $10:\r\n\r\n![](https://d.pr/i/Rey4wT+)\r\nImage Link: https://d.pr/i/Rey4wT\r\n\r\nTest product that is $10:\r\n\r\n![](https://d.pr/i/I7z84W+)\r\nImage Link: https://d.pr/i/I7z84W\r\n\r\nWithout the coupon free shipping is available (note that the pre-tax amount is below the threshold ($10 - $.0.82 tax = $8.18):\r\n\r\n![](https://d.pr/i/tyozeC+)\r\nImage Link: https://d.pr/i/tyozeC\r\n\r\nOnce the coupon is applied free shipping is no longer available:\r\n\r\n![](https://d.pr/i/VHNj10+)\r\nImage Link: https://d.pr/i/VHNj10\r\n\r\nIf I change the tax settings to be entered/displayed exclusive of tax, free shipping is available before and after the coupon is applied:\r\n\r\n![](https://d.pr/i/sGQXDd+)\r\nImage Link: https://d.pr/i/sGQXDd\r\n\r\n![](https://d.pr/i/2BGqEp+)\r\nImage Link: https://d.pr/i/2BGqEp\r\n\r\n![](https://d.pr/i/5wvXBj+)\r\nImage Link: https://d.pr/i/5wvXBj\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051437,1891051442,1891051459]"}
{"prompt":"Is is possible to make only 1 zone, that contains only 'pick-up'  in the sending tab in woocommerce. \r\n\r\nHowever, in the sending options sub tab, there are only three options for sending:\r\nsending adress, billing adress and force billing adress. The problem is, that now there always is a question about (or statement in the case of ' force billing adress' ) sending with these options. \r\n\r\nPlease add the option: only allow pick-up and do not offer sending options. Simple as that!\r\nThanks,\n\n###\n\n","completion":" [1891051459]"}
{"prompt":"## Bug Description:\r\nFor \"Store Front\", \"Twenty-Twenty\" and \"Twenty Twenty-One\" themes, Store Notice appears truncated and Dismiss button visibility is low when viewed on frontend\r\n\r\n## Environment:\r\nWindows 10, macOS Mojave v10.14.6 (18G103)\r\nBrowser: Chrome(Version 87.0.4280.88 (64-bit))\r\n                Firefox(Version 83.0)(64-bit)\r\n                Safari: v13.1.1 (14609.2.9.1.3)\r\n                \r\n## Steps To Reproduce:\r\n1. Create any test site using Jurassic Ninja.\r\n1. Install and activate all required plugins.\r\n1. Complete the Onboarding setup wizard \r\n1. Click on \"Personalize my store\" under \"Finish Setup\" checklist on WooCommerce->Home\r\n1. Complete till step 3 and add Store Notice as a long text \r\n1. Go to front end and Note the \"Dismiss\" option and text  on Store Notice\r\n1. Observe that Store Notice appears truncated and Dismiss button visibility is low when viewed on frontend\r\n\r\n**Note**:\r\nObserved for \"Store Front\", \"Twenty-Twenty\" and \"Twenty Twenty-One\" themes\r\n\r\n## Actual Result:\r\nStore Notice appears truncated and Dismiss button visibility is low when viewed on frontend\r\n\r\n## Expected Result:\r\nStore Notice should not appear truncated and Dismiss button visibility should be high when viewed on frontend\r\n\r\n## Artifacts:\r\n[#28701.zip](https://github.com/woocommerce/woocommerce/files/5757271/28701.zip)\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\n\n###\n\n","completion":" [1891051448]"}
{"prompt":"<!--  Make sure to look through existing issues to see whether your idea is already being discussed. Feel free to contribute to any existing issues. -->\r\n\r\n<!-- Search tip: You can filter issues using our enhancement label https://github.com/woocommerce/woocommerce/issues?q=is%3Aissue+label%3Aenhancement -->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nIf Backorders are allowed (+notify customers activated): The problem is \"_(can be backordered)_\" is confusing for customers because both _in stock_ and _on backorder_ are mentioned. Just the notion of \"backorder\" will drive away a lot of customers.\r\n\r\n**Describe the solution you'd like**\r\n- Change text to \"_(and more can be backordered)_\". \r\n- Only show this text, if stock level is below **product** low stock level threshold (or global threshold if product has none)\r\n\r\n**Describe alternatives you've considered**\r\nThe alternative is to filter-away the text altogether. Disabling backorders is no option (for those who want backorders to be possible)\r\n\r\n**Additional context**\r\nFor those who want a quick fix for this:\r\n```php\r\nadd_filter( 'woocommerce_get_availability_text', 'custom_product_availability_text', 10, 2 );\r\nfunction custom_product_availability_text( $availability, $product ) {\r\n\r\n  $product_low_stock_threshold = $product->get_low_stock_amount('view'); // product specific low-stock threshold\r\n\r\n  if ($product_low_stock_threshold=='') {\r\n    $product_low_stock_threshold = get_option( 'woocommerce_notify_low_stock_amount' ); // global low-stock threshold\r\n  }\r\n\r\n  if( $product->get_stock_quantity () > $product_low_stock_threshold) {\r\n    $availability = str_replace('(can be backordered)', '', $availability);\r\n  } else {\r\n    $availability = str_replace('(can be backordered)', '(more can be backordered - lead time 1 week)', $availability);\r\n  }\r\n  return $availability;\r\n}\r\n```\n\n###\n\n","completion":" [1891051471]"}
{"prompt":"At the moment, there are two searches available with WordPress and WooCommerce - WooCommerce Product Search and WordPress search. The rough difference could be illustrated by two widgets:\r\n\r\n<img width=\"704\" alt=\"download\" src=\"https://user-images.githubusercontent.com/25575134/103365497-16175d80-4ab8-11eb-99e3-99ea867279ac.png\">\r\n\r\nThe product search has this sample link for searching: http://yoursite.com/?s=test&post_type=product\r\nThe default WordPress search has this sample link: http:/yoursite.com/?s=test+product\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n \r\nIt seems that this creates a lot of confusion when hiding the product from catalog. Example:\r\n\r\n* Set the settings on **Catalog visibility** to **hidden** on a product like so: \r\n\r\n<img width=\"352\" alt=\"download (1)\" src=\"https://user-images.githubusercontent.com/25575134/103365679-87efa700-4ab8-11eb-9503-ff7fe0ec00b2.png\">\r\n\r\nThe expectation that seems to come from this setting is that this would hide the product from all search results on the site. It does hide it from the product search or from http://yoursite.com/?s=test&post_type=product but the product still comes through the WordPress default search: http:/yoursite.com/?s=test+product\r\n\r\nDefault WordPress search:\r\n\r\n![download (2)](https://user-images.githubusercontent.com/25575134/103365828-df8e1280-4ab8-11eb-96e7-141e2abc8db0.png)\r\n\r\nWooCommerce product search:\r\n\r\n![download (3)](https://user-images.githubusercontent.com/25575134/103365848-f0d71f00-4ab8-11eb-9d48-71ec021e90bf.png)\r\n\r\n**Describe the solution you'd like**\r\n\r\nFor the WooCommerce products also be hidden from the general default WordPress search. \r\n\r\n**Additional context**\r\n\r\n* It looks like a similar issue has been reported before as a bug: https://github.com/woocommerce/woocommerce/issues/25563\r\n* Same issue has also been discussed in several forum threads: https://wordpress.org/support/topic/products-still-show-in-search-results-even-with-catalog-visibility-set-to-hidden/\r\n\r\nIs there any reason or explanation for the products not being hidden in the general site search? Thanks!\r\n\r\n\n\n###\n\n","completion":" [2009677615]"}
{"prompt":"## Bug Description:\r\nValidation fails to display if \"Maximum spend\" value is less than \"Minimum spend\" value while creating a coupon. \r\n \r\n## Environment:\r\nWindows 10, macOS Mojave v10.14.6 (18G103)\r\nBrowser: Chrome(Version 87.0.4280.88 (64-bit))\r\n                Firefox(Version 83.0)(64-bit)\r\n                Safari: v13.1.1 (14609.2.9.1.3)\r\n \r\n## Steps To Reproduce:\r\n1. Create any test site using Jurassic Ninja.\r\n1. Install and activate all required plugins.\r\n1. Complete the Onboarding setup wizard.\r\n1. Go to Marketing->Coupons \r\n1. Click on 'Add New\" option\r\n1. Fill Coupon details and click on \"Usage Restriction\" tab.\r\n1. Enter minimum spend say 1000 and Maximum spend say 90 \r\n1. Click on \"Publish\"\r\n1. Observe that Dashboard creates coupon with \"Maximum spend\" field value less than \"Minimum spend\" field value \r\n\r\n**Note**:\r\nUser when uses this coupon on frontend, then it is unable to apply it; as it throws both the error message as Maximum spend 90 and when products removed Minimum spend is 1000\r\n\r\n## Actual Result:\r\nValidation fails to display if \"Maximum spend\" value is less than \"Minimum spend\" value while creating a coupon. \r\n \r\n## Expected Result:\r\nValidation should be display if \"Maximum spend\" value is less than \"Minimum spend\" value while creating a coupon. \r\n \r\n## Artifacts:\r\n[#28669.zip](https://github.com/woocommerce/woocommerce/files/5740021/28669.zip)\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051442]"}
{"prompt":"Please provide us with the information requested in this bug report. Without these details, we won't be able to fully evaluate this issue. \r\nBug reports lacking detail, or for any other reason than to report a bug, may be closed without action.\r\n\r\nTo whom it may concern.\r\n\r\nWe found a bug related to the order in WooCommerce with an order note that are not the same content.\r\nOrder #14795 from our consumer made, but the order note from woocommerce email deliver to us are wrong data.\r\nAround 50 items missing in the order note compared with backend \"Order History\".\r\n\r\nInsted of bugs, any other reasons?\r\n\r\nPlease let me know the root cause and solution.\r\n\r\n\r\n\r\n\r\n<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [ ] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nA clear and concise description of what the bug is. \r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Actual behavior**\r\nA clear and concise description of what actually happens. Please be as descriptive as possible; \r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Go to '...'\r\n2. Click on '....'\r\n3. Scroll down to '....'\r\n4. See error\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [ ] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\nThe System Status Report is found in your WordPress admin under **WooCommerce > Status**. \r\nPlease select ‚ÄúGet system report‚Äù, then ‚ÄúCopy for support‚Äù, and then paste it here.\r\n```\r\n</details>\r\n\n\n###\n\n","completion":" [1891051441]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nIf you try to mass edit products that have stock management on, and try to set them out of stock, changes doesn't have any effect.\r\n\r\n**Expected behavior**\r\nWhen you set a product as Out of Stock on mass edition, you expect that they become Out of Stock. This can only be achieved if you also set stock managent off.\r\n\r\n**Actual behavior**\r\nProducts that have stock management on, and are on stock, are not affected and remain on stock.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Go to Products\r\n2. Select two or more products that have stock management on and are on stock\r\n3. Click on Mass Edit\r\n4. Set Stock Status: Out of Stock\r\n5. Click Update\r\n6. Check that the Products remain in stock\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x]  I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051471]"}
{"prompt":"<!--  Make sure to look through existing issues to see whether your idea is already being discussed. Feel free to contribute to any existing issues. -->\r\n\r\n<!-- Search tip: You can filter issues using our enhancement label https://github.com/woocommerce/woocommerce/issues?q=is%3Aissue+label%3Aenhancement -->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nIn https://github.com/woocommerce/woocommerce/blob/master/includes/class-wc-cart.php#L726, we are eating all specific coupon messages and showing just a generic error to the user. This is not a good UX as we have more specific information which might be actionable by users but we are not showing it to them.\r\n\r\n**Describe the solution you'd like**\r\nForward the error to UI instead of replacing it with a generic message.\r\n\r\n**Additional context**\r\nSee https://github.com/woocommerce/woocommerce/pull/28592#issuecomment-748889828\n\n###\n\n","completion":" [1891051442]"}
{"prompt":"**Describe the solution you'd like**\r\n\r\nIf you have products with a sale price and have set their \"Date sale price starts\", \"Date sale price ends\" fields, you can't delete these fields when updating the product via CSV.\r\n\r\nIf you leave these fields empty (or with empty spaces or wrong values) in the CSV file, they're simply ignored, so the only way to disable the sale is to use past dates there. \r\n\r\n**Describe alternatives you've considered**\r\n\r\nI think that it would be good to be able to clear these fields simply by leaving them empty in the CSV file. \r\n\r\n**Steps to replicate**\r\n1. Create a new product and set a sale price and a sale schedule for it. \r\n2. Export it to CSV\r\n3. Edit the CSV file and clear the \"Date sale price starts\", \"Date sale price ends\" fields\r\n4. Import the CSV file and check if these fields have been updated in the product settings\r\n\n\n###\n\n","completion":" [1891051450]"}
{"prompt":"## Bug Description:\r\n\"Oops! That page can‚Äôt be found\" is displayed upon tapping Privacy Policy linktext on Checkout Page\r\n\r\n## Environment:\r\nWindows 10, macOS High Sierra v10.13.6\r\nBrowser: Chrome(Version  87.0.4280.88 (64-bit))\r\n                 Firefox(Version 83.0)(64-bit)\r\n                 Safari: v13.1.2(13609.3.5.1.5)\r\n\r\n## Steps To Reproduce:\r\n1. Create any test site using Jurassic Ninja.\r\n1. Install and activate all required plugins.\r\n1. Complete the Onboarding setup wizard.\r\n1. Goto Products->Add New option and Create a new product.\r\n1. Click twice on up arrow beside Product data section \r\n1. Observe that \"Product data\" section appears misaligned when minimized and viewed from the side panel on edit product page.\r\n\r\n**Note**:\r\nObserved for Edit Coupons and Comments section under Edit Product Page.\r\n\r\n## Actual Result:\r\n\"Product data\" section appears misaligned when minimized and viewed from the side panel on edit product page.\r\n\r\n## Expected Result:\r\n\"Product data\" section appear properly when minimized and viewed from the side panel on edit product page.\r\n\r\n## Artifacts:\r\n[#28618.zip](https://github.com/woocommerce/woocommerce/files/5710497/28618.zip)\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"## Bug Description:\r\n\"Oops! That page can‚Äôt be found\" is displayed upon tapping Privacy Policy linktext on Checkout Page\r\n\r\n## Environment:\r\nWindows 10, macOS High Sierra v10.13.6\r\nBrowser: Chrome(Version  87.0.4280.88 (64-bit))\r\n                 Firefox(Version 83.0)(64-bit)\r\n                 Safari: v13.1.2(13609.3.5.1.5)\r\n\r\n## Steps To Reproduce:\r\n1. Create any test site using Jurassic Ninja.\r\n1. Install and activate all required plugins.\r\n1. Complete the Onboarding setup wizard.\r\n1. Assuming Products are added and Pages are created with All Products block.\r\n1. Go to front end and add a product to cart\r\n1. Click on \"Checkout\" button\r\n1. Click on \"Privacy Policy\" link text\r\n1. Observe that \"Oops! That page can‚Äôt be found\" is displayed upon tapping Privacy Policy linktext on Checkout Page\r\n\r\n**Note:** \r\nFollowing was observed for this issue:-\r\n-For Test Site-Exisiting User-It is working \r\n-Rest for all new users and guest users on New and Test Site it fails to work\r\n\r\n## Actual Result:\r\n\"Oops! That page can‚Äôt be found\" is displayed upon tapping Privacy Policy linktext on Checkout Page\r\n\r\n## Expected Result:\r\n Privacy Policy link text should properly navigate user to its respective page.\r\n\r\n## Artifacts:\r\n[#28616.zip](https://github.com/woocommerce/woocommerce/files/5710426/28616.zip)\r\n\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\n\n###\n\n","completion":" [1891051440]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nIn some circumstances, when simply saving the order from the WooCommerce backend, the order amount values get changed.\r\n\r\n**Expected behavior**\r\nWhen saving an order, amounts shouldn't be changed arbitrarily.\r\n\r\n**Actual behavior**\r\nThe order total gets changed when simply saving the order (when some specific values are present).\r\nThis occurred on a production site but it can be reproduced on a vanilla WP with WooCommerce being the only plugin installed and with a default theme.\r\nAt first, I couldn't believe my eyes, but after further investigation, I found that the described bug depends on the presence of some very small float number in the `line_tax` fields that can be present after applying taxes and discounts. These values are rendered in the order edit form with the scientific notation (i.e. -8,0E-5). They appear as 0,00‚Ç¨ visually in the order table, but the hidden input gets the value in the scientific notation. When the form is submitted, those values are interpreted as integers, so i.e. \r\n-8,0E-5‚Ç¨ becomes -8‚Ç¨, and it changes also the total of the order.\r\nThis is caused by the `wc_format_localized_price` function, which internally uses the `strval` function, which can return strings with numbers in scientific notation (i.e. 0.00008 becomes -8.0E-5).\r\n\r\nThis is the current implementation of that function:\r\n```\r\nfunction wc_format_localized_price( $value ) {\r\n\treturn apply_filters( 'woocommerce_format_localized_price', str_replace( '.', wc_get_price_decimal_separator(), strval( $value ) ), $value );\r\n}\r\n```\r\n\r\nAt the moment I have used the following trick to detect and avoid the conversion to scientific notation:\r\n```\r\nadd_filter( 'woocommerce_format_localized_price', 'bs_fix_prices_with_scientific_notation', 1, 2 );\r\nfunction bs_fix_prices_with_scientific_notation( $string_value, $value ) {\r\n\t// Only modify the value when scientific notation is detected\r\n\treturn preg_match( '/^[+-]?(?:\\d+|\\d*\\.\\d+)[eE][+-]?\\d+$/', strval( $value ) ) ?\r\n\t\tstr_replace( '.', wc_get_price_decimal_separator(), sprintf( \"%F\", $value ) ) :\r\n\t\t$string_value;\r\n}\r\n```\r\n\r\nOnly replacing `strval` with `sprintf` would lead to a lot of undesired side effects in other parts of the interface, so I preferred to explicitly detect the case of scientific notation and only act in that case.\r\n\r\nSince this is a critical bug, I hope it can be fixed in WooCommerce as soon as possible. I would be glad to submit a pull request if the above approach would be considered valid (maybe there are better ways to fix the issue, i.e. let the scientific number notation be accepted when saving).\r\n\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Install WooCommerce and skip the Wizard\r\n2. In WooCommerce General setting check \"Enable tax rates and calculations\" and save\r\n3. In WooCommerce General settings set Currency to Euro, Thousand separator to `.` and decimal separator to `,` and save\r\n4. In WooCommerce Tax settings Enable option \"Round tax at subtotal level, instead of rounding per line\" and save\r\n5. In WooCommerce Tax settings ensure that the option \"Prices entered with tax\" is set to \"No, I will enter prices exclusive of tax\" and set both \"Display prices in the shop\" and \"Display prices during cart and checkout\" to \"Including tax\" and save\r\n6. In WooCommerce Tax settings - Reduced rate rates, add a row with a 4% rate valid for all countries, states, etc\r\n7. In WooCommerce Payment settings enable a payment method (i.e. Direct Bank transfer)\r\n8. Create a Product A, with a price of 20,6731‚Ç¨ and with tax class \"Reduced rate\"\r\n9. Create a Product B, with a price of 1,058‚Ç¨ and with tax class \"Reduced rate\"\r\n10. Ensure Coupons are enabled and create a coupon with an amount of 14,423077‚Ç¨ of type \"Fixed cart discount\"\r\n11. On the frontend add 6x Product A and 1x Product B to the cart\r\n12. Apply the previously created coupon and ensure the discount is applied and submit the order. Order total should be 115,09‚Ç¨\r\n13. On the backend edit the order and just hit Update. The order total gets changed to  107,09‚Ç¨\r\n\r\n**Screenshots**\r\n![woocommerce-bug](https://user-images.githubusercontent.com/2298248/102501855-2d992400-407e-11eb-84bd-f5e695c95723.png)\r\n\r\nSee a full video recording (4 minutes) here: https://drive.google.com/file/d/1TJDqD4xnmSXXv8yS5v740S9XOrTUX-xl/view?usp=sharing\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n<details>\r\n```\r\n\n\n###\n\n","completion":" [1891051437]"}
{"prompt":"**Is your feature request related to a problem? Please describe.**\r\nThe AJAX product search in the back-end removes single character search terms. This causes an issue when searching for products like \"iPhone X\" since the X gets removed.\r\n\r\n**Describe the solution you'd like**\r\nI'd love for a filter to exist in the function get_valid_search_terms in the file class-wc-data-store-wp.php. So instead of `return $valid_terms;` to have something like `return apply_filters( 'woocommerce_valid_search_terms', $valid_terms, $terms, $stopwords ); `. That way, I could define my own exceptions if needed.\r\n\r\n**Describe alternatives you've considered**\r\nThe only alternative right now is to use the filter 'woocommerce_product_pre_search_products' which lets one define their own search results, but since everything else is absolutely fine and I don't need to use another search engine or what-not, this involves duplicating large chunks of the WC codebase just to include single-character search terms.\n\n###\n\n","completion":" [1891051458]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\n\r\nAfter manually editing an order to have a reduced price and then applying a coupon, the coupon's discount is applied to the order's original price (rather than the updated/reduced price).\r\n\r\n**Expected behavior**\r\n\r\nI'd expect the coupon's discount to be applied to the updated/reduced price. This expectation stems from the fact that if the customer was purchasing a product at a sale/reduced price, then the coupon would be applied to that reduced price and not the price of the product prior to the sale.\r\n\r\n**Actual behavior**\r\n\r\nThe coupon's discount is applied to original price of the product when an order is edited manually. I'm also noting some possibly relevant bugs related to coupons and manual edits to orders: #25547, #25082, #24081\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Navigate to _WooCommerce_ ‚Üí _Orders_.\r\n2. Select **Edit** alongside any order with a **Pending Payment** status. \r\n3. Edit the order's original price to a reduced price and save the changes.\r\n4. Next, apply a coupon with a percentage discount to the order.\r\n5. Note how the price is reduced by the percentage off the original price, rather than the updated/reduced price.\r\n\r\n**Screenshots**\r\n\r\nThis was originally reported in [this forum post](https://wordpress.org/support/topic/coupon-is-not-applied-on-reduced-price-when-manually-edit-order-and-apply-coupon/), where the following screencast was provided to clarify the issue: \r\n\r\nhttps://screencast-o-matic.com/watch/cYl2FR8Dh7\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\n\n###\n\n","completion":" [1891051442]"}
{"prompt":"<!--  Make sure to look through existing issues to see whether your idea is already being discussed. Feel free to contribute to any existing issues. -->\r\n\r\n<!-- Search tip: You can filter issues using our enhancement label https://github.com/woocommerce/woocommerce/issues?q=is%3Aissue+label%3Aenhancement -->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nOrder \"date created\" [format is hard-coded](https://github.com/woocommerce/woocommerce/blob/4339aee35f7411bedd042ad7530c8a39bb8c5ed9/includes/admin/meta-boxes/class-wc-meta-box-order-data.php#L236) and ignores the site settings, always displaying as `Y-m-d`. \r\n\r\n**Describe the solution you'd like**\r\nIt would be nice to either have that date adhere to site settings, or add a filter to adjust it. The `woocommerce_date_input_html_pattern` filter allows the input validation pattern to be changed, but that doesn't affect how the saved date is displayed.\r\n\r\n\r\n\n\n###\n\n","completion":" [468434635]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen a category page is filtered with a non existing product attribute value returning HTTP status code is 200. In such cases, when the attribute value doesn't exists at all the page should return with 404 status code. Existing attributes without products may still return with 200 but described case 404 would be better option. \r\nBy default Woocommerce doesn't control indexability of filtered category pages what is fine. According to SEO strategy these pages could be indexed an in that case this behaviour can cause some headache. \r\n\r\n**Expected behavior**\r\n\r\n- In case if a non existing attribute value appears in the URL e.g. \r\nhttps://themes.woocommerce.com/storefront/product-category/clothing/blouses/?filter_color=**nonexistingvalue** the HTTP status shluld be 404 instead of 200. \"nonexistingvalue\" is not a valid Color attribute value on your demo shop. \r\n- In case of existing attribute(s) but empty result should still return 200.\r\n\r\n**Why 200 code is a problem?**\r\nIf 200 is returned in case if the URL contains non existing attributes, these non existing pages could be indexed by Google. These URLs are not accessible by default, but in case of mistype, restructuring products, deleting attributes similar URLs can be created accidentally.\r\n\r\n**Screenshots**\r\n![woo-screenshot](https://user-images.githubusercontent.com/44671838/101981975-e9b6b100-3c70-11eb-8488-66c880ac058a.png)\n\n###\n\n","completion":" [1891051438]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nForce deleting a product using the REST API will not trigger existing webhooks set to product delete.\r\n\r\n**Expected behavior**\r\nI'm expecting the webhook for product delete to get triggered for both trashed and permanently deleted products or to have an extra option that separates this to so I can subscribe to any/both of them.\r\n\r\n**Actual behavior**\r\nAt this point deleting the product will trigger the webhook for product delete only if the product is trashed, if the product is permanently deleted it will not trigger the webhook for product delete.\r\nPlease take into account that the batch delete endpoint for the REST API will enforce the permanently deleting of products without a filter on this option and this will cause products batch deleted throw the REST API to not trigger the product deleted webhook\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Set up the product delete webhook to a valid target\r\n2. Enable and set up the REST API - can be used in POSTMAN or other tool\r\n3. Create some products ( can be done throw the admin or the API tool, doesn't matter )\r\n4. Delete the product throw the API using the \"?force=true\" directive\r\n5. You can repeat step 4. without the \"?force=true\" directive to see that the webhook gets triggered.\r\n6. Also you can use the API to send a batch delete request to see that the products are permanently deleted without anywhere to specify this\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n\r\n`\r\n\n\n###\n\n","completion":" [2046308337]"}
{"prompt":"**Is your feature request related to a problem? Please describe.**\r\nSome shop owners like to have the payment link available on other order statuses besides \"pending\" so they use the \"woocommerce_valid_order_statuses_for_payment\" hook like this (for example):\r\n\r\n`add_action( 'woocommerce_valid_order_statuses_for_payment', function( $statuses, $order ) {\r\n\t$statuses[] = 'on-hold';\r\n\treturn $statuses;\r\n}, 10, 2 );` \r\n\r\nThis allows shop owners to send a payment link for a client for a variety of orders statuses if the order is not paid, the order can have the stock reduced or not depending on how the shop owner did the set up or how the payment gateway that created the order works.\r\nThe problem with this is that the \"class-wc-shortcode-checkout.php\" file on line 126 makes a check for stock that is not appropriate. That line will check if stock is available because the order could be a failed one but the way it checks is not looking for a failed status but checking if the order is not a pending one (it checks by exclusion). If one adds a new order statuses via \"woocommerce_valid_order_statuses_for_payment\" it will always check for stock even for orders that have already reduced stock.\r\n\r\n**Describe the solution you'd like**\r\nThe solution seems simple, do not check for the order status, just make a check if the stock has been reduced, if it was not then check for availability. Like this:\r\n\r\n- Order or payment link is invalid.\r\n- Logged out customer does not have permission to pay for this order\r\n- Add notice if logged in customer is trying to pay for guest order.\r\n- Logged in customer trying to pay for someone else's order.\r\n- Does not need payment.\r\n- **### Check for stock availability if the stock has not been reduced**\r\n\r\nReplace \r\n\r\nif ( ! $order->has_status( wc_get_is_pending_statuses() ) ) {\r\n\r\nWith \r\n\r\nif (get_post_meta( $order->id, '_order_stock_reduced', true ) != 'yes') { \r\n\r\n**Additional context**\r\nThis check has to be less specific and then it will work for failed orders and for other type of orders.\r\n\r\n- Is the link valid? (Order ID, Hash, etc.)\r\n- Can the user pay for this order?\r\n- Is the order Paid?\r\n- Is there stock? (Check if stock was reduced, if not then check for stock)\r\n\r\nIf everything is ok then go ahead and show the form.\r\n\r\n\n\n###\n\n","completion":" [1891051458]"}
{"prompt":"Copied and pasted from [my Reddit post](https://www.reddit.com/r/woocommerce/comments/k51luk/product_attribute_urls_with_certain_characters/)\r\n\r\nI am trying to get a URL to work as the value for a product attribute for my WooCommerce product. Here is the original URL:\r\n[https://www.u-blox.com/sites/default/files/CAM-M8_ProductSummary_%28UBX-16015855%29.pdf](https://www.u-blox.com/sites/default/files/CAM-M8_ProductSummary_%28UBX-16015855%29.pdf)\r\n\r\nIf I paste that in the Value(s) field for the attribute and save, the URL is changed to\r\n[https://www.u-blox.com/sites/default/files/CAM-M8_ProductSummary_UBX-16015855.pdf](https://www.u-blox.com/sites/default/files/CAM-M8_ProductSummary_UBX-16015855.pdf)\r\nremoving the '%28' and '%29'.\r\n\r\nIf I instead replace those character encodings with their actual characters '(' and ')', respectively, so as to have:\r\n[https://www.u-blox.com/sites/default/files/CAM-M8_ProductSummary_(UBX-16015855).pdf](https://www.u-blox.com/sites/default/files/CAM-M8_ProductSummary_(UBX-16015855).pdf)\r\n(which is valid and works fine), and put that in the Value(s) field instead, the text of the link remains intact, but on the product page, the '.pdf' is printed but is not part of the hyperlink. Like:\r\n[https://www.u-blox.com/sites/default/files/CAM-M8_ProductSummary_(UBX-16015855)](https://www.u-blox.com/sites/default/files/CAM-M8_ProductSummary_(UBX-16015855)).pdf\r\n\r\nI don't know if this issue is unique to WooCommerce, or if it's something more general to WordPress.\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"## Bug Description:\r\nProduct cost fails to recalculate when updating product with zero quantity.\r\n\r\n## Environment:\r\nWindows 10, macOS Catalina: v10.15.7 (19H15)\r\nBrowser: Chrome(Version 86.0.4240.75 (64-bit))\r\n                 Firefox(Version 82.0)(64-bit)\r\n                 Safari(Version 14.0)(15610.1.28.1.9, 15610)\r\n\r\n## Steps To Reproduce:\r\n1. Create any test site using Jurassic Ninja.\r\n1. Install and activate all required plugins.\r\n1. Complete the Onboarding setup wizard.\r\n1. Go to WooCommerce->Orders.\r\n1. Click on \"Add order\"\r\n1. Now add a product with zero quantity.\r\n1. Click on \"Pencil\" button to update the product quantity.\r\n1. Now update the product quantity.\r\n1. Note that product cost fails to update.\r\n1. Click on \"Recalculate\" button\r\n1. Observe that Product cost fails to recalculate.\r\n\r\n## Actual Result:\r\nProduct cost fails to recalculate when updating product with zero quantity.\r\n\r\n## Expected Result:\r\nProduct cost should get recalculate when updating product with zero quantity.\r\n\r\n## Artifacts:\r\n[#28473.zip](https://github.com/woocommerce/woocommerce/files/5630944/28473.zip)\r\n\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051458]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nAfter saving changes to account details through the `/my-account/edit-account/` form, the user is redirected to the main Dashboard page with a success message rather than remaining on the same Account Details page.\r\n\r\n**Expected behavior**\r\nThe user should remain on the same page, and the success message should appear at the top.\r\n\r\n**Actual behavior**\r\nThe user is redirected to a different page after updating their details.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Go to My Account\r\n2. Click on \"Account Details\"\r\n3. Complete the account details fields (First name, last name, display name, email), then click \"Save Changes\"\r\n\r\n\r\n\r\n**Screenshots**\r\n<img width=\"1537\" alt=\"Screen Shot 2020-12-01 at 2 31 49 PM\" src=\"https://user-images.githubusercontent.com/4336848/100804566-f4a45280-33e1-11eb-9713-c079dfbd1b6d.png\">\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\n\n###\n\n","completion":" [1891051451]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nOrder actions in WooCommerce >> Orders cannot be enabled on mobile, even after enabling them under \"screen options\".\r\n\r\n**Expected behavior**\r\nDespite the screen size, it should be possible to enable actions.\r\n\r\n**Actual behavior**\r\nOn desktop, the actions column appears when enabled.\r\nOn mobile devices, ticking the checkbox in screen options makes no difference. Not sure if that is intentional.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Go to WooCommerce >> Orders on mobile\r\n2. Tick \"actions\" under \"screen options\"\r\n3. Actions column is still missing.\r\n\r\n\r\n**Screenshots**\r\n\r\nDesktop:\r\n\r\n![Screenshot](https://d.pr/i/UjUMzP+)\r\nScreenshot direct link: https://d.pr/i/UjUMzP\r\n\r\nMobile:\r\n\r\n![IMG_4070](https://user-images.githubusercontent.com/13084901/100731574-da5f7a00-33cb-11eb-8273-da8cb0c10624.PNG)\r\n\r\n![IMG_4071](https://user-images.githubusercontent.com/13084901/100731593-e0555b00-33cb-11eb-83dc-e03761f647d0.PNG)\r\n\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n\r\n\n\n###\n\n","completion":" [1891051455]"}
{"prompt":"This comes from WordPress.com support interaction 3527328-zen.\r\n\r\n<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites:**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug:**\r\nWhen using the Product Categories List block on the Shop page as a dropdown, it seems that the arrow next to the drop down selector is either out of place or the wrong size. \r\n\r\nWhile this appearance varies by theme, I can confirm that this is happening on Storefront as well as Twenty Twenty. \r\n\r\nIt only happens on the Shop page, but not on other pages that use the theme's default page template.\r\n\r\n**Expected behavior:**\r\nThe alignment of the button to the right of the dropdown should match much more closely to the look of the block in the editor.\r\n\r\n**Actual behavior:**\r\nThe button to the right of the dropdown is out of alignment on the shop page.\r\n\r\n**Steps to reproduce the bug:**\r\n1. Go to the block editor on the shop page.\r\n2. Add a product categories list block and set it to use the drop down format\r\n3. Publish the page and view it.\r\n4. The button to the right of the drop down will be out of alignment.\r\n\r\n**Storefront Shop Screenshot:**\r\n![storefront-shop-comparison](https://user-images.githubusercontent.com/3505172/100549844-144d4680-323b-11eb-880f-244b29f9c15a.jpg)\r\n\r\n---\r\n\r\n**Storefront Test Page (non-shop) Screenshot:**\r\n![storefront-nonshop-comparison](https://user-images.githubusercontent.com/3505172/100549853-2333f900-323b-11eb-93cb-6e0c8190079f.jpg)\r\n\r\n---\r\n\r\n**Twenty Twenty Shop Screenshot:**\r\n![twenty-twenty-shop](https://user-images.githubusercontent.com/3505172/100549856-2d55f780-323b-11eb-82e6-cf48109797dd.jpg)\r\n\r\n---\r\n\r\n**Twenty Twenty Test Page (non-shop) Screenshot:**\r\n![twenty-twenty-nonshop](https://user-images.githubusercontent.com/3505172/100549908-a81f1280-323b-11eb-85c6-1a470e89b093.jpg)\r\n\r\n---\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem:**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment:**\r\n<details>\r\n\n\n###\n\n","completion":" [1891051447]"}
{"prompt":"## Bug Description:\r\nFor Twenty Twenty theme, \"Coupon has removed\" error message appears vertically stretched on Checkout page.\r\n\r\n## Environment:\r\nWindows 10, macOS Mojave:10.14.6 (18G103)\r\nBrowser: Chrome(Version 86.0.4240.75 (64-bit))\r\n                 Firefox(Version 82.0)(64-bit)\r\n                 Safari(Version 13.1.1 (14609.2.9.1.3))\r\n\r\n## Steps To Reproduce:\r\n1. Create any test site using Jurassic Ninja.\r\n1. Install and activate all required plugins.\r\n1. Complete the Setup wizard.\r\n1. Select the \"Twenty Twenty theme\".\r\n1. Go to Coupons->Add a coupon.\r\n1. Create a coupon and click on publish.\r\n1. Go to frontend.\r\n1. Add any product to the cart and go to Checkout page.\r\n1. Apply a coupon on checkout page.\r\n1. Remove the Coupon.\r\n1. Now click on \"Click here to enter your code\" option.\r\n1. Observe that \"Coupon has removed\" error message appears vertically stretched\r\n\r\n## Actual Result:\r\nFor Twenty Twenty theme, \"Coupon has removed\" error message appears vertically stretched on Checkout page.\r\n\r\n## Expected Result:\r\n\"Coupon has removed\" error message should be properly display on checkout page.\r\n\r\n## Artifacts:\r\n[#28422.zip](https://github.com/woocommerce/woocommerce/files/5604137/28422.zip)\r\n\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\n\n###\n\n","completion":" [1891051447]"}
{"prompt":"## Bug Description:\r\nLong text Review appears misaligned on \"WooCommerce Recent Reviews widget\".\r\n\r\n## Environment:\r\nWindows 10, macOS Mojave:10.14.6 (18G103)\r\nBrowser: Chrome(Version 86.0.4240.75 (64-bit))\r\n                 Firefox(Version 82.0)(64-bit)\r\n                 Safari(Version 13.1.1 (14609.2.9.1.3))\r\n\r\n## Steps To Reproduce:\r\n1. Create any test site using Jurassic Ninja.\r\n1. Install and activate all required plugins.\r\n1. Complete the Setup wizard.\r\n1. Go to Products.\r\n1. Add or Import some products.\r\n1. Go to frontend.\r\n1. Click on any of the product and click on Reviews option.\r\n1. Now Enter a long text and submit the review.\r\n1. Go to admin Dashboard.\r\n1. Observe that Review text appears misaligned.\r\n\r\n## Actual Result:\r\nLong text Review appears misaligned on \"WooCommerce Recent Reviews widget\".\r\n\r\n## Expected Result:\r\nLong text Review should be properly aligned on \"WooCommerce Recent Reviews widget\".\r\n\r\n## Artifacts:\r\n![#28411](https://user-images.githubusercontent.com/41110392/100255734-e7aedb80-2f69-11eb-9e7a-526873ce7ac9.png)\r\n\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051447]"}
{"prompt":"Currently the Tracks PHP library is only loaded in `is_admin()` context. Since admin functionality can be handled via REST endpoints I think we should make Tracks events available for use here.\r\n\r\nIn AutomateWoo, we have an endpoint to create a workflow via a specified preset and would like to record a tracks event when every workflow is created including this endpoint. \r\n\r\nhttps://github.com/woocommerce/woocommerce/blob/4b3b40d42e35852b7ac465b331f8204feb1ecdcd/includes/admin/class-wc-admin.php#L65-L69\r\n\r\n\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen you have triggered a \"Please choose product options\" the product name is misaligned.\r\n![Screenshot_2020-11-24_at_20_12_45](https://user-images.githubusercontent.com/24649833/100146940-9849ac00-2e92-11eb-9379-c2f8766d4b48.png)\r\n\r\n**Expected behavior**\r\nIt should be aligned similar to how it appears in Storefront\r\n![Screenshot 2020-11-24 at 20 20 52](https://user-images.githubusercontent.com/24649833/100146997-a8618b80-2e92-11eb-9544-6cb6168ec2f8.png)\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Install and activate Twenty Twenty theme.\r\n2. Create a variable product with variations created.\r\n3. Try adding a variable product to the cart via the URL link with variable product parent ID like `https://test.com/?add-to-cart=29291`\r\n4. Ensure you are not allowed to add the product and you see a message asking you to go to the product details page to select options. The product name is misaligned in the notice.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051454]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n\r\nRelated to #27491 \r\n\r\nI normally return false to `woocommerce_shipping_calculator_enable_postcode` on stores where the shipping is only calculated based on the country + state, but since the last changes to the WC_Cart->show_shipping() function, when the postcode is a required field, we fail to get the shipping calculator to work as expected:\r\n[08620cf](https://github.com/woocommerce/woocommerce/commit/08620cf8466054263d6975fb749c6b454d9dee34)\r\n[7f2b322](https://github.com/woocommerce/woocommerce/commit/7f2b32208550a7b4f803cbe8748628c86dd126a3)\r\n\r\nWe should be able to have the postcode as a required field and, at the same time, be able to remove this field from the shipping calculator if not needed **because of the way we create shipping zones (not postcode based)**.\r\n\r\nTo be more clear: if the website is using only countries and states to set the shipping zones, it makes sense to remove the postcode from the calculator (even if later on on the checkout it is required) so the customer has a better and simpler UX on the cart.\r\n\r\nI think adding a check to the `woocommerce_shipping_calculator_enable_postcode` filter at the `show_shipping` function would be enough to solve this issue. Not sure if this is a good idea to do on Country and State tho.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**Solution:**\r\nChanging class-wc-cart.php line 1540 to this will do it:\r\n`if ( apply_filters( 'woocommerce_shipping_calculator_enable_postcode', true ) && isset( $country_fields['shipping_postcode'] ) && $country_fields['shipping_postcode']['required'] && ! $this->get_customer()->get_shipping_postcode() ) {`\r\n\r\nDo you agree that this is a problem?\r\nShould I open a PR?\r\n\n\n###\n\n","completion":" [1891051459]"}
{"prompt":"<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen a webhook is triggered, is_rest_api randomly returns false, sending \"rest_api_unavailable\" as the payload instead of expected payload. \r\n\r\n**Expected behavior**\r\n\\Automattic\\WooCommerce\\RestApi\\Server class should exist and expected payload with order data should be sent\r\n\r\n**Actual behavior**\r\nReturns new WP_Error( 'rest_api_unavailable', __( 'The Rest API is unavailable.', 'woocommerce' ) );\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\nDifficult to reproduce as it's only happening on a specific site. Re-creating the same exact webhook on another site always seems to return the expected payload. Additionally, on the site that is affected, the above error is never returned when using Legacy API v3. Error is returned on all API versions except for legacy. Legacy always sends expected payload. \r\n\r\nI have also tested on a copy of the site on another server, with same results. This is happening with only WooCommerce activated and a default theme. In my testing, I try updating the same order multiple times. The first time it may send the expected payload while additional updates return the error. It returns the error more frequently than sending the expected payload and is sporadic and random.\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [ ] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n\n\n###\n\n","completion":" [2046308337]"}
{"prompt":"<!--  Make sure to look through existing issues to see whether your idea is already being discussed. Feel free to contribute to any existing issues. -->\r\n\r\n<!-- Search tip: You can filter issues using our enhancement label https://github.com/woocommerce/woocommerce/issues?q=is%3Aissue+label%3Aenhancement -->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nThe current implementation of the BlockUI jQuery plugin makes it difficult to customise the overlay on the frontend without overwriting the `jQuery.fn.block` and `jQuery.fn.unblock` methods directly.\r\n\r\nThe hardcoded values of `opacity: 0.6, background: '#fff'` scattered throughout the frontend JavaScript files is particularly jarring on dark themes.\r\n\r\n**Describe the solution you'd like**\r\nReplace the BlockUI plugin with CSS pointer events for all frontend JS. [Browser usage is 98% globally](https://caniuse.com/pointer-events) and it is supported on all browsers on the WooCommerce/WordPress support spectrum.\r\n\r\nIdeally this would be controlled a CSS class exposed by WooCommerce for easy customisation. For example:\r\n\r\n```js\r\nfunction blockUi(element) {\r\n    element.classList.add('woo-block-ui')\r\n}\r\n\r\nfunction unblockUi(element) {\r\n    element.classList.remove('woo-block-ui')\r\n}\r\n```\r\n\r\n```css\r\n.woo-block-ui {\r\n    pointer-events: none;\r\n    opacity: 0.6;\r\n}\r\n```\r\n\r\nThemes could then easily customise the `.woo-block-ui` class for complete control.\r\n\r\nIn theory this solution should be non-breaking as any customisation to the current implementation will have required replacing/editing WooCommerce JS files or BlockUI methods.\r\n\r\n**Describe alternatives you've considered**\r\nTo combat this currently, I have overwritten the methods exposed by the BlockUI plugin.\r\n\r\n```js\r\njQuery.fn.block = function {\r\n    this[0].classList.add('block-ui')\r\n}\r\n\r\njQuery.fn.unblock = function {\r\n    this[0].classList.remove('block-ui')\r\n}\r\n```\r\n\r\n**Additional context**\r\nI noticed an [open issue](https://github.com/woocommerce/woocommerce/issues/28284) that starts the discussion for potentially removing the jQuery dependency on the frontend JS.\r\n\r\nThe BlockUI plugin has [not been updated in 6 years](https://github.com/malsup/blockui) and appears to be dead. I think it's safe to say it's time to move on - at least for the frontend JavaScript.\r\n\n\n###\n\n","completion":" [1891051447]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [X] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [X] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen a customer has an account but isn't logged in goes to check out, they'll get an error message asking them to log in.  Clicking the button to log in opens the login form.  However, the form is <em>above</em> the notice and doesn't appear on the screen.  To the customer this makes it appear as if the form isn't working.\r\n\r\n**Expected behavior**\r\nI would expect clicking on the button to log in would place the login form in the view.  \r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Go to WooCommerce > Settings > Accounts & Privacy.\r\n2. Set the options to not allow customers to checkout without an account and do allow customers to log in at checkout.  ![options](https://cdn-std.droplr.net/files/acc_705319/GWoM5l)\r\n(Link to screenshot:  https://d.pr/i/GWoM5l)\r\n3. In a private window, add an item to the cart and checkout using the email address of an existing user.\r\n4. Click on the button in the notification to log in.  Notice how you can see the scroll bar position change, but the login form is not visible unless you scroll up.\r\n\r\n**Screenshots**\r\nVideo: https://d.pr/v/KiKMA9\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [X] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [X] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [X] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n<details>\r\n```\r\n\n\n###\n\n","completion":" [1891051440]"}
{"prompt":"**Prerequisites:**\r\n- [X] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [X] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen selecting a rating in Filter Products by Rating widget by clicking it, there is no visual indication of it being selected besides the URL change where `?rating_filter=X` gets appended.\r\n\r\n**Expected behavior**\r\nSee a clear indication of which rating is being selected. For example with an `x` next to it, like this ![](https://d.pr/i/wBJsjW+)\r\n_Link: https://d.pr/i/wBJsjW_\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Add at least two different ratings to the products\r\n2. Add Filter Products by Rating widget\r\n3. Visit the shop page (or another page with products)\r\n4. Click any rating in the widget\r\n\r\n**Screenshots**\r\nTwenty Seventeen theme:\r\n\r\n![ezgif-6-cf0e8f96ca10](https://user-images.githubusercontent.com/39308239/99146424-b9cfba00-2680-11eb-9a3a-c33e7f6a84ee.gif)\r\n_Link: https://d.pr/i/04eLYh_\r\n\r\nStorefront theme:\r\n\r\n![ezgif-6-0b03f85f67e5](https://user-images.githubusercontent.com/39308239/99146464-1f23ab00-2681-11eb-8bc2-6a66749c1bc5.gif)\r\n_Link: https://d.pr/i/vVX8Cj_\r\n\r\n**Isolating the problem:**\r\n- [X] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [X] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [X] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n\r\n<details>\r\n\r\n```\r\n\n\n###\n\n","completion":" [1891051454]"}
{"prompt":"**Prerequisites:**\r\n- [x ] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x ] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen you set the Shop page to display categories, it displays the categories twice no matter what other settings you change.\r\n\r\n**Expected behavior**\r\nCategories should only be displayed once, not twice.\r\n\r\n**Actual behavior**\r\n* Setting the Shop page to display categories results in duplicate categories showing on the page.\r\n* When previewing the Shop page using the **Storefront Theme** and **Twenty Twenty Theme**, the categories still duplicate.\r\n* With **Jetpack Infinite Scroll** *enabled*, the Shop page loads in the second set of categories on the /shop/ URL.\r\n* With **Jetpack Infinite Scroll** *disabled*, the duplicate categories still exist, but at the /shop/ or shop/page/1 and /shop/page/2 URLs.\r\n* Changing any of the other settings, such as **Products per row** or **Default product sorting** still results in duplicate categories showing on the page\r\n\r\n**Steps to reproduce the bug**\r\nSteps to reproduce the bug:\r\n1. Go to *Customize -> WooCommerce -> Product Catalog*\r\n2. Click on \"Show categories\" under the \"Shop page display\" section\r\n3. See error\r\n4. (Select any other setting and see the same error)\r\n\r\n**Screenshots**\r\nCategories duplicate when \"Show categories\" option chosen:\r\n![https://d.pr/i/IeZVIo](https://d.pr/i/IeZVIo+)\r\n\r\nChanging the rows appears to remove the duplicates but that's because the Customizer shows the /shop/page/2 URL:\r\n![https://d.pr/i/LLwyY7](https://d.pr/i/LLwyY7+)\r\n![https://d.pr/i/Y7W5TO](https://d.pr/i/Y7W5TO+)\r\n\r\nThe front-end still shows the duplicates after selecting the \"Save Changes\" button at the top of the Customizer:\r\n![https://d.pr/i/jscPD4](https://d.pr/i/jscPD4+)\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x ] This bug happens with a default WordPress theme (Twenty Twenty) active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x ] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n\r\n\n\n###\n\n","completion":" [1891051438,1891051454]"}
{"prompt":"**Is your feature request related to a problem? Please describe.**\r\nI'm always frustrated when i need to customize email texts. I do not understand why the first lines below the `woocommerce_email_header` hook are hardcoded in the template. Example from `woocommerce/templates/emails/customer-completed-order.php`:\r\n```\r\n<?php /* translators: %s: Customer first name */ ?>\r\n<p><?php printf( esc_html__( 'Hi %s,', 'woocommerce' ), esc_html( $order->get_billing_first_name() ) ); ?></p>\r\n<p><?php esc_html_e( 'We have finished processing your order.', 'woocommerce' ); ?></p>\r\n```\r\n\r\n**Describe the solution you'd like**\r\nI'd love to see these output hooked into `woocommerce_email_header`. That would make it more easy to unhook these and add custom texts.\r\n\r\n**Describe alternatives you've considered**\r\nOf course a solution is to work with translations of these texts. But this means too much risk and need of attention, since texts may change in the original template.\r\nThe other solution, to override the whole template, is also not ideal, since updates require more attention for changes which need to be reproduced as well.\r\n\r\n**Additional context**\r\nIf anyone can tell me why this is designed as it is, i may understand ;) But i hope this is clear and can be discussed for the whole email templates.\n\n###\n\n","completion":" [33006876]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\n\r\nCoupons are possible to be created without a coupon code name. \r\n\r\n**Expected behavior**\r\n\r\nI expected to be shown a warning letting me know that the coupon code name is required in order to create a coupon. \r\n\r\n**Steps to reproduce the bug**\r\n\r\nSteps to reproduce the bug:\r\n\r\n1. Go to `Marketing/Coupons`;\r\n2. Click on the `Add coupon` button;\r\n3. Fill in coupon details but leave the coupon code filed empty;\r\n4. Click on the `Publish` button to create a coupon;\r\n5. Note that the coupon had been created without a coupon code. \r\n\r\nIt is not a huge deal but it will be nice to let merchants know that they need to add a coupon code name as well. \r\n\r\n**Screenshots**\r\n\r\nSee gif below:\r\n\r\n![](http://g.recordit.co/9Y34kXPsTj.gif)\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051442]"}
{"prompt":"JSON structured data on single products pages are showing availability `InStock` on backorder products. According to Schema, the availability value should be instead `PreSale` or `PreOrder`:\r\n\r\nhttps://schema.org/ItemAvailability\r\n\r\nAs a consequence, Google shows a wrong availability on its SERP.\r\n\r\nI have tested it  in Storefront without any other active plugin than WooCommerce.\r\n\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051461,1891051471]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [ ] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [ ] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\nI have not done these, sorry. I don't need support as it's not going to affect me, but it does seem like a bug, so I thought I would submit it. I don't have time to fully research this though.\r\n\r\n**Describe the bug**\r\nI was setting up a subscription, but I dont think its specific to that. I had quantity x3 in my basket. \r\n\r\nThen I set the product to \"sold individually\" in the back-end. \r\n\r\nI had the page loaded still, so I set the quantity to 4 to see what would happen and clicked Update basket.\r\n\r\nThe page reloaded and correctly limited my quantity to 1, but the price was still set at the original value: 3x¬£200 = ¬£600.\r\n\r\nI tried going through to the checkout to see if it would correct itself but it remained stuck with the wrong value.\r\n\r\n**Expected behavior**\r\nPrice should be recalculated to a quantity of 1.\r\n\r\n**Actual behavior**\r\nQuantity is dropped to 1 but price remains at previous value.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Create a product\r\n1. Add a quantity of more than one to the cart\r\n1. Change the product > inventory > sold individually to checked\r\n1. Refresh the cart\r\n1. Observe that the quantity is now 1 but the price is still the original value\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/1038062/98378389-d98e2f00-203d-11eb-8c35-04e11e3d12c8.png)\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [ ] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\nThe System Status Report is found in your WordPress admin under **WooCommerce > Status**. \r\nPlease select ‚ÄúGet system report‚Äù, then ‚ÄúCopy for support‚Äù, and then paste it here.\r\n```\r\n</details>\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"On checkout (when user isn't logged in), when some data is entered, an ajax query is triggered and cart (temporary) info are sent to the server. While some info are saved into session, some aren't, among them: first name, last name, email and telephone.\r\n\r\nThis leads to user losing already typed info if navigating away and coming back to checkout. This would be easily solved by saving checkout information into wc_session as they are filled.\r\n\r\nOnce saved, reloading the checkout page would restore previously typed info directly from session.\n\n###\n\n","completion":" [1891051440]"}
{"prompt":"<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nSituation: A product has been bought which was currently available on backorder.\r\nThe Information that the product is on backorder gets shown correctly in cart and also in the order confirmation email.\r\n\r\nIf a order gets completed however this information gets still sent out to the client. This shouldnt happen as the product is not anymore on backorder - its packaged and sent out to the client.\r\n\r\n**Expected behavior**\r\nOn the order completed email there is no additional information about a product that was previously on backorder. \r\n\r\n**Actual behavior**\r\nProduct still is listed in the order completed email as backordered\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Go to a product with variations on the frontend\r\n2. Order although it shows the product variation is on backorder\r\n3. check the cart and the order confirmation if it shows that the product variation is on backorder. if yes finally order it\r\n4. Mark the order as completed. check if the email still shows that the product is on backorder.\r\n\r\n**Screenshots**\r\nWooCommerce Settings\r\n![woo-settings](https://user-images.githubusercontent.com/6242098/98244548-e93f4200-1f6f-11eb-871d-feb13262d03a.png)\r\n\r\nProduct Inventory\r\n![product-variation-inventory](https://user-images.githubusercontent.com/6242098/98244569-ee9c8c80-1f6f-11eb-84b5-b649d858dfdd.png)\r\n\r\nProduct Variation - Inventory\r\n![product-variation-inventory-variations](https://user-images.githubusercontent.com/6242098/98244578-f1977d00-1f6f-11eb-87a4-0b4119227540.png)\r\n\r\nOrder Completed - Backordered Information\r\n![order-completed-backordered](https://user-images.githubusercontent.com/6242098/98244585-f4926d80-1f6f-11eb-83c8-dd74bb94679d.png)\r\n\r\nOrder Completed - Backordered Information (E-Mail)\r\n![order-completed-backordered-email](https://user-images.githubusercontent.com/6242098/98244593-f78d5e00-1f6f-11eb-812a-1cf6113f1aa8.png)\r\n\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\n\n###\n\n","completion":" [1891051441,1891051471]"}
{"prompt":"Opening [#5112](https://github.com/woocommerce/woocommerce/issues/5112) this back up as reported recently in 3447963-zen\r\n\r\nCurrently, if shipping to Japan, the address shows in order:\r\n\r\nZIP\r\nPrefecture Town/City Street Address\r\nApt\r\nLast Name, First Name\r\nCountry\r\n\r\n![](https://d.pr/i/Qn753T+)\r\nLink to screenshot: https://d.pr/i/Qn753T\r\n\r\n\r\nThis is fine if the address is all in Japanese, however, when writing address in Romaji (\"Roman alphabet\"), it should be in Western style order. Here's an example from Japan Post's website:\r\n\r\nhttps://www.post.japanpost.jp/int/use/writing/normal_en.html\n\n###\n\n","completion":" [1891051459,468434635]"}
{"prompt":"\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen importing a CSV that includes an existing attribute, which already has a slug, the importer attempts to generate a new slug.  This can lead to max character errors: \r\n\r\n```\r\nSlug \"arc-flash-gloves-ce-category\" is too long (28 characters max). Shorten it, please.\r\n```\r\n\r\nThis attribute already has a slug, well within the character limit: arc-glove-ce\r\n\r\n**Expected behavior**\r\nThe attribute should import without issue.\r\n\r\n**Actual behavior**\r\nAn error is returned if the unnecessarily generated attribute slug is more than 28 characters.  \r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Create a global attribute with a name like ARC Flash > Gloves > CE Category\r\n2. Give it a slug of arc-glove-ce\r\n3. Give it a couple terms\r\n4. Edit a product and add the attribute and a value\r\n5. Save product\r\n6. Export a CSV of this product\r\n7. Modify the value of the ARC Flash > Gloves > CE Category attribute to a different term\r\n8. Save and import/merge the new CSV in a attempt to change the term for this product\r\n9. Get error\r\n\r\n**Screenshots**\r\n<img width=\"513\" alt=\"Screen Shot 2020-11-02 at 16 13 24\" src=\"https://user-images.githubusercontent.com/3473953/97919788-62e3ef80-1d26-11eb-9b0a-ac4f145e7504.png\">\r\n\r\n\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n\r\n<details>\r\n```\r\n\r\n\n\n###\n\n","completion":" [1891051450]"}
{"prompt":"### Version:\r\nWooCommerce 4.6.1\r\nTheme Storefront 2.8.0\r\n\r\n### Description:\r\nI created a Grouped-Product and linked it to several Variable-Products. Then when viewing the Grouped-Product, I saw that it's main price range only used values equaling the Minimum Prices of the linked Variable-Products. Instead, it should use the minimum of linked Minimum Prices, and maximum of linked Maximum Prices.\r\n\r\n### Example:\r\nSee attached screenshot depicting the discrepancy:\r\n\r\n![price_range_discrepancy](https://user-images.githubusercontent.com/20448845/97797755-b77a6280-1c73-11eb-9ae1-7a06421a5b11.jpg)\r\n\r\nIn this example, the main price range at the top should read $11,088.00 ‚Äì $16,500.00\r\n\r\nI had a look through the code and found that it might have been an oversight, where it gets the child prices without concern for whether or not the children are simple or complex items:\r\n\r\n```\r\nwoocommerce/includes/class-wc-product-grouped.php\r\n    get_price_html\r\n        wc_get_price_including_tax\r\n        wc_get_price_excluding_tax\r\n            $price = '' !== $args['price'] ? max( 0.0, (float) $args['price'] ) : $product->get_price();\r\n```\r\n\r\n### Steps to Reproduce:\r\n\r\n1. Create a Variable Product.\r\n2. Create 2 variations of differing price.\r\n3. Create a Grouped Product.\r\n4. Link the Variable Product to the Grouped Product\r\n\r\n\r\n<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites:**\r\n- [X] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [X] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen using the field 'menu_order' for creating product attribute terms using the REST API, the order is not kept, using custom ordering for the product attribute.\r\n\r\n**Expected behavior**\r\nThe attribute terms for a given attribute should follow the order specified in the 'menu_order' field, if custom ordering is selected for the product attribute.\r\n\r\n**Actual behavior**\r\nThe attribute terms are presented in a somewhat random order even if 'menu_order' is specified when creating the term via REST API and having the product attribute as 'Custom Ordering'. \r\n\r\n**Steps to reproduce the bug**\r\nSteps to reproduce the bug:\r\n1. Go to  WooCommerce > Attributes and create a new attribute default sort order as: \"Custom ordering\".\r\n2. Submit some new product attribute terms using the REST API: /wp-json/wc/v3/products/attributes/<attribute_id>/terms with name and 'menu_order' for the attribute created in step 1.\r\n3. Go back to WooCommerce > Attributes.\r\n4. Click on \"Configure terms\" for the attribute created in step 1.\r\n5. Check that the order is not correct.\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem:**\r\n- [X] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [X] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [X] I can reproduce this bug consistently using the steps above.\r\n\r\nThis was tested and replicated on a completely fresh install of WP + WC.\r\n\r\n**WordPress Environment**\r\n<details>\r\n`\r\n\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"## Bug Description:\r\n\"Save\" button fails to enable for Password field when user has fulfilled its requirement during password reset\r\n\r\n## Environment:\r\nWindows 10, Mac High Sierra v10.13.6\r\nBrowser: Chrome(Version 86.0.4240.75 (64-bit))\r\n                 Firefox(Version 82.0)(64-bit)\r\n                 Safari (Version 13.1.2)\r\n\r\n## Steps To Reproduce:\r\n1. Create any test site using Jurassic Ninja.\r\n1. Install and activate all required plugins.\r\n1. Go to WooCommerce beta Tester.\r\n1. Switch the WooCommerce version to 4.7.0-rc.1\r\n1. Go to Frontend by clicking on \"Home icon->Visit Site\" option at top right corner.\r\n1. Click on ‚ÄúMy Account‚Äù.\r\n1. Click on ‚ÄúAccount details‚Äù.\r\n1. Change ‚ÄúEmail Address‚Äù ex- ‚Äúgglobalstep@gmail.com‚Äù.\r\n1.  Enter ‚ÄúFirst name‚Äù and ‚ÄúLast name‚Äù\r\n1. Click on ‚ÄúSave changes‚Äù and Logout from the site on front end \r\n1. Click on \"Lost your password?\" link text\r\n1. Enter email address and click on \"Reset Password\" button\r\n1. For correct email address, link will be sent to your respective email  say ‚Äúgglobalstep@gmail.com‚Äù account\r\n1.Open the reset password link .\r\n1. Set ‚ÄúNew Password‚Äù and ‚ÄúConfirm Password‚Äù field ex- ‚ÄúPassword123$‚Äù\r\n1. Observe that \"Save\" button fails to enable for Password field when user has fulfilled its requirement.\r\n\r\n## Actual Result:\r\n\"Save\" button fails to enable for Password field when user has fulfilled its requirement during password reset\r\n\r\n## Expected Result:\r\n\"Save\" button should be enabled for Password field when user has fulfilled its requirement during password reset\r\n\r\n## Artifacts:\r\n[#28125.zip](https://github.com/woocommerce/woocommerce/files/5452877/28125.zip)\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\n\n###\n\n","completion":" [1891051451]"}
{"prompt":"<!--  Make sure to look through existing issues to see whether your idea is already being discussed. Feel free to contribute to any existing issues. -->\r\n\r\n<!-- Search tip: You can filter issues using our enhancement label https://github.com/woocommerce/woocommerce/issues?q=is%3Aissue+label%3Aenhancement -->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nFunction `is_on_sale` is a very commonly used function in different templates to change the styling of products depending upon whether it's on sale. The problem is, [for variable products this function calls](https://github.com/woocommerce/woocommerce/blob/master/includes/class-wc-product-variable.php#L507) `get_variation_prices` which loads and computes the price of every single variation. This causes memory fatals and performance degradation when product has large amount of variations.\r\n\r\nThis is not required at all, and we should be able to compute answer of `is_on_sale` much easily. \r\n\r\n**Describe the solution you'd like**\r\nA much more efficient direct SQL query can be written to compute this instead of needlessly loading all product and looping over them.\r\n\n\n###\n\n","completion":" [472334370]"}
{"prompt":"<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\n\r\nDeleting product gallery images using a Google Chrome browser on Android device does not work consistently. It requires multiple clicks on the \"x\" mark at the top right of each image, to be able to delete that image.\r\n\r\nThe same process on Firefox for Android works great! Doesn't require multiple taps.\r\n\r\n**Expected behavior**\r\n\r\nOn Google Chrome, one must be able to delete the product gallery images easily. Single tap on \"x\" mark at the top right must remove it.\r\n\r\n**Actual behavior**\r\n\r\nRight now, it requires multiple clicks on the \"x\" mark at the top right of each image, to be able to delete that image.\r\n\r\nAlso sometimes, it shows `Delete image` text in a popup, when the \"x\" mark is clicked on, instead of deleting the image.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\n\r\n- Create a product.\r\n- Add multiple gallery images to it.\r\n- Publish the product.\r\n- Visit the product editor page on a Google Chrome browser on Android.\r\n- Try clicking on \"x\" mark at the top right of each image.\r\n\r\n**Screenshots**\r\n\r\nNot applicable.\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051455]"}
{"prompt":"**Describe the bug**\r\nUndefined index notice is display on the checkout page with Inclusive Tax setup.\r\n\r\n**Expected behavior**\r\nNo notice should be display on the checkout page.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. WC-- Tax setup screenshot: https://www.screencast.com/t/3KBWkzv4Y\r\n2. Try to add product as guest users (incognito mode)\r\n3. After adding the product to the cart page, the checkout page shows an Undefined index notice\r\n\r\n**Screenshots**\r\nhttps://www.screencast.com/t/Cn37G5rp\r\n\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051440,1891051453]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\n\r\nThe \"My Account\" navigation reads \"Addresses\" even though only 1 address is set to show. For example, if you set \"Force shipping to the customer billing address\" as true in the admin, then the address page will show just the billing address, but the navigation will still refer to multiple addresses.\r\n\r\nInside [/templates/myaccount/my-address.php:22](https://github.com/woocommerce/woocommerce/blob/master/templates/myaccount/my-address.php#L22) there is a conditional check to determine if it should show both billing & shipping addresses, or just the billing address. This check uses `! wc_ship_to_billing_address_only() && wc_shipping_enabled()`.\r\n\r\nHowever, inside [/includes/wc-account-functions.php:102](https://github.com/woocommerce/woocommerce/blob/master/includes/wc-account-functions.php#L102) the check to determine whether to read \"Address\" or \"Addressses\" uses `(int) wc_shipping_enabled()` which causes the menu item to be inconsistent with the number of addresses that are shown.\r\n\r\n**Expected behavior**\r\n\r\nWhen there is 1 address, it should read \"Address\"\r\n\r\n**Actual behavior**\r\n\r\nIt reads \"Addresses\"\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\n\r\n1. Go to 'Settings'\r\n2. Click on 'Shipping'\r\n3. Click on 'Shipping options'\r\n4. Set 'Force shipping to the customer billing address' to true\r\n5. Go to 'My Account' page\r\n6. See error\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n\r\n````\r\n\n\n###\n\n","completion":" [1891051451]"}
{"prompt":"Please provide us with the information requested in this bug report. Without these details, we won't be able to fully evaluate this issue. \r\nBug reports lacking detail, or for any other reason than to report a bug, may be closed without action.\r\n\r\n<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen duplicating an existing product, the 'Publish on' time is always set to the datetime that you duplicate the product. This causes issues when compared to when creating a new product, this is left as 'immediately' until the post is published, or the publish on date is specifically set.\r\n\r\nMaybe related https://github.com/woocommerce/woocommerce/pull/20083 \r\nWhen duplicating a product, I expect the Publish On date to be as if creating a new product.\r\n\r\n**Actual behavior**\r\nThe Publish on date is set as the date/time the duplication was made.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Go to an existing produt\r\n2. Click 'Duplicate' or 'Copy to a new Draft'\r\n3. Notice that the 'Publish on' datetime in the RH column is set to the current date and time.\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/178039/95736206-d346a600-0c7d-11eb-9b10-3f0585e2f3e2.png)\r\n\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\nThe System Status Report is found in your WordPress admin under **WooCommerce > Status**. \r\nPlease select ‚ÄúGet system report‚Äù, then ‚ÄúCopy for support‚Äù, and then paste it here.\r\n```\r\n</details>\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"Please provide us with the information requested in this bug report. Without these details, we won't be able to fully evaluate this issue. \r\nBug reports lacking detail, or for any other reason than to report a bug, may be closed without action.\r\n\r\n<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nA clear and concise description of what the bug is. \r\nThere is a new option as an order status Delivered\r\nWhen you chois this option the order disapears \r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\nno cleu?\r\n**Actual behavior**\r\nA clear and concise description of what actually happens. Please be as descriptive as possible; \r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Go to '...' a random order\r\n2. Click on '....' change status -> delivered -> search for the order\r\n3. Scroll down to '....'\r\n4. See error\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\nThe System Status Report is found in your WordPress admin under **WooCommerce > Status**. \r\nPlease select ‚ÄúGet system report‚Äù, then ‚ÄúCopy for support‚Äù, and then paste it here.\r\n```\r\n</details>\r\n\n\n###\n\n","completion":" [1891051458]"}
{"prompt":"Following [this documentation](https://docs.woocommerce.com/document/shipping-method-api/) to add a new shipping method, the class is initiated at least three times, when the woocommerce_shipping_methods add_filter call is made.\r\n\r\nIs this by design, there's a bug or am I missing something here?\r\n\r\nI noticed this because a simple shipping method I'm creating uses the admin_footer action on init() to add some javascript to the admin screen and it's being called three times.\r\n\r\nFor testing proposes, I've added this to the __construct method of my shipping class:\r\n`add_action( 'wp_footer', function() {\r\n\techo ' * ';\r\n} );`\r\nAnd I'm seeing three \"*\" at the bottom of the website.\n\n###\n\n","completion":" [1891051459,472334370]"}
{"prompt":"Please provide us with the information requested in this bug report. Without these details, we won't be able to fully evaluate this issue. \r\nBug reports lacking detail, or for any other reason than to report a bug, may be closed without action.\r\n\r\n<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nIf a store has tax inclusive pricing set up and a percentage based coupon is applied to orders, there is a discrepancy in calculations if the order is created in the admin versus the frontend. \r\n\r\nIf the coupon is applied on the front end, the percentage discount is taken from the total value excluding tax. So, a 10% discount on a product that is $10 with 10% tax included would be $.91. \r\n\r\nIf the coupon is applied in the admin, it seems to determine the discount like it determines the tax amount as described here: https://github.com/woocommerce/woocommerce/wiki/How-Taxes-Work-in-WooCommerce#tax-calculations-simplified . Not sure if this is exactly what it's doing, didn't review the code. \r\n\r\n**Expected behavior**\r\nFor the calculations to be the same, I believe the front end is correct.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Set store to have products include taxes in their price.\r\n1. Set a tax rate, I used 10%.\r\n1. Create a product to use, I set my price at $10.\r\n1. Create a percentage based coupon to use, I used 10%. \r\n1. Add the item to the cart, apply the coupon, and then check out. \r\n1. Create a new order in the admin, add the product, apply the coupon, and then save.\r\n1. Discount values in the orders will differ, creating different totals. \r\n\r\n\r\n**Screenshots**\r\n![](https://d.pr/i/eXrl89+)\r\nImage Link: https://d.pr/i/eXrl89\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051453]"}
{"prompt":"### What I'm doing.\r\n\r\nI'm trying to sell _**virtual**_ products, basically access to certain pages using 'Pay For Post with WooCommerce' plugin.\r\n\r\nI assume that the pay for post plugin is using `wc_customer_bought_product()` function. I'm using it too to hook and replace \"Add to cart\" button. Here is my code.\r\n\r\n```\r\nfunction custom_user_bought($user, $product) {\r\n\treturn wc_customer_bought_product( 'no-email-testing@no-server.com', $user->ID, $product->get_id() );\r\n}\r\nadd_filter('woocommerce_loop_add_to_cart_link', 'custom_woocommerce_loop_add_to_cart_link');\r\nfunction custom_woocommerce_loop_add_to_cart_link($link) {\r\n\tglobal $product;\r\n\t$current_user = wp_get_current_user();\r\n\r\n\tif($current_user->exists() && custom_user_bought( $current_user, $product ) ) {\r\n\t\t$link = sprintf( '<a href=\"%s\" class=\"button\">%s</a>',\r\n\t\t\t\tesc_url( get_the_permalink() ), esc_html( \"Already purchased\" ));\r\n\t}\r\n\techo $link;\r\n}\r\n```\r\n### The main issue\r\n\r\nIf one user sets the `_billing_email` to the email of another existing user, then\r\nthe `wc_customer_bought_product()` function **returns TRUE for the other user as well**.\r\n\r\nIn general this might no be a problem. But for virtual and digital goods, that are normally sold only once, this might be a problem. As you can see, I've tried to give another non existing email to the function, but after I looked over the code I noticed it pulls the email from the user id. Filters helped to patch.\r\n\r\n### Currently working patch\r\n```\r\nadd_filter('woocommerce_pre_customer_bought_product', 'custom_wc_customer_bought_product', 10, 4);\r\nfunction custom_wc_customer_bought_product($null_param, $customer_email, $user_id, $product_id ) {\r\n\r\n// ORIGINAL function code current working version here and replace\r\n// $customer_data = array_map( 'esc_sql', array_filter( array( $user_id ) ) ); \r\n// and optional\r\n// $transient_name = 'custom_wc_customer_bought_product_' . md5( $customer_email . $user_id ); \r\n\r\n}\r\n```\n\n###\n\n","completion":" [1891051451]"}
{"prompt":"I Found this when working with E2E tests.\r\n\r\n`woocommerce_meta_nonce` is the nonce used on the edit screens. It's also added to the product images metabox\r\n https://github.com/woocommerce/woocommerce/blob/master/includes/admin/meta-boxes/class-wc-meta-box-product-images.php#L32. This creates a duplicate ID. The product images nonce should be changed to a unique name or removed.\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"## Bug Description:\r\n On Standard Tax rates page, country code dropdown fails to filter as per the country code.\r\n \r\n## Environment:\r\n Windows 10, Mac Mojave:10.14.6 (18G103)\r\n Browser: Chrome(Version 85.0.4183.83 (64-bit))\r\n  Firefox(Version 80.0.1)(64-bit)\r\n  Safari(Version 13.1.1)\r\n \r\n## Steps To Reproduce:\r\n 1. Create a Jurassic Ninja test site\r\n 1. Install and Activate all required plugins.\r\n 1. Go to Settings->General->\"Enable Taxes\" and tick mark the checkbox for \"enable tax rates and calculations\"\r\n 1. Scroll and Click on \"Save Changes\" button.\r\n 1. Go to Settings->Tax->Standers tax rates.\r\n 1. Click on \"Insert Row\" button.\r\n 1. Enter any country code in country code field.\r\n 1. Note the options that are displayed for country code.\r\n 1. Observe that website fails to filter country code dropdown as per the country code entered.\r\n \r\n**Note:**\r\n Country code dropdown is sorted as per the alphabets entered for \"Country Code\" field.\r\n  \r\n## Actual Result:\r\n On Standard Tax rates page, country code dropdown fails to filter as per the country code entered by the user.\r\n \r\n## Expected Result:\r\n On Standard Tax rates page, country code dropdown should be filtered as per the country code entered by the user.\r\n \r\n## Artifacts:\r\n[#27771.zip](https://github.com/woocommerce/woocommerce/files/5277305/27771.zip)\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051453]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x ] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [ x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nAutomated Taxes (calculated by Jetpack) are not showing correctly in Woocommerce Reports. All tax rates are showing as the same name ( ‚ÄúUS-WA-WA TAX-1‚Äù) ‚Äì so there‚Äôs no way to tell which jurisdiction each tax belongs to.\r\n\r\n**Expected behavior**\r\nWhen pulling a report from Woocommerce>Reports>Taxes>Taxes By Code we should see the name of the Tax in the lefthand column labeled \"Tax.\" \r\n\r\n**Actual behavior**\r\nWe are using Jetpack with Woocommerce to automatically calculate the correct sales tax (for our state, Washington) by address. However, when we pull a Woocommerce report for taxes (Woocommerce>Reports>Taxes>Taxes By Code), all but two rates simply shows as ‚ÄúUS-WA-WA TAX-1‚Äù ‚Äì so there‚Äôs no way to tell which jurisdiction each tax belongs to.  All of the other information in the report is correct (rate, number of orders, tax amount, etc.)\r\n\r\nEven more bizarre: There are two rates that are showing by name, but there is no indication why/how they are different from all the other rates.\r\n\r\nI have gone into the Woocommerce>Settings>Tax>Standard Rates and I see all the automatically populated tax rate information. I have changed the ‚ÄúTax Name‚Äù from the generic ‚ÄúWA Tax‚Äù to the name of the city + zip code for each of the rates. However, this doesn't make a change on the reporting end ‚Äì all the tax codes (but two) still show as ‚ÄúUS-WA-WA TAX-1‚Äù. \r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug on my website:\r\n1. Go to Woocommerce>Reports\r\n2. Click on Taxes>Taxes by Code\r\n3. See error\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/71793126/94070732-9175be80-fda7-11ea-832a-ced203f46247.png)\r\n\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x ] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\nThe System Status Report is found in your WordPress admin under **WooCommerce > Status**. \r\nPlease select ‚ÄúGet system report‚Äù, then ‚ÄúCopy for support‚Äù, and then paste it here.\r\n```\r\n`\r\n\n\n###\n\n","completion":" [3943104021,3943425133]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\n\r\n_Detected on:_\r\niOS (Version 14.0). \r\nChrome (Version 85.0.4183.109). \r\nTwentyTwenty (Version 1.5).\r\n\r\nWhen product type \"Variable Product\" is used, touch stops working for thumbnails in product gallery. This prevents toggling between gallery images using touch.\r\n\r\nSometimes toggling works, but this requires interaction with the gallery first.\r\n\r\nSimilar issues has been addressed in 2018:\r\nhttps://github.com/woocommerce/woocommerce/pull/20002\r\n\r\n**Expected behavior**\r\n\r\nThumbnail toggle for product gallery images should work consistently on any device & with all product types.\r\n\r\n- Toggle product gallery images by clicking on thumbnails for Desktop.\r\n\r\n- Toggle product gallery images by touch on thumbnails for Mobile.\r\n\r\n**Actual behavior**\r\n\r\n- Thumbnail toggle for product gallery images work consistently for product type \"Simple Product\" on both mobile & desktop.\r\n\r\n- Thumbnail toggle for product gallery images does not work consistently for product type \"Variable Product\". Works on desktop. Not as expected on mobile.\r\n\r\n**Steps to reproduce the bug**\r\n\r\n1. Create a Variable Product type with variations, see guide: https://docs.woocommerce.com/document/variable-product/ \r\n/* Remember to add price for each variation (if you do not add price for each variation the product gallery toggle will still work using touch) */\r\n2. Set a product image\r\n3. Set a gallery image\r\n4. Use iPhone 7 or later with latest iOS version together with latest release of Chrome or Safari.\r\n5. Find your Variable Product in the shop & load the Single Product page. \r\n6. Scroll down to the product gallery thumbnails. \r\n/* Do not interact with any other page element as this can make the toggling work */\r\n7. Try to toggle between images using touch. \r\n/* Thumbnails are detecting touch but do not toggle the images in the product gallery */\r\n\r\n**Wordpress Test Environment**\r\n\r\nNO ACTIVE PLUGINS. ONLY WOOCOMMERCE. CLEAN WP INSTALL WITH THEME GeneratePress.\r\n\r\nThis show the difference in behavior on product gallery between \"Simple Product\" & \"Variable Product\".\r\nhttps://staging2.immerence.com/product-category/all-posters/\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n<details>\r\n`\r\n\n\n###\n\n","completion":" [1891051455,1891051461]"}
{"prompt":"Because of the use of custom post types and postmeta, WooCommerce has several places that perform double left-joins on the post/postmeta tables in order to perform lookups. Probably the desire was to be efficient by only performing one SQL query. But the query itself, because of the double-left join, is hideously inefficient and worse by several orders of magnitude than an alternative performing an extra query.\r\n\r\nAs an example, every time a new order is placed by a new customer, since there's no `_money_spent` usermeta key/value, so WooCommerce will run this monstrosity in order to help populate it (`WC_Customer_Data_Store::get_total_spent()`): (perhaps that's triggered by one of our extensions, I haven't checked, but it is run for every new customer).\r\n\r\n```\r\nSELECT SUM(meta2.meta_value)\r\n FROM $wpdb->posts as posts\r\n LEFT JOIN {$wpdb->postmeta} AS meta ON posts.ID = meta.post_id\r\n LEFT JOIN {$wpdb->postmeta} AS meta2 ON posts.ID = meta2.post_id\r\n WHERE   meta.meta_key       = '_customer_user'\r\n AND     meta.meta_value     = '\" . esc_sql( $customer->get_id() ) . \"'\r\n AND     posts.post_type     = 'shop_order'\r\n AND     posts.post_status   IN ( 'wc-\" . implode( \"','wc-\", $statuses ) . \"' )\r\n AND     meta2.meta_key      = '_order_total'\r\n```\r\n\r\nThe effect of creating a double-left join post/postmeta is to require MySQL to row-scan a number of rows that on a typical site amounts to a number of rows that is over 80% of the number of rows found in postmeta. That, of course, is an absolute performance-killer on any site with a substantial number of orders. On one site I'm looking at, it's a row scan of over 13,000,000 rows, every time there's a new order - ouch.\r\n\r\nAs a solution, I propose that you split the processing up over two much lower-impact SQL queries, with some processing in between in PHP. First get their orders - which you'd do via `wc_get_orders()` of course, but the resulting SQL will be like:\r\n\r\n`SELECT id FROM wp_posts p, wp_postmeta pm WHERE p.id=pm.post_id AND meta_key='_customer_user' AND meta_value='123456' AND post_status IN ( ... );`\r\n\r\nOn the same site, that performs a row scan of only 1.3 % of rows - only 1/64th of the figure.\r\n\r\nThen, armed with those IDs, grab the `_order_total` meta values with a simple query on the relevant `post_id` - since both `meta_key` and `post_id` are indexed, there's no further row-scanning involved.\r\n\r\nThis is just one example of those double left-joins - there are various others in the code.\n\n###\n\n","completion":" [472334370]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [X] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [X] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen _Percentage Discount_ coupon is set to _Limit usage to X items_ = 1, the discount is applied inconsistently in cases where you have products in the cart with varying quantities. The discount is applied to the product price of the line item with the highest subtotal, rather than the product price of the line item with the highest individual product price. \r\n\r\nThis results in some cases where the discount is applied to a lower-priced product rather than applied to the most expensive product in the cart. \r\n\r\nIn cases where the highest price product is also the highest line item subtotal, the discount is applied to the highest price product.\r\n\r\n**Expected behavior**\r\nI expected _Limit usage to X items_ to result in discounts being applied consistently - either to the highest priced item(s) or the lowest price item(s) - rather than to a single product based on a subtotal that is affected by cart quantity. \r\n\r\n**Actual behavior**\r\n_Limit usage to X items_ would be applied consistently based on product price rather than subtotal price, allowing for consistent discounts regardless of the quantity of products in the cart.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Go to **Marketing > Coupons** \r\n2. Create a Percentage Discount coupon for 10%\r\n3. Set _Limit usage to X items_ to 1\r\n4. Create a cart of >=2 products with different prices - put one of each item in the cart\r\n5. Apply your discount coupon\r\n6. See that the discount coupon is applied to the most expensive product in the cart\r\n7. Increase qty of the cheaper product until the subtotal for that product > the more expensive product\r\n8. Update cart and see that the discount coupon is now applied to the cheaper product x 1\r\n\r\nIt grants a lower total discount, as the individual product price being discounted is lower for the cheaper product in spite of the larger subtotal. \r\n\r\n**Screenshots**\r\n\r\nCoupon setup:\r\n![https://d.pr/i/AvhVGq](https://d.pr/i/AvhVGq+)\r\nFull Image: https://d.pr/i/AvhVGq\r\n\r\n![https://d.pr/i/dB7cLq](https://d.pr/i/dB7cLq+)\r\nFull Image: https://d.pr/i/dB7cLq\r\n\r\nMost expensive product = most expensive subtotal, coupon is applied to the most expensive product:\r\n![https://d.pr/i/nCEksB](https://d.pr/i/nCEksB+)\r\nFull Image: https://d.pr/i/nCEksB\r\n\r\nCheapest product = most expensive subtotal, coupon is applied to the cheapest product:\r\n![https://d.pr/i/N0vMKQ](https://d.pr/i/N0vMKQ+)\r\nFull Image: https://d.pr/i/N0vMKQ\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [X] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [X] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [X] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n\r\n<details>\r\n```\r\n\n\n###\n\n","completion":" [1891051442]"}
{"prompt":"**Is your feature request related to a problem? Please describe.**\r\nUnable to display payment method logo in payment method title which appears in billing address column, order view page and invoice.\r\n\r\n**Describe the solution you'd like**\r\nSince the payment method title is fetched from the DB directly and hence there's no need to escape it.\r\n\r\n**Describe alternatives you've considered**\r\nMoving to simple text like every other payment gateway but this doesn't suit us.\r\n\r\n**Additional context**\r\n![screenshot-localhost-2020 09 18-00_07_23](https://user-images.githubusercontent.com/7141309/93513108-f910b180-f942-11ea-902e-0b694dfe9fdc.png)\r\nThis shows html instead of the logo.\n\n###\n\n","completion":" [1891051458]"}
{"prompt":"When Manage Stock is turned on for a product and Allow Backorders is set to \"Allow, but notify customer\", the product page says \"X in stock (can be backordered)\" or \"In stock (can be backordered)\" whenever a product is in stock. The problem is, store admins might not want product pages to say \"(can be backordered)\" when a product is in stock, because that might seem confusing to customers, who might then wonder if the product is _in stock_, or _on backorder_, because both are mentioned. However, if the admin also wants the product pages to say \"on backorder\" when that same product _is_ out of stock, they have no choice but to set the option Allow Backorders to \"Allow, but notify customer\". Admins should be given more choices than that.\r\n\r\n![MS in stock](https://user-images.githubusercontent.com/35944457/93500702-0f365780-f8da-11ea-9262-b42477dcf1a8.JPG)\r\n\r\n![Capture Archive Page No Backorder Note](https://user-images.githubusercontent.com/35944457/93500524-d26a6080-f8d9-11ea-8225-483cadd1d8dc.JPG)\r\n\r\n![MS In Stock Product](https://user-images.githubusercontent.com/35944457/93500591-ea41e480-f8d9-11ea-83e0-f0163bc787ef.JPG)\r\n\r\nIn addition, it would be nice to have an additional checkbox option to show backordered status on the store archive page, perhaps as a backordered badge similar to the out of stock badge found in the OceanWP theme. This would prevent customers from adding a product to their cart from the archive page, only to find out later it is out of stock.\r\n\r\n![oceanwp theme out of stock badge](https://user-images.githubusercontent.com/35944457/93501052-879d1880-f8da-11ea-9a41-5e608e718172.JPG)\r\n\r\n**Solution**\r\nWhen Manage Stock is turned on, there needs to be an additional option for Allow Backorders. Perhaps \"Do not allow\", \"Allow, and always notify customer\", \"Allow, and notify customer when backordered\", and \"Allow, without notification\".\r\n\r\nAn additional checkbox option could exist on the stock section of the product page, which controls whether an \"Out of Stock\" or \"Backordered\" badge is displayed on the archive page. It could be labeled: \"Display out of stock and backordered badges on store page?\"\n\n###\n\n","completion":" [1891051471]"}
{"prompt":"I am having an issue where products are on backorder, but customers aren't always aware when or after they purchase a backordered product. The main problem is that \"backordered\" isn't being shown in enough places, so that some customers may never even have the chance to notice a product is backordered before and after placing their order.\r\n\r\nWhen a product is set to Manage Stock: No and Stock Status: On Backorder, the customer is only notified the product is on backorder on the product page. If the customer adds the product to their cart from say the main store page (archive page), they will never know the product is on backorder. Even the order confirmation screen and email sent to the customer omit this. Finally, the order notification sent to the admin omits this as well, which isn't as important, but still should be fixed.\r\n\r\n![Capture Backorder Stock Status](https://user-images.githubusercontent.com/35944457/93496809-4c4c1b00-f8d5-11ea-90ee-6381dccc9ade.JPG)\r\n\r\n![Capture Archive Page No Backorder Note](https://user-images.githubusercontent.com/35944457/93496837-55d58300-f8d5-11ea-9749-1ac8b5294712.JPG)\r\n\r\n![Product Page Backorder Note](https://user-images.githubusercontent.com/35944457/93496868-5f5eeb00-f8d5-11ea-9fe3-db511a0f0526.JPG)\r\n\r\n![Cart No Backorder Note](https://user-images.githubusercontent.com/35944457/93496880-65ed6280-f8d5-11ea-934f-a8a93a7c1846.JPG)\r\n\r\n![Checkout No Backorder](https://user-images.githubusercontent.com/35944457/93496898-6b4aad00-f8d5-11ea-8346-c26d7dbc039f.JPG)\r\n\r\n![Order Received No Backorder](https://user-images.githubusercontent.com/35944457/93496909-6dad0700-f8d5-11ea-8fb9-e748b005d3ca.JPG)\r\n\r\nIn contrast, when a product is set to Manage Stock: Yes, Stock Quantity: <= 0, and Allow Backorders: Allow, but notify customers, the same issue exists. However, a backordered notification is then also found on the cart page, and in the order confirmation screen, order confirmation email, and admin order notification email. This is better, but there are still places where mention of the backorder status is missing.\r\n\r\n![MS Show Backorders](https://user-images.githubusercontent.com/35944457/93497770-705c2c00-f8d6-11ea-86b8-4047bb6eeb7f.JPG)\r\n\r\n![Capture Archive Page No Backorder Note](https://user-images.githubusercontent.com/35944457/93496837-55d58300-f8d5-11ea-9749-1ac8b5294712.JPG)\r\n\r\n![Product Page Backorder Note](https://user-images.githubusercontent.com/35944457/93496868-5f5eeb00-f8d5-11ea-9fe3-db511a0f0526.JPG)\r\n\r\n![MS Cart Backordered](https://user-images.githubusercontent.com/35944457/93497741-689c8780-f8d6-11ea-89fd-6597e7c37f39.JPG)\r\n\r\n![MS Checkout No Backordered](https://user-images.githubusercontent.com/35944457/93497745-69cdb480-f8d6-11ea-93ff-b90ec3e128a8.JPG)\r\n\r\n![MS Order Received Backordered](https://user-images.githubusercontent.com/35944457/93497765-6e926880-f8d6-11ea-89ad-6d7c8377722b.JPG)\r\n\r\n**Solution**\r\nWooCommerce really should be showing a backorder stock status notification on at least the product page, the cart page, the checkout page, and all order confirmation locations (user confirmation screen and email, and admin new order notification email), whether Manage Stock Status is turned on or off.\r\n\n\n###\n\n","completion":" [1891051471]"}
{"prompt":"## Bug Description:\r\n\"Add Contact Form\" button is non-functional for \"Product Short Description\".\r\n\r\n## Environment:\r\nWindows 10, Mac Mojave:10.14.6 (18G103)\r\nBrowser: Chrome(Version 85.0.4183.83 (64-bit))\r\n                 Firefox(Version 80.0.1)(64-bit)\r\n                 Safari(Version 13.1.1)\r\n\r\n## Steps To Reproduce:\r\n1. Create a Jurassic Ninja test site\r\n1. Install and Activate WooCommerce, Query Monitor and WooCommerce Beta Tester Plugin.\r\n1. Click on \"Run the Setup Wizard\"\r\n1. Complete the on Boarding process.\r\n1. Select one of the theme e.g.: StoreFront.\r\n1. On WooCommerce Service Page, Select \"Yes Please\"\r\n1. On WooCommerce Dashboard, go to Products.\r\n1. Create a Simple Product and in product edit view click on \"Add Contact Form\" button for \"Product Short Description\"\r\n1. Observe that \"Add Contact Form\" button is non-functional for \"Product Short Description\"\r\n\r\n**Note:**\r\na. When user clicks on \"Add Contact Form\" button for \"Main Product Description\", it adds the contact form under \"Product Short Description\"\r\nb. User is allowed to add multiple contact form by clicking on \"Add Contact Form \" button.\r\n\r\n## Actual Result:\r\n\"Add Contact Form\" button is non-functional for \"Product Short Description\"\r\n\r\n## Expected Result:\r\n\"Add Contact Form\" button should be functional for \"Product Short Description\"\r\n\r\n## Artifacts:\r\n[#27703.zip](https://github.com/woocommerce/woocommerce/files/5240414/27703.zip)\r\n\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"**Is your feature request related to a problem? Please describe.**\r\nOn the my account pageby default it looks like this:\r\n![my-account-default-view](https://user-images.githubusercontent.com/6242098/93463590-401d8900-f8e8-11ea-9e09-38acfa61406f.png)\r\n\r\nYou can login or create a user. When somebody creates a user by default woocommerce informs him about the privacy policy, shares a link so the user knows it. However based on the lastest EU regulations we have more and more sites where we need to go over from just informing to explicit consent. this is not by default possible with woocommerce right now.\r\n\r\n\r\n**Describe the solution you'd like**\r\nWe should automatically force the user to give explicit consent to our privacy policy.\r\nThis could look like my quick example below.\r\n![my-account_new](https://user-images.githubusercontent.com/6242098/93463938-bf12c180-f8e8-11ea-9d8e-15041d259c8f.png)\r\n\r\n\r\n**Describe alternatives you've considered**\r\nCurrently site owners add it manually over a documentation like: https://www.businessbloomer.com/woocommerce-add-privacy-policy-consent-my-account-registration/\r\nHowever this should be handeled by woocommerce in the core plugin in my opinion.\r\n\n\n###\n\n","completion":" [858478645]"}
{"prompt":"## Bug Description:\r\nWhile placing an order from WooCommerce dashboard user is not able to choose any one product from grouped product.\r\n\r\n## Environment:\r\nWindows 10, Mac Mojave:10.14.6 (18G103)\r\nBrowser: Chrome(Version 85.0.4183.83 (64-bit))\r\n                 Firefox(Version 80.0.1)(64-bit)\r\n                 Safari(Version 13.1.1)\r\n\r\n## Steps To Reproduce:\r\n1. Create any test site using Jurassic Ninja.\r\n1. Install and activate all required plugins.\r\n1. Click on \"Run the Setup Wizard\"\r\n1. Complete the onBoarding process.\r\n1. Go to Products->Add New.\r\n1. Create a Grouped product.\r\n1. Link two or more simple products to grouped product.  \r\n1. Go to \"Orders->Add Order\".\r\n1. Click on \"Add Item\" and add the grouped product on edit order page.\r\n1. Observe that user is not able to select any one of the products from Grouped Product.\r\n\r\n**Note:** \r\nOn front end user is able to add anyone product from grouped product. \r\n \r\n## Actual Result:\r\nWhile placing an order from WooCommerce dashboard user is not able to choose any one product from grouped product.\r\n\r\n## Expected Result:\r\nUser is should be able to choose anyone product from grouped product while placing an order from WooCommerce dashboard. \r\n\r\n## Artifacts:\r\n[#27689.zip](https://github.com/woocommerce/woocommerce/files/5233346/27689.zip)\r\n\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"## Bug Description:\r\nOn front-end product details fails to update  when user removes attribute from the existing product.\r\n\r\n## Environment:\r\nWindows 10, Mac Mojave:10.14.6 (18G103)\r\nBrowser: Chrome(Version 85.0.4183.83 (64-bit))\r\n                 Firefox(Version 80.0.1)(64-bit)\r\n                 Safari(Version 13.1.1)\r\n\r\n## Steps To Reproduce:\r\n1. Create any test site using Jurassic Ninja.\r\n1. Install and activate all required plugins.\r\n1. Click on \"Run the Setup Wizard\"\r\n1. Complete the onBoarding process.\r\n1. Go to Products->Add New.\r\n1. Create a new variable product with multiple variations and prices say Product name- \"Shirt\" and variations \"A\",\"B\".\r\n1. Go to Front end and observe that product displays all the variations with prices.\r\n1. Go to dashboard and Edit the Product.\r\n1. Go to Attributes and remove all the attributes.\r\n1. Update the product.\r\n1. Go to Front end or preview the product.\r\n1. Observe that on front-end user is able to see product price and upon clicking Add to cart button error pop up stating \"Please select some product option.... \" is displayed.\r\n\r\n## Actual Result:\r\nOn front-end product details fails to update  when user removes attribute from the existing product.\r\n\r\n## Expected Result:\r\nOn front-end product details should get update when user removes attribute from the existing product.\r\n\r\n## Artifacts:\r\n[#27687.zip](https://github.com/woocommerce/woocommerce/files/5233277/27687.zip)\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051456]"}
{"prompt":"Please provide us with the information requested in this bug report. Without these details, we won't be able to fully evaluate this issue. \r\nBug reports lacking detail, or for any other reason than to report a bug, may be closed without action.\r\n\r\n<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nThe \"Address\" menu item is missing on the My Account menu and My Account Dashboard in Italian.\r\n\r\n**Expected behavior**\r\nThe \"Address\" menu item should be displayed correctly in Italian.\r\n\r\n**Actual behavior**\r\nThe Addresses / Address string translations are misplaced and only one of them has been translated.\r\n\r\n**Screenshots**\r\n\r\n<img width=\"902\" alt=\"Screen Shot 2020-09-11 at 12 18 24\" src=\"https://user-images.githubusercontent.com/16854238/92918591-d6a50280-f42f-11ea-8afd-d13b2b81ea6f.png\">\r\n\r\n<img width=\"1018\" alt=\"Screen Shot 2020-09-11 at 12 33 42\" src=\"https://user-images.githubusercontent.com/16854238/92918658-ec1a2c80-f42f-11ea-9b2c-2f28efe894ba.png\">\r\n\r\n<img width=\"1015\" alt=\"Screen Shot 2020-09-11 at 12 33 49\" src=\"https://user-images.githubusercontent.com/16854238/92918693-f2a8a400-f42f-11ea-947a-e5a84691236c.png\">\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report, we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\n\n\n###\n\n","completion":" [468434635]"}
{"prompt":"Please provide us with the information requested in this bug report. Without these details, we won't be able to fully evaluate this issue. \r\nBug reports lacking detail, or for any other reason than to report a bug, may be closed without action.\r\n\r\n<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nThe `product.create` webhook firing multiple times, during the product in \"draft\" status.\r\n\r\n**Expected behavior**\r\nThe `product.create` webhook firing once per product after the product published.\r\n\r\n**Actual behavior**\r\nProduct saved first as a draft will fire the webhook every time while modified until published.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Create or have a webhook with \"Product Created\" as a topic.\r\n2. Create a product and save as draft --> will fire the webhook.\r\n3. Any subsequent edit, while a product is a draft, --> trigger another webhook delivery.\r\n4. Publish the product, --> will fire the webhook at the last time \r\n\r\nPlease note, after the product published, changing back to draft not triggering webhook delivery anymore. \r\n\r\n**Link**\r\nHere is a log of the multiple webhook deliveries:\r\nhttps://requestbin.com/r/eny462c963jek/1hLyA1hLtF6zveHU2587BBWAtqY\r\n\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n\r\n<details>\r\n\r\n```\r\n\r\n\n\n###\n\n","completion":" [2046308337]"}
{"prompt":"**Is your feature request related to a problem? Please describe.**\r\nIn the cart.js `block` and `unblock` are variables that exist only in the scope of the cart script. \r\nhttps://github.com/woocommerce/woocommerce/blob/master/assets/js/frontend/cart.js#L34-L58\r\n\r\nSo if we want to re-use them or trigger a block/unblock from an external script we have to duplicate them. \r\n\r\n**Describe the solution you'd like**\r\nAttach both to a custom event and trigger that event when needed so the same effect can be called from 3rd party scripts\r\n\r\n**Describe alternatives you've considered**\r\nCopy/pasting the entire code block.\n\n###\n\n","completion":" [1891051436]"}
{"prompt":"## Bug Description:\r\nValidation fails to display for coupon amount field when the percentage discount value is more than 100.\r\n\r\n## Environment:\r\nWindows 10\r\nBrowser: Chrome(Version 85.0.4183.83 (64-bit))\r\n                 Firefox(Version 80.0.1)(64-bit)\r\n                 Safari(Version 13.1.1)\r\n\r\n## Steps to Reproduce:\r\n1. Create any test site using Jurassic Ninja.\r\n1. Install and activate all required plugins.\r\n1. Go to Marketing->Coupons.\r\n1. Add a new coupon.\r\n1. Select discount type to \"Percentage discount\".\r\n1. Now enter a value more than 100 in coupon amount field.\r\n1. Click on Update. \r\n1. Note that coupon amount value gets reset to previous value.                \r\n1. Observe that validation fails to display for coupon amount field.\r\n\r\n## Actual Result:\r\nValidation fails to display for coupon amount field when the percentage discount value is more than 100.\r\n\r\n## Expected Result:\r\nValidation should be display for coupon amount field if the value is more than 100 for percentage discount.  \r\n\r\n## Artifacts:\r\n[#27632.zip](https://github.com/woocommerce/woocommerce/files/5196391/27632.zip)\r\n\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051442]"}
{"prompt":"Hi there!\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x ] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x ] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\n\r\nWhen using WordPress 5.5 and WooCommerce 5.4 or 5.5 only - I will receive shipping flat rate or any other shipping method with 2 positions rounded from my original net price inside placed orders.\r\n\r\nI have used: 12,1951219512 net price with tax to be 23.0000 %\r\n\r\n**Expected behavior**\r\nThe net price for shipping should be the same as put in WooCommerce->Settings->Shipping settings for every method.\r\nSo I expected to get 12,1951219512 net price for shipping in WooCommerce order as well.\r\n\r\n**Actual behavior**\r\nhttps://wpdesk.me/tb/ktDl66cUTM.mp4\r\n\r\nI have tested the net/ gross method of inputting prices/ choosing rounding method of WooCommerce->Settings->Tax screen.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Go to 'WooCommerce->Settings->Shipping:' with \r\n2. Order\r\n3. Edit/ View net price of shipping method inside that order\r\n4. See error (12,20)\r\n\r\n**Screenshots**\r\nhttps://wpdesk.me/tb/oGq7FBM7VO.png (tested both for net/ gross and rounding method) - the same results each time.\r\n12,20 instead of 12,1951219512 that I expected.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x ] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n\r\n<details>\r\n`\r\n\n\n###\n\n","completion":" [1891051458,1891051459]"}
{"prompt":"<!--  Make sure to look through existing issues to see whether your idea is already being discussed. Feel free to contribute to any existing issues. -->\r\n\r\n<!-- Search tip: You can filter issues using our enhancement label https://github.com/woocommerce/woocommerce/issues?q=is%3Aissue+label%3Aenhancement -->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nI am requesting for Indian thousand separator in localised format for WooCommerce.  \r\nIn India currency units are expressed somewhat differently. \r\n\r\nFor example, \r\nIn the USA : $100,000 | In India : ‚Çπ1,00,000\r\nIn the USA $1,000,000 | In India :  ‚Çπ10,00,000\r\nIn the USA $10,000,000 | In India :  ‚Çπ1,00,00,000\r\nand so on.\r\n\r\nAs you can notice, number formatting changes, Initial grouping of digits starts with 3 digits, thereafter grouping is of 2 digits.\r\n\r\n- Woo currently doesn‚Äôt support a proper Indian thousand separator but online stores in India such as Flipkart, Amazon India, Jio Mart, and Snapdeal etc, all use localised thousand separators.\r\n\r\n- Reference: https://en.wikipedia.org/wiki/Indian_numbering_system\r\n\r\n\r\n**Describe the solution you'd like**\r\nI want Indian localised number format available to Indian users, which will make it easier to read numbers/pricing, for users of WooCommerce stores in India.\r\n\r\nsay, iphone pro price in india is ‚Çπ1,06,600 but currently without localisation it show's as ‚Çπ106,600 which is little confusing.\r\n\r\nSo i request, please consider this feature and add Indian localised number format.\r\n\r\n\n\n###\n\n","completion":" [1891051444]"}
{"prompt":"Wordpress 5.5 Woocommerce  4.4.1  Mobile Android: 4.4.2 Chrome: 81.0.4044.138 Cart and Login Problem \r\nI have the same problem on my own site and on woocommerce demo site\r\nPlease watch the video\r\n\r\nhttps://streamable.com/kfsk8b\r\n\r\nhttps://streamable.com/zdozhb\n\n###\n\n","completion":" [1891051436]"}
{"prompt":"Dear,\r\n\r\nSince you added the new admin bar in WooCommerce, there is constantly this circle loading bar that appears on top of the page. This is so annoying, because since then the page loads and then you try to hit on a link in the page but in the meantime the page has scrolled because the circle disappeared as the page got fully loaded.\r\n\r\nGet rid of this crap loading circle, we don't need this because the Browser already has a loading circle\r\nhttps://sgevcen.tinytake.com/tt/NDU4NjMwMF8xNDUzODA4MA\r\n\r\nThanks\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"There is a new CSS rule that improves loading time, it would be interesting to add it in WooCommerce\r\n\r\nHere he explains it and there is a proof:\r\nhttps://web.dev/content-visibility/\n\n###\n\n","completion":" [472334370]"}
{"prompt":"The Shipping Calculator on the Basket page allows users to see if a shipping option is available for their address.\r\n\r\nThis form by default asks for City, State, Country, Postcode\r\n\r\nCity, State and Country have filters available to remove these fields, suggesting it's OK to only require a Postcode. These filters are:\r\n\r\nwoocommerce_shipping_calculator_enable_city\r\nwoocommerce_shipping_calculator_enable_state\r\nwoocommerce_shipping_calculator_enable_country\r\n\r\nRemoving the city and state work well but when removing country the shipping calculator always returns the \"No shipping options were found\" message.\r\n\r\nLooking at the calculate_shipping() function from line 23 of woocommerce/includes/shortcodes/class-wc-shortcode-cart.php file I can see that the set_shipping_location() function is only triggered if a country variable is set.\r\n\r\nTherefore woocommerce_shipping_calculator_enable_country doesn't work but if we use it it breaks the shipping calculator. Perhaps this filter should only work if the store has set only one purchasing country. And a check within the calculate_shipping() function could determine this and automatically set the country variable from the admin settings and the single country that has been set. This would allow single country stores to make use of this \"woocommerce_shipping_calculator_enable_country\" filter correctly and remove the country dropdown, which is appropriate for single country store as the field is unnecessary.\r\n\r\nThank you.\n\n###\n\n","completion":" [1891051440]"}
{"prompt":"Please provide us with the information requested in this bug report. Without these details, we won't be able to fully evaluate this issue. \r\nBug reports lacking detail, or for any other reason than to report a bug, may be closed without action.\r\n\r\n<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x ] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x ] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nwc_get_orders is really slow when searching by customer data (like name & phone), especially when the order_status is included in the arguments. For info, my store currently holds around 100,000orders data.\r\n\r\nexample:\r\n\r\n```\r\n    //CODE 1 (much more faster takes around 15seconds):\r\n    $orders = wc_get_orders( array(\r\n        'type' => 'shop_order', //important\r\n        'limit' => 2,\r\n        'orderby' => 'date',\r\n        'order' => 'DESC',\r\n        'shipping_first_name' => $customer_name,\r\n        'billing_phone' => $customer_phone,\r\n        //'status' => 'completed', \r\n        'date_completed' => '>' . ( time() - $order_range_seconds ),  \r\n    ) );\r\n\r\n    //CODE 2: (timeout):\r\n    $orders = wc_get_orders( array(\r\n        'type' => 'shop_order', //important\r\n        'limit' => 2,\r\n        'orderby' => 'date',\r\n        'order' => 'DESC',\r\n        'shipping_first_name' => $customer_name,\r\n        'billing_phone' => $customer_phone,\r\n        'status' => 'completed', \r\n        'date_completed' => '>' . ( time() - $order_range_seconds ),  \r\n    ) );\r\n```\r\n\r\n**Expected behavior**\r\nCode 2 must be slower but only by small margin when compared to code1. if code 1 took 10seconds, code2 must be took more but only slight margin, maybe 20seconds max. But in reality its gets timeout (60 seconds+)\r\n\r\n**Actual behavior**\r\nCode1 is never success, always timeout\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nJust run the code I mentioned\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x ] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [472334370]"}
{"prompt":"**Is your feature request related to a problem? Please describe.**\r\nWhen using the built-in Product Importer, if all fields are set to ‚ÄúDo not import‚Äù the user is still able to import the products, however, it creates completely blank products (because no fields are imported).\r\n\r\n**Describe the solution you'd like**\r\nRequire at least one field to be mapped. If all fields are set to ‚ÄúDo not import‚Äù then the importer should not let the user proceed.\r\n\r\n**Steps to replicate:**\r\n‚Äì Have a CSV with products to import.\r\n‚Äì Use the core importer (products > import)\r\n‚Äì Leave ‚Äúupdate existing products‚Äù unticked.\r\n‚Äì On the field mappings screen leave all fields as ‚ÄúDo not import‚Äù.\r\n‚Äì Run the import\r\n\n\n###\n\n","completion":" [1891051450]"}
{"prompt":"A have a multisite installation where users are NOT allowed to install plugins or themes, but are able to activate and use WooCommerce (and plugins already installed).\r\n\r\nIs there not any way that I can remove the parts of the onboarding that promotes paid (and free) plugins to be installed, as well as the theme step?\r\n\r\nI don't see any filters or anywhere to modify the steps, it looks like they are all hard coded.  The user also does NOT have `install_themes` or `install_plugins` capability, but it still shows on the onboarding.\r\n\r\nI was able to remove the paid addon promotion using `woocommerce_admin_onboarding_product_types` to unset them.\r\n\r\nI was able to remove all themes except current one from showing using `woocommerce_admin_onboarding_themes` -- even though the user does not have `switch_themes` capability.\r\n\r\nIt also still shows the \"Upload a Theme\" even though user does not have `install_themes` capability\r\n\r\nI would like to still be able to offer the onboarding functionality to users, but it seems this was built with the intention of promoting addon plugins (free and paid) without checking the user's capabilities, and I don't see any way to decouple that without forking and building my own version.\r\n\r\n**_Please tell me i'm wrong and just not seeing something?_**\r\n\r\nSpecifically this appears to be hard coded, and even though those plugins were removed via the `woocommerce_admin_onboarding_plugins_whitelist` and `woocommerce_admin_plugins_whitelist` it still shows on the onboarding.\r\nhttps://github.com/woocommerce/woocommerce-admin/blob/70f45daca16183e0b7d29e69981bf2250eb8d31c/client/profile-wizard/steps/business-details.js#L385-L416\r\n\r\nAs well as the `fashion-apparel-accessories` or `health-beauty` industries being selected to promote the installation of the plugins as well (I was able to get past that by removing those industries using a filter, but not ideal).\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"## Description:\r\n\"Search Options\" and \"Help\" Options disappears from WooCommerce -> Orders after page loading is completed.\r\n\r\n## Environment:\r\nmacOS Mojave:10.14.6 (18G103)\r\nSafari: Version 13.1.1 (14609.2.9.1.3)\r\n\r\n## Steps To Reproduce:\r\n1. Create a Jurassic Ninja test site\r\n1. Install and Activate WooCommerce Plugin.\r\n1. Upload, Install and Activate WooCommerce Admin Plugin.\r\n1. Click on \"Run the Setup Wizard\"\r\n1. Complete the onBoarding process.\r\n1. Note when you reach WooCommerce Dashboard, click on \"Orders\" from side menu option.\r\n1. Observe that \"Search Options\" and \"Help\" Options disappears from WooCommerce>Orders even after refresh.\r\n\r\n## Actual Result:\r\n\"Search Options\" and \"Help\" Options disappears from WooCommerce>Orders even after refresh.\r\n\r\n## Expected Result:\r\n\"Search Options\" and \"Help\" Options should be constant on WooCommerce>Orders.\r\n\r\n## Artifact:\r\n[#27406.zip](https://github.com/woocommerce/woocommerce/files/5097392/27406.zip)\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [X] I can reproduce this bug consistently using the steps above.\r\n\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051439]"}
{"prompt":"\r\n<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [X] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [X] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nThe issue started when looking for differences between the best seller shortcode ( `[products limit=\"3\" columns=\"3\" best_selling=\"true\" ]` ) and the **Best Selling Products** block. After permently deleting orders the `total_sales` within `wc_product_meta_lookup` and `wp_postmeta`.\r\n\r\n**Expected behavior**\r\nWhen orders are deleted, both `total_sales` values be updated to that shortcode and block product tools show the correct information.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Review `total_sales` for a specific post id within `wc_product_meta_lookup` and `wp_postmeta`\r\n2. Permanently delete all orders specific to that product\r\n3. Regenerate product lookup tables ( wc > status > tools )\r\n4. See total sales meta values unchanged\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [X] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [X] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [X] I can reproduce this bug consistently using the steps above.\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x ] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x ] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nContact Form added using Jetpack is not rendering on the page that is set as the WooCommerce Shop page **if there are no products**. Instead, you will see `[contact-form]` shortcode on the page.\r\n\r\n**Expected behavior**\r\nThe contact form should be rendered properly.\r\n\r\n**Actual behavior**\r\nThe `[contact-form]` shortcode is seen on the page.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Go to jurassic.ninja to create a test site.\r\n2. Install and activate Jetpack plugin. You will need to connect Jetpack to your account.\r\n3. Install and setup WooCommerce plugin. **Do not add any products**.\r\n4. Go to the page that is set as the Shop page in `WooCommerce > Settings > Products > Shop page`.\r\n5. Add a contact form block.\r\n\r\n--\r\n\r\n\r\n\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/33957570/90209953-58dae080-de0a-11ea-8400-14336f109832.png)\r\n\r\nReproduced in another test site.\r\n![image](https://user-images.githubusercontent.com/33957570/90210338-54fb8e00-de0b-11ea-8291-72ead4bb79f6.png)\r\n\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [ x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n\r\n<details>\r\n`\r\n\n\n###\n\n","completion":" [1891051454]"}
{"prompt":"Please provide us with the information requested in this bug report. Without these details, we won't be able to fully evaluate this issue. \r\nBug reports lacking detail, or for any other reason than to report a bug, may be closed without action.\r\n\r\n<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [X ] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [X ] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nA clear and concise description of what the bug is. \r\nWhen using the import function to update products, the image attachment is not updated in the media library. This means that most SEO plugins like Yoast SEO are not given the correct image as a social sharing image. On a shop with over 1000 products it is way too much work to go through and update every image so the attachments show.\r\n\r\nPlease can you update the import process to include updates to image attachments:\r\n\r\nThe CSV bulk upload process for products that do not exist:\r\n\r\n1. Upload processed images to the media library\r\n2. include the full url in the CSV file\r\n3. Import the CSV containing the product info and the image\r\n4. The product is now complete\r\n5. The media library attachments have not updated during the import.\r\n6. The images are not included in the XML sitemap either\r\n\r\nThis issue needs to be investigated fully as it is a big problem on large stores where you would never manually add the products.\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\nWhen importing a CSV where the images are already in the media library:\r\n\r\n1. The image attachment should update to reflect the changes made in the shop feature images.\r\n2. This will allow SEO plugins to see which image is associated with each page and update the XML sitemaps accordingly.\r\n\r\n\r\n**Actual behavior**\r\nA clear and concise description of what actually happens. Please be as descriptive as possible; \r\n\r\nWhen importing a CSV where the images are already in the media library:\r\n\r\n1. The image attachment does not update, so any SEO plugins that look at the featured image for use as a social sharing image do not work as expected.\r\n2. The XML sitemaps does not show the feature image in the image count.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n\r\n1. Use any Woocommerce theme\r\n2. Use any wordpress version (ideally latest)\r\n3. Follow the steps below:\r\n\r\n1. Upload processed images to the media library\r\n2. include the full url in the CSV file\r\n3. Import the CSV containing the product info and the image\r\n4. The product is now complete\r\n5. The ERROR: The media library attachments have not updated during the import.\r\n6. The ERROR: The images are not included in the XML sitemap either\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n![screenshot1](https://user-images.githubusercontent.com/54110498/89878150-11a9e100-dbb9-11ea-9e6a-0342a7f12a87.JPG)\r\n\r\n![screenshot2](https://user-images.githubusercontent.com/54110498/89878160-140c3b00-dbb9-11ea-9428-56829b6e2df7.JPG)\r\n\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [X] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [X] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [X] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n\r\n`\r\n\n\n###\n\n","completion":" [1891051450]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nSome extension plugins, like WooCommerce Product Add-Ons use the product category taxonomy for post types that aren't products (in this case that's `global_product_addon`). When this happens, the product count for category on WP Admin pages includes these other post types which aren't products.\r\n\r\nI wasn't sure whether to report this here or in Product Add-Ons repo, but there might be other extension plugins using product category taxonomy and so it would be great to solve this globally.\r\n\r\n**Expected behavior**\r\nProduct count in each category returns products only, even if there are some other post types using the same taxonomy.\r\n\r\n**Actual behavior**\r\nProduct count in each category returns all post types, even if they aren't products.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Create a category with two products;\r\n2. Using the WooCommerce Add-Ons plugin, create a global add-on and assign it to the same category as these two products. This will create a custom post of `global_product_addon` type which will use the same taxonomy as these two products.\r\n3. Open the product list, filter by the category name, and observe the product count displayed on top doesn't match the actual number of products - it also includes the global add-on created via extension plugin.\r\n\r\n**Screenshots**\r\nGlobal add-on settings:\r\n\r\n![Screenshot](https://d.pr/i/AeQcP7+)\r\nScreenshot: https://d.pr/i/AeQcP7\r\n\r\nProduct list when filtered by this category:\r\n\r\n![Screenshot](https://d.pr/i/cyICZp+)\r\nScreenshot: https://d.pr/i/cyICZp\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n\r\n```\r\n\n\n###\n\n","completion":" [1891051438]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x ] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [ x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nZoom and Lightbox functionality is missing from Variation images if no main Product Image is set.\r\n\r\n**Expected behavior**\r\nI expect that when an image for a Variation is displayed I will be able to zoom it or view it in a lightbox, (assuming that those features are enabled on the current site).\r\n\r\n**Actual behavior**\r\nWhen selecting a Variation its image appears as normal, but it does not zoom when hovered, and there is no way to open it in a lightbox.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Create a new Variable product\r\n2. Add at least 2 variations.\r\n3. Add an image to at least 1 variation.\r\n4. Save the product.\r\n5. View the front-end page for the product.\r\n6. Select one of the variations with an image.\r\n7. Observe that the image for the variation appears as expected.\r\n8. Attempt to zoom the image, (hovering it on a desktop), or open it in a lightbox, (usually clicking a magnifying glass - but the magnifying glass isn't present).\r\n\r\n**Screenshots**\r\nIgnoring that the image is not red - this is the correct image for the \"red\" variation in my test store. Note that there is no magnifying glass to zoom, (this is the Storefront theme). Hovering the image with the mouse does nothing either, (it should zoom).\r\n<img width=\"777\" alt=\"Screen Shot 2020-08-06 at 8 33 36 AM\" src=\"https://user-images.githubusercontent.com/104935/89532327-a11d5180-d7bf-11ea-8101-649f1da9ac62.png\">\r\n\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/). - tested with Storefront\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**Other Information:**\r\nI believe this is related to #27222. It seems like without a main Product Image none of the gallery functionality gets initialized, so none of the gallery images are displayed as in #27222, and there is no Zoom/Lightbox for any Variation images that are present, (this issue).\r\n\r\n**WordPress Environment**\r\n<details>\r\n\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051456]"}
{"prompt":"<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [X] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [X] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen only a shipping item is added to a manual order, taxes aren't applied after adding tax and recalculating totals. \r\n\r\n**Expected behavior**\r\nLike product and fee items, it would be nice for shipping to have taxes calculated if shipping is the only line item. \r\n\r\n**Actual behavior**\r\nTaxes are only applied to shipping if a product item is also included in the recalculation.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Add to the tax table a row inclusive to shipping ( https://d.pr/i/qZSrR8 )\r\n2. Add only a shipping line item ( https://d.pr/i/B5FFZS )\r\n3. Include a tax item ( https://d.pr/i/sWfiPA )\r\n4. Recalculate totals to see tax not applied. \r\n\r\n![Screenshot](https://d.pr/i/Exktu7+)\r\nScreenshot link: https://d.pr/i/Exktu7\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051453]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nA Variable Product with images in the Product Gallery, but not in the Product Image, or for individual variations, displays no images on the Single Product page.\r\n\r\nAdditionally, (maybe related - let me know if I should open a second ticket), if a Variation has an image it displays, but there is no magnification or lightbox option.\r\n\r\n**Expected behavior**\r\nImages that users set as part of the Product Gallery  should be displayed in the Product Gallery on the front-end. \r\n\r\nAdditionally, these images, and individual variation images, should have magnification and a lightbox if these features are enabled.\r\n\r\n**Actual behavior**\r\nAfter adding images to the Product Gallery of a Variable product and saving the product, the Product Page for that product shows the placeholder image for the gallery, and no gallery thumbnails appear so there is no way to view any images for the product despite having images in a gallery.\r\n\r\nThis used to be the behaviour. I don't know exactly when it went away, but I think around WC 4.3.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Create a new Variable product\r\n2. Create a couple of variations with no images.\r\n3. Add images to the Product Gallery, (on the right side of the Edit Product screen).\r\n4. Save the product.\r\n5. View the product on the front end. Note that in the gallery there's only a placeholder image, and no way to view any other images.\r\n\r\n**Screenshots**\r\n\r\nThe Product Gallery control for a test product for this image in the wp-admin:\r\n<img width=\"306\" alt=\"Screen Shot 2020-08-04 at 10 08 13 AM\" src=\"https://user-images.githubusercontent.com/104935/89303665-7e156500-d63a-11ea-8618-96fe098b7234.png\">\r\n\r\nThe product page on the front end for the same product, (Storefront theme):\r\n<img width=\"1000\" alt=\"Screen Shot 2020-08-04 at 10 08 05 AM\" src=\"https://user-images.githubusercontent.com/104935/89303673-7fdf2880-d63a-11ea-9cfd-7d732f3672f7.png\">\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051456]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\n\r\nVariable product with variations that have no prices is visible at the front end with the message \"This product is currently out of stock and unavailable.\"\r\n\r\nI tested this in WooCommerce 4.4 beta1 but went all the way to 3.6.5 and confirm that it's been working like this in 3.6.5 as well so this is not new. \r\n\r\n**Expected behavior**\r\n\r\nI am not sure what would be the expected behavior here. Likely we should display variable product with variations that have no prices the same way simple product without a price is being displayed on the Shop page and on the product page itself - only thumbnail of the product basically:\r\n\r\nShop page:\r\n\r\n![no_price1](https://user-images.githubusercontent.com/19143190/89080803-e670f780-d357-11ea-98ec-11aa34fa80a4.jpg)\r\n\r\nProduct page:\r\n\r\n![Screen Shot 2020-07-31 at 5 58 28 PM](https://user-images.githubusercontent.com/19143190/89080817-ec66d880-d357-11ea-9ce3-ea2640397b59.png)\r\n\r\n**Steps to reproduce the bugSteps to reproduce the bug:\r\n\r\n1. Create a variable product.\r\n2. Create attributes ad variations (doesn't matter what type or how many).\r\n3. Don't set prices for any of the variations. \r\n4. Publish the product.\r\n5. Navigate to the Shop page - you'll see the variable product without a price and `Read more` button - I think this is fine:\r\n\r\n![var1](https://user-images.githubusercontent.com/19143190/89081162-c130b900-d358-11ea-83cb-674e83a54e5c.jpg)\r\n\r\n6. Click on `Read more` button - you will be redirected to the product page with the `This product is currently out of stock and unavailable.` message which shouldn't be here IMO:\r\n\r\n![Screen Shot 2020-07-31 at 6 07 38 PM](https://user-images.githubusercontent.com/19143190/89081169-c5f56d00-d358-11ea-88a2-94b9b0b5b9e9.png)\r\n\r\n**Screenshots**\r\n\r\nSee above. \r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051456]"}
{"prompt":"Please provide us with the information requested in this bug report. Without these details, we won't be able to fully evaluate this issue. \r\nBug reports lacking detail, or for any other reason than to report a bug, may be closed without action.\r\n\r\n<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen editing the details of an order in the admin area, if a decimal quantity is entered, the COST of the item changes, but not the quantity.\r\n\r\n**Expected behavior**\r\nWhen editing an item in an order, if I use the increment/decrement buttons, I expect the quantity to increase or decrease accordingly when saved, and it does. However, since I am not prohibited from manually entering a value in the quantity field, I expect the QTY to change. but not the COST.\r\n\r\n**Actual behavior**\r\n When editing an item's quantity in an order, if I enter a decimal value (4.85 instead of 4 in my screenshots below), the COST changes, but not the quantity.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. In the admin panel, open an order\r\n2. Pick an item and note both the COST and QTY values\r\n3. Click the edit icon for the selected item\r\n4. In the quantity input field, enter a decimal value, then save the edit\r\n5. Now note the COST and QTY values; the COST has changed, but the QTY has not\r\n6. If you edit the item again, and enter a DIFFERENT decimal value, even a lower value, the COST increases when the item is saved\r\n7. If you edit the item and either use the buttons to select a value, OR enter an integer value, the COST does not change; however, the incorrect COST set earlier remains\r\n\r\n**Screenshots**\r\nThis screenshot shows 3 rows in an order. The first 2 rows were added by a test customer, and the third row was added by admin: https://prnt.sc/trhvib\r\n\r\nThis screenshot shows me editing the third row and manually entering a quantity (4.85) which includes a decimal point: https://prnt.sc/trhwpb\r\n\r\nThis screenshot shows the result after saving the row edit in the above step: https://prnt.sc/trhyvy\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ x] This bug happens with a default WordPress theme active (Twenty Twenty), or [Storefront](https://woocommerce.com/storefront/).\r\n- [ x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\nThe System Status Report is found in your WordPress admin under **WooCommerce > Status**. \r\nPlease select ‚ÄúGet system report‚Äù, then ‚ÄúCopy for support‚Äù, and then paste it here.\r\n`\r\n\n\n###\n\n","completion":" [1891051458]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen you enable backorders for a product, and someone orders more of the product than is in stock, the email sent to admin says:\r\n\r\n`X units of [product] have been backordered in order [order number].`\r\n\r\nWhere X is the _total_ number of units ordered, not the number of units _backordered_.\r\n\r\nThis line:\r\nhttps://github.com/woocommerce/woocommerce/blob/452e53d8afa4c65cbace926ff63b582193eea03c/includes/class-wc-emails.php#L681\r\n\r\nUses backorder() from https://github.com/woocommerce/woocommerce/blob/452e53d8afa4c65cbace926ff63b582193eea03c/includes/class-wc-emails.php#L659 which pulls the total quantity of the product from the order object instead of quantity minus available stock.\r\n\r\n3186272-zen\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051441,1891051471]"}
{"prompt":"**Describe the bug**\r\n\r\n`Stats overview` widget shows no data after the order had been placed and completed. The data is, however, shown in the Analytics section if I click on `View detailed stats` at the bottom of the `Stats overview` widget. \r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. Complete OBW.\r\n2. Complete all tasks on the task list on the Home screen. \r\n3. Place an order on the site. \r\n\r\nI have an order in `Processing` status at this point but the `Stats overview` widget shows no orders:\r\n\r\n![sale](https://user-images.githubusercontent.com/19143190/88851356-a9bbc980-d1ba-11ea-85b1-65cee16b344b.jpg)\r\n\r\n4. Proceed with fulfilling the order and marking it as `Completed`. \r\n5. Check the `Stats overview` widget - still shows that no orders or sales had been made today:\r\n\r\n![sale2](https://user-images.githubusercontent.com/19143190/88851542-e4bdfd00-d1ba-11ea-9e66-bcd888ef075f.jpg)\r\n\r\n6. Click on `View detailed stats` at the bottom of the `Stats overview` widget - you should be taken to the `Analytics` section and see that the order was recorded there in the `Charts` section but not in the `Performance`: \r\n\r\n![sale3](https://user-images.githubusercontent.com/19143190/88851872-6ca40700-d1bb-11ea-83bb-706deb81efc6.jpg)\r\n\r\n**Expected behavior**\r\n\r\nNot sure if it takes some time for the data to be available but it is odd to me that `Charts` already showing some data but the `Stats overview` widget and the `Performance` section don't. \r\n\r\n**Screenshots**\r\n\r\nSee above. \r\n\r\n**Desktop (please complete the following information)* OS: macOS Catalina 10.15.5\r\n* Browser: Chrome\r\n* Version: 84.0.4147.89 (Official Build) (64-bit)\r\n\r\n**Additional context**\r\n\r\nN/A. \r\n\n\n###\n\n","completion":" [3943104021,3943425133]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [X] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [X] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nTaxes don't calculate for one specific address with curly quotes ( ‚Äô in city name). Changing this to regular quotes solves the problem.\r\n\r\n**Expected behavior**\r\nThe address works if a UTF-8 single quote is used ' \r\n\r\n**Actual behavior**\r\nUsing a stylized quote ‚Äô fails to qualify tax rates on a WordPress installed on IIS server. \r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Install WordPress on an IIS server\r\n2. Set up tax rates to include a wild card for the city ( https://d.pr/i/sQPxLh )\r\n3. Add items to the cart that qualify for taxes and include a stylized quote in the name\r\n4. See taxes fail to load\r\n\r\n```\r\nExample addresses:\r\n\r\nWorking: Box 2861, Ft. Qu'Appelle SK S0G 1S0.\r\nNot working: Box 2861, Ft. Qu‚ÄôAppelle SK S0G 1S0.\r\n\r\n```\r\n\r\n**Screenshots**\r\n\r\n![Screenshot](https://d.pr/i/Zk1aeE+)\r\nScreenshot link: https://d.pr/i/Zk1aeE\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [X] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [X] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n\r\n\r\n**WordPress Environment**\r\n`\r\n\n\n###\n\n","completion":" [1891051440]"}
{"prompt":"<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug. (tested on 2 sites)\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\n\r\nWhen a product variation's tax class is set to \"Same as parent\" in core, the API field `tax_class` returns the current tax class (either the variation's tax class or its parent product's tax class) and the client cannot tell whether it's set to the same as its parent product. The same behavior goes for a variation's shipping class field.\r\n\r\n**Expected behavior**\r\n\r\nA different value like `parent` in the `tax_class`/`shipping_class` field (any value that a slug cannot be set to), an empty value wouldn't work because a product's tax class could be empty when it's set to \"Standard\". Another field in the API for a variation like `tax_class_same_as_parent: Bool` could also be an option.\r\n\r\n**Actual behavior**\r\n\r\n`tax_class` and `shipping_class` in the API return the same value whether the tax class for a variation is set to \"Same as parent\" or the same value as its parent product in core.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. In wp-admin, go to a variable product with at least one variation\r\n2. In the variation form, set the tax class to \"Same as parent\" --> in the API response for the variation (`{{site_url}}/wp-json/wc/v3/products/{{product_id}}/variations/{{product_variation_id}}`), the `tax_class` field returns the same value as the `tax_class` field of the parent product (`{{site_url}}/wp-json/wc/v3/products/{{product_id}}`)\r\n3. In the variation form, set the tax class to the same tax class as its parent product --> in the API response for the variation, the `tax_class` field returns the same value as the `tax_class` field of the parent product just like in the previous step\r\n\r\n(Same steps for a variation's shipping class)\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"**Prerequisites:**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen refunding an order that has items with a 0% tax rate, taxes are not copied over to the refund order.\r\n\r\n**Expected behavior**\r\n0% is not the same as \"no\" tax, and 0% rates should be copied over to the refund order just like other tax rates.\r\n\r\n**Actual behavior**\r\nno 0% rate tax lines are present in the refund order data (`$refund->get_items('tax');`)\r\n![no-zero-tax-refund](https://user-images.githubusercontent.com/3217773/88401252-c8405000-cdc9-11ea-9084-751add0d1580.png)\r\n\r\n\r\n**Steps to reproduce the bug**\r\nSteps to reproduce the bug:\r\n1. Create an order with a product with 0% tax (e.g. 0.00 showing on the line item)\r\n2. Refund the order (on a line-item level, not just setting to refunded)\r\n3. Check the refund order data - tax for the 0% item is not recorded\r\n\r\n**Isolating the problem:**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWC 4.3.1\r\nWP 5.4.3\n\n###\n\n","completion":" [1891051453]"}
{"prompt":"<!--  Make sure to look through existing issues to see whether your idea is already being discussed. Feel free to contribute to any existing issues. -->\r\n\r\n<!-- Search tip: You can filter issues using our enhancement label https://github.com/woocommerce/woocommerce/issues?q=is%3Aissue+label%3Aenhancement -->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nWhen adding a shipping zone, South Sudan only displays the country and not [the states within South Sudan](https://en.wikipedia.org/wiki/States_of_South_Sudan).\r\n\r\n![](https://d.pr/i/MaogA2+)\r\nImage Link: https://d.pr/i/MaogA2\r\n\r\n**Describe the solution you'd like**\r\nAdd the states to the list.\r\n\r\n**Describe alternatives you've considered**\r\nPostcodes can be used, but locating postcodes in South Sudan appears to be a difficult process.\r\n\r\n**Additional context**\r\nRequested in 3155012-zen\r\n\n\n###\n\n","completion":" [1891051459]"}
{"prompt":"**Prerequisites:**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen manually adding a coupon to an order in which there is at least one product that was deleted from the WC Product database, WC crashes/hangs, with the following stack trace:\r\n\r\n> PHP Fatal error:  Uncaught Error: Call to a member function is_type() on bool in \\wp-content\\plugins\\woocommerce\\includes\\class-wc-coupon.php:864\r\nStack trace:\r\n> 1. \\wp-content\\plugins\\woocommerce\\includes\\class-wc-discounts.php(327): WC_Coupon->is_valid_for_product(false, Object(WC_Order_Item_Product))\r\n> 2. \\wp-content\\plugins\\woocommerce\\includes\\class-wc-discounts.php(260): WC_Discounts->get_items_to_apply_coupon(Object(WC_Coupon))\r\n> 3. \\wp-content\\plugins\\woocommerce\\includes\\abstracts\\abstract-wc-order.php(1130): WC_Discounts->apply_coupon(Object(WC_Coupon))\r\n> 4. \\wp-content\\plugins\\woocommerce\\includes\\class-wc-ajax.php(1153): WC_Abstract_Order->apply_coupon('10')\r\n> 5. \\wp-includes\\class-wp-hook.php(287): WC_AJAX::add_coupon_discount('')\r\n> 6. \\wp-includes\\class-wp-hook.php(311): WP_Hook->apply_filters('', Array)\r\n> 7. \\wp-includes\\p in \\wp-content\\plugins\\woocommerce\\includes\\class-wc-coupon.php on line 864\r\n\r\n**Expected behavior**\r\nCoupon should be applied and product check on manual product should be skipped\r\n\r\n**Actual behavior**\r\nCoupon is not applied, WC backend shows infinite spinner\r\n\r\n**Steps to reproduce the bug**\r\nSteps to reproduce the bug:\r\n1. Create a new order (frontend or backend), adding 2 or more products\r\n2. Delete one of the products in the order from the WC products (permanently)\r\n3. Go to the order and click 'Apply coupon'\r\n4. WC hangs\r\n\r\n**Isolating the problem:**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWC 4.3.0\r\nWP 5.4.3\n\n###\n\n","completion":" [1891051442]"}
{"prompt":"It will be great if you can add small button in orders detail (modal and page) for copy Shipping details (name, address...) to clipboard. It will be useful when we need to copy shipping details in external program to print label...\n\n###\n\n","completion":" [1891051458]"}
{"prompt":"## Bug Description:\r\n\"Individual use only\" option present under coupon management is Non-functional while placing order from WooCommerce dashboard.\r\n\r\n## Environment:\r\nWindows 10, MAC Mojave v10.14.6\r\n**Browser**: Chrome(Version 83.0.4103.116) (64-bit)\r\n                    Firefox (Version 78.0.2)(64-bit)\r\n                    Safari(Version 13.1.1)\r\n               \r\n## Steps to Reproduce:\r\n1. Create a site using Jurassic ninja.\r\n1. Install and activate the required plugins.\r\n1. Go to Marketing->Coupons.\r\n1. Add two coupons one with enabling \"Individual use only\" option say Coupon1 and another normal coupon without enabling Individual use only\" option say Coupon2. \r\n1. Go to WooCommerce->Orders.\r\n1. Create a order.\r\n1. Click on Apply coupon button.\r\n1. Apply both the coupons.\r\n1. Observe that both the coupons applied successfully.\r\n\r\n## Actual Result:\r\n\"Individual use only\" option present under coupon management is Non functional. \r\n\r\n## Expected Result:\r\n\"Individual use only\" option present under coupon management should be functional while placing order from WooCommerce dashboard.\r\n\r\n## Artifacts:\r\n[#4815.zip](https://github.com/woocommerce/woocommerce-admin/files/4925914/4815.zip)\r\n\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n<details>\r\n```\r\n\n\n###\n\n","completion":" [1891051442]"}
{"prompt":"## Is your feature request related to a problem? Please describe.\r\n\r\nFor both [woocommerce-ios](https://github.com/woocommerce/woocommerce-ios) and [woocommerce-android](https://github.com/woocommerce/woocommerce-android), we are planning on using the `wc-analytics/leaderboards` to show this UI: \r\n\r\n<img src=\"https://user-images.githubusercontent.com/198826/87459641-dff92680-c5c8-11ea-8b63-35f92b119f04.png\" width=\"320\">\r\n\r\nIt looks like we can use the `wc-analytics/leaderboards` API for that. However, the response looks like this:\r\n\r\n```json\r\n        {\r\n            \"id\": \"products\",\r\n            \"label\": \"Top Products - Items Sold\",\r\n            \"headers\": [\r\n                {\r\n                    \"label\": \"Product\"\r\n                },\r\n                {\r\n                    \"label\": \"Items Sold\"\r\n                },\r\n                {\r\n                    \"label\": \"Net Sales\"\r\n                }\r\n            ],\r\n            \"rows\": [\r\n                [\r\n                    {\r\n                        \"display\": \"<a href='https:\\/\\/brokentoys.mystagingwebsite.com\\/wp-admin\\/admin.php?page=wc-admin&path=\\/analytics\\/products&filter=single_product&products=18'>Cap<\\/a>\",\r\n                        \"value\": \"Cap\"\r\n                    },\r\n                    {\r\n                        \"display\": \"1,000\",\r\n                        \"value\": 1000\r\n                    },\r\n                    {\r\n                        \"display\": \"<span class=\\\"woocommerce-Price-amount amount\\\"><span class=\\\"woocommerce-Price-currencySymbol\\\">&#36;<\\/span>16,000.00<\\/span>\",\r\n                        \"value\": 16000\r\n                    }\r\n                ]\r\n            ]\r\n        }\r\n```\r\n\r\nSome of our concerns with this:\r\n\r\n- Product name is returned as HTML. As much as possible, we'd like to avoid parsing HTML. \r\n- Product ID has to be parsed from the `<a href>`. \r\n- Product image is missing. One of the requirements is showing the image. \r\n\r\n## Describe the solution you'd like\r\n\r\nWe're hoping that the response can be something like this:\r\n\r\n```json\r\n        {\r\n            \"ID\": 68,\r\n            \"name\": \"Aloha\",\r\n            \"total\": 46119707.10000001,\r\n            \"quantity\": 100023,\r\n            \"price\": 12,\r\n            \"image\": \"\",\r\n            \"currency\": \"CAD\"\r\n        },\r\n        {\r\n            \"ID\": 16,\r\n            \"name\": \"Beanie\",\r\n            \"total\": 180036,\r\n            \"quantity\": 10002,\r\n            \"price\": 20,\r\n            \"image\": \"https:\\/\\/brokentoys.mystagingwebsite.com\\/wp-content\\/uploads\\/2020\\/04\\/img_0001.png?w=1024\",\r\n            \"currency\": \"CAD\"\r\n        },\r\n        {\r\n            \"ID\": 18,\r\n            \"name\": \"Cap\",\r\n            \"total\": 16234,\r\n            \"quantity\": 1015,\r\n            \"price\": 10,\r\n            \"image\": \"https:\\/\\/brokentoys.mystagingwebsite.com\\/wp-content\\/uploads\\/2020\\/01\\/cap-2.jpg?w=801\",\r\n            \"currency\": \"CAD\"\r\n        }\r\n```\r\n\r\nThe fields shown here would be enough for us to present the UI. Additional responses are probably needed for variants. \r\n\r\n## Describe alternatives you've considered\r\n\r\nFor now, we're thinking of doing a workaround using the current endpoint. \r\n\r\n1. Fetch `wc-analytics/leaderboards`\r\n2. Parse the product IDs from the `<a href>` HTML tags.\r\n3. Fetch `/wp-json/wc/v3/products` using the `include` argument to fetch the product details. \r\n\r\n## Should this be prioritized? Why?\r\n\r\nIf this feature request is implemented, it would save us one additional API call and avoid HTML parsing which can be brittle.  \r\n\r\n\n\n###\n\n","completion":" [2258932484,3943104021,3943425133]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen WordPress is set with a language other than English, the WooCommerce Setup Wizard is displayed (mostly) in English, even if all the strings are translated and included in the current translation (i.e. Italian, which is 100% translated).\r\nIt seems that all the untranslated strings come from JS files, while the ones that are translated come from PHP files.\r\nI suppose the issue could be similar to https://github.com/woocommerce/woocommerce/issues/25920 as also the WooCommerce Admin interface is rendered with JavaScript.\r\n\r\n**Expected behavior**\r\nThe Setup Wizard should use the same locale of the WordPress website.\r\n\r\n**Actual behavior**\r\n The Setup Wizard is displayed (mostly) in English.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Configure WordPress in a locale other than English in Settings -> General\r\n2. Install and activate WooCommerce\r\n3. Run the setup Wizard\r\n\r\nOr, alternatively, if WooCommerce is already installed,\r\n1. Configure WordPress in a locale other than English in Settings -> General\r\n2. Restart the Setup Wizard from WooCommerce -> Orders -> Help >- Setup Wizard -> Profile Setup Wizard -> Enable\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/2298248/87333129-f8236400-c53c-11ea-8a3c-4bed716d50a9.png)\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n\n\n###\n\n","completion":" [468434635]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [X] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [X] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen using \"Per Class\" calculations in the Flat Rate method (not \"Per Order\"), products of shipping classes that do not have rates entered are able to be purchased without a shipping cost, so long as other products in the cart have rates entered for their class.\r\n\r\nA common use case affected by this is related to stores that have products that are only available if purchased from specific locations. In these situations, Flat Rates are only entered for the Shipping Classes that are available in each zone and unavailable products have the rate fields left blank. This approach currently works as expected when products are purchased individually, but when the cart contains both available and unavailable products, only the rates of the available product are used and purchase is able to be completed, rather than providing the \"No shipping options were found\" message.\r\n\r\n**Expected behavior**\r\nSince rates do not exist for all shipping classes, no rates should be offered.\r\n\r\n**Actual behavior**\r\nIf at least one of the shipping classes in the cart have rate calculated, those costs are used and products of classes that do not have rates are ignored, allowing the purchase to be completed with incorrect shipping cost calculations.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Create 2 Shipping Classes and 2 Shipping Zones (with Flat Rate added to each).\r\n2. Use the \"Per Class\" calculation type and only set rates for 1 class in each zone. My example/screenshots use the \"Austin\" class with rates in the Austin Zone and \"Texas\" class with rates in the Texas Zone.\r\n3. Calculate rates for the products individually, noticing rates are correct if they exist. If they do not exist in the matched zone, no method will be found for the class without rates entered.\r\n4. Add both products to the cart and notice that only the rates that exist in the zone are used.\r\n\r\n**Screenshots**\r\nExample of Austin product being calculated for a zone with rates entered:\r\n![](https://d.pr/i/ZinD8P+)\r\n(Link to screenshot: https://d.pr/i/ZinD8P+)\r\n\r\nExample of Texas product being calculated for a zone without rates entered:\r\n![](https://d.pr/i/Y8iRSY+)\r\n(Link to screenshot: https://d.pr/i/Y8iRSY+)\r\n\r\nExample of both products being purchased at the same time and only the Austin class rates being used:\r\n![](https://d.pr/i/eL0hJm+)\r\n(Link to screenshot: https://d.pr/i/eL0hJm+)\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [X] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [X] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [X] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWordPress version 5.4.2\r\nWooCommerce version 4.2.2\r\nStorefront version 2.5.8\n\n###\n\n","completion":" [1891051459]"}
{"prompt":"Please provide us with the information requested in this bug report. Without these details, we won't be able to fully evaluate this issue. \r\nBug reports lacking detail, or for any other reason than to report a bug, may be closed without action.\r\n\r\n<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [X] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [X] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen using shipping restriction wildcards in combination of a range, the upper limit of the range does not accept wildcard values other than `0`.\r\n\r\n**Expected behavior**\r\nYou should be able to pass any valid character for the wildcard, even if that puts you at the top of the range.\r\n\r\n**Actual behavior**\r\nYou will only match the range if you pass `0` in the position of the wildcard at the top of your range.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Set up a shipping zone with a zip code restriction\r\n2. Set the zip code restriction to be `123*...456*`\r\n3. At checkout enter in `4567`\r\n4. Note that you do not match the shipping zone\r\n5. Enter in the zipcode `4560`\r\n6. Note that you now match the shipping zone\r\n\r\n**Screenshots**\r\n\r\nShipping zone Settings:\r\n\r\n![](https://d.pr/i/FesoaU+)\r\nImage Link: https://d.pr/i/FesoaU\r\n\r\nCheckout page when using a `0` as your wildcard digit\r\n\r\n![](https://d.pr/i/67a1S3+)\r\nImage Link: https://d.pr/i/67a1S3\r\n\r\nCheckout page when using any other character as your wildcard digit\r\n\r\n![](https://d.pr/i/Hgz8ms+)\r\nImage Link: https://d.pr/i/Hgz8ms\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [X] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [X] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [X] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051459]"}
{"prompt":"On a multisite installation with thousands Sites I have enabled WooCocommerce only on main site.\r\n\r\nThe issue is when I try to visit the WooCommerce Status page, it takes forever to load it due to thousands sites/tables in database.\n\n###\n\n","completion":" [472334370]"}
{"prompt":"Please provide us with the information requested in this bug report. Without these details, we won't be able to fully evaluate this issue. \r\nBug reports lacking detail, or for any other reason than to report a bug, may be closed without action.\r\n\r\n<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x ] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [ x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nA clear and concise description of what the bug is. \r\nI have a problem: If I edit imported product with variations and save it, then product status changes to ‚ÄúOut of Stock‚Äù. Even when select product ‚ÄúFeatured‚Äù, it becomes ‚ÄúOut of stock‚Äù.\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\nProduct status \"In stock\"\r\n**Actual behavior**\r\nA clear and concise description of what actually happens. Please be as descriptive as possible; \r\nProduct with variations becomes out of stock after selecting \"Featured\"\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Import products with variation\r\n2. Select product \"Featured\"\r\n3. Product with variations becomes Out of stock\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [ x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\nThe System Status Report is found in your WordPress admin under **WooCommerce > Status**. \r\nPlease select ‚ÄúGet system report‚Äù, then ‚ÄúCopy for support‚Äù, and then paste it here.\r\n```\r\n</details>\r\n\n\n###\n\n","completion":" [1891051456,1891051461]"}
{"prompt":"This is possibly related to https://github.com/woocommerce/woocommerce/issues/24550\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nWhen clicking the \"Add to cart\" button from the shop or category listing, if the product is \"sold individually\" and one is already in the cart, the customer is redirected to the product's single-product page, where the banner notifying them that the product can't be added to the cart then appears.\r\n\r\n(This is true regardless whether or not \"Redirect after adding to cart\" is checked at **WooCommerce > Settings > Products > General**-- which is expected, per https://github.com/woocommerce/woocommerce/issues/22674 )\r\n\r\nIf AJAX Add-to-Cart Buttons are not enabled, the URL redirected to is  `?add-to-cart=[item-ID]`\r\n\r\n**Expected behavior**\r\nI would not expect to be redirected to the single-product page when trying unsuccessfully to add something to the cart; I would expect the banner notifying me of the failure to appear on the page where I clicked \"Add to Cart.\"\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Create a product; mark it as \"Sold Individually.\" Save/Publish it.\r\n2. Add it to the cart\r\n3. Go to your shop listing, or that product's category archive\r\n4. Click \"Add to Cart\" \r\n\r\n\r\n3129647-zen\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ x This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"You can see **Stripe Fee** :\r\n![Screenshot from 2020-07-09 11-58-32](https://user-images.githubusercontent.com/736104/87026112-903ae980-c1db-11ea-85e9-159a67aa7942.png)\r\n\r\nhttps://github.com/woocommerce/woocommerce-gateway-stripe/blob/f597353e4a0caf7fd426e53a7f41262ad5ab3cb5/includes/class-wc-gateway-stripe.php#L705\r\n\r\nit would be great if we have the same for Paypal : \r\nI can see the fee is stored in \"PayPal Transaction Fee\" custom field.\n\n###\n\n","completion":" [1891051458]"}
{"prompt":"Please provide us with the information requested in this bug report. Without these details, we won't be able to fully evaluate this issue. \r\nBug reports lacking detail, or for any other reason than to report a bug, may be closed without action.\r\n\r\n<!-- This template is for confirmed bugs only. If you have a support request or custom code related question please see our docs or use our forums, helpdesk, or Slack Community! https://github.com/woocommerce/woocommerce/issues/new?assignees=&labels=&template=3-Support.md&title= -->\r\n\r\n<!-- Make sure to look through the existing issues to see whether your bug has already been submitted. Feel free to contribute to any existing issues. -->\r\n<!-- Search tip: You can filter our issues using our component labels https://github.com/woocommerce/woocommerce/labels?q=component -->\r\n<!-- Search tip: Make use of GitHub's search syntax to refine your search https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests -->\r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [ ] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [ ] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nA clear and concise description of what the bug is. \r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Actual behavior**\r\nA clear and concise description of what actually happens. Please be as descriptive as possible; \r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Go to '...'\r\n2. Click on '....'\r\n3. Scroll down to '....'\r\n4. See error\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n<!-- Please try testing your site for theme and plugins conflict. To do that deactivate all plugins except for WooCommerce and switch to a default WordPress theme or [Storefront](https://en-gb.wordpress.org/themes/storefront/). Then test again. If the issue is resolved with the default theme and all plugins deactivated, it means that one of your plugins or a theme is causing the issue. You will then need to enable it one by one and test every time you do that in order to figure out which plugin is causing the issue. -->\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [ ] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nWe use the [WooCommerce System Status Report](https://docs.woocommerce.com/document/understanding-the-woocommerce-system-status-report/) to help us evaluate the issue. \r\nWithout this report we won't be able to fully evaluate this issue.\r\n<details>\r\n```\r\nThe System Status Report is found in your WordPress admin under **WooCommerce > Status**. \r\nPlease select ‚ÄúGet system report‚Äù, then ‚ÄúCopy for support‚Äù, and then paste it here.\r\n```\r\n</details>\r\n\n\n###\n\n","completion":" [1891051459]"}
{"prompt":"When I look at ‚ÄòStock‚Äô at top right of the admin panel in WooCommerce/Dashboard ‚Äì I see 25 low-stock items. But I have more items that and they are not shown and I don‚Äôt see them there. There should be a way to control / increase the total number items displayed there.\r\n\r\n\r\n\n\n###\n\n","completion":" [3943104021,3943426544]"}
{"prompt":"Hi. \r\n\r\n**Prerequisites (mark completed items with an [x]):**\r\n- [ x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [ x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\n\r\nDownloadable files that are linked to an external source, such as Google drive does not download correctly post-purchase. \r\n\r\nThe file in question is here: https://drive.google.com/uc?export=download&id=1q4y4ZDZAhX1chmJRoPpF3Ag12waPZtG2 and can be downloaded correctly, but as soon as this is added to the file URL here: \r\n\r\n<img width=\"830\" alt=\"Screenshot 2020-06-26 at 09 38 46\" src=\"https://user-images.githubusercontent.com/6198774/85832728-e433e000-b790-11ea-9613-e4d8ca395fcc.png\">\r\n\r\nIt then downloads a file that look like this: \r\n\r\n<img width=\"642\" alt=\"Screenshot 2020-06-26 at 09 39 58\" src=\"https://user-images.githubusercontent.com/6198774/85832808-07f72600-b791-11ea-98c7-589fceb446d1.png\">\r\n\r\n**Expected behavior**\r\n\r\nI would expect the same .pdf file to be downloaded correctly. \r\n\r\n**Actual behavior**\r\n\r\nThe file is download in a weird format as seen above. \r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\n\r\nSteps to reproduce the bug:\r\n\r\n1. Create a downloadable product and make it free\r\n2. Add a file URL to an external source (can use the link above)\r\n3. Check out with this product\r\n4. Download the file from the `order-received` page. \r\n\r\n**Screenshots**\r\n\r\nSee above.\r\n\r\n**Isolating the problem (mark completed items with an [x])- [x ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x ] I can reproduce this bug consistently using the steps above.\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"Submitted via WooCommerce Support:\r\n\r\nSteps to reproduce:\r\nGo to Add Order Manually\r\nAdd Item\r\nAdd Shipping\r\n\r\nWhat you get then is a shipping rate of 0.00 and what is described to me by my sighted assistant as a ‚ÄúPencil‚Äù to the right of it. You have to click the pencil to edit the shipping details, such as amount and shipping type.\r\n\r\nThere is no way to click that pencil via the keyboard. Pressing enter on 0.00 yields nothing and I can‚Äôt edit it without assistance.\n\n###\n\n","completion":" [702347761]"}
{"prompt":"**Prerequisites (mark completed items with an [x]):**\r\n- [x] I have have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n**Describe the bug**\r\nI discovered this bug from a support chat, which is 21857029-hc.\r\n\r\nIn the shipping options, there is a checkbox labeled \"Enable the shipping calculator on the cart page.\" When checked, it allows the customer to enter a shipping address, and the site will calculate shipping based on that address:\r\n![image](https://user-images.githubusercontent.com/30607075/85318009-e80bed80-b484-11ea-84a3-633df9cf6eba.png)\r\n\r\n\r\nWhen unchecked, though, it still shows the shipping calculation, it just prevents you from editing what the address is: \r\n![image](https://user-images.githubusercontent.com/30607075/85317842-b09d4100-b484-11ea-95b2-18b26f676009.png)\r\n\r\n\r\n**Expected behavior**\r\nWhen that setting is unchecked, the shipping calculation shouldn't show up on the cart page at all.\r\n\r\n**Actual behavior**\r\nThe shipping calculation does show up.\r\n\r\n**Steps to reproduce the bug (We need to be able to reproduce the bug in order to fix it.)**\r\nSteps to reproduce the bug:\r\n1. Make sure the \"Enable shipping calculator on the cart page\" option is checked.\r\n1. Add a product to the cart.\r\n1. Go to the cart page. Note that the shipping calculation is present and the address can be changed.\r\n1. Turn off that setting.\r\n1. Go back to the cart page. Note that the shipping calculation is still present, with the only difference being that the address now cannot be changed.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n<details>\r\nI used the troubleshooting mode of the Health Check and Troubleshooting plugin. Only WooCommerce was enabled for plugins, and Twenty Twenty was the theme.\r\n\r\n```\r\n\r\n\n\n###\n\n","completion":" [1891051459,33006876]"}
{"prompt":"Hi\r\n\r\nI installed a clean website with the storefront theme, woocommerce 4.2 and imported the demo content.\r\n\r\nWhen I edit the product called /shop/hoodie and change the Logo label from 'Logo' to 'With Logo'  \r\n\r\nThe product when selecting the blue  hoodie with logo Yes or No stops changing the image.  Tested with the storefront theme Woocommerce Offers for free.\r\n\r\n![afbeelding](https://user-images.githubusercontent.com/6078370/85266426-20ef9680-b474-11ea-8a7c-214e3eb5475a.png)\r\n\r\n![afbeelding](https://user-images.githubusercontent.com/6078370/85266524-3f559200-b474-11ea-9c65-afdf14bfbb46.png)\r\n\r\nif I change the Label name back to 'Logo' it starts working again.\r\n\r\n![afbeelding](https://user-images.githubusercontent.com/6078370/85266599-5dbb8d80-b474-11ea-8a5f-4aa6492d443c.png)\r\n\r\n\r\nApparently one can not change the label of a attribute after the product has been created as then issues occur in the front of the website while selecting the attributes.\r\n\r\nPlease advice and or fix.\r\n\n\n###\n\n","completion":" [1891051456,1891051461]"}
{"prompt":"**Describe the bug**\r\nWhen you go to **WooCommerce > Settings > Advanced** and attempt to change the **Screen Options** `Number of items per page` value, it reverts back to 10 after saving.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to WooCommerce > Settings > Advanced > REST API\r\n2. Click on `Screen Options`\r\n3. Change the number in **Pagination** \"Number of items per page:\"\r\n4. Save and see that it reverts back to the default of 10\r\n\r\n**Screenshots**\r\nGIF of it in action: https://d.pr/i/vsu2Zo\r\n\r\n**Expected behavior**\r\nNumber of items per change would be able to be customized and saved.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x ] I can reproduce this bug consistently using the steps above.\r\n\n\n###\n\n","completion":" [1891051439]"}
{"prompt":"**Describe the issue**\r\n\r\nCertain actions may require elevated user capabilities, such as clearance to install plugins (\"Install now\"). Currently, Store Managers can attempt to perform these actions, but they will fail -- usually silently. Jetpack and WC Services appear to handle failures due to user capability limitations by adding yet another note.\r\n\r\nI'd suggest filtering out actions that can't be performed by the current user -- for example, in the case of WooCommerce Payments, Store Managers should only see the \"Learn More\" button. This can be done by selectively leaving out specific action data when a request is made in `view` context (which is probably always).\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. Make the WooCommerce Payments note show up.\r\n2. Log in as a Store Manager.\r\n3. Notice that \"Install Now\" is visible. Click it!\r\n4. The action silently fails, and until recently performing the (failed) action also hides the note.\r\n\r\n**Suggested behavior**\r\n\r\nIdeally, \"Install Now\" should be visible only to users who can install plugins.\r\n\r\n**Possible solution**\r\n\r\nDifferent note classes could hook into `woocommerce_rest_prepare_note` and filter their own actions in `view` context. See https://github.com/woocommerce/woocommerce-admin/blob/213d7aa9209da75d993896f2223cd5121389546a/src/API/Notes.php#L433\r\n\r\nThis is how we'll be handling this in Product Bundles, which is about to start utilizing the Inbox. Happy to submit a PR if you agree with the approach.\n\n###\n\n","completion":" [3943104021,3943424887]"}
{"prompt":"**Describe the bug**\r\n\r\nVariations are assigned a shipping class and shows the count when viewing it in the shipping class list, but clicking the product count does not show the listed products\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create a variable product and a shipping class\r\n2. Assign a variation the shipping class (not the parent shipping class)\r\n3. Go to wp-admin/admin.php?page=wc-settings&tab=shipping&section=classes and notice that product count shows, but when clicking it, no product is listed\r\n\r\n\r\n**Screenshots**\r\n\r\n![](https://d.pr/i/6nW6k9+)\r\nLink to screenshot: https://d.pr/i/6nW6k9\r\n\r\n\r\n![](https://d.pr/i/Pxx8nI+)\r\nLink to screenshot: https://d.pr/i/Pxx8nI\r\n\r\nURL: wp-admin/edit.php?post_type=product&product_shipping_class=large\r\n![](https://d.pr/i/rDmmVx+)\r\nLink to screenshot: https://d.pr/i/rDmmVx\r\n\r\n\r\n**Expected behavior**\r\n\r\nThe product will be listed for that variation.\r\n\r\nIf you add shipping class to parent: \r\n\r\n![](https://d.pr/i/1ok702+)\r\nLink to screenshot: https://d.pr/i/1ok702\r\n\r\nBoth get counted:\r\n\r\n![](https://d.pr/i/cmnzn1+)\r\nLink to screenshot: https://d.pr/i/cmnzn1\r\n\r\nBut can only view the product listed under the parent shipping class (in my case, `medium`):\r\n\r\n![](https://d.pr/i/gavSwD+)\r\nLink to screenshot: https://d.pr/i/gavSwD\r\n\r\n\r\n\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n<details>\r\n`\r\n\n\n###\n\n","completion":" [1891051456,1891051459]"}
{"prompt":"**Describe the bug**\r\n`toggle-row` buttons on product admin list on mobile are displayed on the previous product. Because of this, when I try to expand some product details, I end up expanding the product below it.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to Products > All Products on a mobile phone, or switch to mobile view in Chrome;\r\n2. Click the arrow on the right of any product.\r\n3. Observe the next product gets expanded instead.\r\n\r\n**Screenshots**\r\nI click to expand the top product:\r\n\r\n![Screenshot](https://d.pr/i/1J7NYt+)\r\nScreenshot: https://d.pr/i/1J7NYt\r\n\r\nAnd get this one expanded instead:\r\n\r\n![Screenshot](https://d.pr/i/2CHcyM+)\r\nScreenshot: https://d.pr/i/2CHcyM\r\n\r\n**Expected behavior**\r\n`toggle-row` is displayed within its own respective row, so that it's easy to understand how to display more details about the product.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051455,1891051461]"}
{"prompt":"**Describe the bug**\r\n\r\nWhen the customer selects to pay for the order using PayPal Standard, they get redirected to the PayPal login page. At this point, the customer can cancel and return to the site. They get back to the Cart page automatically. Everything seems fine but if the page is refreshed, the customer sees an error \"Your order can no longer be cancelled. Please contact us if you need assistance.\". \r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. Set up PayPal Standard and enable it as a payment method;\r\n2. Create a product and try to purchase it on the site using PayPal Standard:\r\n\r\n![pp1](https://user-images.githubusercontent.com/19143190/84290909-5ca06d00-ab12-11ea-935d-4240f298999f.jpg)\r\n\r\n3. On the PayPal login page, cancel to return back to the site:\r\n\r\n![pp2](https://user-images.githubusercontent.com/19143190/84290948-6aee8900-ab12-11ea-83ec-282f5ce18ed9.jpg)\r\n\r\n4. You should be redirected back to the site to the Cart page and see the message that order was canceled which is ok and expected:\r\n\r\n![pp3](https://user-images.githubusercontent.com/19143190/84291110-a38e6280-ab12-11ea-864c-c293f2f491f6.jpg)\r\n\r\n5. Refresh the Cart page and you'd see an error message that says \"Your order can no longer be cancelled. Please contact us if you need assistance.\" which is misleading, confusing and shouldn't be there:\r\n\r\n![pp4](https://user-images.githubusercontent.com/19143190/84291216-cae52f80-ab12-11ea-8c94-0ba115b0e815.jpg)\r\n\r\n**Screenshots**\r\n\r\nSee above. \r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051443]"}
{"prompt":"**Is your feature request related to a problem? Please describe.**\r\n\r\nThe support emails I receive include the system status. But I'm finding it challenging to parse a ‚úî out to determine (For example) if the site is connected to WooCommerce.com\r\n\r\n**Describe the solution you'd like**\r\nMarks should include text as well, ie : Yes ‚úî and No ‚ùå \r\n\n\n###\n\n","completion":" [1891051452]"}
{"prompt":"It is possible that this is an extension of [issue #25082](https://github.com/woocommerce/woocommerce/issues/25082) but it is different from that issue in that no validation is taking place rather than an incorrect validation. \r\n\r\n**Describe the bug**\r\nIt appears that there is no validation of coupons restricted to a specific customer email when that coupon is applied directly in 'Add New Order' in `wp-admin`.\r\n\r\nThis same behaviour is seen in the `Point of Sale POS for WooCommerce` plugin which is using the API to communicate.\r\n\r\nHowever, the validation **is** applied correctly in the webshop, so the bug does not exist from the front end, just in the admin area and the API.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create a coupon which is restricted with `Allowed Emails` setting to a specific customer.\r\n2. Click on 'WooCommerce'->'Orders'->'Add New'.\r\n3. Select a different customer from that used in 1, or leave no customer selected on the order (guest order).\r\n4. Add items to the order.\r\n5. Add the coupon created in step 1.\r\n6. Save the order.\r\n\r\n**Expected behavior**\r\nIf the order is for a guest or for a customer who is not authorised to use the coupon I would expect to see an error creating the order and/or the coupon to be removed.  In the same way there is an error when trying to add an expired coupon.\r\n\r\n**Actual behavior**\r\nThe order is created successfully, the coupon is added successfully (even though it is not valid on that order) and the associated discount is applied.\r\nThe same behavior is also witnessed in the API.  A coupon restricted to a specific email may be applied successfully to any order for any customer, no error is generated.\r\n\r\n**Bug**\r\nIt appears that there is no validation of coupons restricted to a specific customer when that coupon is applied directly in 'Add New Order' in `wp-admin` or via the API.  The validation **is** applied correctly in the webshop.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [X ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [X ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [ X] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n<details>\r\n```\r\n\n\n###\n\n","completion":" [1891051442]"}
{"prompt":"**Environment:**\r\nWindows 10\r\nMac Mojave v10.14.6\r\n\r\n**Steps to Reproduce:**\r\n1. Create a site using Ninja tool.\r\n2. Install all the plugins.\r\n3. Tap on \"Run the Setup wizard\".\r\n4. Complete all the introductory tabs i.e., Store Details, Industry,  Product types, Business details and Theme.\r\n5. Go to dashboard.\r\n6. Import a sample_products.csv file.\r\n7. After completion of import it shows 25 products imported successfully.\r\n8. Now go to All Products.\r\n9. Observe that only 18 products are displayed\r\n\r\n**Actual Result:**\r\nOnly 18 products are available in product list instead of 25 when imported from sample csv file.\r\n\r\n**Expected Result:**\r\nAll the imported products should be displayed on \"All Product\".\r\n\r\n[#26631.zip](https://github.com/woocommerce/woocommerce/files/4696256/26631.zip)\r\n\r\n\r\n\r\n\n\n###\n\n","completion":" [1891051450]"}
{"prompt":"**Describe the bug**\r\nWooCommerce's custom twentytwenty styling is overwriting the top padding on a regular single blog post page. \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Use the latest(1.3) Twenty Twenty theme\r\n2. Create a post with some text\r\n3. View the blog post, the spacing is missing between the header(or featured image) and the post content\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/43415/82708328-45dac900-9c7e-11ea-8322-6da1ef34472a.png)\r\n\r\n**Expected behavior**\r\nThe padding should be there for regular blog posts\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n<details>\r\n```\r\n\n\n###\n\n","completion":" [33006876]"}
{"prompt":"In https://github.com/woocommerce/woocommerce-admin/pull/4145 the check for whether wcpay is configured or not was updated to check if a Stripe connection has been established.\r\n\r\nThis issue will involve adding a note to the task if the payment has been configured, but still requires further setup (pending account or other error) using the `needs_setup()` method.\r\n\r\n\r\n![](https://user-images.githubusercontent.com/4500952/82101205-bf901700-96c0-11ea-94ee-2e0f8c7d6e2c.png)\r\n\n\n###\n\n","completion":" [3943104021,3943424887,3943425903]"}
{"prompt":"**Describe the bug**\r\nIt seems that the presence of the `subtotal` and `total` keys in the `$package` object is busting the cache prematurely. We should probably be more explicit in how we decide what package elements invalidate the cache.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Add a snippet like: \r\n```\r\nadd_filter( \r\n\t'woocommerce_package_rates', \r\n\tfunction ( $rates ) {\r\n\t\twc_get_logger()->info( 'Rates Filtered' );\r\n\t\treturn $rates;\r\n\t}\r\n);\r\n```\r\n2. Add a `Local Pickup` and `Flat Rate` method to a zone you will test against.\r\n3. Add some item to the cart and calculate rates for an address that matches both zones.\r\n4. Switch back and forth between the `Local Pickup` and `Flat Rate` methods, notice that in the log the \"Rates Filtered\" message is recorded multiple times, despite the available rates having not actually changed.\r\n**You may need taxes present in the zone, as it seems to be the cause**\r\n\r\n**Expected behavior**\r\nThe filter should only be called a single time unless the address, cart contents, or available shipping methods are changed.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\n\n###\n\n","completion":" [1891051459]"}
{"prompt":"**Is your feature request related to a problem? Please describe.**\r\n\r\nWe'd like to promote extensions like Stripe, WCPay as they become available in new countries. Marketplace suggestions cannot presently be filtered by country.\r\n\r\n**Describe the solution you'd like**\r\n\r\nA means to tag suggestions in such a way that they only appear for certain countries.\r\n\r\n**Describe alternatives you've considered**\r\n\r\n\r\n**Additional context**\r\n\r\ncc @bmccotter @thenbrent \n\n###\n\n","completion":" [1891051449]"}
{"prompt":"**Environment:**\r\nMAC Mojave v10.14.6: Safari(v13.0.5)\r\n\r\n**Steps to Reproduce:**\r\n1. Create a site using Ninja tool.\r\n2. Install all the plugins.\r\n3. Tap on \"Run the Setup wizard\".\r\n4. Complete all the introductory tabs i.e., Store details, Industry ,Product types, Business details and Theme.\r\n4. Place an order using the site.\r\n5. Go to dashboard and change order status to \"Refund\".\r\n6. Now go to Payments.\r\n7. Click on Transactions option.\r\n8. Observe that Refunded transactions fails to appear\r\n\r\n**Actual Result:**\r\nRefunded transactions fails to appear in Payments -> Transaction tab.\r\n\r\n**Expected Result:**\r\nRefunded transactions should appear on the  Payments -> Transaction tab\r\n\r\n\r\n\r\n[#26563.zip](https://github.com/woocommerce/woocommerce/files/4657889/26563.zip)\r\n\n\n###\n\n","completion":" [1891051445]"}
{"prompt":"**Describe the bug**\r\n\r\nWhen editing a product's variations, and pressing 'save changes', all data for all variations is sent to the server. This imposes a practical limit when there are many variants. The limit is easily reached when many custom fields have been added via the hook woocommerce_product_after_variable_attributes. We have encountered this bug after adding many fields using woocommerce_product_after_variable_attributes. We hit the submission limit with only 11 variations.\r\n\r\nThis limitation is caused by the admin front-end to edit variations. The interface's accordion menu situates all fields for all variations in a single form element. So if you edit one field of one variation, all fields for all variations are submitted, this is very inefficient. A possible solution is to change the accordion interface for editing variations with an interface that edits/submits only one variation at a time. This would remove any limit on the number of variations, and would significantly raise the limit on extensions possible using woocommerce_product_after_variable_attributes.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Add many custom fields using woocommerce_product_after_variable_attributes hook\r\n2. Add some variations\r\n3. Edit product\r\n4. Click 'variations'\r\n5. Click 'Save Changes' button\r\n(times out during submission)\r\n\r\n**Screenshots**\r\nN/A\r\n\r\n**Expected behavior**\r\nVariation data is saved\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\nWe have verified this bug by creating a functioning work-around. We created a stand-alone variant editor outside of wordpress/woocommerce that displays a form to edit one product variation at a time. We generate the form after piecing together code lifted from the woocommerce admin source, calling our hook to add the custom fields to the form, and use WC_Meta_Box_Product_Data::save_variations on cgi-post by passing only a single variation.\r\n\r\n**WordPress Environment**\r\nWordpress 5.4.1\r\nWoocommerce 4.0.1\r\n\r\n</details>\r\n\n\n###\n\n","completion":" [472334370]"}
{"prompt":"**Describe the bug**\r\nWhen the shipping cost = $0, the shipping rate is hidden.\r\n\r\nThis is basically fine and very avoidable if you are only using the core WooCommerce product without shipping plugins, because you could just rename the shipping method label as 'Free shipping' or '10-day delivery (Free)' or whatever you want.\r\nBut with certain shipping plugins where you are unable to easily rename the shipping method label, you can get some unexpected and confusing UI.\r\n\r\nFor example, when using the Distance Rate plugin, this is what the customer in the cart will see:\r\n\r\n![image (1)](https://user-images.githubusercontent.com/65582817/82307235-a48c1280-99f2-11ea-807f-5bdbf6a43067.png)\r\n\r\n**Expected behavior**\r\nI would expect this instead:\r\n\r\n![Screenshot 2020-05-19 at 5 24 05 PM](https://user-images.githubusercontent.com/65582817/82309318-912e7680-99f5-11ea-836f-aa0a2668c5a6.png)\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to Settings > Shipping > Shipping zones\r\n2. Click on 'Add shipping method' > 'Flat rate'\r\n3. Edit the Flat rate to have $0\r\n4. Go to your cart and see that the $0 does not appear.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n\r\n\r\n**Additional notes:**\r\nI brought this up as a potential area of improvement for the Distance Rate plugin, rather than for WooCommerce core. But @mikkamp kindly chimed in to point out that this would be a better fix directly in core WooCommerce, rather than having every shipping extension override it, which I would agree makes sense. Slack thread is here: p1589862151375500-slack-extendables-support\r\n\n\n###\n\n","completion":" [1891051459]"}
{"prompt":"I have this hook:\r\n\r\n```\r\nadd_action( 'woocommerce_new_order', 'woocommerce_new_order_add_bacs_unique_code',  10, 1  );\r\nfunction woocommerce_new_order_add_bacs_unique_code( $order_id ) {\r\n\r\n    $order = wc_get_order( $order_id );\r\n    $order_id = $order->get_id();\r\n    $payment_method = $order->get_payment_method();\r\n\r\n    //add 'unique code' fee only if its 'bank transfer'\r\n    if($payment_method == 'bacs'){\r\n\r\n        //generate unique_code (get last 3 digit from order id)\r\n        $unique_code_name = 'Bacs Unique Code';\r\n        $unique_code_amount = substr( (string)$order_id, -3 );\r\n\r\n        $new_fee            = new stdClass();\r\n        $new_fee->name      = esc_attr( $unique_code_name );\r\n        $new_fee->amount    = (float) esc_attr( $unique_code_amount );\r\n        $new_fee->tax_class = '';\r\n        $new_fee->taxable   = false;\r\n\r\n        $order->add_fee( $new_fee );\r\n\r\n        $order->calculate_totals();\r\n        $order->save();\r\n\r\n    }\r\n    \r\n}\r\n```\r\n\r\nWhen order created via frontend and backend, its working properly. \r\n\r\nBut when order is created via REST API. The order-total is not correct. and get_shipping_total() become 0\n\n###\n\n","completion":" [1891051458]"}
{"prompt":"This is a Feature Request.\r\n\r\nWe have big problems building a shop with many standard category's, and custom taxonomy.\r\n\r\nThe BROWSER takes too long to display a product in the back-end (admin side). Everything works well front-end.\r\nNo bugs, the only problem is BROWSER speed. Servers responds fast, everything OK server side, the problem is that the BROWSER needs several minutes to display the product page, in admin side. High-end PC needs 4 minutes to display a product with 30.000 taxonomy's, and Medium/Low-end PC don't even load it.\r\n\r\nMy request is simple: there is no need to display ALL taxonomy's from start, just display 20 items from category's and each custom taxonomy, and put a button to Load More, or Load All items. It doesn't matter if  you query all the taxonomy's at once (like now), but don't display them all at once, because browser simply stops responding.\r\n\r\nI said 20 items but it could be any number up to a total of 200 category's. My testings reveal that a Medium to Low end PC starts to fail loading after 200 items (blank page, strange error codes). High-end PC displays instantly up to 500 items.\r\n\r\nThere is no need to display all category's and custom taxonomy's from the beginning.\r\n\r\nWe are building a vehicle auto shop with more than 200 million products, 500 standard product category's, and approx 30.000 other custom taxonomy's for filtering.  Database query's respond under 0.001 second, but browser needs 4 minutes to display one product in the admin back-end, because it is trying to display all the taxonomy's at once.\r\n\r\nAll the products details are maintained by automatic scripts, no human interaction needed, no real need to edit product admin side, but it would be great to be able to open a product without blocking the browser.\r\n\r\nReally hope to see it done in next woocommerce updates.\r\n\r\nThank you.\r\n\n\n###\n\n","completion":" [472334370]"}
{"prompt":"**Describe the bug**\r\n\r\nWhen adding a refund on an order, the order.updated webhook is fired as expected\r\n\r\nWhen deleting a refund from an order, webhook is not fired\r\n\r\n**To Reproduce**\r\n\r\n1. Go to an order\r\n2. Add a refund manually\r\n3. You should see a webhook fired for order.updated with refund information as expected\r\n4. Delete the refund\r\n5. Nothing happens on webhooks\r\n\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Expected behavior**\r\n\r\nThe order.updated webhook should fire again to show that there are no more refunds for this order / it was deleted\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [2046308337]"}
{"prompt":"**Describe the bug**\n\nThe `@woocommerce/components` `List` component renders as a `<ul>` with an ARIA role of `menu`. List items are under the `<ul>`'s `<li>`s as `<a>` links with an ARIA role of `menuitem`.\n\nOn first glance, I thought this seemed reasonable. But, after thinking about it further and doing some research, I believe that it is incorrect to apply the `menu`/`menuitem` roles for this component.\n\nFrom [W3C: Using ARIA Menus](https://www.w3.org/WAI/GL/wiki/Using_ARIA_menus):\n\n> A menu widget usually consists of a main menu bar with pop up menus. Items in pop up menus often have sub pop up menus. Menu widgets must provide keyboard support to navigate all the menu items in the menu. Keyboard support for a menu typically include the cursor keys to navigate between the menu items and open and close popupmenus. \n\nFrom [Inclusive Components: Menu & Menu Buttons](https://inclusive-components.design/menus-menu-buttons/):\n\n> ARIA menus are not designated for navigation but for application behavior. Imagine the menu system for a desktop application.\n\nMost/all of our use of `<List>` in wc-admin is for navigation. It is not similar to an application menu as found in a typical desktop application.\n\nExamples of `<List>` usage:\n- \"Set up your store and start selling\" task list on dashboard or other screens\n- \"Store management\" quick links card on homepage (in progress as of this issue creation; woocommerce/woocommerce-admin#4350)\n\nAnd on top of it using the wrong role, it doesn't even implement the `menu` role fully. Arrow keys are not available for moving between menu items.\n\n**To Reproduce**\n\nSteps to reproduce the behavior:\n\n1. Go to either the \"Set up your store and start selling\" task list  or the \"Store Management\" quick links card on the homepage.\n2. Using assistive tool, or by looking at the page source, see that role of `menu`/`menuitem` is used for list.\n3. Try to up/down arrow keys to navigate between items. Verify you can't.\n\n**Expected behavior**\n\nSince the usage of `<List>` is for navigation and not application behavior, I expect the `menu`/`menuitem` role to not be used. If anything, these lists should be wrapped in a `<nav>` element.\n\n**Additional context**\n\n- [W3C: Using ARIA menus](https://www.w3.org/WAI/GL/wiki/Using_ARIA_menus)\n- [Inclusive Components: Menus & Menu Buttons](https://inclusive-components.design/menus-menu-buttons/)\n- [Don't Use ARIA Menu Roles for Site Nav](https://adrianroselli.com/2017/10/dont-use-aria-menu-roles-for-site-nav.html)\n\n###\n\n","completion":" [3943104021,3943425720,702347761]"}
{"prompt":"A PR is in place to allow tracks to be enabled dynamically, but a better solution might be to move the script loading to a function that returns a promise.\r\n\r\nSee this comment for more details - https://github.com/woocommerce/woocommerce/pull/26493#pullrequestreview-411024624\r\n\r\nThis function could be exported in a package to allow other plugins to use it and could handle the following:\r\n* Enable the `woocommerce_allow_tracking` via the REST API. (This could potentially increase the estimated time on this issue)\r\n* Dynamically adding required scripts to the page.\r\n* Returning a promise that resolves once scripts are loaded.\n\n###\n\n","completion":" [3943104021,3943425133]"}
{"prompt":"**Describe the bug**\r\nThe tooltip next to the low stock threshold mentions that the setting does not affect existing \"in stock\" products.  It also doesn't affect existing \"out of stock\" products.  It would be fantastic if this was clear in the tooltip.  Perhaps saying this does not affect any product's existing stock status would work.\r\n\r\n![out of stock](https://cdn-std.droplr.net/files/acc_705319/QHNexQ)\r\n(Link to screenshot:  https://d.pr/i/QHNexQ)\n\n###\n\n","completion":" [1891051471]"}
{"prompt":"Hi, the API design is, overall, fantastically well done.\r\nOne thing that is lacking is the ability to pull only incremental changes, like in many API's , we would get a full image of the data that is frequently changed like (Products, Variations, Orders, Notes) on the launch of a program, be it a POS system or a CRM, then we would pull only the incremental changes by filtering by date in the respective calls. This would be great, as the API is frequently used by private computers who cannot\r\nUnfortunately this objects (Products, Variations, Orders, Notes) do not have a unified date field that is updated on every change and that can be filtered via the API. Orders have the date_modified field but this doesnt get change when a meta_data field is added or changed and the \"after\" filter queries the date_created and not the date_modified. Products and Variations have the same issue.\r\nIt would be great to have a unified date field (date_modified would do the trick), that gets updated on every change and that would be available to be filtered in the API request, maybe a after_modified argument.\r\n\r\nAn ideal scenario would be an API with sockets which we would subscribe to changes and get notified.\r\n\r\nThanks\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"When entering a coupon code that doesn't exist, WooCommerce behaviour is to add a notice: \r\n\"Coupon {code} does not exist!\".\r\n\r\nIf however you enter a ' or \" as part of the code, certain browsers seem to be escaping the characters in the notice bar.\r\nThis doesn't seem to be the case for me working on a Mac/Chrome or on my iPhone, however on a PC IE/Firefox or Android devices it does.\r\n\r\nExample below of the same code, but different outputs:\r\n![Screenshot 2020-05-07 at 10 37 06](https://user-images.githubusercontent.com/64958924/81282135-ac42d300-9052-11ea-871a-5da03fa54c4f.png)\r\n![Screenshot 2020-05-07 at 10 37 16](https://user-images.githubusercontent.com/64958924/81282146-ae0c9680-9052-11ea-9d82-e707f1e55b75.png)\r\n\r\nHave also tested some of the Showcase websites from the WooCommerce website and theirs seem to be the same.\r\n\r\nThanks\n\n###\n\n","completion":" [1891051442]"}
{"prompt":"**Is your feature request related to a problem? Please describe.**\r\n\r\nI'd like to filter the orders which were made on my site via the Shipping Method chosen\r\n\r\n20820346-hc\r\n\r\n**Describe the solution you'd like**\r\n\r\nVia **WooCommerce / Analytics / Orders**\r\n\r\nA new Advanced Filter to be added to this dropdown:\r\n\r\n![https://d.pr/i/68v0b3](https://d.pr/i/68v0b3+)\r\nImage link: https://d.pr/i/68v0b3\r\n\r\nThis will filter the orders within the range for a specific shipping method.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nNo other alternatives exist\r\n\r\n**Should this be prioritized? Why?**\r\n\r\nNo, it is useful but not critical\r\n\r\n**Additional context**\r\n\r\nThis can help customers understand popular shipping methods \r\n\n\n###\n\n","completion":" [3943104021,3943425133]"}
{"prompt":"**Is your feature request related to a problem? Please describe.**\r\n\r\nLazy loading was introduced in https://github.com/woocommerce/woocommerce-admin/pull/4094, but only uses basic `<Spinner />`s for the loading components.\r\n\r\n**Describe the solution you'd like**\r\n\r\nIdeally, we could use the placeholder components already present in our app for waiting on network requests.\r\n\r\n**Should this be prioritized? Why?**\r\n\r\nI believe so - users on slower connections will likely see these spinners the first time they load our newly chunked JS files.\r\n\n\n###\n\n","completion":" [3943104021,472334370]"}
{"prompt":"If multiple products can have the same SKU, updating an order through the WooCommerce API (tested v2, v3 and v4) can unintentionally change products within an order.\r\n\r\n## To reproduce:\r\n\r\n1. Add filter to `functions.php` `add_filter( 'wc_product_has_unique_sku', '__return_false' );`\r\n2. Create `product 1` with SKU `non-unique`. (product_id example: 1111)\r\n3. Create `product 2` with the same SKU `non-unique`. (product_id example: 2222)\r\n4. Create an order with `product 2` through the checkout\r\n5. `GET` the order from the WooCommerce API, (observe that product_id = 2222)\r\n6. `PUT` the exact same payload.\r\n7. `GET` the order from the WooCommerce API, (observe that product_id = 1111)\r\n\r\n## Cause\r\nIn `wc/v2/orders` and `wc/v3/orders` this is caused by https://github.com/woocommerce/woocommerce-rest-api/blob/58bab7a5563ddb0f4eede348ed3dbd1d4bca86d2/src/Controllers/Version2/class-wc-rest-orders-v2-controller.php#L597-L609\r\n\r\nIn `wc/v4/orders` it's https://github.com/woocommerce/woocommerce-rest-api/blob/a518b9cfd1dec42a59aa10240a31782bc1d43d13/src/Controllers/Version4/Requests/OrderRequest.php#L177-L178\r\n\r\nIf the order already exists, and a product is set, it should always have an SKU, so it wil (almost) always use the SKU method for finding the product_id. When multiple products can have the same SKU, `wc_get_product_id_by_sku()` always uses the first one found.\r\n\r\n## Possible solutions:\r\n### Use product_id first, SKU second.\r\nThis seems to be more intuitive (and might be faster), however it would probably mean breaking backward compatibility for API clients that only change the SKU, and not the product id when editing an order.\r\n\r\n### Add a check for wc_product_has_unique_sku\r\nIf `apply_filters( 'wc_product_has_unique_sku', .... );` return false, it doesn't make sense to use the SKU to change the product in the API, and `wc_get_product_id_by_sku()` should not be used. However, not all data that is passed in the `wc_product_has_unique_sku` filter is available at this point (possibly no known product ID).\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"**Describe the bug**\r\nWhen a product is marked `In Stock` while the `Manage Stock?` option is unticked, the `In Stock` notice is not showing on the front end of the site.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Mark a product as In Stock, but do not select `Manage Stock?`\r\n\r\n![In Stock](https://d.pr/i/KeXgtq+)\r\nLink: https://d.pr/i/KeXgtq\r\n\r\n2. Notice the tooltip mentions this is what will be displayed on the front end of the site:\r\n\r\n![Tooltip](https://d.pr/i/23thkK+)\r\nLink: https://d.pr/i/23thkK\r\n\r\n3. The front end of the site does not show this notice:\r\n\r\n![Front End](https://d.pr/i/9upN3y+)\r\nLink: https://d.pr/i/9upN3y\r\n\r\n4. If marked as `Out of Stock`, then the notice will display:\r\n\r\n![Out of stock](https://d.pr/i/2Dmujd+)\r\nLink: https://d.pr/i/2Dmujd\r\n\r\n**Expected behavior**\r\nAt one point, I know this used to show, but when I roll back several versions, I'm seeing the same results. \r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\n\n###\n\n","completion":" [1891051471]"}
{"prompt":"**Describe the bug**\r\nIf you have an existing Variable product, you can't add new variations with just one import. If you import the new variations, variation \"placeholders\" are added, but they're empty, without values. \r\n\r\nYou have to first do 1 CSV import to update the parent product with the new attributes, then you can do another import to add the new variations, which are then added and displayed correctly.\r\n\r\nIf you try to update the parent product, the new variations are skipped as they don't exist. \r\nIf you import the parent variation at the same time as the new variations, the parent is skipped because it does exist (and the values are not updated).\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Export to CSV an existing Variable Product and its variations\r\n2. Edit the CSV as if you were going to add new variation to that product. \r\n3. From All Product click Import and select your now-edited CSV\r\n4. Do not check \"Update Existing Products\", because these are new variations\r\n5. Click Continue, there should be no need for action on the next page, click import. \r\n6. Import Complete! Product have been updated. \r\n7. Go back to your Variable product and notice Variations have been added, but attributes have not, so the variations have no values \r\n\r\n**Screenshots**\r\nIf you try to import the new variations straight, it seems like a success:\r\n\r\n![Screen Shot 2020-04-23 at 13 51 06](https://user-images.githubusercontent.com/15178758/80096313-a97fb280-8569-11ea-8252-8b50268c3615.png)\r\n\r\nBut the variations added are not complete:\r\n\r\n![csv-variation-import](https://user-images.githubusercontent.com/15178758/80096511-f9f71000-8569-11ea-8837-c2a510cd98b5.jpg)\r\n\r\nAlthough variations have been added, attributes have not:\r\n\r\n![missing-values](https://user-images.githubusercontent.com/15178758/80096566-15621b00-856a-11ea-9f25-746f429d20cb.jpg)\r\n\r\n**Expected behavior**\r\nI would expect the attribute values to be added to the attribute if it doesn't exist before the variations are added. \r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n<details>\r\n```\r\nCopy and paste the system status report from **WooCommerce > System Status** in WordPress admin.\r\n```\r\n</details>\r\n\n\n###\n\n","completion":" [1891051450]"}
{"prompt":"## To Reproduce\r\n1. Change your site language to Spanish, for example.\r\n2. Go to `my-account` and log in.\r\n3. Go to _Descargas_ (_Downloads_) and make your viewport narrow simulating a mobile phone.\r\n4. If you don't have any download, see the notice. \r\n\r\n## Screenshots\r\nEnglish:\r\n![imatge](https://user-images.githubusercontent.com/3616980/80075558-27809100-854b-11ea-82c9-2600e5c3526b.png)\r\n\r\nSpanish:\r\n![imatge](https://user-images.githubusercontent.com/3616980/80075600-3e26e800-854b-11ea-99f1-3233c6ccb805.png)\r\n\r\n## Expected behavior\r\nI think the button (_Browse Products_) should always be rendered below the text on mobile.\n\n###\n\n","completion":" [1891051451,1891051455]"}
{"prompt":"**Describe the bug**\r\n\r\nWhen using the `[product_page id=\"_\"]` shortcode with a product that has a description, the description is not recognizing line breaks between multiple `</p>` elements. Additionally, it's also removing the `<p>` elements and just placing the description text directly inside of the `<div>`.\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Create a product with a description that breaks onto multiple lines: https://d.pr/i/Iv1g0Z\r\n2. Create a page using a shortcode block with `[product_page id=\"_\"]`: https://d.pr/i/iewqeP\r\n3. Look at regular product page and see correct description compiling: https://d.pr/i/KcCqXJ\r\n4. Look at shortcode page and see incorrect description styling: https://d.pr/i/9W8NHj\r\n\r\n**Screenshots**\r\n\r\n_Product description settings:_ https://d.pr/i/Iv1g0Z\r\n_Shortcode page settings:_ https://d.pr/i/iewqeP\r\n_Normal product page:_ https://d.pr/i/KcCqXJ\r\n_Shortcode product page:_ https://d.pr/i/9W8NHj\r\n\r\n**Expected behavior**\r\n\r\nThe description should carry over both line breaks and any elements being used in the original description.\r\n\r\n**Isolating the problem (mark completed items with an [x])- [X] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [X] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [X] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n\r\n<details>\r\n\r\n```\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"When checking out, if a non-empty invalid email is entered, the error notice returned by WooCommerce supersedes all other errors present in the checkout form. So, for example, if multiple fields are invalid, and a non-empty invalid email is entered, only an error notifying the user of an invalid email is returned.\r\n\r\nThis came up in PayPal Checkout: https://github.com/woocommerce/woocommerce-gateway-paypal-express-checkout/pull/709\r\n\r\nIn digging through this issue, it looks like the logic in [WC_Checkout::process_checkout](https://github.com/woocommerce/woocommerce/blob/3bf473517d407ae46264e0081dfeafedbcce68d6/includes/class-wc-checkout.php#L1106) may be behind this. It appears that before the call to `validate_checkout()`, the try block is failing and the invalid email error is sent via `send_ajax_failure_response`.\r\n\r\n\r\n**To Reproduce**\r\n1. Add a simple product to cart and proceed to checkout\r\n2. Fill out the form, being sure to leave several required fields empty and enter an invalid email such as `test`\r\n3. Select **Place Order** and only an error message regarding the invalid email will appear\r\n4. Repeat step 2, but this time leave the email field empty.\r\n5. Multiple error-notices will appear\r\n\r\n**Screenshots**\r\nInvalid Email in addition to other missing fields:\r\n![checkout_screenshot_invalid_email](https://user-images.githubusercontent.com/17905991/78955254-ab815480-7b19-11ea-8d42-1a22986b19b8.png)\r\n\r\nIn cases where Email is empty:\r\n![checkout_screenshot_empty_email](https://user-images.githubusercontent.com/17905991/78955294-d075c780-7b19-11ea-9bb2-963719430527.png)\r\n\r\n\r\n**Expected behavior**\r\n\r\nAll relevant error notices should be included when an invalid email is entered.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051440]"}
{"prompt":"**Step to Reproduce:**\r\n1. Create a test site using JN. \r\n2. Complete initial screens and go to dashboard.\r\n3. Go to \"WooCommerce\".\r\n4. Click on \"All Product\".\r\n5. Click on Search bar.\r\n6. Enter some string i.e., \"Toilet Paper\".\r\n7. Note that Toilet paper and Toilet napkins are the products already available.\r\n8. Observe that search functionality is searching for entire phrase instead of just occurrence of words in a string\r\n\r\n**Actual Result:**\r\nSearch functionality is searching for entire phrase instead of just occurrence of words in a string\r\n\r\n**Expected Result:**\r\nSearch results should display products according to each individual word provided for search.\n\n###\n\n","completion":" [2009677615]"}
{"prompt":"**Step to Reproduce:**\r\n1. Create a test site using JN. \r\n2. Complete initial screens and go to dashboard.\r\n3. Click on \"All products\".\r\n4. Click on edit on existing product.\r\n5. Enter some data and click on \"Update\" button.\r\n6. Observe that confirmation popup fails to display.\r\n\r\n**Note:**\r\nThis issue is observed everywhere on the dashboard.\r\n\r\n**Actual Result:**\r\nConfirmation popup fails to display upon updating any pages/products etc.\r\n\r\n**Expected Result:**\r\nConfirmation popup stating Updated successfully should be displayed upon updating any data.\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"**Step to Reproduce:**\r\n1. Create a test site using JN. \r\n2. Complete initial screens and go to dashboard.\r\n3. Click on \"Setup Tax\".\r\n4. Click on \"Configure\" button.\r\n5. Click on \"Tax\".\r\n6. Click on \"Standard Rates\".\r\n7. Enter some country code(IND) in Country Code field.\r\n8. Observe that tool tip overlaps with the top few options and user unable to select country from the dropdowns. \r\n\r\n**Actual Result:**\r\nTool tip overlaps with the dropdown options due to which user unable to select the desired option in country code field on Tax page. \r\n\r\n**Expected Result:**\r\nTool tip should not overlap with the Country code dropdown.\r\n\r\n![15](https://user-images.githubusercontent.com/41110392/78918626-52300b80-7aae-11ea-9e86-4ea1cbedf77c.jpg)\r\n\n\n###\n\n","completion":" [1891051453]"}
{"prompt":"**Step to Reproduce:**\r\n1. Create a test site using JN. \r\n2. Complete initial screens and go to dashboard.\r\n3. Click on \"Add Products\".\r\n4. Click on \"Import\" button.\r\n5. Click on \"Choose file\".\r\n6. Observe that all file are displayed.\r\n\r\n**Actual Result:**\r\nAll file formats are displayed.\r\n\r\n**Expected Result:**\r\nOnly supported file format should be displayed in browser window upon clicking import file option for product data.\n\n###\n\n","completion":" [1891051450]"}
{"prompt":"**Step to Reproduce:**\r\n1. Create a test site using JN. \r\n2. Complete initial screens and go to dashboard.\r\n3. Click on \"WooCommerce -> Settings\". \r\n4. Click on \"Tax\".\r\n5. Click on \"Standard Rates.\"\r\n6. Click on \"Insert Row\" button.\r\n7. Observe that user redirects to the top of the page.\r\n\r\n**Actual Result:**\r\nUpon clicking ‚ÄúInsert Row‚Äù button on Tax->Standard Rates user redirects to the top of the page\r\n\r\n**Expected Result:**\r\nN\r\n[7. Insert Row redirects to top of the page.zip](https://github.com/woocommerce/woocommerce/files/4451791/7.Insert.Row.redirects.to.top.of.the.page.zip)\r\new row should be added and user should not redirect to the top.\n\n###\n\n","completion":" [1891051453]"}
{"prompt":"**Step to Reproduce:**\r\n1. Create a test site using JN. \r\n2. Complete initial screens and go to dashboard.\r\n3. Click on \"Add Products\".\r\n4. Click on \"Import\" button.\r\n5. Click on \"Choose file\".\r\n6. Upload XML file.\r\n7. Observe that users fails to import XML file for product data\r\n\r\n**Actual Result:**\r\nUnable to import XML file for product data\r\n\r\n**Expected Result:**\r\nUser should be able to import data from XML files.\r\n[6.zip](https://github.com/woocommerce/woocommerce/files/4451783/6.zip)\r\n\r\n\n\n###\n\n","completion":" [1891051450]"}
{"prompt":"**Is your feature request related to a problem? Please describe.**\r\n\r\nGiven the nature if a multisite site, plugin and file uploads are not allowed. There is, however, an option to import products on a multisite site. When selecting the CSV file and proceeding with import, the error message comes up letting the user know that the file type is not permitted for security reasons:\r\n\r\n![multi](https://user-images.githubusercontent.com/19143190/78389788-5e4d3200-75b1-11ea-9008-d203a4831bd1.jpg)\r\n\r\nIn fact, the same file can be uploaded without any issues on a regular non-multisite site. The upload fails here due to the multisite site not allowing uploads, not due to file type. \r\n\r\nI used sample products SCV file available via [sample CSV file in WooCommerce docs](https://docs.woocommerce.com/document/product-csv-importer-exporter/dummy-data/). \r\n\r\n**Describe the solution you'd like**\r\n\r\nChange the error message to:\r\n\r\n> Products import via CSV is not allowed on this site due to site configuration. Please contact the admin of your site for further help. \r\n\r\nCould be also:\r\n\r\n> Products import via CSV is not allowed on this site due to the site being a part of a multisite setup. Please contact the admin of your site for further help. \r\n\r\n**Describe alternatives you've considered**\r\n\r\nRemove the ability to import products on the multisite site. \r\n\r\n**Additional context**\r\n\r\nN/A. \r\n\n\n###\n\n","completion":" [1891051450]"}
{"prompt":"**Describe the bug**\r\nSaid to have happened after upgrading to latest WC.\r\nVariable Product as are shown as \"Out of Stock\", even though all settings suggest they should be out of stock. Somehow \"outofstock\" was added to the database and it cannot be undone via updates through WP Admin.\r\n\r\nIssue can be recreated via CSV import. If the \"variable\" line of the product import has \"In stock?\" set to NULL and  \"Stock\" set to \"outofstock\", then the entire product will show as \"Out of Stock\" in the product list even if all the variables are in stock and other settings indicate it should be \"In Stock\". \r\n\r\nOnce set, perhaps via such erroneous import, this setting cannot be undone by \r\n* an additional corrected import, \r\n* changing or updating the stock status, \r\n* toggling the manage stock option, or \r\n* editing the stock numbers in the product. \r\n\r\nYou can \"fix\" this by\r\n* duplicating the product (the duplicate's stock status appears correctly)\r\n* changing from Variable to Simple and back to Variable\r\n\r\nNeither method scales well though. \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Start with an established Variable product\r\n2. Export via Product ¬ª Export\r\n3. Edit the CSV file, change \"In stock?\" to \"NULL\" and \"Stock\" to \"outofstock\" to simulate erroneous data\r\n4. Import via Product ¬ª Import\r\n5. If set to \"Update existing products\" it will set the Variable product to \"Out of Stock\", otherwise the new product will be imported as being \"Out of Stock\". \r\n\r\nInternal ref 2813741-zen\r\n\r\n**Screenshots**\r\nCSV file: \r\n\r\n![what-the-csv-file-looks-like](https://user-images.githubusercontent.com/15178758/78274704-e3343f00-7510-11ea-8841-e03766e88ba4.jpg)\r\n\r\nDisplays like so:\r\n\r\n![how-do-you-like-them-apples](https://user-images.githubusercontent.com/15178758/78274757-f6470f00-7510-11ea-9c3d-0ed6a66b96e3.jpg)\r\n\r\n**Expected behavior**\r\nI'd have expected to not be able to import data that would cause this issue. \r\nPerhaps a warning, otherwise it being ignored having no effect. \r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051450]"}
{"prompt":"Hi, when I update a product it takes 2-3 seconds to update the product, is that usual? We are hosted on a dedicated machine with SSD. Also importing Products takes hours\n\n###\n\n","completion":" [472334370]"}
{"prompt":"**Describe the bug**\r\n\r\nThe dismiss UI differs between different notices. The HTTPS one has \"Dismiss\" text and an X icon. The \"Design your store\" one only has an X icon.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Setup new store on a site without HTTPS\r\n2. Go to Orders, Products, or Coupons screens (maybe other screens as well)\r\n4. See error\r\n\r\n**Screenshots**\r\n\r\n<img width=\"1116\" alt=\"ScreenCapture at Tue Mar 24 15:47:35 EDT 2020\" src=\"https://user-images.githubusercontent.com/2098816/77471949-8c7c8600-6de9-11ea-92bf-9d0786637acd.png\">\r\n\r\n**Expected behavior**\r\n\r\nI would expect the dismiss UI to be identical for different notices.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051448]"}
{"prompt":"**Describe the bug**\r\nA clear and concise description of what the bug is. Please be as descriptive as possible; issues lacking detail, or for any other reason than to report a bug, may be closed without action.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to '...'\r\n2. Click on '....'\r\n3. Scroll down to '....'\r\n4. See error\r\nFatal error: Uncaught RuntimeException: Erreur lors de l'enregistrement de l'action : Erreur lors de l'enregistrement de l'action : Table 'dbs327831.wp_457901_actionscheduler_actions' doesn't exist in /homepages/5/d821404388/htdocs/clickandbuilds/Diaphaneditions/wp-content/plugins/woocommerce/packages/action-scheduler/classes/migration/ActionScheduler_DBStoreMigrator.php:44 Stack trace: #0 /homepages/5/d821404388/htdocs/clickandbuilds/Diaphaneditions/wp-content/plugins/woocommerce/packages/action-scheduler/classes/data-stores/ActionScheduler_HybridStore.php(225): ActionScheduler_DBStoreMigrator->save_action(Object(ActionScheduler_Action), NULL) #1 /homepages/5/d821404388/htdocs/clickandbuilds/Diaphaneditions/wp-content/plugins/woocommerce/packages/action-scheduler/classes/ActionScheduler_ActionFactory.php(177): ActionScheduler_HybridStore->save_action(Object(ActionScheduler_Action)) #2 /homepages/5/d821404388/htdocs/clickandbuilds/Diaphaneditions/wp-content/plugins/woocommerce/packages/action-scheduler/classes/ActionSch in /homepages/5/d821404388/htdocs/clickandbuilds/Diaphaneditions/wp-content/plugins/woocommerce/packages/action-scheduler/classes/migration/ActionScheduler_DBStoreMigrator.php on line 44\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [ ] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n<details>\r\n```\r\nCopy and paste the system status report from **WooCommerce > System Status** in WordPress admin.\r\n```\r\n</details>\r\n`\r\n\n\n###\n\n","completion":" [1903053061]"}
{"prompt":"**Describe the bug**\r\nA clear and concise description of what the bug is. Please be as descriptive as possible; issues lacking detail, or for any other reason than to report a bug, may be closed without action.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. create a grouped product\r\n2. set the linked products price to 0\r\n3. see the grouped product page on the front end\r\n4. see the displayed price is: `Free!`\r\n\r\n<img width=\"1337\" alt=\"Screenshot 2020-03-17 at 14 30 17\" src=\"https://user-images.githubusercontent.com/1682452/76861104-57f25280-685c-11ea-8cbe-c326948f775a.png\">\r\n\r\n5. go to WooCommerce > Settings > General > Enable taxes and check \"Enable tax rates and calculations\"\r\n6. go to WooCommerce > Settings > Tax\r\n  * set \"Prices entered with tax\"  to \"no\"\r\n  * set \"Display prices in the shop\" to \"Including tax\"\r\n7. create a Standard tax rate and make sure it gets calculated, for example by setting the same country used for your store address\r\n8. make sure your grouped product linked products are taxable and use the Standard tax rate\r\n9. see the grouped product page on the front end \r\n10. see this time the displayed price is `0.00`\r\n\r\n<img width=\"1334\" alt=\"Screenshot 2020-03-17 at 14 30 44\" src=\"https://user-images.githubusercontent.com/1682452/76861124-604a8d80-685c-11ea-90d5-66f16e96d38f.png\">\r\n\r\nNote: in the screenshot above I'm also using a price suffix `inc. Vat {price_including_tax}` please ignore that.\r\n\r\n**Expected behavior**\r\nA consistent price output regardless of the tax settings. Either always output `Free!` or `0.00`.\r\n\r\n**Possible cause**\r\nSometimes when tax are calculated the returned `0` value is of type `float`.  However, the code responsible for determining whether a product is \"Free\":\r\n\r\nhttps://github.com/woocommerce/woocommerce/blob/6a8d8b27d98fe3036f2240d14be2b7a5e4ecf10e/includes/class-wc-product-grouped.php#L117\r\n\r\nchecks the min and max prices for _equality_ against a `0` integer, thus it fails. I guess `intval()` or casting to `int` may come in handy.\r\n\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n<details>\r\n```\r\n\n\n###\n\n","completion":" [1891051437]"}
{"prompt":"**Describe the bug**\r\nWhen a product is allowed for backorder, on a successful¬†order a \"Backordered\" meta value is saved to the order item. It contains the number of items¬†should be backordered. In case if the item is not available from stock, but three items were ordered value of this meta will be 3, etc.\r\nIn case if the number of order items¬†is modified in the admin during the order processing, value of this meta is not recalculated. In some cases it can cause confusion.¬†\r\n\r\nImage:\r\n![image](https://pasteboard.co/IZpfU3L.png)\r\n\r\n**Steps to reproduce the issue**\r\nSteps to reproduce the behavior:\r\n\r\n1. Select a product and Enable stock management\r\n2. Allow backorders, set to: Allow, but notify customer\r\n3. Create an order with that product¬†\r\n4. Edit the order in admin\r\n5. Update, increase¬†or decrease¬†qty. of line the¬†item.\r\n\r\n**Expected behavior**\r\nValue of \"Backordered\" meta should be in alinement with line item qty and stock. It should be recalculated when a line item is updated.¬†\r\n\r\n**Isolating the problem**\r\n\r\n- [x] This bug happens with only WooCommerce plugin active\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/)\r\n- [x] I can reproduce this bug consistently using the steps above\r\n\r\n## WordPress Environment\r\n\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051471]"}
{"prompt":"To make WooCommerce feel like a seamless part of the broader WordPress UI, and to better respect user preferences we intend to remove unnecessary applications of color, and be more intentional with our branding. More info in p6riRB-5na\r\n\r\nHere's a list of elements I found that will need updating:\r\n\r\n# On-boarding\r\n* Button styling should match core. IE use the `$button-color` and `$button-text-color` variables, or better yet just remove the overrides and inherit the default styles. This applies to the big \"Let's go\" button, and the button that appears in the \"Help improve WooCommerce with usage tracking\" modal.\r\n* Timeline active / current steps should no longer be purple. Let's use `$highlight-color`.\r\n* Timeline inactive / upcoming steps should use a lightened version of `$base-color`. Let's go with 60%. The text should be `$base-color` lightened 40% to meet AA accessibility guidelines. For reference: https://cloudup.com/cnuqU_EI0sY\r\n* Inputs and checkboxes should inherit core styling, IE no overrides to change border colors, background colors, focus outlines, etc.\r\n* Text links, checked checkboxes, and toggles should use `$link`, `$link-focus`, and `$highlight-color` as appropriate.\r\n* Borders on elements like `.wc-wizard-services` should match borders on elements like the posts table in wp-admin (#ccd0d4 - doesn't like these have been updated to use variables yet, womp womp).\r\n\r\n# Elsewhere\r\n* Notices that have a purple left border should use the appropriate core color scheme. Blue for info, red for error, etc. Buttons in notices should also inherit core styling. \r\n* Buttons on empty states (orders / products / coupons etc) should use the `$button-color` and `$button-text-color` variables for coloring. Or just remove the overrides if that's easier!\r\n* Text on empty states should inherit core color schemes. IE remove colors styles applied to `.woocommerce-BlankState .woocommerce-BlankState-message`.\r\n* The green \"In stock\" label on product lists, and the green labels in the system status should match the green used for `.notice-success` - `#46b450`. This doesn't seem to be a variable yet either :(\r\n* Order notes can also use a lightened version of `$base-color`. 75% works well. System order notes can use `$base-color` lightened 60%. Reference: https://cloudup.com/cEb73PUJ8Q3\r\n* Hover styles on the legends in reports should use variations of `$highlight-color` rather than purple.\r\n* The empty methods table on the edit zone screen shouldn't include any purple elements. The background and text can inherit default color styles. The background icon can use `$icon-color`. Reference: https://cloudup.com/cBLVQeJzCWj\r\n* Any toggles in settings should use `$highlight-color` for their active states rather than purple.\r\n* `.wc-admin-breadcrumb` should inherit the default link color. IE remove the purple `color` property on this class.\r\n* `.status-enabled:before` should use `$highlight-color` instead of purple.\r\n\r\nAny questions? Please ask!\n\n###\n\n","completion":" [1891051447,702347761]"}
{"prompt":"I have two payment methods, one is PayFlow Pro and the other is Cash on Delivery. These are both plugins, but I don't believe this bug is related to the payment methods themselves, but rather how the methods are switched between on the checkout page.\r\n\r\nEach payment method has a radio selector and when you click on one, the selected payment expands open and the radio shows as selected, i.e. the circle is filled in.\r\n\r\nThe problem is that in the HTML source, the radio input does not get the \"checked\" attribute added. The payment method originally selected on page load always remains \"checked\" even when you switch to other payment methods.\r\n\r\nI believe this is because the click event that handles clicking each payment method, runs `preventdefault` which stops the selected radio from getting the \"checked\" attribute.\r\n\r\nSteps to reproduce the behavior:\r\n1. Have more than one payment method available on the checkout page.\r\n2. Click the radio input to switch to another payment method after the page loads.\r\n3. Observe in the page source that the first radio input still has the \"checked\" attribute.\r\n\r\n![payment method bug](https://user-images.githubusercontent.com/708955/76457794-ad2eef80-6396-11ea-9eb6-358e967d7655.png)\r\n\r\n**Expected behavior**\r\nI expect each selected radio input to have the `checked=\"checked\"` attribute when selected.\r\n\r\nThis is the only way I can actually target the selected payment method via CSS or even jQuery (that I know about).\r\nBecause the \"checked\" attribute is wrong, I can't target them for other page dynamics.\r\n\r\nI did reproduce this error using a fresh template.\n\n###\n\n","completion":" [1891051440]"}
{"prompt":"**Is your feature request related to a problem? Please describe.**\r\n\r\nWhen reviewing the docs for WC Admin, I noticed that you can only filter per username. I think it's unlikely that the shop manager will be super familiar with the username. I would suggest that allowing to search for both the customer's name/last name and email address would make for a more realistic use of this filter.\r\n\r\n**Describe the solution you'd like**\r\nAllow to search per name/email in Analytics > Downloads > Advanced Filters > Username. (Should be updated from `Username` to `Customer`.)\r\n\r\nE.g. in this example, the username is `admin`, while the first name and email both contain \"Zoe\": \r\n\r\n![](https://d.pr/i/FqAXbx+)\r\nIf the image does not load, please click this link: https://d.pr/i/FqAXbx.\n\n###\n\n","completion":" [3943104021,3943425133]"}
{"prompt":"**Describe the bug**\r\nWhen \"Geolocate (with page caching support)\" is enabled, visiting a URL similar to /whatever/wp-json/wp/v2/posts/None throws a fatal error.\r\n\r\n```\r\n[02-Mar-2020 11:57:11 UTC] PHP Fatal error:  Uncaught Error: Call to a member function get() on null in /home/site/public_html/wp-content/plugins/woocommerce/includes/data-stores/class-wc-customer-data-store-session.php:96\r\nStack trace:\r\n#0 /home/site/public_html/wp-content/plugins/woocommerce/includes/class-wc-data-store.php(159): WC_Customer_Data_Store_Session->read(Object(WC_Customer))\r\nwoocommerce/woocommerce#1 /home/site/public_html/wp-content/plugins/woocommerce/includes/class-wc-customer.php(116): WC_Data_Store->read(Object(WC_Customer))\r\nwoocommerce/woocommerce#2 /home/site/public_html/wp-content/plugins/woocommerce/includes/class-wc-cache-helper.php(130): WC_Customer->__construct(0, true)\r\nwoocommerce/woocommerce#3 /home/site/public_html/wp-content/plugins/woocommerce/includes/class-wc-cache-helper.php(161): WC_Cache_Helper::geolocation_ajax_get_location_hash()\r\nwoocommerce/woocommerce#4 /home/site/public_html/wp-includes/class-wp-hook.php(288): WC_Cache_Helper::geolocation_ajax_redirect('')\r\nwoocommerce/woocommerce#5 /home/site/public_html/wp-includes/class-wp-hook.php(312): WP_Hook->apply_filters(NULL, Array)\r\nwoocommerce/woocommerce#6 /home/site/public_ in /home/site/public_html/wp-content/plugins/woocommerce/includes/data-stores/class-wc-customer-data-store-session.php on line 96\r\n\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Enable Geolocate (with page caching support) on WooCommerce settings\r\n2. Visit /whatever/wp-json/wp/v2/posts/None\r\n\r\n**Expected behavior**\r\nWhen the \"Geolocate\" option is enabled, the above returns a 404 page and there is no error.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [X] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [X] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [X] I can reproduce this bug consistently using the steps above.\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"**Describe the bug**\r\nWhen using the `[sale_products]` shortcode on a post or page, any products with a sale price of $0 won't show. \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create a product, and give it a sales price of $0\r\n2. Create a shortcode block in a post or page, and use the `[sale_products] ` shortcode. \r\n3. See that the newly created product won't show. \r\n\r\n**Expected behavior**\r\nI'd expect `[sale_products]` to show all products on sale, regardless of price.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x ] I can reproduce this bug consistently using the steps above.\r\n\r\n\r\n\n\n###\n\n","completion":" [1891051454,1891051461]"}
{"prompt":"woocommerce_after_order_item_object_save hook get called multiple times (10x+). even tho I only change shipping_method_title on 1 single order. we even cant differentiate each hook, because get_changes() gets cleared \"after save\" event. how can we hook only when \"shipping_method_title\" saved. I use pure woocommerce without any addon\r\n\r\n```\r\nadd_action( 'woocommerce_after_order_item_object_save', 'woocommerce_after_order_item_object_save_handler', 1, 2 );\r\nfunction woocommerce_after_order_item_object_save_handler( $order_item, $data_store ) {\r\n\r\n    //this PART gets called 10+ times\r\n    $data_type = $order_item->get_type();\r\n\r\n    //hook only when shipping_line changes  \r\n    if ( $data_type == \"shipping\" ){\r\n        echo \"I'm called\";    //this get called 3+ times\r\n    }\r\n\r\n\r\n} \r\n```\r\n\r\n\r\nEven other hook like \"woocommerce_after_order_object_save\" is called 2x just to update this single value. I dont use woocommerce_after_order_object_save because it gets called everytime not just \"shipping_line updated\" event \n\n###\n\n","completion":" [1891051458,472334370]"}
{"prompt":"By default, the review text is shown in parentheses. Since these parentheses are added to the text, it makes it hard to remove them.\r\n\r\n![Woo review link HTML](https://snipboard.io/1O4UQ3.jpg)\r\n\r\n**Describe the solution you'd like**\r\nIt would be great if we have an option to remove these parentheses.\r\n\r\n**Describe alternatives you've considered**\r\nWe can use a CSS to display these parentheses. For example:\r\n\r\n```css\r\n.woocommerce-review-link::before {\r\n  content: \"(\"\r\n}\r\n\r\n.woocommerce-review-link::after {\r\n  content: \")\";\r\n}\r\n```\r\n\r\nIn this case, it will be easier to remove them using a custom CSS.\r\n\r\n\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"**Describe the bug**\r\nThere is an asterisk used to indicate required fields, e.g. checkout. This is an `abbr` tag which is styled with a dotted underline in many browsers.\r\n\r\nIn WooCommerce there are overrides for common themes to disable the underline ‚Äì e.g. [twenty twenty](https://github.com/woocommerce/woocommerce/blob/master/assets/css/twenty-twenty.scss#L64). In Storefront however this still renders with a dotted line:\r\n\r\n<img width=\"834\" alt=\"Screen Shot 2020-02-20 at 4 02 51 PM\" src=\"https://user-images.githubusercontent.com/4167300/74896967-764e6500-53fa-11ea-97f5-93ed934d3b5c.png\">\r\n\r\n**To Reproduce**\r\n1. Install & activate WooCommerce and Storefront theme\r\n2. Add something to cart.\r\n3. View checkout.\r\n4. See dotted underline on `*` required field indicator.\r\n\r\n**Expected behavior**\r\nNo underline by default, for any theme.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n<details>\r\n```\r\n\n\n###\n\n","completion":" [1891051440]"}
{"prompt":"**Describe the bug**\r\n\r\nWhen a grouped product is created with CSV import and it's higher in CSV list than its linked products (meaning that it's created _before_ its linked products), it's created with no `_price` meta keys in wp_postmeta and, as a result, `max_price` or `min_price` are calculated as 0.00 in wp_wc_product_meta_lookup. The product can't be sorted by price properly on the Shop page and can't be fixed with the Regenerate product lookup tables tool.\r\n\r\nTypically, it should be fixed by running the Regenerate product lookup tables tool, but this tool relies on `_price` meta keys which are missing so it doesn't work in this particular use-case.\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. This is our sample CSV file for product import, but I added one more grouped product there in the first line: https://d.pr/f/JRt22a\r\nSo it has Logo Collection Broken on the first line and Logo Collection Normal at the end of the file.\r\n2. Import the CSV file to your test site.\r\n3. Check wp_postmeta for both products:\r\n\r\nLogo Collection Normal does have `_price` meta keys:\r\n\r\n![https://d.pr/i/S7xpzf](https://d.pr/i/S7xpzf+) \r\nFull Size: https://d.pr/i/S7xpzf\r\n\r\nLogo Collection Broken doesn't have `_price` meta keys:\r\n\r\n![https://d.pr/i/9YenfL](https://d.pr/i/9YenfL+) \r\nFull Size: https://d.pr/i/9YenfL\r\n\r\nAs a result, `max_price` or `min_price` in wp_wc_product_meta_lookup shows prices for Logo Collection Normal:\r\n\r\n![https://d.pr/i/KduzMm](https://d.pr/i/KduzMm+) \r\nFull Size: https://d.pr/i/KduzMm\r\n\r\nBut not for Logo Collection Broken:\r\n\r\n![https://d.pr/i/Dupv3d](https://d.pr/i/Dupv3d+) \r\nFull Size: https://d.pr/i/Dupv3d\r\n\r\n4. If you run Product lookup tables tool, it doesn't fix it for Logo Collection Broken because it doesn't have `_price` meta keys used by this tool:\r\n\r\nhttps://github.com/woocommerce/woocommerce/blob/f3ceba5a95e700ef9429615b0ba82752ee328bb2/includes/wc-product-functions.php#L1431\r\n\r\nAs a result, these grouped products are not sorted properly on the Shop page, because sorting relies on `max_price` or `min_price`, and can't be fixed with Product lookup tables tool:\r\n\r\nhttps://github.com/woocommerce/woocommerce/blob/f3ceba5a95e700ef9429615b0ba82752ee328bb2/includes/class-wc-query.php#L563\r\n\r\n**Expected behaviour**\r\n\r\nCan we handle this scenario more gracefully? For example, create `_price` meta_keys with 0.00 even if a grouped product is created _before_ it's linked parts?\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n<details>\r\n\r\n```\r\n\n\n###\n\n","completion":" [1891051450]"}
{"prompt":"**Is your feature request related to a problem? Please describe.**\r\nThe REST API should an endpoint which can fetch me a list of REFUNDS within a given date range. Right now I can only fetch by refund ID, which means only one refund could be pulled up. I am building a custom dashboard where I need to list the above. So it is a kind of problem and I didn't get an option to meet the requirement.\r\n\r\n**Describe the solution you'd like**\r\nThe present endpoint to retrieves a refund from a particular order as described in the API documentation and the pattern is `/wp-json/wc/v3/orders/<id>/refunds`.\r\nI would like to suggest that the `id` could be used as a query string parameter. When set, the API \r\nwill search and fetch the refunds for that particular order. Otherwise, it should fetch ALL refunds made between the given date range.\r\n\r\n**Describe alternatives you've considered**\r\nIf the above does not sound like a possible solution, then a separate endpoint should be created which will meet the above required. And in that case, the label of present API endpoint should become **List All Refunds by Order** or something like that. And the new endpoint will be **List All Refunds**.\r\n\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"**Describe the bug**\r\nThe dismiss button on notices are not aligned, depending on the type of notice. \r\n\r\n**To Reproduce**\r\n- Open WC admin on [this site](https://bluehost-and-a8c.com/wp-admin) and view any of the notices. \r\n- If using WC 4.0+, expand Notices from the top menu\r\n\r\n**Screenshots**\r\n<img width=\"1337\" alt=\"Screen Shot 2020-02-17 at 3 34 30 PM\" src=\"https://user-images.githubusercontent.com/5375500/74685184-c085db00-519b-11ea-8416-3dc8dc7206c5.png\">\r\n\r\n**Expected behavior**\r\nI expect the placement and style of the Notices, including their dismiss button, to be consistent. \r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [ ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [ ] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n<details>\r\n\r\n\n\n###\n\n","completion":" [1891051448]"}
{"prompt":"Options array inside attributes should output options as an array of separate attributes objects including attributes terms ids as well.\r\nThis will be helpful for updating the product attributes via rest API.\r\nCurrently ```/wp-json/wc/v3/products/<id>``` output the following\r\n```\r\n\"attributes\": [\r\n        {\r\n            \"id\": 1,\r\n            \"name\": \"COLOR\",\r\n            \"position\": 1,\r\n            \"visible\": false,\r\n            \"variation\": false,\r\n            \"options\": [\r\n                \"GOLDEN\",\r\n                \"YELLOW\"\r\n            ]\r\n        },\r\n        {\r\n            \"id\": 5,\r\n            \"name\": \"SIZE\",\r\n            \"position\": 4,\r\n            \"visible\": false,\r\n            \"variation\": false,\r\n            \"options\": [\r\n                \"MEDIUM\"\r\n            ]\r\n        }\r\n    ],\r\n```\r\n\r\nI refer the attributes terms objects given by ```/wp-json/wc/v3/products/attributes/<attribute_id>/terms```. For eg.\r\n```\r\n[\r\n    {\r\n        \"id\": 47,\r\n        \"name\": \"LARGE\",\r\n        \"slug\": \"large\",\r\n        \"description\": \"Large Invitation Cards\",\r\n        \"menu_order\": 0,\r\n        \"count\": 32,\r\n        \"_links\": {\r\n            \"self\": [\r\n                {\r\n                    \"href\": \"https://www.kalashcards.com/wp-json/wc/v3/products/attributes/5/terms/47\"\r\n                }\r\n            ],\r\n            \"collection\": [\r\n                {\r\n                    \"href\": \"https://www.kalashcards.com/wp-json/wc/v3/products/attributes/5/terms\"\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    {\r\n        \"id\": 46,\r\n        \"name\": \"MEDIUM\",\r\n        \"slug\": \"medium\",\r\n        \"description\": \"Medium Invitation Cards\",\r\n        \"menu_order\": 0,\r\n        \"count\": 272,\r\n        \"_links\": {\r\n            \"self\": [\r\n                {\r\n                    \"href\": \"https://www.kalashcards.com/wp-json/wc/v3/products/attributes/5/terms/46\"\r\n                }\r\n            ],\r\n            \"collection\": [\r\n                {\r\n                    \"href\": \"https://www.kalashcards.com/wp-json/wc/v3/products/attributes/5/terms\"\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    {\r\n        \"id\": 45,\r\n        \"name\": \"SMALL\",\r\n        \"slug\": \"small\",\r\n        \"description\": \"Small Invitation Cards\",\r\n        \"menu_order\": 0,\r\n        \"count\": 2,\r\n        \"_links\": {\r\n            \"self\": [\r\n                {\r\n                    \"href\": \"https://www.kalashcards.com/wp-json/wc/v3/products/attributes/5/terms/45\"\r\n                }\r\n            ],\r\n            \"collection\": [\r\n                {\r\n                    \"href\": \"https://www.kalashcards.com/wp-json/wc/v3/products/attributes/5/terms\"\r\n                }\r\n            ]\r\n        }\r\n    }\r\n]\r\n```\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"I think the sales report `/wp-json/wc/v3/reports/sales` provides inconsistent data if there are refunds in the given period. The field `total_sales` contains the gross sales minus the refunds. If I have gross sales of `\"100.00\"` Euro today and a refund of `\"8.00\"` Euro, `total_sales` is `\"92.00\"`. Also the `total_refunds` field has value 8. Correct!\r\n\r\nBut in the `totals` array for the report grouped by day, the field `sales` has a value `\"100.00\"` including the refund. Also there are no field `refunds` in the array and it's not possible to retrieve the correct gross sales for the day. Incorrect!\r\n\r\nI think that `sales` in the `totals` array should also calculated minus the current refunds and there should be a additional field `refunds` for every day in the array.\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"**Describe the bug**\r\n\r\n2647076-zen\r\n\r\nPressing logout via a menu item returns a message - `Are you sure you want to log out? Confirm and log out`.\r\n\r\nPressing the [submenu button `logout`](https://github.com/woocommerce/woocommerce/blob/2e61321e2a6b89d89de92b0270c6cd0e00a44ea9/includes/wc-account-functions.php#L95) or the [`not %1$s? <a href=\"%2$s\">Log out</a>`](https://github.com/woocommerce/woocommerce/blob/2e61321e2a6b89d89de92b0270c6cd0e00a44ea9/templates/myaccount/dashboard.php#L29) immediate logs the customer out. \r\n\r\nAny menu link added via the Customizer has one nonce, and the My Account links have another nonce. \r\n\r\nWhen the `Are you sure you want to log out? Confirm and log out` is shown, `log out` is now linked to the same nonce as the other two. \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to [site]/my-account\r\n2. Click on a Logout menu item\r\n3. See that the confirmation message is shown\r\n4. Refresh page\r\n5. Click on the Submenu item or the \"not you\" link\r\n6. Notice that the customer is logged out\r\n\r\n**Screenshots**\r\n\r\n![woo_logout_nonce](https://user-images.githubusercontent.com/52214/72754341-6fe08980-3bbf-11ea-98ff-31857190770c.png)\r\n\r\nImage link - https://d.pr/i/YNOgbi\r\n\r\n**Expected behavior**\r\n\r\nPressing any logout button on the site presents the same behavior - one-click logout. \r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only the WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\nIntroduced in #15571\r\n\r\n**WordPress Environment**\r\n<details>\r\n```\r\n\n\n###\n\n","completion":" [1891051451]"}
{"prompt":"**Describe the bug**\r\nFor some data variables in a product an array can be used, for example for the upsell_ids. When we remove elements from this array it reverts back to the old state after saving the product. So if we continue using this product in code it will contain incorrect data.\r\n\r\nThis was originally brought to light in the Bookings extension, see: https://github.com/woocommerce/woocommerce-bookings/issues/2780\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create a simple product with multiple upsell products assigned\r\n2. Get the ID of this product to be able to reproduce it with some code as follows:\r\n\r\n```\r\n$product = wc_get_product( 581 );\r\n$upsells = $product->get_upsell_ids();\r\nvar_dump( 'initial', $upsells );\r\n$remove = array_pop( $upsells );\r\n\r\n$product->set_upsell_ids( $upsells );\r\nvar_dump( 'after update', $product->get_upsell_ids(), $product->get_changes() );\r\n\r\n$product->save();\r\nvar_dump( 'after save', $product->get_upsell_ids() );\r\n\r\n$product->save();\r\nvar_dump( 'second save', $product->get_upsell_ids() );\r\n```\r\n\r\nInitially `get_upsell_ids` will return: `array(2) { [0]=> int(170), [1]=> int(8) }`\r\nAfter removing and updating it will return: `array(1) { [0]=> int(170) }`\r\nAfter the first save it will return: `array(2) { [0]=> int(170), [1]=> int(8) }`\r\n\r\nIt will save the product correctly, but won't replace the data in the object correctly after saving. When saving the second time it won't do anything because the changes array is empty.\r\n\r\n**Expected behavior**\r\nWe would expect the product option to always contain the latest information. The reason it contains the older information is because a recursive replace is done, see: https://github.com/woocommerce/woocommerce/blob/3.8.1/includes/abstracts/abstract-wc-data.php#L719\r\n\r\nThis code works fine when adding elements to an array. But when removing elements from an array it doesn't update them correctly. Which is because of the following behaviour:\r\n\r\n> 1. If a key from the first array exists in the second array, its value will be replaced by the value from the second array.\r\n> 2. If the key exists in the second array, and not the first, it will be created in the first array.\r\n> 3. If a key only exists in the first array, it will be left as is.\r\n\r\nThe third point is where it doesn't remove the data from the array. One suggestion was to replace the function call with `array_replace`. Does that cause any other problems or is there a specific need to recursively walk through the arrays?\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n<details>\r\n\r\n```\r\nWordPress 5.3.2\r\nWooCommerce 3.8.1\r\n```\r\n</details>\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"Dear Woocommerce,\r\n\r\nRecently we have been unable to click on the select down in the backend at product > product type on a Samsung tablet.\r\n\r\nWP Version: **5.3.2**\r\nWoo Version: **3.8.1**\r\nRole: **Admin**\r\nTablet: **Samsung Galaxy Tab A**\r\n\r\nSee screenshot for the product type select down that we can no longer click on.\r\nScreenshot: https://prnt.sc/qnlu52\r\n\r\nThanks!\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"I am using the api and writing product 'stock_quantity' in decimals, however as the api only excepts integer values, that fails. \r\n\r\nI have made a local patch in 'src\\Controllers\\Version2\\class-wc-rest-products-v2-controller.php' where I changed at line 1718:\r\n\r\n\t\t\t\t'stock_quantity'        => array(\r\n\t\t\t\t\t'description' => __( 'Stock quantity.', 'woocommerce-rest-api' ),\r\n\t\t\t\t\t'type'        => **'integer'**,   \r\n\t\t\t\t\t'context'     => array( 'view', 'edit' ),\r\n\t\t\t\t),\r\n\r\ninto:\r\n\r\n\t\t\t\t'stock_quantity'        => array(\r\n\t\t\t\t\t'description' => __( 'Stock quantity.', 'woocommerce-rest-api' ),\r\n\t\t\t\t\t'type'        => **'number'**,\r\n\t\t\t\t\t'context'     => array( 'view', 'edit' ),\r\n\t\t\t\t),\r\n\r\nIs it possible to change this for version2 - version4?  \r\n\r\n\r\n\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"Follow up to https://github.com/woocommerce/woocommerce-admin/pull/3313\r\n\r\nAs part of the data layer refactor, an opportunity presents itself to include [ErrorBoundaries](https://reactjs.org/docs/error-boundaries.html) to gracefully handle errors happening either within data handling or the component tree itself. We can also utilise an ErrorBoundary to fire Tracks events along with associated messages.\r\n\r\n>I recommend that there'd be a distinct ErrorBoundary component created and it is used to wrap slices of the component tree in the app that you want errors to be isolated to with appropriate handling for surfacing errors (instead of the current implementation which could result in the entire app getting unmounted).\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"\r\ni am developing mobile application to connect WooCommerce wordpress V3 rest API in iOS and Android.\r\n\r\ni am getting the product list from Rest API\r\n\r\n\"wp-json/wc/v3/products\"\r\n\r\ni am able to filter product using\r\n\r\n\"wp-json/wc/v3/productscategory=241&attribute=pa_flavor&attribute_term=301\"\r\n\r\nand filter multiple attribute term using\r\n\r\n\"wp-json/wc/v3/products?attribute=pa_flavor&attribute_term=301,302,305\".\r\n\r\ni need to filter product with multiple attribute(like pa_flavor,pa_size,pa_color... etc.) in rest API. how can do that?\r\n\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"### Is your feature request related to a problem? Please describe.\r\nWooCommerce [caches template files](https://href.li/?https://github.com/woocommerce/woocommerce/blob/8675e26c288730ad7ee9657a74769666fd411d1d/includes/wc-core-functions.php#L208-L214) into `wp_cache` . If a template is updated the cache key needs to be flushed to reflect the new changes. Currently, there are two options:\r\n\r\n1) know the cache key to remove then run ``\r\n2) run `wp cache flush` to flush the cache of the full site. \r\n\r\nEach of these has its own setbacks. Option one requires knowledge of the key, which isn't always the easier thing to find. After being sanitized a template key looks something like `template-cartmini-cartphp woocommerce ---381`. In addition, if you change multiple templates the key will need to be flushed for each changed template. Option two is a performance concern for high traffic environments when really only a few keys need to be flushed not the whole sites.\r\n\r\n### Describe the solution you'd like\r\nIt would be great to have a WC CLI command to flush the template cache. Either under `tools` or as its own command. \r\n`wp wc tool run clear_template_cache` || `wp wc template cache flush`\r\n\r\n### Describe alternatives you've considered\r\nImplementing a custom CLI command to handle this. Or @peterfabian pointed out those with SSH access can run:\r\n\r\n```\r\ncd wp-content/plugins/woocommerce/templates\r\nfind . -type f | tr -d ./ | sed \"s/\\(.*\\)/wp cache delete template-\\1---381 woocommerce/\" | bash -e\r\n```\r\n\n\n###\n\n","completion":" [33006876]"}
{"prompt":"**Describe the bug**\r\nEmails are not displayed correctly in the Hebrew language:\r\n\r\n![https://cld.wthms.co/ok3FWD+](https://cld.wthms.co/ok3FWD+)\r\n\r\n**To Reproduce**\r\n1. Check if the default emails are working normally when the site language is set to English\r\n    ![https://cld.wthms.co/8yaM5h+](https://cld.wthms.co/8yaM5h+)\r\n    ![https://cld.wthms.co/I2UHaH+](https://cld.wthms.co/I2UHaH+)\r\n2. Change language to Hebrew, and see that the emails don't fit in the screen on mobile devices\r\n    ![https://cld.wthms.co/wR8JlL+](https://cld.wthms.co/wR8JlL+)\r\n3. Update the translations and then again. No luck:\r\n    ![https://cld.wthms.co/Kx0uLc+](https://cld.wthms.co/Kx0uLc+)\r\n    ![https://cld.wthms.co/ujBcK5+](https://cld.wthms.co/ujBcK5+)\r\n    ![https://cld.wthms.co/2H7C8U+](https://cld.wthms.co/2H7C8U+)\r\n\r\n**Expected behavior**\r\nWithout any changes to the template, the text should be wrapped, and content formatting should fit within the device screen\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\nAny\r\n\n\n###\n\n","completion":" [33006876]"}
{"prompt":"Hello! We are using the WC v3 API to update a WC Product in the WC mobile apps. During my testing, I noticed that passing a non-decimal string to the Product weight, dimensions, regular/sale price where a numeric string is expected would fail silently. An example: passing a non-decimal string to the Product weight and dimensions:\r\n\r\nAPI request body:\r\n```\r\n{\r\n    \"weight\": \"light\",\r\n    \"dimensions\": {\r\n      \"length\": \"long\",\r\n          \"width\": \"2\",\r\n          \"height\": \"2\"\r\n    }\r\n}\r\n```\r\n\r\nAPI response:\r\n```\r\n{\r\n    ... // Other Product attributes\r\n    \"weight\": \"\",\r\n    \"dimensions\": {\r\n        \"length\": \"\",\r\n        \"width\": \"2\",\r\n        \"height\": \"2\"\r\n    }\r\n}\r\n```\r\n\r\nThe weight/dimension attribute becomes empty without any validation errors. I was wondering if there are some reasons behind this behavior to not throw any validation errors? It's not blocking mobile since we can do client-side validation, just would like to check if this design is to support certain use cases.\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"**Is your feature request related to a problem? Please describe.**\r\n\r\nWhen an order is placed, Woocommerce alone stores at least 41 lines related to that order in the post_meta table. So please keep in mind that we're not even considering other custom lines.\r\n\r\nThis issue should be properly addressed, since lot of that stored data is not relevant/necessary in many cases.\r\n\r\n**Describe the solution you'd like**\r\n\r\nLet's break down some major cases:\r\n\r\n**1) Taxes**\r\n\r\nIf taxes are not enabled (the respective checkbox in _Settings->General_ is empty), the following lines should not be recorded:\r\n\r\n`_cart_discount_tax,\r\n_order_shipping_tax,\r\n_order_tax,\r\n_prices_include_tax,\r\nis_vat_exempt`\r\n\r\n**2) Coupons**\r\n\r\nIf coupons are not used (the respective checkbox in _Settings->General_ is empty), the following lines should not be recorded:\r\n\r\n`_cart_discount,\r\n_recorded_coupon_usage_counts`\r\n\r\n**3) Shipping destination**\r\n\r\nIf `'Force shipping to the customer billing address'` option is selected in _Settings->Shipping->Shipping options_, the following lines should not be recorded (and only billing details should be used for shipping purposes):\r\n\r\n`_shipping_first_name,\r\n_shipping_last_name,\r\n_shipping_address_1,\r\n_shipping_address_2,\r\n_shipping_city,\r\n_shipping_state,\r\n_shipping_country,\r\n_shipping_address_index`\r\n\r\n  **3) a.** As a further performance improvement, I would also suggest that all billing details could be recorded as an **array**, instead of 7 separate post meta lines as they are currently recorded.\r\n\r\n  **3) b.** Are `_billing_address_index` and `_shipping_address_index` used anywhere? -> maybe you should consider completely removing them.\r\n\r\n**4) Selling only physical products**\r\n\r\nIf no downloadable items are involved, `_download_permissions_granted` should not be recorded.\r\n\r\n**5) Other questionable post meta**\r\n\r\n`_recorded_sales,\r\n_order_stock_reduced`\r\n\r\nAre these used somehow? I mean, when a product is sold, there is the `total_sales` product meta that gets updated and that should suffice.\r\n\r\n**As you can see, in my case (as well as it surely is the case for many, many, many other Woocommerce stores), the order-related post_meta _could be reduced from ~42 to ~19_, which would be a hell of an improvement.**\r\n\n\n###\n\n","completion":" [472334370]"}
{"prompt":"**Describe the bug**\r\nAs the title say, the attribute `refunded_payment` in Refunds objects isn't showed in any POST response, while the [documentation](https://woocommerce.github.io/woocommerce-rest-api-docs/?shell#order-refund-properties) shows that it should be in any response, even if it's a read-only attribute. **Note** that I tried this only with `api_refund` attribute set to `false` in POST requests.\r\n\r\n**To Reproduce**\r\nTry to make a GET request to the Refund endpoint and you'll see that the `refunded_payment` attribute is there.\r\nSend a POST request to the same endpoint and you won't find the `refunded_payment` attribute.\r\n\r\n**Screenshots**\r\nScreenshots from postman\r\n![GET Request](https://user-images.githubusercontent.com/17519322/65414056-28094b80-ddf3-11e9-976a-f87f13c053fa.png)\r\nGET Request\r\n\r\n![POST Request](https://user-images.githubusercontent.com/17519322/65414065-2d669600-ddf3-11e9-8c2f-6ca30326febd.png)\r\nPOST Request\r\n\r\n**Expected behavior**\r\n`refunded_payment` attribute should be in any response.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n<details>\r\n\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"**Description of the problem**\r\nThe syncing system sends requests to `/wp-json/wc/v3/products/batch` endpoint. It usually creates concurrent connections to the WooCommerce API. Sometimes, it happens that if two or more requests contain information about the same product and they run at the same time we end up with multiple products created having identical SKUs.\r\n\r\n**Steps to reproduce**\r\n```\r\ncurl -X POST \\\r\n  https://shop.test/wp-json/wc/v3/products/batch \\\r\n  -H 'Authorization: Basic Y2tfZWExNmNmNzVkZjkyMWM4YWZmYmI2MjAxYmZiMjU0ODAwNjNhYzk2MTpjc183MDAzOGMxNTRiZWVlYmEyMTU2ZmQ4MGQ2NWE5ZmM1NzcyMGY5M2Mz' \\\r\n  -H 'Content-Type: application/json' \\\r\n  -d '{\r\n    \"create\": [\r\n        {\r\n            \"name\": \"Unique SKU product\",\r\n            \"type\": \"simple\",\r\n            \"sku\": 12345\r\n        }\r\n    ]\r\n}' -k & curl -X POST \\\r\n  https://shop.test/wp-json/wc/v3/products/batch \\\r\n  -H 'Authorization: Basic Y2tfZWExNmNmNzVkZjkyMWM4YWZmYmI2MjAxYmZiMjU0ODAwNjNhYzk2MTpjc183MDAzOGMxNTRiZWVlYmEyMTU2ZmQ4MGQ2NWE5ZmM1NzcyMGY5M2Mz' \\\r\n  -H 'Content-Type: application/json' \\\r\n  -d '{\r\n    \"create\": [\r\n        {\r\n            \"name\": \"Unique SKU product\",\r\n            \"type\": \"simple\",\r\n            \"sku\": 12345\r\n        }\r\n    ]\r\n}' -k\r\n```\r\n\r\n**Expected behavior**\r\nBy default, it should not be possible to add a new product with an existing SKU.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n<details>\r\n```\r\nServerinfo: Apache/2.4.41 (Unix) OpenSSL/1.0.2s PHP/7.2.22\r\nPHP version: 7.2.22\r\nMySQL version: 5.5.5-10.4.6-MariaDB\r\nWooCommerce version: 3.6.4\r\nWordPress version: 5.2.3\r\n```\r\n</details>\r\n\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"**Describe the bug**\r\nWhen creating a new order via the API with a coupon code like this:\r\n\r\n\"coupon_lines\": [\r\n    {\r\n        \"code\": \"something\"\r\n    }\r\n],\r\n\r\nThe usage_count is triggered twice IF you also include:\r\n\r\n\"set_paid\": true\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create new coupon, notice usage_count = 0\r\n2. Create new order via /orders/ API. Include coupon_lines to apply the new coupon AND \"set_paid\" :true\r\n3. On success check usage_count for the coupon, now = 2\r\n4. Do it again but instead use \"set_paid\": false and notice usage_count increased by 1\r\n\r\n**Expected behavior**\r\nRegardless of payment status the usage_count should only increase by 1?\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x ] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x ] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n\r\n\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"**Describe the bug**\r\nIf you try to remove coupon restrictions like for instance products or categories the changes will not be saved. This error occurs only if the coupon is saved twice during the process - for instance inside of the woocommerce_coupon_options_save action.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create a coupon and add restrictions (any except checkboxes)\r\n2. Add another save action to the coupon, for instance in woocommerce_coupon_options_save action.\r\n\r\n`add_action('woocommerce_coupon_options_save',function($post_id, $coupon){\r\n $coupon -> save();\r\n});`\r\n\r\n3. Try to remove any of the restrictions so the restriction field is empty and save\r\n4. See the error: restrictions are still there\r\n\r\n**Expected behavior**\r\nRemoved restrictions should be removed.\r\n\r\n**My temporary solution**\r\nCloning save method from class-wc-meta-box-coupon-data.php and run it with highest priority on woocommerce_coupon_options_save hook.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [ ] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active. (issue can not occur without any plugins involved)\r\n- [X] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [X] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051442]"}
{"prompt":"**Describe the bug**\r\nLet's say in my PayPal business account I have some shipping calculations enabled, like so:\r\n\r\n![https://cld.wthms.co/vyJ8U9](https://cld.wthms.co/vyJ8U9+)\r\nImage link: https://cld.wthms.co/vyJ8U9\r\n\r\nI have a rule in my WC store which enables Free Shipping over $50 so I checkout and get Free Shipping. My order total is $60 in WC, however, when I get to PayPal, it's charging me $25:\r\n\r\n![https://cld.wthms.co/jT5T0v](https://cld.wthms.co/jT5T0v+)\r\nImage link: https://cld.wthms.co/jT5T0v\r\n\r\nFor some reason, PayPal thinks we don't yet have shipping costs applied, although we do(we want to use the free shipping method).\r\n\r\nIt looks to me like what prompts this action is the `no_shipping` parameter in the request arguments:\r\n\r\nhttps://github.com/woocommerce/woocommerce/blob/92253ea862981c68b62976f695d699c1feccd6bd/includes/gateways/paypal/includes/class-wc-gateway-paypal-request.php#L254\r\n\r\nWhen checking out with Free Shipping, this is sent as `0` and a shipping calculation is returned by PayPal. Manually overriding this to `1` will calculate the order total properly on PayPal's end:\r\n\r\n![https://cld.wthms.co/maWIjz](https://cld.wthms.co/maWIjz+)\r\nImage link: https://cld.wthms.co/maWIjz\r\n\r\nThis is how PayPal describes this parameter [in their docs](https://developer.paypal.com/docs/api/payment-experience/v1/#definition-input_fields):\r\n![https://cld.wthms.co/l3RPXr](https://cld.wthms.co/l3RPXr+)\r\nImage link: https://cld.wthms.co/l3RPXr\r\n\r\nWhich is a poor description if it doesn't just change the display of products but whether or not calculations are returned by PayPal. \r\n\r\nAnyways, it seems like a fix could go a few ways:\r\n\r\n* If the order contains all free shipping methods(should we worry about plugins which split WC shipping into multiple packages?) send `1` as the `no_shipping` parameter.\r\n* If the order contains all free shipping methods, skip sending the `no_shipping` parameter entirely.\r\n* Add a $0 Shipping line item?\r\n\r\nTo set up shipping calculations in PayPal:\r\n\r\n* Log into a Business account at sandbox.paypal.com.\r\n* Click the gear icon on the top-right near the Log Out button.\r\n* Use the Search field on the left and search for 'shipping'.\r\n* Click on the \"Shipping Calculations\" result.\r\n* Add a domestic or international ruleset, whichever you prefer for testing.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n<details>\r\n```\r\n\n\n###\n\n","completion":" [1891051459]"}
{"prompt":"in woo-mobile, we need to have the following properties returned by the `v3/products/reviews/` endpoint:\r\n- product name\r\n- product image url (we only need the small thumbnail url)\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"**Describe the bug**\r\nWhen viewing a variable product with gallery images, selected variations with a variation image set may not correctly resize the viewport. The size the flex-viewport matches the aspect ratio of the first selected variation's image rather than the selected variation's image.\r\n\r\nIn our store, we noticed this on the second-selected variations since our default variations typically have no variation image set and the erroneous image ratio matches the 'Featured Image'.\r\n\r\n1. We have a default variation set and link people to other variations using a URL with `/?attribute_pa_xxx=value` type parameters. When they go, the default variation is loaded automatically, and then the passed variation is loaded automatically with the incorrect aspect ratio. \r\n2. Whenever a customer selects a different variation which has a variation image with a different aspect ratio than the default featured image.\r\n\r\nIt is easy to correct the issue by clicking around and then the script doesn't repeat the error until a reload, but it looks unintentional and glitchy.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. On a fresh install, use the customizer to configure WooCommerce Product Images to be 'Uncropped'.  _Optional_: Enter `.flex-viewport { border:1px red solid; }` in the Additional CSS area of the customizer to help visualize the error.\r\n2. Create a variable product with two variations (remember to assign prices to each).\r\n3. Set the featured image, for the whole product and variation images for each variation, **all with different image ratios**.\r\n4. Set at least one Gallery Image.\r\n5. View the product and select the first variation. The viewport _may_ resize to the variation image. \r\n6. Select the second variation. **See error: The viewport will resize to the featured image aspect ratio, not the newly selected variation image's aspect ratio.**\r\n7. Alternatively, if you have trouble seeing the error, visit the product with url parameters to set the attribute, something like: <your product URL>/?attribute_size=large \r\n\r\n**Screenshots**\r\n**Product page load:**\r\n![image](https://user-images.githubusercontent.com/220149/63301596-cb64bf00-c28f-11e9-91a9-7212a03430cb.png)\r\n\r\n**After selecting the first variation:** (Output is the same if we go via URL, website/product/test/?attribute_attribute=value)\r\n![image](https://user-images.githubusercontent.com/220149/63301827-652c6c00-c290-11e9-8f9e-a5a917d03cc8.png)\r\n\r\nSelecting second variation (see error - should be 600x400, can't even see text):\r\n![image](https://user-images.githubusercontent.com/220149/63301906-a4f35380-c290-11e9-9d33-61a001fbdefa.png)\r\n\r\n**Expected behavior**\r\nI expect the viewport to reliably resize to the selected variation's image when selected:\r\n![image](https://user-images.githubusercontent.com/220149/63302253-7aee6100-c291-11e9-8f46-bd3c27df78f4.png)\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n<details>\r\n\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"Hello, \r\nI have a question about \"stock threshold\" option for every product separately. Is it possible to manage that field through WooCommerce API?\r\nThank you. :)\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"**Describe the bug**\r\nCurrently, it is possible to define Shipping Zones by using only postcodes -- without selecting any countries, states or continents. The expected behavior is that when a customer uses the same postcode in the checkout page as the one used in the Shipping Zone then the Shipping Zone is matched. \r\n\r\nI noticed that if I use a postcode with spaces when setting up the Shipping Zone, similar to this: https://cl.ly/cc4d55280856 and then I use the same postcode in the checkout page as well, the Zone is matched for specific countries (e.g. UK): https://cl.ly/aeb0793a66d5 but not for others (e.g. Greece): https://cl.ly/81b8c53a3f3e.\r\n\r\nMoreover, if I set up a Shipping Zone using ranges and the min/max postcodes contain spaces: https://cl.ly/0b46eef68694, then if I:\r\n\r\n- use one postcode with spaces within this range in the checkout page and, \r\n\r\n- select a country (e.g. Greece) that did not previously match, then;\r\n\r\nthe Shipping Zone is correctly matched.\r\n\r\nPR incoming.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to *WooCommerce > Shipping > Shipping Zones* and set up a Shipping Zone using a postcode with spaces, similar to this: https://cl.ly/3715463e6ce8.\r\n2. Add a product to the cart and go to the checkout page.\r\n3. Add the same postcode as the one used in the Shipping Zone.\r\n3. Choose 'United Kingdom' as the Shipping Country -- the Zone is matched and Shipping Methods show up.\r\n4. Choose 'Greece' as the Shipping Country -- the Zone is not matched and not any Shipping Methods show up.\r\n\r\n**Screenshots**\r\nHere's a video demonstrating this behavior: https://cl.ly/53f23d4de4e3\r\n\r\n**Expected behavior**\r\nIf a Shipping Zone is defined using only a Shipping Postcode, then this Zone should be matched when the same postcode is used in the checkout -- regardless of the selected country.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n\n\n###\n\n","completion":" [1891051459]"}
{"prompt":"**Describe the bug**\r\nWhen viewing a single product, the additional thumbnails are in the correct order (rtl), however, when you expand the view, the images rotate in the incorrect order (ltr). \r\n\r\n**Affected tickets**\r\nhttps://wordpress.org/support/topic/product-image-lightbox-scroll-direction-on-r2l-site/\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create or use a product that has a featured image and at least 2 additional thumbnails.\r\n2. Change site language to rtl language, such as Hebrew.\r\n3. View product. \r\n4. Expand the image view\r\n5. When clicking _right_ it should go to the **last** image in the set and count down from there. \r\n6. When clicking _left_ it should go to the **second** image in the set and count up from there. \r\n\r\n**Screenshots**\r\n![](https://cld.wthms.co/b6O5M9+)\r\nImage Link: https://cld.wthms.co/b6O5M9\r\n\r\nAnimation shows incorrect behavior:\r\n![](https://cld.wthms.co/Q7jz21+)\r\nImage Link: https://cld.wthms.co/Q7jz21\r\n\r\n**Expected behavior**\r\nWhen clicking _right_ it should go to the **last** image in the set and count down from there. When clicking _left_ it should go to the **second** image in the set and count up from there. \r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\n\n###\n\n","completion":" [1891051461,468434635]"}
{"prompt":"**What to improve**\r\nThe JS detection of WooCommerce is invalidating styles at the end of parsing the HTML enforcing a 'Recalculate Style' action in the browser's main thread. This slows the front-end performance and creates a worst final user experience.\r\n\r\n**In more detail**\r\nWooCommerce is adding the class `woocommerce-no-js` to the body and in the footer change it to `woocommerce-js` if JavaScript is enabled.\r\nhttps://github.com/woocommerce/woocommerce/blob/master/includes/wc-template-functions.php#L316\r\n\r\nAt the point where this JS is added the browser process already parsed most of the page, and is probably in a advanced point of rendering (it may depend on lot of factors, for sure).\r\n\r\nBy changing a class in a body a re-render of the CSSOM is forced to happen. This restarts the page render and slows the final user experience. It can look insignificant but depending on the resources in the device rendering the page this can be relevant.\r\n\r\nAlso for sites who try to optimize its front-end performance will be a nice improvement.\r\n\r\n**Proposed solution**\r\nManage the CSS for non JavaScript support with `<noscript>` tag to no penalize the browsers with JS support. If browsers already know if they have JS support and have a tag for it makes sense to use it.\r\n\r\nIn detail:\r\n - Place the CSS selectors for `woocommerce-no-js` class in a dedicated file.\r\n - Link this file inInclude the header with something like:\r\n```\r\n<noscript>\r\n   <link rel='stylesheet' id='wc-no-js-css'  href='/path/to/file/woocommerce-no-js.css' type='text/css' media='all' />\r\n</noscript>\r\n```\r\n - In https://github.com/woocommerce/woocommerce/blob/master/includes/wc-template-functions.php remove line 306 and all the function `wc_no_js()`\r\n\r\nNote that the body selector `woocommerce-no-js` is only used here:\r\n - assets/css/twenty-nineteen.scss\r\n - assets/css/twenty-seventeen.scss\r\n - assets/css/woocommerce.scss\r\n\r\nWith the same content:\r\n```\r\n.woocommerce-no-js {\r\n      form.woocommerce-form-login,\r\n      form.woocommerce-form-coupon {\r\n              display: block !important;\r\n      }\r\n      .woocommerce-form-login-toggle,\r\n      .woocommerce-form-coupon-toggle,\r\n      .showcoupon {\r\n              display: none !important;\r\n     }\r\n}\r\n```\r\n\r\nIf makes sense to do this improvement I I will be happy to provide an initial patch for it.\r\n\n\n###\n\n","completion":" [472334370]"}
{"prompt":"**Describe the bug**\r\nA coupon with both Products and Product Categories restrictions gives the following error in cart: `Sorry, this coupon is not applicable to selected products.`\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create the following coupon:\r\n\r\n![https://cld.wthms.co/ABIW7V](https://cld.wthms.co/ABIW7V+) \r\nFull Size: https://cld.wthms.co/ABIW7V\r\n\r\n(Discount type or Coupon expiry date doesn't matter)\r\n\r\n![https://cld.wthms.co/xItanx](https://cld.wthms.co/xItanx+) \r\nFull Size: https://cld.wthms.co/xItanx\r\n\r\nMake sure to include both Products and Product Categories restriction.\r\n\r\n2. Add a product which should work with the coupon to cart and add this coupon:\r\n\r\n![https://cld.wthms.co/2QpQz8](https://cld.wthms.co/2QpQz8+) \r\nFull Size: https://cld.wthms.co/2QpQz8\r\n\r\nAs soon as you keep only **one** of the restrictions - either Products or Product Categories, it will work:\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n[x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n[x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n[x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051442]"}
{"prompt":"**Describe the bug**\r\nWhen product URLs are set to a structure of `/any-text-here/%product_cat%/` in the Permalink settings (`Settings > Permalinks`), anything can be input for the `/%product_cat%/` section and the product will still display without issue: \r\n\r\n![https://cld.wthms.co/qODuRj](https://cld.wthms.co/qODuRj+)\r\nImage link: https://cld.wthms.co/qODuRj\r\n\r\nExample shown here: \r\n\r\n![https://cld.wthms.co/V2lU7y](https://cld.wthms.co/V2lU7y+)\r\nScreencast link: https://cld.wthms.co/V2lU7y\r\n\r\nIt's particularly an issue as Google is still showing old, deleted categories under coverage but not indexed as \"Alternate page with proper canonical tag\" because these products still resolve from the URLs as any text string can be input.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to 'Settings > Permalinks' and set something like this: https://cld.wthms.co/YUSEIa (where `/product/` can be anything.\r\n2. Go to the frontend of any product and change the `/product/` section of the url to anything.\r\n3. The URL still works without issue.\r\n\r\n**Screenshots**\r\n\r\n![https://cld.wthms.co/qODuRj](https://cld.wthms.co/qODuRj+)\r\nImage link: https://cld.wthms.co/qODuRj\r\n\r\nExample shown here: \r\n\r\n![https://cld.wthms.co/V2lU7y](https://cld.wthms.co/V2lU7y+)\r\nScreencast link: https://cld.wthms.co/V2lU7y\r\n\r\n**Expected behavior**\r\nNot sure if this is expected behavior, but this is an issue for sites that may have updated the `/product/` section of the URL because Google will still show the old, deleted URLs (as \"Alternate page with proper canonical tag\") because these products still resolve from the URLs as any text string can be input.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n<details>\r\n```\r\n`\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"On woo-mobile, we have a need to show a visual indicator when a customer is a new customer. It'd be really helpful if we could have either:\r\n\r\na. A boolean flag called new_customer included in the response, or\r\nb. a orders_count element added to the response (if the user has multiple orders, then not new)\r\n\r\nPlease let me know if I can provide any additional information.\r\n\r\nOriginally logged at https://github.com/woocommerce/woocommerce/issues/24187 by @AmandaRiu\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"ref: https://woocommerce.com/posts/building-for-web-accessibility/#comment-9029518\n\n###\n\n","completion":" [702347761]"}
{"prompt":"**Describe the bug**\r\nI'm trying to manage a product with a large number of variations (100+). To make my life easier, I'd like to reorder them in WP Admin. However, there's only 15 variations loaded per page, so I can't just use drag and drop and need to rely on the variation menu order popup instead. However, when i use it, different variations often end up having the same menu order.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create a product with a large number of variations\r\n2. Go to second page, click the hamburger menu and set new menu order in a popup (i.e. 3)\r\n3. Update the product and check the database records for product variations.\r\n4. Observe there are now two variations with the same menu order 3. This alone isn't a big problem, but after multiple operations like this there can be numerous duplicates and reordering the variations becomes difficult.\r\n\r\n**Screenshot**\r\n![Screenshot](https://cld.wthms.co/nV7Z6a+)\r\nScreenshot: https://cld.wthms.co/nV7Z6a\r\n\r\nHere is the SQL query I used to check this:\r\n\r\n```\r\nSELECT id, post_title, menu_order FROM `wp_posts` where post_parent = XXX and post_type = 'product_variation' order by menu_order \r\n```\r\n**Expected behavior**\r\nOnce I set the new menu order on a variation, the menu order of remaining variations gets rearranged so that there are no duplicates\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [x] I can reproduce this bug consistently using the steps above.\r\n\r\n**WordPress Environment**\r\n<details>\r\n\r\n```\r\n\n\n###\n\n","completion":" [1891051456,1891051461]"}
{"prompt":"**Describe the bug**\r\nOne of our customers (AIOSEOP) is experiencing this issue. He has added Product Categories instead of Products to his Shop page and in the source code there is a rel=\"next\" link to a second page that doesn't exist. We haven't been able to reproduce this on our end, but the customer did find another site where this is happening, which is using a competitor's plugin, and thus I believe this is an issue on your end.\r\n\r\n**To Reproduce**\r\nWe have not been able to reproduce this is so far.\r\n\r\n**Screenshots**\r\nEDIT: removed these now that the issue has been reproduced.\r\n\r\n**Expected behavior**\r\nSEO plugins should not be outputting a rel=\"next\" link as there is no second page, but for some reason they think there is one.\r\n\r\n**Isolating the problem (mark completed items with an [x]):**\r\n- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).\r\n- [ ] I can reproduce this bug consistently using the steps above.\r\n\n\n###\n\n","completion":" [1891051454]"}
{"prompt":"Hi!, I made a change on the Metadata properties of a Coupon and \"date_modified\" and  \"date_modified_gmt\" didn't change. This issue happens when you make and Update (Verb: PUT /wp-json/wc/v3/coupons/<id>) of a Metadata Value for the Coupons. \r\nFor example, I was trying to change the Metadata value from this:\r\n{ \r\n\"Key\" : \"Commission\"\r\n\"Value\" : \"20\"\r\n}\r\nto this:\r\n{ \r\n\"Key\" : \"Commission\"\r\n\"Value\" : \"15\"\r\n}\r\nThe value succesfully changes but the \"date_modified\" and \"date_modified_gmt\" weren't modified.\r\n\r\nThanks in advance!\n\n###\n\n","completion":" [2190477857]"}
{"prompt":"The problem concerns customer payment link and custom payment gateways. The main thing is that customer can't effect payment by credit card. These (WireCard and Micropayment) and most of other plugins alike store payment data in session. Such customers usually visit web-site the first and maybe the last time. It is worth mentioning that shopping cart is empty for such customers. \r\n\r\nAfter a set of tests a problem of non-complete setting of session cookie in browser was found.  WC_Session/WC_Session_Handler classes restore woocommerce session, but check whether this cookie is based on $_COOKIE variable. During the render of 'pay-order page' WC_Session/WC_Session_Handler miss functionality for setting wc_session into $_COOKIE. Unfortunately, this functionality for setting cookie into $_COOKIE variable initializes only on the cart page or when customer adds/removes products from shopping cart. Thats why the customer hasn't got any  possibility to complete such order as payment gateway passes explicitly to woocommerce session (that wasn't completely set).\r\n\r\nSteps to reproduce the behavior:\r\n1. Go on to 'pay-order' page (http://wp.artemanokhin.com/checkout/order-pay/18/?pay_for_order=true&key=wc_order_PzEY1bg8YMVfw);\r\n2. Select one from credit card (CC) payments and submit the order.\r\n3. After that you will get non loading CC form (WireCard) or crashed thank-you page (Micro-Payment). \r\n\r\nTo sum up, at the point of getting session data, method [has_session()](https://github.com/woocommerce/woocommerce/blob/9eca72849dba6c3c491e5822dee7a3b47c8bead4/includes/class-wc-session-handler.php#L152) is always false, as $_COOKIE hasn't got any woocommerce_session_ param. In addition, before rendering order-pay page or at the point of init_session_cookie(), the app needs to initialize method [set_customer_session_cookie()](https://github.com/woocommerce/woocommerce/blob/9eca72849dba6c3c491e5822dee7a3b47c8bead4/includes/class-wc-session-handler.php#L124) with true param for $cookie = false (and only for the case of pay-order page) for correct payment process with custom gateways (lots of them don't care about pleasant storing of data without session).\r\n\r\n![non_complete_session_setting](https://user-images.githubusercontent.com/29947811/59267059-e7296480-8c51-11e9-91be-43f138956fc3.png)\r\n\n\n###\n\n","completion":" [1891051440]"}
{"prompt":"See https://github.com/woocommerce/woocommerce/issues/23762\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"The [API  documentation](https://woocommerce.github.io/woocommerce-rest-api-docs/#refunds) for orders describes the data format for API requests for orders. Creating a refund via the REST API does not seem to follow this format. Looking at the core code in `wc_create_refund()` function reveals that the handling for line items does not match the data format described in the documentation.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create a test order with items to refund.\r\n2. Create a JSON following the API documentation:\r\n```\r\n{\r\n    \"line_items\": [\r\n        {\r\n            \"id\": 1234, // id matching a line item\r\n            \"quantity\": 1,\r\n            \"product_id\": 5678, // id matching the line item product\r\n            \"variant_id\": 9012, // id matching the line item product variant\r\n        }\r\n    ],\r\n    \"api_refund\": false,\r\n    \"reason\": \"Testing the refund data format\"\r\n}\r\n```\r\n3. Post this JSON to the REST API\r\n4. See the following data without the correct line item data:\r\n```\r\n{\r\n  \"id\": 372,\r\n  \"date_created\": \"2019-05-06T11:25:12\",\r\n  \"date_created_gmt\": \"2019-05-06T08:25:12\",\r\n  \"amount\": \"0.00\",\r\n  \"reason\": \"Testing the refund data format\",\r\n  \"refunded_by\": 1,\r\n  \"meta_data\": [],\r\n  \"line_items\": [],\r\n  \"_links\": {\r\n    \"self\": [\r\n      {\r\n        \"href\": \"https:\\/\\/my-site.test\\/wp-json\\/wc\\/v3\\/orders\\/361\\/refunds\\/372\"\r\n      }\r\n    ],\r\n    \"collection\": [\r\n      {\r\n        \"href\": \"https:\\/\\/my-site.test\\/wp-json\\/wc\\/v3\\/orders\\/361\\/refunds\"\r\n      }\r\n    ],\r\n    \"up\": [\r\n      {\r\n        \"href\": \"https:\\/\\/my-site.test\\/wp-json\\/wc\\/v3\\/orders\\/361\"\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\n**Expected behavior**\r\nThe refund should be created for the defined line item and stocks should be recalculated based on the refunded quantity. Order total should be recalculated after the refunds.\r\n\r\nFirst of all, the documentation describes the line item id as a read-only property. Thus, my example data is invalid, but I don't see any other way to match the line item other than setting the id. Looking at the code and going through issues about the refund endpoint online, I found out that the line item id should be set as an object key for the line items *object*. This means the `line_items` property should not be an array after all. This is not documented correctly. Here's a working example of how to format the object:\r\n```\r\n\t\"line_items\": {\r\n\t\t\"123\": {}\r\n\t},\r\n```\r\nHere \"123\" is the line item id. I would prefer my example formatting as it is more consistent with the GET endpoint and the current documentation.\r\n\r\nThen, the `quantity` property is not working. Again, looking at the code reveals the `wc_create_function()` function handles the quantity by a `qty` property. This is documented incorrectly.\r\n\r\nAnother incorrectly documented property for line items is the `total` property. `wc_create_refund()` expects it to come from a property called `refund_total`. This is not documented in the [order line items section](https://woocommerce.github.io/woocommerce-rest-api-docs/#order-refund-properties).\r\n\r\nThe amount handling should also be described more thoroughly. Now the order total is not refunded without a top-level property of `amount` defining the amount to be reduced from the order total. If a request with only the line item refund is made, the line item is refunded and stocks are recalculated but the order total does not change. Here's an example of a partially working line item refund request data:\r\n```\r\n{\r\n\t\"line_items\": {\r\n\t\t\"841\": {\r\n\t\t\t\"qty\": 1,\r\n\t\t\t\"product_id\": 200,\r\n\t\t\t\"variation_id\": 206,\r\n\t\t\t\"refund_total\": \"7.90\"\r\n\t\t}\r\n\t},\r\n\t\"api_refund\": false,\r\n\t\"reason\": \"Testing\"\r\n}\r\n```\r\n\r\nAnd here's the fully working request:\r\n```\r\n{\r\n\t\"amount\": \"7.90\",\r\n\t\"line_items\": {\r\n\t\t\"841\": {\r\n\t\t\t\"qty\": 1,\r\n\t\t\t\"product_id\": 200,\r\n\t\t\t\"variation_id\": 206,\r\n\t\t\t\"refund_total\": \"7.90\"\r\n\t\t}\r\n\t},\r\n\t\"api_refund\": false,\r\n\t\"reason\": \"Testing\"\r\n}\r\n```\r\n\r\nAs you can see the documentation for creating a refund has many errors and inconsistencies. Please fix them and provide a simple and clean way of creating refunds through the REST API.\r\n\r\n<details>\r\n```\r\n\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"Currently the only option (in v2) to manage images is to replace all images on a product, which in turn causes media to be orphaned (and not deleted). It would be great to be able to append a new image to the list of the existing ones, without having to re-upload all of them (and orphan old ones). Additionally, getting ID numbers for the product as part of the response would be really good, so that external applications can cache locally what images are inside WooCommerce without having to query the product record each time.\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"https://github.com/woocommerce/woocommerce-ios/issues/242\r\n\r\nExample site: https://nuoshoppe.mystagingwebsite.com/\r\nDeactivated extension: Deposits\r\n\r\n## Steps to Reproduce\r\n1. Set up a site with the Deposits extension activated.\r\n2. Create an order that uses Deposits.\r\n3. Make an API request for a list of orders. `GET /wp-json/wc/v2/orders`\r\n4. Deactivate Deposits. \r\n5. Make an API request.\r\n\r\n**Expected Result** \r\nThe API response does not include the order with the deactivated extension. \r\nFor the example site, Order No. 801 should not appear in the response.\r\n\r\n**Actual Result**\r\nThe order is included in the response. \r\nFor the example site, Order No. 801 appears in the [response](https://gist.github.com/mindgraffiti/04706435ef9d458adb9037b9ea5477b4).\r\n\r\n\r\nThe desktop website has the expected behavior, even though the API response doesn't.\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"<!-- This form is for reporting bugs and issues specific to the WooCommerce plugin. This is not a support portal. If you need technical support from a human being, please submit a ticket via the helpdesk instead: https://woocommerce.com/contact-us/ -->\r\n\r\n<!-- Usage questions can also be directed to the public support forum here: https://wordpress.org/support/plugin/woocommerce, unless this is a question about a premium extension in which case you should use the helpdesk. -->\r\n\r\n<!-- If you have a feature request, submit it to: http://ideas.woocommerce.com/forums/133476-woocommerce -->\r\n\r\n<!-- If you are a developer who needs a new filter/hook raise a PR instead :) -->\r\n\r\n<!-- Please be as descriptive as possible; issues lacking the below details, or for any other reason than to report a bug, may be closed without action. -->\r\n\r\n## Prerequisites\r\n\r\n<!-- MARK COMPLETED ITEMS WITH AN [x] -->\r\n\r\n- [x] I have searched for similar issues in both open and closed tickets and cannot find a duplicate\r\n- [x] The issue still exists against the latest `master` branch of WooCommerce on Github (this is **not** the same version as on WordPress.org!)\r\n- [x] I have attempted to find the simplest possible steps to reproduce the issue\r\n- [ ] I have included a failing test as a pull request (Optional)\r\n\r\n## Steps to reproduce the issue\r\n\r\n<!-- We need to be able to reproduce the bug in order to fix it so please be descriptive! -->\r\n\r\n1. Create a Downloadable product with an audio file\r\n2. Go to **WooCommerce > Settings > Products > Downloadable** products and make sure that the file download method is set to `Force downloads`.\r\n3. Process an order of your Downloadable product.\r\n4. From iOS, login to your account in the site, go to **My Account > Downloads** and try to open the audio file.\r\n\r\n## Expected/actual behavior\r\n\r\nWhen I follow those steps, the audio opens in a new window and appears to be a \"Live Broadcast\". This means that I cannot fast forward or rewind the audio. After a minute or so, the audio stops and restarts. It never finishes all the way to the end.\r\n\r\nI was expecting to be able to control the timer in the audio, and for the audio to play completely and not stop half way through.\r\n\r\n![](http://cld.wthms.co/ev5XiK+)\r\nImage Link: http://cld.wthms.co/ev5XiK\r\n\r\n## Isolating the problem\r\n\r\n<!-- MARK COMPLETED ITEMS WITH AN [x] -->\r\n\r\n- [x] This bug happens with only WooCommerce plugin active\r\n- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/)\r\n- [x] I can reproduce this bug consistently using the steps above\r\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"# Settings API\r\n\r\nCurrently, WC settings are declared for each individual settings page first, then some are added to the API using filters.\r\n\r\nThis is a proposal to reverse that, and declare all the settings first for the REST API.\r\n\r\n### Goal:\r\n\r\nCreate a full settings API for WooCommerce that contains all of the core settings.\r\n\r\nAlong with the benefits listed below, this also helps prevent the current problem of moving settings causing un-intended API changes: https://github.com/woocommerce/woocommerce/issues/18669\r\n\r\n### Future Use:\r\n\r\n1) The settings endpoints can then power the settings screens in WC core.\r\n\r\n2) Plugins can add settings to these screens through the API, allowing plugins to maintain a single settings codebase for both WP Admin and Store on .com.\r\n\r\n3) Create a settings importer/exporter: https://github.com/woocommerce/woocommerce/issues/13089\r\n\r\n### TODO:\r\n\r\nDesign/create the Schema\r\n\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"Hi, I'm the author of [WooCommerce Pay for Payment plugin](https://wordpress.org/plugins/woocommerce-pay-for-payment/) (simply - adds a fee for a payment method). Everything is hooked to `woocommerce_cart_calculate_fees` action hook. One of the users [has reported](https://wordpress.org/support/topic/no-payment-fee-in-pay-for-order-page/) that it doesn't work on a \"Pay for order\" page (for a manually created order). I have had a look at it and even if you can select the payment method (which has been already selected by administrator thought), there are no such a hooks called. Can you help me out or eventually add the same hooks as on a cart page to modify its content?\r\n\n\n###\n\n","completion":" [1891051436,1891051449]"}
{"prompt":"The update endpoints for product reviews in v2 and v1 never supported status updating. v3 currently doesn't either (though the response returns a readonly value).\r\n\r\nWe can't just pass the status into `wp_update_comment` via `prepare_item_for_database` like we can for other fields, because `wp_update_comment` fails for some reason if you try to pass a status that is already being used. \r\n\r\nIt looks like the comments endpoint does a workaround for this: https://github.com/WP-API/WP-API/blob/57e027e59cef9706d42d6aa13b9db7928eb6765f/lib/endpoints/class-wp-rest-comments-controller.php#L549\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"From https://github.com/woocommerce/woocommerce/issues/13231\r\n\r\nWill require https://github.com/woocommerce/woocommerce/issues/13738\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"Search helpers have been added in 3.1: https://github.com/woocommerce/woocommerce/issues/13646\r\n\r\nThis means we could use the same system in the API for advanced order retrieval and search.\r\n\r\nhttps://github.com/woocommerce/woocommerce/issues/15444\n\n###\n\n","completion":" [2258932484]"}
