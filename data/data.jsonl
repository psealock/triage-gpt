{"prompt":"undefinedThe [Run tests against trunk after PR merge](https://github.com/woocommerce/woocommerce/actions/workflows/smoke-test-pr-merge.yml) workflow uses an incorrect workflow input to upload Allure reports. The input should be corrected from `destination-dir` to `artifact-name`.\r\n\r\n<img width=\"920\" alt=\"yHx0Q4Cmxr\" src=\"https://user-images.githubusercontent.com/4509348/227239356-c050a8a2-5457-4145-96b1-f6705f24d29b.png\">\r\n\r\n\r\n\n\n###\n\n","completion":" [3845016070,5222414669,5222415782]"}
{"prompt":"Incorrect variable name being used in one of the `api-core-tests`\r\nproductId instead of productTagId [here](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/tests/api-core-tests/tests/products/products-crud.test.js#L932)\n\n### Expected behavior\n\ncorrect variable name being used in one of the `api-core-tests`\r\nproductTagId instead of productId [here](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/tests/api-core-tests/tests/products/products-crud.test.js#L932)\n\n### Actual behavior\n\nIncorrect variable name being used in one of the `api-core-tests`\r\nproductId instead of productTagId [here](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/tests/api-core-tests/tests/products/products-crud.test.js#L932)\n\n### Steps to reproduce\n\nIncorrect variable name being used in one of the `api-core-tests`\r\nproductId instead of productTagId [here](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/tests/api-core-tests/tests/products/products-crud.test.js#L932)\n\n\n\n###\n\n","completion":" [5222414669]"}
{"prompt":"While Turborepo _does_ rebuild dependent projects for dependencies that have changed, our use of TypeScript's incremental builds can lead to strange behavior. Unless you change a file in the dependent project it won't recognize any type changes in the child project, and as a result, it will not check for incompatibility and will build \"successfully\". Given that we are already supporting build caching through Turborepo, we should remove this second source of caching.\r\n\r\nThis task involves removing `tsc -b` and `tsc --build` usages in favor of using `tsc --project`. Since we have two TypeScript builds (CJS and ESM), this will require making sure that both are still built correctly. We also need to make sure that `\"start\"` scripts watch both of them if they currently do already.\r\n\n\n###\n\n","completion":" [3844183371]"}
{"prompt":"The console now shows errors that core blocks have already been registered.  I suspect that this may be related to setting up the editor server-side first and that manual registration of core blocks client-side is no longer necessary.\n\n### Testing\n\n1. Visit the product block editor\n2. See the errors in your console\n\n### Screenshots\n\n\n![Image](https://user-images.githubusercontent.com/10561050/226727371-54c53ffa-8185-4de0-85e7-04ddc83db29c.png)\n\n\n\n### Acceptance criteria\n\n* [ ] No errors show regarding previously registered blocks in the console\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"I always used $order->update_status('completed'); it hasnt been working since last Woocommerce update.\n\n### Expected behavior\n\nUpdate order status to complete.\n\n### Actual behavior\n\nGet error Call to undefined method stdClass::update_status()\n\n### Steps to reproduce\n\n1. Try to use method update_status in an order, it wont work.\n\n\n\n###\n\n","completion":" [1891051458]"}
{"prompt":"flag acceptance of the terms and conditions it should be before payment methods and that field should be a little more visible\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [1891051440]"}
{"prompt":"As requested in [this comment](https://github.com/woocommerce/woocommerce/pull/37064#discussion_r1130713116):\n>Instead of separating this logic into two separate (ultimately 3) components would it be worth just moving the product logic into a custom hook, that either returns a new auto draft product or an existing product?\n\n>That way you can just call const product = useProductEntityRecord( productId ) and pass that straight into the Editor.\nOnly suggesting this, cause otherwise I think we are better off splitting this into separate files again (but we were actually trying to avoid that).\n\nThese changes will be made in the `product-page.tsx` file that is the router to the product block editor.\n\n\n```[tasklist]\n### Tasks\n- [x] Replace components with hook\n```\n\n\n###\n\n","completion":" [3837257959,4370026978,5232776504]"}
{"prompt":"As it stands, Turborepo seems to invalidate the cache when input files change as you expect it to. For some reason, however, it looks like files aren't always being rebuilt when they should be. I think this problem is being caused by TypeScript's incremental builds. As far as I can tell, `tsc` does not always build the project when you expect it to. I have a few thoughts:\r\n\r\n* This may relate to the fact that `tsconfig.tsbuildinfo` is not being cached as a build output. Is it possible this might be causing things to not be rebuilt even though they've changed? This _should_ be cached as an output, whether it's the problem or not, since it is a build artifact.\r\n* Does TypeScript pick up on the fact that the dependency has been rebuilt even though none of the output files have been rebuilt? I know TypeScript supports references and composite projects, maybe we've misconfigured something and they aren't seeing each other?\n\n### Expected behavior\n\nTypeScript should run the build when the files have changed.\n\n### Actual behavior\n\nTypeScript is not running the build when the files have changed.\n\n### Steps to reproduce\n\n1. Run the following commands:\r\n```bash\r\ngit clean -fdx\r\npnpm install\r\n# Run the build a few times and make sure we're getting FULL TURBO each time.\r\npnpm run build --filter=@woocommerce/currency\r\n```\r\n2. Add the following to the bottom of `packages/js/number/src/index.ts`:\r\n```typescript\r\nclass BrokenBuildTest {\r\n    public test: number = 0;\r\n}\r\nexport { BrokenBuildTest };\r\n```\r\n3. Add the following to the bottom of `packages/js/currency/src/index.ts`:\r\n```typescript\r\nimport { BrokenBuildTest } from '@woocommerce/number';\r\nconst brokenBuildInstance = new BrokenBuildTest();\r\nbrokenBuildInstance.test = 1;\r\n```\r\n4. Run another build with `pnpm run build --filter=@woocommerce/currency`. Run this multiple times to make sure we're getting `FULL TURBO`.\r\n5. In `packages/js/number/src/index.ts`, change `public test: number = 0;` to `public test: string = '';`.\r\n6. Run another build with `pnpm run build --filter=@woocommerce/currency`. Run this multiple times to make sure we're getting `FULL TURBO`. Note that it does _not_ give any type errors!\r\n7. In `packages/js/currency/src/index.ts`, change `brokenBuildInstance.test = 1;` to `brokenBuildInstance.test = 11;`.\r\n8. Run another build with `pnpm run build --filter=@woocommerce/currency`. This should fail with a type error even though it was successful a moment ago.\n\n\n\n###\n\n","completion":" [3844183371]"}
{"prompt":"Product sections also include an icon to the left side of the title as part of the design.\nCurrently we only support a title and description. This issue would be to add support for an icon, which can be added through the template config.\n\nHave a look at the current implementation of GB for blocks, look at `BlockIcon`.\n\n**Design**\n\n![Image](https://user-images.githubusercontent.com/2240960/225605930-5df567ad-01cc-4a90-b0e4-ff25c9be2b59.png)\n\nAkVNGImLgSqCObTQ3idVn7-fi-10-139\n\n**Acceptance criteria**\n\n- [ ] Product section block should render an icon next to the title if provided with one ( should be optional ).\n\n###\n\n","completion":" [3837257959,4370024739]"}
{"prompt":"Currently, WooCommerce only supports the PUT method for updating resources. However, there are situations where a more granular update of a resource is required, without having to send the entire resource in the request. This is where the PATCH method comes in handy.\r\n\r\nFor example, let's say you have a product in WooCommerce with multiple attributes such as title, description, price, etc. If you wanted to update just the price of the product, you would have to send the entire product object in the request body using the PUT method. This can be inefficient, especially if the product object is large.\r\n\r\nWith the PATCH method, you can send only the fields that need to be updated in the request body, thus reducing the amount of data being sent over the network. This can lead to improved performance and reduced network latency.\r\n\r\nIn addition, the PATCH method allows for partial updates of a resource, which can be useful in scenarios where you need to update only certain fields of a resource, without affecting the others.\r\n\r\nTherefore, adding support for the PATCH method in WooCommerce would provide more flexibility and efficiency in updating resources, and would align with RESTful best practices for API design.\n\n### Describe alternatives you've considered\n\nUsing the PUT method with the entire resource: While not as efficient as the PATCH method, using the PUT method with the entire resource would still allow for updating of the resource. This method may be sufficient for smaller resources, but could be inefficient for larger resources.\r\n\r\nCreating custom endpoints: Instead of using the existing endpoints in WooCommerce, custom endpoints could be created to support the PATCH method. This would require additional development effort but would provide more granular control over the API.\r\n\r\nUsing third-party plugins: There may be third-party plugins available that add support for the PATCH method in WooCommerce. However, using third-party plugins can introduce additional dependencies and potential security risks.\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [2258932484]"}
{"prompt":"The woocommerce-it_IT.po translation file contains the following fragment;\r\n\r\n`#. translators: %s: regen thumbs url\r\n#: includes/customizer/class-wc-shop-customizer.php:535\r\nmsgid \"After publishing your changes, new image sizes may not be shown until you <a href=\\\"%s\\\" target=\\\"_blank\\\">Regenerate Thumbnails</a>.\"\r\nmsgstr \"Dopo aver pubblicato le modifiche, le nuove dimensioni dell'immagine non saranno utilizzate finché non avrai utilizzato <a href=\\\"%2$s\\\" target=\\\"_blank\\\">Rigenera miniature</a>.\"\r\n`\r\nYou need to replace **%2$s** with **%s** otherwise a fatal error occurs on the site under certain conditions.\r\n\n\n### Expected behavior\n\nCorrect translation into Italian\n\n### Actual behavior\n\nThe translation file contains an error\n\n### Steps to reproduce\n\n1. Activate Storefront theme.\r\n2. Turn on the Italian language on the site. The backend language should also be Italian.\r\n3. Download all Translations in Dashboard->Update. \r\n4. Add the following code to the child or main theme `add_filter( 'woocommerce_background_image_regeneration', '__return_false' );`\r\n5. Disable the Jetpack plugin if you have one.\r\n6. Go to Appearance -> Customizer and you will see this fatal error: `Fatal error: Uncaught ArgumentCountError: 3 arguments are required, 2 given in  /wp-content/plugins/woocommerce/includes/customizer/class-wc-shop-customizer.php:535`\n\n\n\n###\n\n","completion":" [702347761]"}
{"prompt":"The product editor includes areas that can be toggled to collapse or expand to show additional settings.\n\nThe [collapsible content component ](https://github.com/woocommerce/woocommerce/blob/trunk/packages/js/components/src/collapsible-content/collapsible-content.tsx)currently does this, so we may just need a thin wrapper block around this component.\n\nWe may need to consider if side effects are needed in nested blocks at the moment as collapsing this content in the current component completely stops those children from being rendered.\n\n### Screenshots\n\n\n![Image](https://user-images.githubusercontent.com/10561050/225427223-afb59d1e-fe99-4074-8fdc-6863de509434.png)\n![Image](https://user-images.githubusercontent.com/10561050/225427222-e97982f2-ee11-4d48-aad4-479245e3e20d.png)\n\n\n### Acceptance criteria\n\n* [ ] A new block that is collapsible/expandable\n* [ ] The block should render child blocks when expanded\n\n###\n\n","completion":" [3837257959,4370024739]"}
{"prompt":"The CES data store that currently is found in the `woocommerce/admin/client` package should be moved to the `@woocommerce/customer-effort-score` package.\r\n\r\nLocation of data store files: `plugins/woocommerce/admin/client/customer-effort-score-tracks/data`\r\n\r\n## Acceptance criteria\r\n\r\n- [ ] Exports from `@woocommerce/customer-effort-score` are updated to allow `woocommerce/admin/client` to continue to build and use CES\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"We should hide or remove the block inspector that is displayed on the right hand side of the product block editor:\n![Image](https://user-images.githubusercontent.com/2240960/225369985-c8e3e93c-6eb1-4a12-ac8d-b38576884666.png)\n\nI did mention `hide` as an option as it may be beneficial for us and 3PD's to have it show up for debugging. Maybe we only want it to show up in `development` mode?\n\n**Acceptance criteria**\n\n- [ ] Block inspector should not be visible anymore.\n\n###\n\n","completion":" [3837257959,4370024739]"}
{"prompt":"We are currently showing the block breadcrumbs as seen in the image below.\nWe should remove this as this is not part of the design.\n\n![Image](https://user-images.githubusercontent.com/2240960/225286303-bc775c1d-0e40-4d90-8027-2751af298d47.png)\n\n**Acceptance criteria**\n\n- [ ] Block breadcrumbs should not be visible anymore\n\n###\n\n","completion":" [3837257959,4370024739]"}
{"prompt":"## Description\r\n\r\nWhen a customer's user profile is updated in Users (`/wp-admin/users.php`), the WooCommerce > Customers report (`/wp-admin/admin.php?page=wc-admin&path=%2Fcustomers`) is not updated with the latest changes. It is updated with the previous changes.\r\n\r\nThis is because the action hook used is [`edit_user_profile_update`](https://developer.wordpress.org/reference/hooks/edit_user_profile_update/), which fires before the user has been saved to the database (before `edit_user()` is called).\r\n\r\nThe correct action hook to use is [`profile_update`](https://developer.wordpress.org/reference/hooks/profile_update/), which fires immediately after the user has been saved to the database.\r\n\r\n## How to reproduce\r\n\r\n1. Make a change to the last name of a customer user profile at Users\r\n2. Go to the Customers report at WooCommerce > Customers\r\n\r\n## Expected result\r\n\r\n- The updated last name is displayed\r\n\r\n## Actual result\r\n\r\n- The previous last name is displayed\r\n\r\n_Note: You can see that things are being updated, though not correctly by making another to the last name in the user profile at Users and then returning to WooCommerce > Customers and seeing that the first update is now reflected._\r\n\r\n## Additional information\r\n\r\nFound while working on https://github.com/woocommerce/woocommerce/issues/36330\n\n###\n\n","completion":" [3943425133]"}
{"prompt":"I am using Meta Pixel in my website. I observed that even if I have registered only PageView pixel event, AddToCart is triggered as well when pressing Add to Cart button. Tracking down the issue I've identified that the woocommerce-ro_RO.mo is causing this behaviour.\r\n\r\n\r\n\r\n\r\nI was not able to identify any strings which would lead to a fbq function call.\r\nLet me know if other inputs are required.\n\n### Expected behavior\n\nAddToCart pixel should not be sent unless explicity requested.\n\n### Actual behavior\n\nAddToCart pixel is sent without being triggered explicitly.\n\n### Steps to reproduce\n\n1. Have a default WooCommerce website\r\n2. Install a Facebook/Meta Pixel only with PageView event\r\n3. Press add to cart button (eg. on a variable product w/o choosing a variation) -> no additional event seen\r\n4. Switch the website to Romanian language and update the translations\r\n5. Repeat step 3 -> AddToCart event seen\n\n\n\n###\n\n","completion":" [1891051436]"}
{"prompt":"## Description\r\n\r\nThe Analytics Variations report does not correctly filter by variation attributes when using the advanced filter. Variations on the same order as a matching variation, yet not matching themselves, are included.\r\n\r\n## How to reproduce\r\n\r\n### Store data configuration\r\n\r\n- Variable product \"Hoodie\"\r\n    - Attribute (used for variations): `Color` (global, with three values `Blue`, `Green`, `Red`)\r\n    - Three variations (all with price of $23)\r\n        - \"Hoodie - Blue\"\r\n        - \"Hoodie - Green\"\r\n        - \"Hoodie - Red\"\r\n\r\n- Order 1\r\n    - Hoodie - Blue\r\n    - Hoodie - Green\r\n- Order 2\r\n    - Hoodie - Red\r\n- Order 3\r\n    - Hoodie - Blue\r\n\r\n### Steps\r\n\r\n1. Set up store data as shown above\r\n2. Go to Analytics > Variations\r\n3. Show: Advanced filters\r\n4. Add a filter: Attribute is Color = Blue\r\n5. Click Filter\r\n\r\n### Expected\r\n\r\n- Items sold: 2\r\n- Net sales: $46\r\n- Orders: 2\r\n- Variations listed:\r\n    - Hoodie - Blue\r\n\r\n<img width=\"1385\" alt=\"Screenshot 2023-03-14 at 15 34 42\" src=\"https://user-images.githubusercontent.com/2098816/225117562-f8e26eff-25c4-4347-b9a8-3c04726f7126.png\">\r\n\r\n### Actual\r\n\r\n- Items sold: 3\r\n- Net sales: $69\r\n- Orders: 2\r\n- Variations listed:\r\n    - Hoodie - Blue\r\n    - Hoodie - Green\r\n\r\n<img width=\"1385\" alt=\"Screenshot 2023-03-14 at 15 35 15\" src=\"https://user-images.githubusercontent.com/2098816/225117600-2a1346aa-9e7d-4dd3-ad4b-3475d4d9db3c.png\">\r\n\r\n\n\n###\n\n","completion":" [3943425133]"}
{"prompt":"The original tests created orders with a ‘dummy’ product_id as one of the lineitems\r\n\r\nWhen testing in QIT against some extensions pull the product which evaluates to false. They probably made the assumption that a product will always exist for an order and this caused the test to fail.\r\n\r\nWe therefore need to update the tests accordingly\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [5222414669]"}
{"prompt":"2 tests have issues when executing against QIT\r\n\r\n- can view all payment gateways\r\n- can retrieve all shipping methods\r\n\r\nNumerous tests for extensions that add a shipping method will always break both those tests because they expect the site to only have 3 shipping methods available.\r\n\r\nWe therefore need to update the tests to accommodate 3 or more shipping types\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [5222414669]"}
{"prompt":"## User Story\n\n> As a new merchant that does not want to use WC Pay, \n> I want to see all other payment solutions easily,\n> so that I can setup my store my way.\n\n## Acceptance Criteria\n\n```\nFeature: WC Payments Task \nGiven WC Pay is not installed and in available country\nWhen WC Pay task is opened by the user\nThen Other payments solutions should be visible\n```\n\n## Screenshots\n\n![Image](https://user-images.githubusercontent.com/9312929/224860847-628da37d-eb08-4e0b-98eb-e3a5c7f89404.png)\n\n\n\n###\n\n","completion":" [1527866622,3943424841]"}
{"prompt":"undefinedMigrate `tasks/fills/woocommerce-payments.js` and `tasks/fills/connect.js` to TS\r\n\r\n- [ ] [connect.js](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce-admin/client/tasks/fills/connect.js)\r\n- [ ] [woocommerce-payments.js](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce-admin/client/tasks/fills/woocommerce-payments.js)\r\n\r\n\r\n## Acceptance Criteria\r\n\r\n- [ ] *.js files are converted to *.ts or *.tsx\r\n- [ ] Run `pnpm --filter=woocommerce/client/admin ts:check` without any errors\r\n- [ ] Not break existing functionalities\r\n\n\n###\n\n","completion":" [3943424841]"}
{"prompt":"This is a follow up to https://github.com/woocommerce/woocommerce/pull/37044#issuecomment-1463474414:\r\n\r\n> > > 4. After installing or activating an extension in `MarketingOverviewMultichannel`, the [`refetch`](https://github.com/woocommerce/woocommerce/blob/97ed1d2a7d25a6511535e60edfb8edc26b066cc2/plugins/woocommerce-admin/client/marketing/overview-multichannel/MarketingOverviewMultichannel.tsx#L54) doesn't trigger the data refetching for `getRegisteredChannels`.\r\n> > >    - The current result:\r\n> > > \r\n> > >       https://user-images.githubusercontent.com/17420811/223719204-b6fdda37-8290-488b-b00d-a68992b3d342.mp4\r\n> > >    - I guess the expected result is like this:\r\n> > > \r\n> > >       https://user-images.githubusercontent.com/17420811/223719243-3227ba6b-89d4-48fc-93c9-d3b45a626fb2.mp4\r\n> > \r\n> > \r\n> > I couldn't reproduce this, it works as expected for me.\r\n> \r\n> Just realized it's because of different WP versions. See [#37044 (comment)](https://github.com/woocommerce/woocommerce/pull/37044#discussion_r1132062493) and [#37044 (comment)](https://github.com/woocommerce/woocommerce/pull/37044#discussion_r1132097171).\r\n> \r\n> Considering [the latest WC still states it supports WP 5.9](https://github.com/woocommerce/woocommerce/blob/7.5.0-rc.1/plugins/woocommerce/woocommerce.php?rgh-link-date=2023-03-10T08%3A53%3A28Z#L11), I guess it would still need to add the second parameter to the `invalidateResolution` call in `useRegisteredChannels` at this moment.\r\n\r\nWe should check the multichannel marketing code base to make sure we have the above covered.\r\n\r\n\n\n###\n\n","completion":" [4327454247]"}
{"prompt":"In https://github.com/woocommerce/woocommerce/pull/37044#pullrequestreview-1330049691, it is mentioned: \r\n\r\n> 1. It will show a \"0\" when no campaigns.\r\n   - https://github.com/woocommerce/woocommerce/blob/97ed1d2a7d25a6511535e60edfb8edc26b066cc2/plugins/woocommerce-admin/client/marketing/overview-multichannel/Campaigns/Campaigns.tsx#L185\r\n   ![image](https://user-images.githubusercontent.com/17420811/223672358-2695e6e7-d41a-44c9-9682-21dd076761ef.png)\r\n\r\nWe also had a related issue https://github.com/woocommerce/woocommerce/issues/37083 that we fixed recently.\r\n\r\nAccording to https://reactjs.org/docs/jsx-in-depth.html?#booleans-null-and-undefined-are-ignored and https://beta.reactjs.org/learn/conditional-rendering#logical-and-operator-, we should make sure the expression before `&&` is always a boolean.\r\n\r\nThis issue is to look into the multichannel marketing code and fix the issue.\r\n\n\n###\n\n","completion":" [4327454247]"}
{"prompt":"Setting your site language under **Settings -> General** to Korean breaks the styling of **WooCommerce -> Extensions**.\n\n### Expected behavior\n\nThe styling for WooCommerce -> Extensions should not be different between Korean and any other languages selected.\n\n### Actual behavior\n\nThe WooCommerce -> Extensions seems to show an issue with styling:\r\n\r\n![Markup 2023-03-10 at 14 22 09](https://user-images.githubusercontent.com/104560284/224324677-1cf3ed6e-8eb0-42d9-a123-d7c49f13e79f.png)\n\n### Steps to reproduce\n\n1. Go to **Setting -> General**\r\n2. Select 한국어 (Korean) as your `Site Language`\r\n3. Navigate to **WooCommerce -> Extensions**\r\n4. Styling errors should be present\r\n\r\n* There are some inconsistencies if you select Korean as a Site Language, but WooCommerce settings are still in English. To reliably trigger the styling bug, you need to make sure WooCommerce Settings are all in Korean like this:\r\n\r\n![STtNZv.png](https://user-images.githubusercontent.com/104560284/224325936-aaa2e831-f9b5-441f-873c-8e8a5904836f.png)\n\n\n\n###\n\n","completion":" [1891051447,3837257959,468434635]"}
{"prompt":"If I'm creating an order for a customer in Admin on the phone, it would be great if I could just collect payment right then and there.\r\nI could just ask for their credit card information and then we could pay for the order without me having to log into his account. Please let me know if this is already in development. I know their are third party apps that do this, but WooCommerce itself not having it is very odd to me.\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [1891051449,3837257959]"}
{"prompt":"Add tracks events to the inventory layout when:\r\n- The [store settings link is displayed](https://github.com/woocommerce/woocommerce/issues/37115) when store-wide inventory tracking is disabled.\r\n- The \"Track stock quantity for this product\" is toggled.\r\n- The \"Learn more\" link in the message displayed at the top of the form (for variable products) [is clicked](https://github.com/woocommerce/woocommerce/issues/37119).\r\n\r\n```[tasklist]\r\n### Acceptance criteria\r\n- [ ] The store settings link displayed when store-wide inventory tracking is disabled.\r\n- [ ] The \"Track stock quantity for this product\" toggle.\r\n- [ ] The \"Learn more\" link in the message displayed at the top of the form (for variable products).\r\n```\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"The attributes of the quantity input field, min and max, are not updated when changing variation. \r\n\r\nThe bug is located in the `VariationForm.prototype.onFoundVariation` method of the `assets/frontend/add-to-cart-variation.js` file.  Here, the $qty selector has changed, and instead of selecting the layer with the \"quantity\" class, as it did before, it selects the input:\r\n\r\n`$qty = form.$singleVariationWrap.find( '.quantity input[name=\"quantity\"]' ),`\r\n\r\nFor this reason the selection of the input, which is done later, does not work:\r\n\r\n`var $qty_input = $qty.find( 'input.qty' )`\r\n\r\nSince he is looking for himself ;)\r\n\r\nFor the later logic to work, the initial $qty selector must be changed to the way it was in the previous version, ie:\r\n\r\n`$qty = form.$singleVariationWrap.find( '.quantity' ),`\r\n\r\n\r\n### Expected behavior\r\n\r\nQuantity input min and max attributes are updated on change of variance with stock restrictions.\r\n\r\n### Actual behavior\r\n\r\nThe min and max attributes of the quantity input are NOT updated when changing variations with stock constraints, since the quantity input selector in the js file is incorrect.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a product with variations for some attribute.\r\n2. Manage stock for variations with different stock limits.\r\n3. In frontend, change attribute/variation option.\r\n4. The quantity input does not take into account the stock restrictions of each variation\r\n\r\n\n\n###\n\n","completion":" [1891051436,3837257959]"}
{"prompt":"**Issue DescriptionWe want the product block work set behind a feature flag for now, but not one that can be enabled by a merchant yet as the editor is not in a working state yet. \r\nOnce in a working state this will be replaced by an official feature flag (shown in the features settings page) as part of this issue: #36989\r\n\r\nThis new feature flag will be toggleable through the WooCommerce Beta tester plugin.\r\n\r\nCurrent logic:\r\n**No features enabled** -> Displays legacy product editor\r\n**New Product Editor** (enabled through **Settings > Advanced > Features**) -> Displays new product editor (non block version)\r\n**Block editor feature enabled** -> Displays the new product block editor ( trumps both the above ).\r\n\r\n**Acceptance criteria**\r\n\r\n- [x] A new key should be available for the product block work in both `core.json` & `development.json` here: https://github.com/woocommerce/woocommerce/tree/trunk/plugins/woocommerce/client/admin/config (enabled in `development`)\n- [x] If the new block feature is enabled it should load the product block editor\n- [x] If the block feature is disabled it should show the old editor, or the first iteration of the product editor if the feature is enabled within WooCommerce settings\n- [x] This feature should be toggleable through the beta tester features tab.\n\n###\n\n","completion":" [3837257959,4370024739]"}
{"prompt":"In the Channels card, we have a list of recommended marketing channels. Some channels may not have registered itself as a marketing channel. We use Pinterest as an example scenario below.\r\n\r\n![image](https://user-images.githubusercontent.com/417342/223775650-19b15265-de1e-4867-aabf-f032eb761cc4.png)\r\n\r\nIf we install such a channel, then after the installation and activation complete, the channel will not show up in the page. It does not show up in the Channels card because it has not registered itself as a marketing channel.\r\n\r\n![image](https://user-images.githubusercontent.com/417342/223776694-eff919bf-4431-4fa7-a85a-bc4053007633.png)\r\n\r\nIf we refresh the page, the channel would show up under the \"Installed extensions\" card. \r\n\r\n![image](https://user-images.githubusercontent.com/417342/223777341-3b51e0b6-fa18-4498-a823-9c71f0861e8c.png)\r\n\r\nTo fix / work around this, we shall reload the \"Installed extensions\" card after installing a recommended channel in the Channels card.\r\n\n\n###\n\n","completion":" [4327454247]"}
{"prompt":"We should hydrate the product editor settings, because currently we are passing in an empty object.\n\nCurrently WP does this by adding an inline script and initializing the editor that way: https://github.com/WordPress/wordpress-develop/blob/trunk/src/wp-admin/site-editor.php#L94-L100\n\nFor now we can do something similar, but we will not want to call initializeEditor within the script, but only expose the editor settings for now.\n\nThere will be a follow up issue to make use of an API to get these settings.\n\n### Acceptance criteria\n\n- [ ] Product Editor should be hydrated with the correct settings object\n- [ ] The Product Editor should have an initial template to render the blocks.\n\n###\n\n","completion":" [3837257959,4370024739]"}
{"prompt":"For variable products, we show an additional message at the top of the inventory tab form. It reads `Settings below apply to all variations without manual stock management enabled. Learn more`. The `Learn more` part links to https://woocommerce.com/document/variable-product/.\r\n\r\n<img width=\"703\" alt=\"Screenshot 2023-03-07 at 23 00 55\" src=\"https://user-images.githubusercontent.com/1314156/223600076-42531d62-93e5-46ad-bfad-9c3f6c4b32b5.png\">\r\n\r\n**Designs:**\r\n[zs56kcy53K7GoGhgyjcQ2R-fi-210%3A30925](https://href.li/?https://www.figma.com/file/zs56kcy53K7GoGhgyjcQ2R/?node-id=210%3A30925)\r\n\r\n```[tasklist]\r\n### Acceptance criteria\r\n- [ ] Show an additional message for variable products.\r\n- [ ] The `Learn more` link points to https://woocommerce.com/document/variable-product/.\r\n```\r\n\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"Display \"Allow backorders?\" as a collection of radio buttons instead of a dropdown.\r\n\r\n ![screenshot-user-images githubusercontent com-2023 03 07-22_00_02 (3)](https://user-images.githubusercontent.com/1314156/223598221-8492ad0e-7653-4303-a6f5-2d2723807817.png)\r\n\r\n**Designs:**\r\n[zs56kcy53K7GoGhgyjcQ2R-fi-210%3A30925](https://href.li/?https://www.figma.com/file/zs56kcy53K7GoGhgyjcQ2R/?node-id=210%3A30925)\r\n\r\n```[tasklist]\r\n### Acceptance criteria\r\n- [ ] Convert \"Allow backorders?\" into radio buttons\r\n- [ ] Add a filter to verify whether the radio buttons will be shown.\r\n```\r\n\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"When stock tracking is enabled for the first time, we default to quantity=1 (now we default to 0, which creates lots of issues).\r\n\r\n![screenshot-user-images githubusercontent com-2023 03 07-22_00_02 (2)](https://user-images.githubusercontent.com/1314156/223597881-d7f92068-e136-40d2-aaa8-12ed3b2a2637.png)\r\n\r\n\r\n**Designs:**\r\n[zs56kcy53K7GoGhgyjcQ2R-fi-210%3A30925](https://href.li/?https://www.figma.com/file/zs56kcy53K7GoGhgyjcQ2R/?node-id=210%3A30925)\r\n\r\n```[tasklist]\r\n### Acceptance criteria\r\n- [ ] Set quantity = 1 when stock tracking is enabled for the first time.\r\n- [ ] Rename stock quantity label from `Stock quantity` to `Quantity`.\r\n```\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"The \"Stock status\" field is now displayed as a collection of radio buttons instead of a dropdown. However, if for any reason the number of items inside exceeds three, it should be displayed as a dropdown again.\r\n\r\n<img width=\"547\" alt=\"Screenshot 2023-03-08 at 17 02 53\" src=\"https://user-images.githubusercontent.com/1314156/223835059-d4048b0f-f1e1-46af-be2d-d20b11be307d.png\">\r\n\r\n**Designs:**\r\n[zs56kcy53K7GoGhgyjcQ2R-fi-210%3A30925](https://href.li/?https://www.figma.com/file/zs56kcy53K7GoGhgyjcQ2R/?node-id=210%3A30925)\r\n\r\n```[tasklist]\r\n### Acceptance criteria\r\n- [ ] Show \"Stock status\" as a collection of radio buttons.\r\n- [ ] If the number of items inside exceeds three, it should be displayed as a dropdown again.\r\n- [ ] Add a filter to verify whether the radio buttons will be shown.\r\n```\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"If stock management is disabled in `WooCommerce > Settings > Products > Inventory`, we show a message in the `Stock management section`. It reads `Disabled in store settings`. The `store settings` part links to `WooCommerce > Settings > Products > Inventory`.\r\n\r\n<img width=\"547\" alt=\"Screenshot 2023-03-08 at 17 02 53\" src=\"https://user-images.githubusercontent.com/1314156/223835059-d4048b0f-f1e1-46af-be2d-d20b11be307d.png\">\r\n\r\n\r\nIf stock management is enabled, we show this toggle with a tweaked label: “Manage stock level (quantity)” to “Track stock quantity for this product”.\r\n\r\n![screenshot-user-images githubusercontent com-2023 03 07-22_00_02 (1)](https://user-images.githubusercontent.com/1314156/223594570-d1bcc20e-2ec2-4e61-8612-d52f7e41f566.png)\r\n\r\n**Designs:**\r\n[zs56kcy53K7GoGhgyjcQ2R-fi-210%3A30925](https://href.li/?https://www.figma.com/file/zs56kcy53K7GoGhgyjcQ2R/?node-id=210%3A30925)\r\n\r\n```[tasklist]\r\n### Acceptance criteria\r\n- [ ] When stock management is disabled, show the message `Disabled in store settings`.\r\n- [ ] When stock management is enabled, show the text `Track stock quantity for this product` instead of `Manage stock level (quantity)`.\r\n```\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"The `Manage stock?` section header title now reads `Stock management`.\r\n\r\n![screenshot-user-images githubusercontent com-2023 03 07-22_00_02](https://user-images.githubusercontent.com/1314156/223591802-88caa7cc-bbfe-4dfe-bf9b-1956e7d8b833.png)\r\n\r\n**Designs:**\r\n[zs56kcy53K7GoGhgyjcQ2R-fi-210%3A30925](https://href.li/?https://www.figma.com/file/zs56kcy53K7GoGhgyjcQ2R/?node-id=210%3A30925)\r\n\r\n```[tasklist]\r\n### Acceptance criteria\r\n- [ ] The `Manage stock?` section header title now reads `Stock management`.\r\n```\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"When using wp-json to fetch product data the taxonomies from woocommerce are no longer available to filter the result\n\n### Expected behavior\n\nWhen a (taxonomy) filter is passed to wp-json it should filter the results\n\n### Actual behavior\n\nThe (taxonomy) filter in wp-json/wp/v2/product is ignored. per_page, page & orderby etc. do seem to work. \n\n### Steps to reproduce\n\n1. Create a custom product attribute (wp-admin/edit.php?post_type=product&page=product_attributes) with a custom sort order\r\n2. Create Product, add it to a category and attach a custom product_attribute\r\n3. Visit [your domain]/wp-json/wp/v2/product?per_page=9&page=1&orderby=title&order=asc\r\n4. Add &product_cat=[any id]  or &[your_custom_product_attribute]=[any value] to the url. \r\n5. The values in step 4 no longer have any influence. This does work in woocommerce 7.3.0 but no longer works in 7.4.1\n\n\n\n###\n\n","completion":" [2258932484,3837257959]"}
{"prompt":"We should create a summary field and add this to the product form.\nWe will want to use the paragraph block for this field, because of the product form dependency this might require a new block that wraps around the Paragraph block.\n\n#### Design\n\n![Image](https://user-images.githubusercontent.com/2240960/223423302-b237222a-caf5-494d-916a-ee8bfa48dcb7.png)\n\nAkVNGImLgSqCObTQ3idVn7-fi-202%3A20155\n\n#### Acceptance criteria\n\n* [ ] A summary field should be rendered in the product editor template within the basic details section (if the details section has been added already).\n* [ ] The summary field should act the same as a Paragraph block.\n\n###\n\n","completion":" [3837257959,4370024739]"}
{"prompt":"We want to improve the usability and copy in the inventory tab in the Product data module. Our goal is to clarify how we communicate certain features and create a connection between the product-level and global settings.\r\n\r\n<img width=\"776\" alt=\"image\" src=\"https://user-images.githubusercontent.com/79307566/223411394-2711e007-1fb8-4ae8-9dcc-34a89287aef7.png\">\r\n\r\n**Designs:**\r\n`zs56kcy53K7GoGhgyjcQ2R-fi-210%3A30925`\r\n\r\n**Acceptance criteria- [ ] The `Manage stock?` section header title now reads `Stock management`.\r\n- [ ] If stock management is disabled in `WooCommerce > Settings > Products > Inventory`, we show a message in the `Stock management section`. It reads `Disabled in store settings`. The `store settings` part links to `WooCommerce > Settings > Products > Inventory`.\r\n- [ ] The \"Stock status\" field is now displayed as a collection of radio buttons instead of a dropdown. However, if for any reason the number of items inside exceeds three, it should be displayed as a dropdown again.\r\n- [ ] If stock management is enabled in store settings, we show a toggle with a tweaked label: `Track stock quantity for this product` (previously “Manage stock level (quantity)”).\r\n- [ ] When stock tracking is enabled for the first time, we default to quantity=1 (now we default to 0, which creates lots of issues).\r\n- [ ] The \"Allow backorders?\" is now displayed as a collection of radio buttons instead of a dropdown.\r\n- [ ] For variable products, we show an additional message at the top of the form. It reads `Settings below apply to all variations without manual stock management enabled. Learn more`. The `Learn more` part links to https://woocommerce.com/document/variable-product/.\r\n\r\n**Tracks events:**\r\n\r\n- [ ] The store settings link displayed when store-wide inventory tracking is disabled.\r\n- [ ] The \"Track stock quantity for this product\" toggle.\r\n- [ ] The \"Learn more\" link in the message displayed at the top of the form (for variable products).\r\n\r\ncc @pmcpinto \n\n###\n\n","completion":" [4254291488]"}
{"prompt":"We use the RestAPI, to get orders, products, customers, ... (i will name it \"restitems\") from WooCommerce to a customized order management program.\r\nNow we want have a filter \"AfterID\" on the RestAPI, to get as axample all orders after the ID \"12345\".\r\nTo download all \"restitems\" and find out, in what page (pagination, offset) they requested IDs are, is very slow.\r\n\r\nThe RestAPI filter attribute should work like \"per_page\", \"offset\", and other filter attributes.\r\n\r\nFor example:\r\nhttps://example.com/wp-json/wc/v3/orders?FromID=12345\r\n\r\nThe RestAPI now should give back all orders after the order ID 12345.\n\n### Describe alternatives you've considered\n\nLooking for the ID in the downloaded Items in the pagination.\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [2258932484,3837257959]"}
{"prompt":"We should create a list price product field block to be displayed within the Basic details section.\n\n#### Design\n\n![Image](https://user-images.githubusercontent.com/2240960/223400103-3d155da8-4a78-43a2-8ddf-ab0b75da5048.png)\n\nAkVNGImLgSqCObTQ3idVn7-fi-205%3A21590\n\n#### Acceptance criteria\n\n* [ ] A list price block should be rendered in the product editor template within the basic details section (if the details section has been added already).\n* [ ] The field should allow a user to change the list price and persist correctly\n* [ ] The list price field should contain helper text with a link to the pricing settings screen.\n\n###\n\n","completion":" [3837257959,4370024739]"}
{"prompt":"Blocked until https://github.com/woocommerce/woocommerce/issues/37005 is merged.\n\nWe want to move the more menu (3 dots) with the **Share Feedback** and **Use classic editor** options to the new block editor header.\n\nMake use of the existing more menu that comes with the Editor toolbar (slot fills?)\n\n![Image](https://user-images.githubusercontent.com/2240960/223397063-0b3209ac-9746-4cdc-b75f-157500baae53.png)\n\n### Design\n\n![Image](https://user-images.githubusercontent.com/2240960/223398122-ff498d05-c63f-4506-8edd-773b52a205b1.png)\n\n\nAkVNGImLgSqCObTQ3idVn7-fi-15%3A198\n\nAkVNGImLgSqCObTQ3idVn7-fi-201%3A37558 (note this includes the **Welcome guide** option, that will be added in a future issue).\n\n### Acceptance criteria\n\n- [ ] More menu should be present in header\n- [ ] More menu should include the **Share Feedback** and **Use the classic editor** options\n- [ ] **Share Feedback** option should trigger CES\n- [ ] **Use the classic editor** should direct users to the classic editor (similar to how it works in the current editor)\n\n###\n\n","completion":" [3837257959,4370024739]"}
{"prompt":"Blocked by https://github.com/woocommerce/woocommerce/issues/36991\n\nYou may want to look at the [navigation block ](https://github.com/WordPress/gutenberg/tree/trunk/packages/block-library/src/navigation) or the [column and columns](https://github.com/WordPress/gutenberg/tree/trunk/packages/block-library/src/columns) blocks for inspiration.\n~~And also consider if it would be worth defining a tab as a template or a pattern (template might be the better fit ).~~\n\n#### Screenshots\n\n![Image](https://user-images.githubusercontent.com/2240960/223374700-6b6b1cf0-0e8a-494d-87b1-6edab8532a25.png)\n\n#### Design\n\n**Note:** The design should be used as a more general look and feel of the component, as the design might still be change a bit. So to not get caught up in the nitty gritty.\nz2spDLDAX5DbMeG4ZTMp06-fi-804%3A165896\n\n#### Acceptance criteria\n\n* [ ] A tab block should be rendered in the product editor template\n* [ ] A tab should have a name\n* [ ] A tab should support nested sections and fields.\n\n###\n\n","completion":" [3837257959,4370024739]"}
{"prompt":"On _Appearance → Menus_ the **Select All** option under the “WooCommerce Endpoints” section doesn't work.\r\n\r\n![ksnip_20230306-200517](https://user-images.githubusercontent.com/22405364/223278031-6bf6cf2d-59fe-4289-8d7e-21de7d8347a4.png)\r\n\n\n### Expected behavior\n\nClicking that link should auto select all WooCommerce endpoints.\n\n### Actual behavior\n\nNothing happens.\n\n### Steps to reproduce\n\n1. Go to _Appearance → Menus_\r\n2. Expand the “WooCommerce Endpoints” section under **Add menu items**\r\n3. Click the **Select All** link\r\n\r\n![ksnip_20230306-200517](https://user-images.githubusercontent.com/22405364/223276792-49311140-8dc3-40d5-8baa-f5146c130c4b.png)\r\n\n\n\n\n###\n\n","completion":" [3837257959]"}
{"prompt":"If I run this it works:\r\n\r\n`wp wc customer list --field=billing --user=admin --format=csv`\r\n\r\nbut this isn´t:\r\n\r\n`wp wc customer list --field=billing.postcode --user=admin --format=csv`\r\n\r\nI searched in the documentation and the only information I found about how to access any field within billing was in the legacy:\r\n\r\nhttps://github.com/woocommerce/woocommerce/wiki/Legacy-CLI-commands-(v2.6-and-below)\r\n\r\nwhere it says these fields are accesable:\r\n\r\nbilling_address.first_name\r\nbilling_address.last_name\r\nbilling_address.company\r\nbilling_address.address_1\r\nbilling_address.address_2\r\nbilling_address.city\r\nbilling_address.state\r\nbilling_address.postcode\r\nbilling_address.country\r\nbilling_address.email\r\nbilling_address.phone\r\n\r\nbut neither billing_address.postcode or billing.postcode works\n\n### Expected behavior\n\nList of fields from billing array field\n\n### Actual behavior\n\nDoesn´t work\n\n### Steps to reproduce\n\nSee above\n\n\n\n###\n\n","completion":" [1891051460,3837257959]"}
{"prompt":"In the multichannel marketing page, when there are no registered channels or no recommended channels, users would see a literal `0` on the page.\r\n\r\nThe following screenshot shows an example of the `0` at the top of the page:\r\n\r\n![image](https://user-images.githubusercontent.com/417342/223178341-99b38331-4d15-44ea-904e-6cf78e7e4a75.png)\r\n\r\nThis issue is reproducible in the trunk branch. It is introduced in [`177fc59` (#36541)](https://github.com/woocommerce/woocommerce/pull/36541/commits/177fc59deac5f5277ee4c8469cc5424bd2320912).\r\n\r\nThis issue happens because in the following code, we are using short-circuit evaluation on arrays. When the array lengths are 0, they will be rendered as literal `0` in the page.\r\n\r\nhttps://github.com/woocommerce/woocommerce/blob/deb1d131add8d90fa4fda42ceaf573a38887d02a/plugins/woocommerce-admin/client/marketing/overview-multichannel/MarketingOverviewMultichannel.tsx#L47-L56\r\n\r\nMore references in the following links:\r\n\r\n- https://reactjs.org/docs/jsx-in-depth.html?#booleans-null-and-undefined-are-ignored\r\n- https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Logical_AND#short-circuit_evaluation\r\n- [Why \"0\" is rendered on short-circuit evaluation of `array.length && ...`](https://stackoverflow.com/q/60652656/379641)\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nWhen there are no registered channels or recommended channels, there should be no literal `0` printed in the page.\r\n\r\n### Actual behavior\r\n\r\nWhen there are no registered channels or recommended channels, there is literal `0` printed in the page.\r\n\r\n### Steps to reproduce\r\n\r\nPre-condition:\r\n\r\n- Enable WooCommerce Multichannel Marketing experience in WooCommerce Settings > Advanced > Features (`/wp-admin/admin.php?page=wc-settings&tab=advanced&section=features`).\r\n\r\nSetting up test data in code: \r\n\r\n- To ease testing, you can modify the following two hooks so that they return sample test data to reproduce the issue.\r\n\r\n1. Replace this:\r\n\r\nhttps://github.com/woocommerce/woocommerce/blob/deb1d131add8d90fa4fda42ceaf573a38887d02a/plugins/woocommerce-admin/client/marketing/hooks/useRecommendedChannels.ts#L22-L48\r\n\r\nwith this: \r\n\r\n```js\r\nexport const useRecommendedChannels = (): UseRecommendedChannels => {\r\n\treturn {\r\n\t\tloading: false,\r\n\t\tdata: [],\r\n\t};\r\n};\r\n```\r\n\r\n2. Replace this: \r\n\r\nhttps://github.com/woocommerce/woocommerce/blob/deb1d131add8d90fa4fda42ceaf573a38887d02a/plugins/woocommerce-admin/client/marketing/hooks/useRegisteredChannels.ts#L62-L81\r\n\r\nwith this: \r\n\r\n```js\r\nexport const useRegisteredChannels = (): UseRegisteredChannels => {\r\n\treturn {\r\n\t\tloading: false,\r\n\t\tdata: [],\r\n\t\trefetch: () => {},\r\n\t};\r\n};\r\n```\r\n\r\nTest steps: \r\n\r\n1. Go to Marketing page at `/wp-admin/admin.php?page=wc-admin&path=%2Fmarketing`.\r\n2. You should see literal `0` (two `0`s if you modified both hooks) printed at the top of the page.\r\n\r\n\n\n###\n\n","completion":" [4327454247]"}
{"prompt":"Blocked by https://github.com/woocommerce/woocommerce/issues/36991\r\n\r\nPrior art for a section can be seen in [this PR](https://github.com/woocommerce/woocommerce/pull/36837): https://github.com/woocommerce/woocommerce/pull/36837/files#diff-72b15466b194b12100a60da2ba4b5e5bfd5169b885791b42fad51d89466bb486 \r\n\r\nYou may want to look at the [navigation block ](https://github.com/WordPress/gutenberg/tree/trunk/packages/block-library/src/navigation) for inspiration.\r\n~~And also consider if it would be worth defining a section as a template or a pattern (template might be the better fit ).~~\r\n\r\n#### Screenshots\r\n\r\nNote: The separator bar at the bottom, this may not be needed as part of a section as there is already a separator block available which we may want to make use off.\r\n![Image](https://user-images.githubusercontent.com/2240960/223164533-074a66a6-40d1-4fb9-80ae-59c97f43fcc2.png)\r\n\r\n#### Design\r\n\r\n**Note:** The design should be used as a more general look and feel of the component, as the design might still be change a bit. So to not get caught up in the nitty gritty.\r\nz2spDLDAX5DbMeG4ZTMp06-fi-804%3A165896\r\n\r\n#### Acceptance criteria\r\n\r\n* [ ] A section block should be rendered in the product editor template\r\n* [ ] A section should have a title and description (description could include links)\r\n* [ ] A section should support nested blocks to render fields.\n\n###\n\n","completion":" [3837257959,4370024739]"}
{"prompt":"Since update 7.4.0, there has been an issue with the cart.php template. Since the update, on the cart page the the quantity is blank for products that are set to be 'sold individually'. Before the update it displayed a fixed quantity of 1 for products set as 'sold individually', which is much more useful as it confirms to customers that they have just the one product in their basket. The mini-cart & the checkout both still display a fixed quantity of one, so I assume that when the cart.php file was updated in 7.4.0, the code to display the quantity as 1 was accidentally deleted.\r\n\r\nI have already brought this issue up on the Woocommerce community forum, where it was confirmed that the issue was also present on your testing site (using Storefront) with WooCommerce versions 7.4.0 and 7.4.1\r\n\r\nThank you very much,\r\nBonnie\n\n### Expected behavior\n\nThe quantity to be fixed and display as '1' in the cart page for products set as 'sold individually'\n\n### Actual behavior\n\nThe quantity field being blank in the cart page for products set as 'sold individually'\n\n### Steps to reproduce\n\nSet a product as 'sold individually'.\r\nAdd that item to basket.\r\nGo to basket page and look at quantity field.\n\n\n\n###\n\n","completion":" [1891051436,3837257959]"}
{"prompt":"When enabling HPOS on the Features page, the following error shows:\r\n\r\n```\r\nWordPress database error: [Table 'databasename.wp_wc_orders' doesn't exist]\r\nSELECT( ( SELECT COUNT(1) FROM wp_posts posts LEFT JOIN wp_wc_orders orders ON posts.id=orders.id WHERE posts.post_type in ('shop_order', 'shop_order_refund', 'shop_subscription') AND posts.post_status != 'auto-draft' AND orders.id IS NULL) + (SELECT COUNT(1) FROM ( SELECT orders.id FROM wp_wc_orders orders JOIN wp_posts posts on posts.ID = orders.id WHERE posts.post_type IN ('shop_order', 'shop_order_refund', 'shop_subscription') AND orders.date_updated_gmt < posts.post_modified_gmt ) x) ) count\r\n```\r\n\r\nhttps://i.imgur.com/YX6sb1k.png\r\n\r\nPossibly related to [#35902](https://github.com/woocommerce/woocommerce/issues/35902)\r\n\r\n<details>\r\n  <summary>System Details</summary>\r\n\r\n\n\n###\n\n","completion":" [1527868600,3834300886,3837257959]"}
{"prompt":"Recently, our daily smoke tests had been reporting failures in the `merchant/create-variable-product.spec.js:44 › Add New Variable Product Page › can create product, attributes and variations` test. This issue aims to fix this.\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [3845073088,5222415782]"}
{"prompt":"woocommerce\\includes\\class-wc-ajax.php:103\r\n\r\nAdd in add_ajax_events() method action to reduce amount in cart or set exact amount. This amount can be returned in fragments via ajax as well.\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [1891051436,3837257959]"}
{"prompt":"`ajaxComplete()` does not seem to be triggering anymore in 7.5 beta, for example when the update cart button is used or checkout country is changed, etc...\n\n### Expected behavior\n\nShould trigger when ajax request is done https://api.jquery.com/ajaxcomplete/\r\n\r\n\n\n### Actual behavior\n\nNot triggering\n\n### Steps to reproduce\n\n```js\r\njQuery(document).ajaxComplete(function () {\r\n  console.log('ajax complete')\r\n})\r\n```\n\n\n\n###\n\n","completion":" [3837257959]"}
{"prompt":"[The PR assigner workflow](https://github.com/woocommerce/woocommerce/blob/trunk/.github/project-community-pr-assigner.yml) currently assigns team Solaris as a reviewer when changes are submitted to older Puppeteer packages. They'd like to keep this that way for now as they haven't been deprecated yet. \r\n\r\nBut now Solaris would also like to be assigned reviewer whenever a change is submitted to the new Playwright test suites -- `e2e`, `api`, and `performance`. The file paths for these are the following: \r\n\r\n- `plugins/woocommerce/tests/e2e-pw`\r\n- `plugins/woocommerce/tests/api-core-tests`\r\n- `plugins/woocommerce/tests/performance`\r\n\n\n###\n\n","completion":" [3844183371]"}
{"prompt":"Currently, the daily k6 performance tests are [failing](https://github.com/woocommerce/woocommerce/actions/runs/4278972225/jobs/7449263300#step:5:344) because the environment variable `UPDATE_WC` should be set to a WooCommerce release tag instead of a boolean.\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [3845073088]"}
{"prompt":"Values return from the filter `woocommerce_order_list_table_prepare_items_query_args` are stored in `$order_query_args` variable. But the variable was overridden by the new filter introduced in version 7.3.0 \r\n\r\nThe new filter: `woocommerce_shop_order_list_table_prepare_items_query_args`\r\n\r\n\n\n### Expected behavior\n\nThe return value from `woocommerce_order_list_table_prepare_items_query_args` filter must be supplied as argument for the new filter. So the value will not override.\r\n\r\n\n\n### Actual behavior\n\n<img width=\"1011\" alt=\"image\" src=\"https://user-images.githubusercontent.com/42467480/222413425-b52d07c3-630b-484f-9f03-f3cdf2eb3e1c.png\">\r\n****\r\nIf I altered the query argument by adding `id` or `post__in` value. I am expecting the result will be based on the new argument.\n\n### Steps to reproduce\n\n1. Add a code snippet to filter `woocommerce_order_list_table_prepare_items_query_args`\r\n2. Alter the $args argument by adding an `id` parameter to that array\r\n3. Expecting the the query result will process the newly added parameter\r\n4. But the parameter was overridden by the new filter just below the above filter.\n\n\n\n###\n\n","completion":" [1891051458,3837257959]"}
{"prompt":"В Каталоге магазина текст кнопки стоит \"Выбрать\", но когда выбираешь вариативный товар текст переводит на английский язык, это очень мешает\n\n### Expected behavior\n\nКак оставить текст кнопки на языке который мне нужен?\n\n### Actual behavior\n\n![Screenshot_3](https://user-images.githubusercontent.com/97180855/222251101-55df9f8f-1cc7-468b-89b7-fe752040d1bf.png)\r\n![Screenshot_4](https://user-images.githubusercontent.com/97180855/222251108-59de20f8-a238-4050-b241-c9f1f2cf1da2.png)\r\nНа скриншотах видно как выглядит кнопка при входе в каталог и какой она становится при выборе вариации товара\n\n### Steps to reproduce\n\nя выше уже описала всю проблему\n\n\n\n###\n\n","completion":" [3837257959,468434635]"}
{"prompt":"### Describe the bug\r\n\r\nWhen creating a product, under the Attributes tab, we don't check if the form is empty when pressing the `Save attribute` button. So it's possible to send empty values to the action `woocommerce_save_attributes`.\r\n\r\nWe should add a check like [this](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/client/legacy/js/admin/meta-boxes-product-variation.js#L62-L64) to [this method](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/client/legacy/js/admin/meta-boxes-product.js#L745-L829).\r\n\r\nWe should mark these fields as required, disable the Save button, and show a help message.\r\n\r\n### Steps to reproduce\r\n\r\n- Add a global attribute through the new dropdown\r\n- Don't add any terms and click **Save attributes**\r\n- The request is being sent after pressing **Save attributes**\r\n\r\n![Screen Capture on 2023-03-01 at 16-46-28](https://user-images.githubusercontent.com/1314156/222249127-976c35ed-4573-4bbb-8ff9-f43013437949.gif)\r\n\r\n**Acceptance criteria**\r\n- [ ] Add a check like [this](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/client/legacy/js/admin/meta-boxes-product-variation.js#L62-L64) to [this method](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/client/legacy/js/admin/meta-boxes-product.js#L745-L829).\r\n- [ ] Mark these fields as required, disable the Save button, and show a help message.\n\n###\n\n","completion":" [1527866622,1891051461,4370024739]"}
{"prompt":"After adding a global attribute, deleting it, and adding it again, it's being shown twice.\r\n\r\n### Steps to reproduce\r\n\r\n- Add a global attribute and **add some terms** and click **Save attributes**\r\n- Remove the just added global attributes\r\n- Add the same global attribute back in and **add terms**\r\n- Click **Save attributes** and notice how it shows two rows of the global attribute\r\n\r\n![Screenshot 2023-03-01 at 16 38 41](https://user-images.githubusercontent.com/1314156/222246424-5dc6b7f3-1ff4-4904-9d85-8c0c43460f9c.png)\r\n\r\n- Click **Remove** on one and notice the placeholder is back but it shows the other global attribute at the bottom.\r\n<img width=\"863\" alt=\"Screenshot 2023-03-01 at 9 42 16 AM\" src=\"https://user-images.githubusercontent.com/2240960/222088189-0893624c-2767-4441-8510-c36e4bba31d7.png\">\r\n\n\n###\n\n","completion":" [1527866622,1891051461,4370024739]"}
{"prompt":"Blocked by https://github.com/woocommerce/woocommerce/issues/36991\n\nTo make testing and follow-up issues easier, we should create an initial field as a block for use in other PRs.  This will make it easier to see hydrated data, verify validation, and make sure edits are persisted.\n\nPrior art for this field can be seen in [this PR](https://github.com/woocommerce/woocommerce/pull/36837).\n\nNote that since we don't have a finalized design for this new experience, I think using the existing name field styling as is should be fine.\n\n#### Screenshots\n\nNote: the screenshot is from the POC and not the wireframe.\n![Image](https://user-images.githubusercontent.com/10561050/221972510-81226f5b-259e-4236-9216-f066b993851d.png)\n\n\n#### Design\n\n**Note:** The design should be used as a more general look and feel of the component, as the design might still be change a bit. So to not get caught up in the nitty gritty.\nz2spDLDAX5DbMeG4ZTMp06-fi-806%3A160389 \n\n#### Acceptance criteria\n\n* [ ] A name block should be rendered in the product editor template\n* [ ] The field should store edits inside the entity data store on change (these will not be persisted in this issue)\n* [ ] Name field should roughly reflect the Figma designs\n\n###\n\n","completion":" [3837257959]"}
{"prompt":"Blocked by https://github.com/woocommerce/woocommerce/issues/37007\n\nFor now, the header component should include the product name and a \"Save\" button.  Prior art can be seen in [this PR](https://github.com/woocommerce/woocommerce/pull/36921).\n\nThe save button should be disabled when saving or when the post saving has been locked:\n\n```\nconst { isPostSavingLocked, isSaving } = useSelect(\n\t( select ) => {\n\t\treturn {\n\t\t\tisPostSavingLocked:\n\t\t\t\tselect( 'core/editor' ).isPostSavingLocked(),\n\t\t\tisSaving: select( 'core' ).isSavingEntityRecord(\n\t\t\t\t'postType',\n\t\t\t\t'product',\n\t\t\t\tproduct?.id\n\t\t\t),\n\t\t};\n\t},\n\t[ product?.id ]\n);\n\nconst isDisabled = isPostSavingLocked || isSaving;\n\n<Button\n\tonClick={ handleSave }\n\tvariant=\"primary\"\n\tisBusy={ isSaving }\n\tdisabled={ isDisabled }\n>\n\t{ __( 'Save', 'woocommerce' ) }\n</Button>\n```\n\n#### Screenshots\n\nNote this screenshot is not based off of the design.\n![Image](https://user-images.githubusercontent.com/10561050/221969911-d74add71-a869-4bf2-80c2-18da60dda850.png)\n\n#### Design\n\n**Note:** The design should be used as a more general look and feel of the component, as the design might still change a bit. So to not get caught up in the nitty gritty.\n\nz2spDLDAX5DbMeG4ZTMp06-fi-820%3A164792\n\n#### Acceptance criteria\n\n* [ ] The header should be added through the editor interface and displayed at the top of the page, hiding the default wc admin header\n* [ ] The header should display \"Add new product\" on a new product page\n* [ ] The header should display the product name when editing a product\n* [ ] The save button should save any edits in the entity data store\n* [ ] The save button should be disabled when post saving is locked or when currently saving\n\n###\n\n","completion":" [3837257959]"}
{"prompt":"Blocked by https://github.com/woocommerce/woocommerce/issues/37007, https://github.com/woocommerce/woocommerce/issues/37005\n\nValidation in blocks currently works by locking the post.  Locks are connected to a specific ID, so many locks can be added to prevent a post from being saved.\n\nhttps://github.com/WordPress/gutenberg/blob/8a0eedeb85ba019f7179070f63447bb120e60308/docs/reference-guides/data/data-core-editor.md?plain=1#L1112\n\nTo make this easier, we should add some helper hooks around the locking for validation use cases.  The hook might look something like this:\n\n```\nconst useValidation = ( id, validate ) => {\n    const { lockPostSaving } = useDispatch( 'core/editor' );\n\n    if ( ! validate( entity ) ) {\n        lockPostSaving( id );\n    } else {\n        unlockPostSaving( id );\n    }\n}\n```\n\nAnd then in our block, we could pass in our own validation logic and ID:\n\n```\nconst validateTitle = ( product ) => {\n    if ( product.title.length < 2 ) {\n        return false;\n    }\n\n    return true;\n}\n\nuseValidation( 'product/title', validateTitle );\n```\n\nWe should carefully consider the flexibility of this solution and make sure that it works well for our use case.  Some things to consider:\n\n* Does passing the entity work for all use cases?\n* Does this surface locks in a meaningful way?  Is there a chance the editor remains accidentally locked?\n* Does this tie in well with error handling and render?  Will we need another util for that?\n\n#### Acceptance criteria\n\n* [ ] A validation hook that is reusable across all fields\n* [ ] Post saving should be locked when invalid\n* [ ] Should support async validation as well as sync\n\n###\n\n","completion":" [3837257959]"}
{"prompt":"The product editor will need to be hydrated with a product prior to initializing the editor.  The editor requires a product and the entity configuration to be loaded prior to being able to load edits (dirty state) into its state.\r\n\r\nWhile [core hydrates this server-side](https://github.com/WordPress/wordpress-develop/blob/6a9e92dc76e397737cdf5f2322c2540eacaf0c45/src/wp-admin/edit-form-blocks.php#L249-L253), we are a bit more restricted since we are using React router and may not initally load the add product page, meaning we need to dynamically create the product when visiting this path.\r\n\r\nThis might look something like this for the add product page, while the edit product page should fetch the product by the provided product ID.\r\n\r\nDepends on #36991 being finished.\r\n\r\n```js\r\nconst { saveEntityRecord } = useDispatch( 'core' );\r\nconst [ product, setProduct ] = useState< Product | undefined >(\r\n    undefined\r\n);\r\n \r\nuseEffect( () => {\r\n    saveEntityRecord( 'postType', 'product', {\r\n        title: AUTO_DRAFT_NAME,\r\n    } ).then( ( autoDraftProduct: Product ) => {\r\n        setProduct( autoDraftProduct );\r\n    } );\r\n}, [] );\r\n \r\nif ( ! product ) {\r\n    return <Spinner />;\r\n}\r\n \r\nreturn <Editor product={ product } settings={ {} } />;\r\n```\r\n\r\n#### Acceptance criteria\r\n\r\n* [ ] The add product page makes a network request to create a new auto-draft product\r\n* [ ] The add product page renders the editor\r\n* [ ] The edit product page fetches the product by product ID\r\n* [ ] The edit product page renders the editor\r\n* [ ] Create a follow up issue on how to clean up auto draft products that aren't saved.\n\n###\n\n","completion":" [1891051461,3837257959]"}
{"prompt":"I was trying to make a plugin that retrieves some shipping methods from an API and gets its response. I followed the documentation for the Shipping Methods API and Settings API to store the \"client_id\" and \"client_secret\" keys required to communicate with the API. When I tried to use those settings, the code returned empty strings, and when I attempted to save them through the WP dashboard, it said \"your settings have been saved,\" but in reality, they were empty in the database. While looking for the reason behind this, I couldn't see its fields going through POST on the browser, which leads me to believe that there's a bug.\r\n![Captura de tela de 2023-02-28 11-03-56](https://user-images.githubusercontent.com/114659096/221877081-1a084b5a-8246-492b-a3a4-fbef312e9de0.png)\r\n\n\n### Expected behavior\n\nWhen I use \"$this->settings['client_id']\" in the shipping method class that I created, the previously saved strings will be returned.\n\n### Actual behavior\n\nIt returns empty strings and doesn't store the strings I entered on the settings page.\r\n\r\n\r\nvar_dump($this->settings);\r\n![Captura de tela de 2023-02-28 11-12-53](https://user-images.githubusercontent.com/114659096/221879330-761723bb-e5e2-4a5e-bc4b-bce373407d48.png)\r\n\n\n### Steps to reproduce\n\n1. Copy the entire example of the Shipping Method API and override either the $form_fields or init_form_fields function (or both).\r\n2. Go to your plugin's Shipping Method settings on the WP dashboard page and save some fields.\r\n3. Output these variables or try to use them in the code somewhere.\n\n\n\n###\n\n","completion":" [1891051459,2258932484,3837257959]"}
{"prompt":"undefinedCurrently, the `Smoke test release` workflow does not support testing of `woocommerce.zip` files in draft releases. This task will enable such support.\r\n\n\n###\n\n","completion":" [2444919724,3845073088]"}
{"prompt":"There is some prior art for the initial editor skeleton and framework in [this POC PR](https://github.com/woocommerce/woocommerce/pull/36837).\n\nThis issue will involve adding the base editor components for use with a couple of placeholder blocks.\n\nNote that we can probably combine the add/edit product pages into a single page/component this time instead of creating 2 separate `addProductPage` and `editProductPage` components.\n\nUpdating the routes of the current editor will be done as part of this issue: https://github.com/woocommerce/woocommerce/issues/36989\n\n#### Acceptance criteria\n\n* [x] The skeleton editor shows some placeholder blocks until the other blocks are ready to be added\n* [x] Visiting the add product page should show the new skeleton editor\n* [x] Visiting the edit product page should show the new skeleton editor\n\n\n###\n\n","completion":" [3837257959]"}
{"prompt":"The entity config endpoint used by the core data store should be updated to the v3 endpoint.  The change itself is probably a one-liner but needs to be tested to make sure it works as expected.\n\nWe can add `rest_namespace` [here](https://github.com/woocommerce/woocommerce/blob/a45f9c4f5544b7a2b4d116baac6800ee0317758a/plugins/woocommerce/includes/class-wc-post-types.php#L316-L370).\n\n```\nregister_post_type( 'product', array(\n    ...\n    rest_namespace: '...'\n)\n```\n\n#### Acceptance criteria\n\n* [ ] The entity config should be updated for products\n* [ ] Retrieving a product via the core data store should trigger a call to the `v3` endpoint in the network `select( 'core' ).getEditedEntityRecord( 'postType', 'product', productId )`\n\n###\n\n","completion":" [3837257959]"}
{"prompt":"2 Partners layout:\n\n![Image](https://user-images.githubusercontent.com/27843274/221520615-ace5c980-23a7-430a-96fa-406bb14ce218.png)\n\n1. Align the description headers (\"All-in-one shipping tool\", \"Powerful ...\")\n2. Add space between the buttons and the list by making the height of the panel taller\n\n1 Partner layout:\n\n\n\n![Image](https://user-images.githubusercontent.com/27843274/221521081-dbc265c2-d216-459a-b1de-895ec267e369.png)\n\nAdd some spacing between the image and the list, possibly by making the text smaller if necessary\n\n###\n\n","completion":" [3943104021,3943424841,3943424887]"}
{"prompt":"When updating a store from 7.2.3, the Address endpoint for Australia (AU) translations is blank. E.g. on the My Account page, the address link is there, but the actual text is missing. Note I am only aware of this issue when the language is set to English (Australia).\r\n\r\nStrangely, this only happens when updating from 7.2.3. When doing a fresh install and installing the latest WC version, it shows fine, but if I downgrade that version and upgrade, it is gone.\r\n\r\nIf I switch the language to US or similar, the endpoint shows as expected.\r\n\r\nI tested this on a few production sites and a new, vanilla install using storefront and no other plugins. \r\n\r\n### Expected behavior\r\n\r\nWhen upgrading a store from 7.2.2/3 the address endpoint text should not disappear when using English (Australia)\r\n\r\n### Actual behavior\r\n\r\nWhen updating WC from 7.2.X while using English (Australia) as the language the endpoint text for Address disappears.\r\n\r\n\r\n### Steps to reproduce\r\n\r\nSet store to English (Australia) language while on 7..2.X\r\nUpdate to 7.3/4\r\nNotice the endpoint Address text is gone\r\n\r\nImage of 7.2.X\r\n<img width=\"827\" alt=\"7 2 X\" src=\"https://user-images.githubusercontent.com/1361803/221369285-aa483664-2baa-455d-8141-069d9b4a1ae4.png\">\r\n\r\nImage after updating\r\n<img width=\"848\" alt=\"Upgraded 7 3 or 4\" src=\"https://user-images.githubusercontent.com/1361803/221369296-5b7f0618-0f94-4ff2-9b1c-c357e01929c4.png\">\r\n\r\n\r\n\r\n\n\n###\n\n","completion":" [3837257959,468434635]"}
{"prompt":"I try to create an extension with `create-wc-extension` command. \r\nAfter a fresh new install of this monorepo, I run this command in `plugins/woocommerce-admin` directory \r\n\r\n` npm run create-wc-extension` \r\n\r\nThe I got this:\r\n```\r\n> woocommerce/client/admin@3.3.0 create-wc-extension\r\n> node ./bin/starter-pack/starter-pack.js\r\n\r\nnode:internal/modules/cjs/loader:1024\r\n  throw err;\r\n  ^\r\n\r\nError: Cannot find module '/var/www/xxx/woocommerce/plugins/woocommerce-admin/bin/starter-pack/starter-pack.js'\r\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:1021:15)\r\n    at Function.Module._load (node:internal/modules/cjs/loader:866:27)\r\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\r\n    at node:internal/main/run_main_module:22:47 {\r\n  code: 'MODULE_NOT_FOUND',\r\n  requireStack: []\r\n}\r\n\r\n```\r\n\n\n### Expected behavior\n\nShould be run out of the box. \n\n### Actual behavior\n\nas described as above\n\n### Steps to reproduce\n\n1. cd plugins/woocommerce-admin\r\n2.  npm run create-wc-extension\n\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"There is a hook in every payment method class that puts the payment method information to the Thank you page. For example for the cash on delivery method it looks like this: \r\n\r\nhttps://github.com/woocommerce/woocommerce/blob/3b58651bd6c174aa932f789247f3d92db401fb98/plugins/woocommerce/includes/gateways/cod/class-wc-gateway-cod.php#L46\r\n\n\n### Expected behavior\n\nAble to remove this from the thank you page. \n\n### Actual behavior\n\nI am unable to remove this action from the Thank you page. \n\n### Steps to reproduce\n\nAdd this to your functions.php file. \r\n\r\n```php\r\n$wc_gateway_cod = new WC_Gateway_COD();\r\nremove_action( 'woocommerce_thankyou_cod', array( $wc_gateway_cod, 'thankyou_page' ) );\r\n```\r\nor this\r\n```php\r\nglobal $WC_Gateway_COD;\r\nremove_action( 'woocommerce_thankyou_cod', array( $WC_Gateway_COD, 'thankyou_page' ) );\r\n```\n\n\n\n###\n\n","completion":" [1891051449,3837257959]"}
{"prompt":"undefinedI'm testin in 7.4 ver Woocommerce new experimental product editor.\r\nGood, light, better than the old version.\r\nI have some recommendation:\r\n\r\n- Now, the \"div class=\"product-form-layout\"  has max width 1032px. It is funny narrow not only in my 4K monitor, or FullHD laptop. If i change it max-width: inherit it will be GREAT!\r\n- The product descriptions dont have any 1, 2, 3 or more columns option. It is a huge mistake. :-(\r\n- The text moduls (heading and paragraphs) dont have any options, like text color or size.\r\n- Dont like the new editor the ACF attributes\r\n\r\n\r\n### Describe alternatives you've considered\r\n\r\n_No response_\r\n\r\n### Additional context\r\n\r\n_No response_\n\n###\n\n","completion":" [4370026978]"}
{"prompt":"### Prerequisites\r\n\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n### Describe the bug\r\n\r\nUpdating to WooCommerce 7.4 introduces a bug on variation products. When a product has 5 ( or any value ) of a specific item left instock, the user is able to select more than the 5 items items. This is then presented with an error saying there are only 5 items left instock. Prior to 7.4 this issue wasn't present.\r\n\r\nRelated support tickets:\r\nhttps://wordpress.org/support/topic/ordering-variations-no-longer-works/\r\nhttps://wordpress.org/support/topic/unlimited-number-of-stock-to-select-after-update/\r\n\r\n### Expected behavior\r\n\r\nWhen a variable product has \"X\" number of products instock a user shouldn't be able to add more than \"X\" via the product quantity input.\r\n\r\n### Actual behavior\r\n\r\nWhen a variable product has \"5\" items instock I can add more than 5 in the input.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a variable product with some variations.\r\n2. Set a variation to \"manage stock\"\r\n3. Set a variations \"Stock quantity\"\r\n4. Set the variation to \"Do not allow\" backorders.\r\n5. View the product from the front end\r\n6. Set the variation you chose about\r\n7. Increase the qty higher than what you set the stock quantity too ( this is the issue )\r\n8. Click add to cart\r\n9. You should then be presented with a notice similar too: \"You cannot add that amount of \"{ variable product name }\" to the cart because there is not enough stock (1 remaining).\"\r\n\r\n\n\n###\n\n","completion":" [1527866622,1891051436,1891051456,1891051461,3837257959]"}
{"prompt":"When one has a lot of product attribute terms, for example in our case \"color\" the product editor term selection seems not to display / filter the terms properly and seems to display and filter the first 100 terms (1 page) of terms... So If the term is on the second or third page this will not be displayed.\r\n\r\nSame result will be displayed when using the WP CLI command: \"wp wc product_attribute_term list <id>\" -> this only brings now 100 results and does NOT display the full list.\r\n\r\nThis bug seems to become with the added features in after we upgraded to 7.4.0, at least this worked before\r\n\n\n### Expected behavior\n\nDisplay and filter from the full list of terms (all pages included)\r\n\r\n\n\n### Actual behavior\n\nOnly shows and filters terms from the first 100 terms under an attribute.\r\n\r\n\r\n<img width=\"1277\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5124801/219375778-067d6c83-d005-4cd4-8075-1cd8069f7a56.png\">\r\n*In this image the color term \"sinine\" is actually is on the second page but not filtered by the UI Ajax since upgrade to woocomerce 7.4.0\n\n### Steps to reproduce\n\nHave an attribute with more than 100 terms\r\n\r\n1) Products -> Product -> Attributes -> term -> \"Write something, that on sort wise would be later than first 100 terms\"\n\n\n\n###\n\n","completion":" [3837257959]"}
{"prompt":"> **Note**\r\n> **TL;DR** is there a way we could install and run phpcs-changed from the root of the Git repo instead of only from `plugins/woocommerce`?\r\n\r\nRight now phpcs-changed is run as part of a GitHub workflow whenever you push changes to a pull request, which is great because it only shows you linting errors on the lines you changed/added, instead of in each entire file. However, it'd be even better if I could run this command locally before I push changes up to GitHub, so I don't have to wait for all the checks to finish to know if I have linting errors.\r\n\r\nIn `plugins/woocommerce/composer.json` I see the `phpcs-pre-commit` [script](https://github.com/woocommerce/woocommerce/blob/e05a191156aa9c59d8bf94429fba4dbc1a92519e/plugins/woocommerce/composer.json#L91-L93), but A) it doesn't seem to actually run when I attempt a commit, and B) the command doesn't work on it's own as it currently is.\r\n\r\nI have tried running phpcs-changed manually a few different ways, and there does not appear to be any way to successfully use the instance that gets installed and managed by composer in the `plugins/woocommerce` directory. What happens is, with the right command line arguments, it _can_ be run, but it shows you every linting error in each file instead of just on the changed lines.\r\n\r\nExample command, run from the `plugins/woocommerce` directory (this is to compare a PR branch to trunk, where everything has already been committed):\r\n```bash\r\ncomposer exec phpcs-changed -- -s --git --git-base trunk $(git diff $(git merge-base HEAD trunk) --name-only -- '*.php')\r\n```\r\n\r\nEventually I discovered that the issue is that you have to run the command from the directory where the composer.json file is located (`plugins/woocommerce`), but the phpcs-changed command assumes that you are in the root of the Git repository, so it can't find the files that you're specifying when it's getting the linting results from the base branch. Thus it assumes that all of the changed files are brand new and shows you every linting error.\r\n\r\nThe workaround I'm using right now is to install phpcs-changed and some other necessary packages globally and then I can run it from the Git repo root without having to go through composer. However, this is not ideal because:\r\n* It makes the monorepo less self-contained, and takes us farther away from the goal of having everything ready to go after just running the install command.\r\n* I think it would actually be great if phpcs-changed could be run on the pre-commit hook.\n\n###\n\n","completion":" [3844183371]"}
{"prompt":"Badges in the task list header are showing with an unexpected dark background color.\r\n\r\n\r\n\r\n\r\n\r\n\n\n### Expected behavior\n\n![Screenshot 2023-02-16 at 08 15 17](https://user-images.githubusercontent.com/4344253/219225332-735ccb0b-5cba-4dcd-a40e-2dd7a1679105.png)\r\n\n\n### Actual behavior\n\n![Screenshot 2023-02-16 at 08 12 12](https://user-images.githubusercontent.com/4344253/219225022-36aba7bc-6a2e-44f6-954d-c49d6abfd8e7.png)\r\n\n\n### Steps to reproduce\n\n1. In trunk\r\n2. Go to WooCommerce > Home\r\n3. Observe that the badges background color are unexpected\n\n\n\n###\n\n","completion":" [3943185990]"}
{"prompt":"The wp-admin/admin.php?page=wc-admin&task=payments&id=bacs screen looks different between WP 6.1.1 and 6.2-beta2. The former shows the \"Add your bank details\" form as expected by the E2E tests, but the latter does not. It shows a different screen instead\r\n<img width=\"1291\" alt=\"jLjtVJ47e5\" src=\"https://user-images.githubusercontent.com/4509348/218975643-f4224a29-fd93-40f3-b3fe-f5d732553afa.png\">\r\n\n\n### Expected behavior\n\nThe page should show the \"Add your bank details\" form.\n\n### Actual behavior\n\nThe page doesn't show the \"Add your bank details\" form. Instead, it shows the message \"Configure you Direct bank transfer account.\"\n\n### Steps to reproduce\n\n1. Create a WP 6.2 site (currently in Beta 2).\r\n2. Install & activate WC 7.4.\r\n3. Go to WooCommerce > Home.\r\n4. Skip the store set up.\r\n5. Navigate to `wp-admin/admin.php?page=wc-admin&task=payments&id=bacs`\n\n\n\n###\n\n","completion":" [3837257959,3943104021,3943424841]"}
{"prompt":"### Prerequisites\r\n\r\n- [x] I have carried out troubleshooting steps and I believe I have found a bug.\r\n- [x] I have searched for similar bugs in both open and closed issues and cannot find a duplicate.\r\n\r\n### Describe the bug\r\n\r\nIn WP 6.2-beta2, in the \"Set up payments\" onboarding screen, these 2 elements look different from WP 6.1.1:\r\n\r\n1. The nav header text is Home in 6.2-beta2. It is Set up payments in 6.1.1\r\n2. The button beside \"Direct bank transfer\" is labeled with \"Enable\" in 6.2-beta2. In 6.1.1, it's labeled \"Get started\"\r\n\r\nScreenshot: p1676436431351619/1676436413.491279-slack-C01BWDDTGKX\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\n1. The \"Back\" button text should be \"Set up payments\".\r\n2. The button beside \"Direct bank transfer\" should be labeled \"Get started\".\r\n\r\n\r\n### Actual behavior\r\n\r\n1. The \"Back\" button text is \"Home\" in 6.2-beta2. \r\n2. The button beside \"Direct bank transfer\" was labeled with \"Enable\" in 6.2-beta2.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a WP 6.2 site (currently in Beta 2).\r\n2. Install & activate WooCommerce 7.4 (although this issue is also happening on other WC versions like 7.3).\r\n3. Go to WooCommerce > Home.\r\n4. Skip store set up.\r\n5. In the Home task list, click \"Set up payments\".\r\n6. Notice that the \"Back\" button text is \"Home\".\r\n7. Expand the \"Other payment providers\" section.\r\n8. Notice that the button beside \"Direct bank transfer\" was labeled with \"Enable\"\r\n\r\n\n\n###\n\n","completion":" [3837257959,3943104021,3943424841]"}
{"prompt":"**Issue DescriptionThis is a follow-up issue for https://github.com/Automattic/wp-calypso/issues/72043\r\n\r\nThe issue doesn't happen in a hosted-site, but it's still worth removing ID column to prevent overriding. \r\n\r\nHaving an I.D column can prevent duplication in case customers import twice, but it is also dangerous at the same time. It can override existing products with the same I.D and there is no way to recover data. \r\n\r\n\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"Currently, Code Analyzer runs all the following checks\r\n\r\n* templates\r\n* hooks\r\n* schema\r\n* database\r\n\r\nWe'd like to be able to compose the checks Code Analyzer performs so we can run all or some of the checks. Currently, we have `--skipSchemaCheck` to disable the one schema check, but it would be good to have more control, especially since more checks will be added, see pdV5qK-7T-p2 cc @alopezari.\r\n\r\n\n\n###\n\n","completion":" [3844183371]"}
{"prompt":"**Issue DescriptionAdd products task icons are not consistent, some of the icons follow the site's theme (i.e: Grouped and External product in screenshot), while some are blue. I think the colours are passed to SVG's class, thus we should fix the affected icons.\r\n\r\n<img width=\"400\" alt=\"image\" src=\"https://user-images.githubusercontent.com/3747241/218662584-29cefc01-7e03-47c3-9dd2-ee8fa14d58da.png\">\r\n\r\n**To reproduce**\r\n\r\n1. In a fresh site, set the user's profile color in Users > Profile to something vastly different like orange or red\r\n2. Go to WooCommerce > Home > Add products task\r\n3. Observe the affected icons are in a different color\r\n\r\n**Acceptance criteria**\r\n\r\n1. Grouped and External icons should respect the site theme color\n\n###\n\n","completion":" [3943104021,3943424841]"}
{"prompt":"### Describe the bug\r\n\r\nIn `wc_get_account_menu_items()`, the label for `edit-address` is set to `_n( 'Address', 'Addresses', ( 1 + (int) wc_shipping_enabled() ), 'woocommerce' ),`. The singular \"Address\" text will display correctly in the my-account area, but if shipping is enabled, and hence _n() attempts to load the plural form of the word, then a blank string is returned.\n\n### Expected behavior\n\nThe my account area should display the text \"Addresses\"\n\n### Actual behavior\n\nAn empty string is returned, so no label is visible\n\n### Steps to reproduce\n\nEnable en_GB language\r\nEnable WC Shipping\r\nVisit my-account page\n\n\n\n###\n\n","completion":" [3837257959]"}
{"prompt":"If product content has other FlexSliders with thumbnail navigation besides the default WooCommerce product image gallery, some of the JavaScript functions in `plugins/woocommerce/client/legacy/js/frontend/add-to-cart-variation.js` may conflict with those other FlexSliders because the jQuery selectors used to locate the thumbnail navigation for the product image gallery are too broad and search the entire `.product` element for FlexSlider thumbnail navigation elements instead of being limited to the product gallery container.\n\n### Expected behavior\n\nOnly the thumbnail navigation elements of the product gallery FlexSlider are targeted.\n\n### Actual behavior\n\nThe first FlexSlider thumbnail navigation in the `.product` element is targeted, which may or may not correspond to the thumbnail navigation of the product gallery.\n\n### Steps to reproduce\n\nThis behavior was reproduced on a user site using a third party plugin along with WooCommerce, and may not be reproducible with WooCommerce core alone.\n\n\n\n###\n\n","completion":" [3837257959]"}
{"prompt":"**Issue DescriptionThe current impl. of [ExperimentalCollapsibleList](https://github.com/woocommerce/woocommerce/blob/trunk/packages/js/experimental/src/experimental-list/collapsible-list/index.tsx) component only support opening the items from the top (first screenshot). It would be nice to support opening the content from the bottom (second screenshot)\r\n\r\n![Screen Shot 2023-02-09 at 10 55 05 AM](https://user-images.githubusercontent.com/4723145/217910117-a1ae92fc-55c1-40d5-a192-4a602a9c6768.jpg)\r\n\r\n\r\n\r\n![Screen Shot 2023-02-09 at 10 55 58 AM](https://user-images.githubusercontent.com/4723145/217910301-eb8c4919-e1f3-4dd0-99b0-798f632f80df.jpg)\r\n\r\nLooking at the code, it would be as simple as moving this [block](https://github.com/woocommerce/woocommerce/blob/trunk/packages/js/experimental/src/experimental-list/collapsible-list/index.tsx#L291) to the first array item\n\n###\n\n","completion":" [3943104021,3943193285]"}
{"prompt":"in the Woocommerce refund email... the line\r\nmsgid \"Order fully refunded.\"\r\ngets translated to \"main site language\" even if English i choosen.\n\n### Expected behavior\n\nIt should print in english if english language is active\n\n### Actual behavior\n\nIn the example Swedish is main language, and it shows the Swedish translation even if English is the order language in.\r\nIt is the string msgid \"Order fully refunded.\" in 'woocommerce_email_order_details'\r\n\r\nSame thing happens with ''woocommerce_email_order_meta' when used. that comes out after\n\n### Steps to reproduce\n\n[Image-3 (kopia).pdf](https://github.com/woocommerce/woocommerce/files/10694600/Image-3.kopia.pdf)\r\n\r\nUse a different langauge the English by default.\r\nMake an order in English\r\nRefund the order\r\nThe refund email prints out above (.pdf) in Swedish\n\n\n\n###\n\n","completion":" [3837257959,468434635]"}
{"prompt":"### Describe the bug\r\n\r\nFor WP 6.2 Beta, User navigates to blank page upon clicking \"Add (Paid Product Type) to my store\" option from Task list on \"Woocommerce > Home\" page.\r\n\r\n### Expected behavior\r\n\r\nAll content should be display after clicking on \"Add (Paid Product Type) to my store\" option from Task list on \"Woocommerce > Home\" page.\r\n\r\n### Actual behavior\r\n\r\nFor WP 6.2 Beta, User navigates to blank page upon clicking \"Add (Paid Product Type) to my store\" option from Task list on \"Woocommerce > Home\" page.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create any test site using Jurassic Ninja.\r\n2. Install and activate all the required plugins.\r\n3. Install and activate Woocommerce.\r\n4. Start with OBW.\r\n5. Go to Product Types step.\r\n6. Select any Paid Product Type and Click Continue.\r\n7. Complete OBW.\r\n8. Go to \"Woocommerce > Home\" page\r\n9. Click on \"Add (Paid Product Type) to my store\" option from Task list.\r\n10. Observe that for WP 6.2 Beta, user is navigated to a Blank page.\r\n\r\n### Screenshot:\r\n\r\n![#36793](https://user-images.githubusercontent.com/41110392/217538195-2f9abb33-c599-4ce9-bed0-73bae859f363.gif)\r\n\r\n\n\n###\n\n","completion":" [3943104021,3943424887,3943426545]"}
{"prompt":"woocommerce_run_on_woocommerce_admin_updated doesn't run on an update with the following error message\r\n\r\n`action failed via WP Cron: Scheduled action for woocommerce_run_on_woocommerce_admin_updated will not be executed as no callbacks are registered.`\n\n### Expected behavior\n\nwoocommerce_run_on_woocommerce_admin_updated should run on an update\n\n### Actual behavior\n\nwoocommerce_run_on_woocommerce_admin_updated doesn't run on an update\n\n### Steps to reproduce\n\n1. Go to `WooCommerce -> Status -> Scheduled Actions` and search for `woocommerce_run_on_woocommerce_admin_updated` then delete it\r\n2. Open `wp_options` table and search for `woocommerce_version`\r\n3. Update `woocommerce_version` to a lower number.\r\n4. Go to any WooCommerce Admin page and refresh.\r\n5. Confirm `woocommerce_version` has been updated to the latest number.\r\n6. Go to `WooCommerce -> Status -> Scheduled Actions` and search for `woocommerce_run_on_woocommerce_admin_updated`. \r\n7. Confirm the error message.\n\n\n\n###\n\n","completion":" [3837257959]"}
{"prompt":"codistoconnect name doesn't get populated correctly in OBW. Notice `, ,` after MailPoet\r\n<img width=\"447\" alt=\"Screenshot 2023-02-06 at 17 00 15\" src=\"https://user-images.githubusercontent.com/4723145/217076943-8dae2ca1-0b6b-485e-af4f-fea2c235c960.png\">\r\n\n\n### Expected behavior\n\nIt should say `Omnichannel for WooCommerce`\n\n### Actual behavior\n\nAn empty string is rendered\n\n### Steps to reproduce\n\n1. Start OBW\r\n2. Continue to Business Details step\r\n3. Continue to `Free features`\r\n\n\n\n\n###\n\n","completion":" [3943188171]"}
{"prompt":"I have partners section on my e-shop. Partners are a repeater field created via ACF. One sub field there is logo and it allows to add SVG logo for partner. This is regular image field in ACF. But when i output that SVG logo on website i get error message \"Notice: Undefined index: width in /app/cms/wp-content/plugins/woocommerce/includes/class-wc-regenerate-images.php on line 276 \r\nNotice: Undefined index: height in /app/cms/wp-content/plugins/woocommerce/includes/class-wc-regenerate-images.php on line 277\"\r\n\r\nWhat bug's me is that this is just a regular section that is no way related to Woocommerce. So why even Woocommerce try's to do something with my repeater field and image field? \r\n\r\nOnly workaround is to change Return Format for that logo field from \"Image Array\" to \"Image URL\".\r\n\r\nSo two bugs here:\r\na) Why Woocommerce try's to interact images that are added via ACF and meta fields\r\nb) function get_full_size_image_dimensions() should have check for SVG's since SVG's don't have \r\n\r\nSame issue on Woocommerce support forums at Wordpress.org: [https://wordpress.org/support/topic/woocommerce-regenerating-images-svg-error/](https://wordpress.org/support/topic/woocommerce-regenerating-images-svg-error/)\n\n### Expected behavior\n\nClean image output without notice and without running Woocommerce get_full_size_image_dimensions() function.\n\n### Actual behavior\n\nWoocommerce runs get_full_size_image_dimensions() without reason and results creating notices since it try's to find width and height for SVG.\n\n### Steps to reproduce\n\n1. Install Woocommerce\r\n2. Install Advanced Custom Fields Pro plugin\r\n3. Create repeater field named Partners\r\n4. For that repeater field add sub field Logo as image field\r\n5. Try to echo image and see that notice is outputted\n\n\n\n###\n\n","completion":" [3837257959]"}
{"prompt":"The return type of some shipping and discount getter methods (`get_shipping_total()`, `get_shipping_tax()`, `get_discount_total()`, and `get_discount_tax()`) are not proper. So, those methods generate errors in some special cases. For example, if the `post_status` is `auto-draft`. Then, using those methods throw fatal errors.\r\n\r\nSuppose, we have an order with `auto-draft` status. The order ID is 1347. By running the following code will generate fatal error.\r\n```\r\n$order   = wc_get_order( 1347 );\r\n$earning = $order->get_total_shipping() - $order->get_total_shipping_refunded();\r\n\r\necho $earning;\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe return type of the above-mentioned methods in the `WC_Abstract_Order` class should be `float`, instead of `string`. \r\n1. `get_shipping_total()`\r\n2. `get_shipping_tax()`\r\n3. `get_discount_total()`\r\n4. `get_discount_tax()`\r\n\r\n### Actual behavior\r\n\r\nRight now, the return type of the following methods in the `WC_Abstract_Order` class is `string`, which may generate a fatal error in some specific cases.\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Go to `WooCommerce` > `Orders` > `Add Order`.\r\n2. It will generate an order with an ID.\r\n3. Leave the order creation page without clicking the `Create` button. So, the order's `post_status` will be `auto-draft`.\r\n4. Now, get the order using the `wc_get_order()` method.\r\n5. Try to do some calculations using any of the above-mentioned methods as per below codes. It will throw fatal errors.\r\n```\r\n$order   = wc_get_order( 1347 );\r\n$earning = $order->get_total_shipping() - $order->get_total_shipping_refunded();\r\n\r\necho $earning;\r\n```\r\n\r\n\n\n###\n\n","completion":" [1891051437,1891051453,1891051459]"}
{"prompt":"P2: p73Jol-1C5-p2#comment-6785\n\n![Image](https://user-images.githubusercontent.com/3747241/216605164-3e3cfd2b-3d12-4e0d-9dde-3536e61aba0c.png)\n\nUpdate Avalara's tax task CTA since \"Enable & set up\" does not make sense when we're actually opening up in a new tab.\n\n### Acceptance criteria\n\n1. Replace `Enable & set up` to `Download`\n\n\n\n###\n\n","completion":" [3943104021,3943424841]"}
{"prompt":"The `usePreventLeavingPage` hook currently exists under `client/hooks/`.  This is a useful hook that might be best moved under `@woocommerce/navigation` for reuse.\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"The header slots (`WooHeaderItem` and `WooHeaderPageTitle`) and footer slots (`WooFooterItem`) should be moved to a new package, `@woocommerce/admin-layout` so that they can be used across packages and within 3rd party plugins.\r\n\r\nEventually, it would be good to move other header and footer components into this package, but for now we can begin with just moving the slots so they can be filled in the product editor.\r\n\r\n**Acceptance Criteria**\r\n* [ ] A new package is created with the name `@woocommerce/admin-layout`\r\n* [ ] `WooHeaderItem` is exposed via this package\r\n* [ ] `WooHeaderNavigationItem` is exposed via this package\r\n* [ ] `WooHeaderPageTitle` is exposed via this package\r\n* [ ] `WooFooterItem` is exposed via this package\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"The utils under `plugins/woocommerce-admin/client/products/utils` should be moved to the `@woocommerce/product-editor` package for reuse.\n\nAfter moving the utils, the components, we'll need to hook up the components in the client products pages to the new utils location.\n\n###\n\n","completion":" [4370024739]"}
{"prompt":"In #36517, `node_modules/@wordpress/base-styles/colors.native` was included in `@woocommerce/components` base style sheet.\n\nUnfortunately, this results in two conflicting `$gray-100` SCSS variables, one from that file, and one from `nodule_modules/@wordpress/base-styles/_colors.scss`.\n\nThe end result of this is broken styles on the `SelectControl` (and maybe other `@woocommerce/components`)\n\n## Result\n\n\n![Image](https://user-images.githubusercontent.com/2098816/216082479-4d17ffa9-2420-4a9f-b956-51209feeda5b.png)\n\n\n## Expected\n\n\n\n![Image](https://user-images.githubusercontent.com/2098816/216082513-c06925be-a45d-412e-95ab-0e677f88623a.png)\n\n\n\n###\n\n","completion":" [3943185990,3943425720,4370024739,4370026978]"}
{"prompt":"### Describe the bug\r\n\r\nBlank Screen is displayed after clicking \"Continue\" on \"Business Details\" step while completing OBW flow.\r\n\r\n### Expected behavior\r\n\r\nAfter clicking \"Continue\" on \"Business Details\" step it should navigate to Themes tab.\r\n\r\n### Actual behavior\r\n\r\nBlank Screen is displayed after clicking \"Continue\" on \"Business Details\" step while completing OBW flow.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a test site using Jurassic Ninja (ensure to check the box for WP Downgrade).\r\n2. [Downgrade](https://globalstepp2.wordpress.com/how-to-change-wordpress-version-in-jurassic-ninja/) the version of WP to 5.9 \r\n2. Install and activate all the required plugins.\r\n3. Install and activate Woocommerce.\r\n4. Start with OBW.\r\n5. Go to Business Details > Free feature step.\r\n6. Click Continue.\r\n7. Observe that, Blank Screen is displayed.\r\n\r\n### Note: \r\nAfter changing the theme from \"Appearance > Theme\" and starting the OBW flow again then we are able navigate on Theme step.\r\n\r\n### Screenshot:\r\n\r\n![#36711 1](https://user-images.githubusercontent.com/41110392/216070189-4cea2b51-8b17-4f4e-bdfc-acb1f3949608.gif)\r\n\r\n![#36711 2](https://user-images.githubusercontent.com/41110392/216070204-51cde860-f929-4a55-b696-eddee334f5b5.jpg)\r\n\r\n\n\n###\n\n","completion":" [1891051446,3837257959]"}
{"prompt":"When developing custom filters for the shop sidebar, 3rd party developers should be able to add their own entries to the \"active filters\" widget.\r\n\r\nIn the following example, I set a color/attribute filter and min and max price, as well as two other filters that I developed:\r\n<img width=\"437\" alt=\"image\" src=\"https://user-images.githubusercontent.com/6853605/215855649-44ebd42b-6bc2-4617-951f-b2bd49ae633b.png\">\r\n\r\nIn the same way we can use the `woocommerce_widget_get_current_page_url` filter to add our URL arguments to other filter widgets so that our filter status remains when applying a non-custom filter, we should be able to add our own entries to the \"active filters\" widget.\r\n\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [1527868600,3837257959,3943425968]"}
{"prompt":"This issue scopes making tests in `WC_Webhook_Test` class compatible with HPOS by fixing test or core code, as needed.\r\n\r\nPlease fork from #36650 for workflow to run tests in HPOS context.\r\n\r\nTowards #36376\n\n###\n\n","completion":" [3834300886,3837257959]"}
{"prompt":"This issue scopes making tests in `WC_Tests_WC_Order_Query`, `WC_Abstract_Order_Test` and `WC_Order_Data_Store_CPT_Test` classes compatible with HPOS by fixing test or core code, as needed.\r\n\r\nPlease fork from #36650 for workflow to run tests in HPOS context.\r\n\r\nTowards #36376\n\n###\n\n","completion":" [3834300886,3837257959]"}
{"prompt":"This issue scopes making tests in `WC_Tests_Customer_Functions` and `WC_Tests_Order_Functions` classes compatible with HPOS by fixing test or core code, as needed.\r\n\r\nPlease fork from #36650 for workflow to run tests in HPOS context.\r\n\r\nTowards #36376\n\n###\n\n","completion":" [3834300886,3837257959]"}
{"prompt":"This issue scopes making tests in`WC_Tests_CRUD_Meta_Data` and `WC_Tests_CRUD_Orders` classes compatible with HPOS by fixing test or core code, as needed.\r\n\r\nPlease fork from #36650 for workflow to run tests in HPOS context.\r\n\r\nTowards #36376\r\n\r\n\n\n###\n\n","completion":" [3834300886,3837257959]"}
{"prompt":"This issue scopes adding compatibility for unit tests in `WC_Tests_Admin_Dashboard` with HPOS by fixing unit tests or code code, as appropriate.\r\n\r\nPlease fork from #36650 for workflow to run tests in HPOS context.\r\n\r\nTowards #36376\n\n###\n\n","completion":" [3834300886,3837257959]"}
{"prompt":"This issue scopes making tests in `WC_Gateway_Paypal_Test` class compatible with HPOS by fixing test or core code, as needed.\r\n\r\nPlease fork from #36650 for workflow to run tests in HPOS context.\r\n\r\nTowards #36376\n\n###\n\n","completion":" [3834300886,3837257959]"}
{"prompt":"This issue scopes adding compatibility for unit tests in `WC_Tests_API_Orders` and `WC_Tests_API_Orders_V2` classes by fixing unit tests, or core code as appropriate.\r\n\r\nPlease fork from #36650 for workflow to run tests in HPOS context.\r\n\r\nTowards #36376\n\n###\n\n","completion":" [3834300886,3837257959]"}
{"prompt":"Currently, some unit test in class `WC_Tests_Admin_Report`, `WC_Admin_Tests_API_Reports_Import`, `WC_Admin_Tests_Reports_Customer` and `WC_Tests_Report_sales_by_date` fails when run in HPOS context. This issue scopes fixing unit tests (or core code, as appropriate) so that they work with HPOS.\r\n\r\nPlease fork from #36650 for workflow to run tests in HPOS context.\r\n\r\nTowards #36376\n\n###\n\n","completion":" [3834300886,3837257959]"}
{"prompt":"After merging [this PR](https://github.com/woocommerce/woocommerce/pull/36606), we will show the attribute creation form when there are no attributes.\r\n\r\n![screenshot-user-images githubusercontent com-2023 01 28-10_45_50](https://user-images.githubusercontent.com/1314156/215269843-231f732d-6f6c-4413-addb-7d5a45587ea0.png)\r\n\r\n**Acceptance criteria- [ ] Remove [the product attribute selector](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/includes/admin/meta-boxes/views/html-product-data-attributes.php#L39-L58) when there are no attributes.\r\n- [ ] Once the user adds the first attribute using the fields, they will see the regular interface with the selector, the button, and the attribute list.\r\n\n\n###\n\n","completion":" [1891051461,4370024739]"}
{"prompt":"During the setup wizard there is a call made to a custom REST API endpoint on woocommerce.com that contains themes which have either been deleted or changed to Draft status woocommerce.com.\r\n\r\nThose themes are as follows:\r\n* Makoney\r\n* Mugistore\r\n* Solarone\r\n\r\nAnd the REST API endpoint is here: https://woocommerce.com/wp-json/wccom-extensions/1.0/search?category=themes\r\n\r\nHere's a screenshot for reference:\r\n\r\n![redirects local_wp_wp-admin_admin php_page=wc-admin path=%2Fsetup-wizard step=theme-min](https://user-images.githubusercontent.com/1377956/215259736-ab8d581c-a707-4c49-9b23-25d27fcce565.png)\r\n\n\n### Expected behavior\n\nAll of the themes in the setup wizard should be able to be installed.\n\n### Actual behavior\n\nIf you click on \"Choose\" on one of the broken themes then after a while you'll see an error message:\r\n\"The requested theme Makoney could not be installed. Theme API call failed.\"\n\n### Steps to reproduce\n\nMake your way through the setup wizard and when you get to step \"5 Theme\" try and install one of the broken themes\n\n\n\n###\n\n","completion":" [1891051446,3837257959,641282302]"}
{"prompt":"In #36280 we introduced the concept of test skipping that satisfied the tests for a given workflow based on the file path.\r\n\r\nWhile the skip-tests are running, they don't appear to be actually satisfying the requirement. I believe this is because the name for the required check needs to be the thing that matches, not the name for the job.\r\n\r\nIt would also be nice to clean this up and move all skip-checking under a single file, and switch to doing this on a username basis for the bot-created PRs.\n\n###\n\n","completion":" [3844183371]"}
{"prompt":"In the old experience, when creating a variable product.\r\nUsers who navigate to the `Variations` tab without creating any attributes should see this form as an empty state. It will let them quickly create a variation-specific attribute, which will then show up under `Attributes` with the `Used for variations` box checked. They can uncheck it if needed, but the goal is to make it super easy to create variation attributes without clicking around.\r\n\r\n<img width=\"1103\" alt=\"image\" src=\"https://user-images.githubusercontent.com/79307566/214624354-abcf47ae-0122-43f7-b628-90bb7ffd9fa0.png\">\r\n\r\nFrom issue [#35115](https://github.com/woocommerce/woocommerce/issues/35115). More context [here](https://github.com/woocommerce/woocommerce/issues/35115#issuecomment-1403910659).\n\n###\n\n","completion":" [1891051461,4370024739]"}
{"prompt":"In the old experience, when creating a variable product.\r\nThe `Used for variations` box should be checked and disabled when:\r\n\r\n- the product doesn't have any variations AND\r\n- the product doesn't have any attributes with the `Used for variations` box checked AND\r\n- the user navigates to the `Variations` tab\r\n\r\n<img width=\"888\" alt=\"image\" src=\"https://user-images.githubusercontent.com/79307566/205013424-5011b44e-0c20-4f3b-91ce-380d7dfa3a82.png\">\r\n\r\nFrom issue [#35115](https://github.com/woocommerce/woocommerce/issues/35115). More context [here](https://github.com/woocommerce/woocommerce/issues/35115#issuecomment-1403910659).\r\n\r\n## UPDATE\r\nMaybe we should add another prop [here](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/includes/admin/class-wc-admin-assets.php#L357-L423) to know when we should [disable the checkbox](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/client/legacy/js/admin/meta-boxes-product.js). \r\n\r\n**Acceptance criteria- [ ] Disable `Used for variations` box.\n\n###\n\n","completion":" [1891051461,4370024739]"}
{"prompt":"Now that PRs created by automation need to have passing tests, the trunk prep PR should have a change file (even if it only contains a comment).\r\n\r\nSee #36566 for example of a trunk prep PR that didn't have a change file created by automation.\n\n###\n\n","completion":" [3844183371]"}
{"prompt":"Package Release prep action creates PRs to get packages ready to release.\r\n\r\nIts failing due to permission errors https://github.com/woocommerce/woocommerce/actions/runs/3994187419/jobs/6861814628 \r\n\r\nMaybe PR creation needs to be changed to an API call similar to how its done elsewhere?\r\n\n\n###\n\n","completion":" [3844183371]"}
{"prompt":"In some environments `/var` is a symlink:\r\n\r\n```\r\n# ls -l /\r\n...\r\nlrwxr-xr-x@  1 root  wheel    11 Dec  2 07:37 etc -> private/etc\r\nlrwxr-xr-x@  1 root  wheel    11 Dec  2 07:37 tmp -> private/tmp\r\nlrwxr-xr-x@  1 root  wheel    11 Dec  2 07:37 var -> private/var\r\n\r\n```\r\n\r\nThe product import controller uses `realpath(ABSPATH ...)` to ensure the file being imported exists inside the WP install. When `/var` is a symlink that check fails causing the unit test to fail.\n\n### Expected behavior\n\nUnit tests should pass in either case\n\n### Actual behavior\n\nSee above\n\n### Steps to reproduce\n\nThis could be reproduced by creating a symlink somewhere in the folder structure of the unit test folders and editing wp-tests-config.php to reflect the symlinked path.\r\n\r\n```\r\n/var/folders/8l/pm1lvhbd7zl5fl81yxf6bbr80000gn/T\r\n```\n\n\n\n###\n\n","completion":" [3837257959]"}
{"prompt":"Package release does not handle the initial case very well. The changelog (or lack thereof) causes problems.\r\n\r\nIf a package doesn't exist the release prep fails because there is no changelog. This initial case should be handled explicitly, maybe by passing a flag to explicitly set the initial version? Here is an example new package https://github.com/woocommerce/woocommerce/pull/36600\r\n\r\nWhats needed for the release prep to happen, ie `./tools/package-release/bin/dev prepare @woocommerce/<package-name>`\r\n\r\n1. A blank changelog file. \r\n```\r\n# Changelog\r\n\r\nThis project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n```\r\n2. The ability to set a version and pass it to the [`write` command](https://github.com/woocommerce/woocommerce/blob/18f609eade921fad08daf42c7dc792bfbbc78327/tools/package-release/src/changelogger.ts#L65) using `--use-version`\r\n\r\nThe prep command should work, setting the initial versions correctly and creating an entry in the changelog.\r\n\r\n```\r\n./tools/package-release/bin/dev prepare @woocommerce/<package-name>\r\n```\n\n###\n\n","completion":" [3844183371]"}
{"prompt":"[`DEVELOPMENT.md`](https://github.com/woocommerce/woocommerce/blob/trunk/DEVELOPMENT.md) has all the useful information for setting up the Monorepo.\r\n\r\nIf your environment doesn't have [unit tests setup](https://github.com/woocommerce/woocommerce/tree/trunk/plugins/woocommerce/tests#initial-setup), then commands like `pnpm run test` fail without a useful error message.\r\n\r\n- [ ] Update `DEVELOPMENT.md` with a link\r\n- [ ] Determine if a check in Core is possible/feasible and add a pre-test check, including a useful error message if the check fails\r\n\n\n###\n\n","completion":" [3844183371]"}
{"prompt":"Woocommerce importer doesn't work properly.\r\nIf I try to update 1,929 products using a basic csv file, whose columns are just SKU and Stock, after running the importer I get the message\r\n\r\nImport complete! 1,920 products updated.\r\n\r\n9 products are skipped without a valid reasons.\r\nNote that 1,929 products are all in the database with their unique sku.\r\n\r\nWoocommerce Plugin Support replicated the issue and suggested to report a bug here on GitHub.\r\nHere is the thread https://wordpress.org/support/topic/import-issue-19/\n\n### Expected behavior\n\nI expect 1,929 products to be updated, with the message\r\n\r\nImport complete! 1,929 products updated.\n\n### Actual behavior\n\nI get only 1,920 products updated, with the message\r\n\r\nImport complete! 1,920 products updated.\n\n### Steps to reproduce\n\nFirst set up a csv file as explained above, than follow usual import steps\r\n1. Go to Products > All Products > Import\r\n3. Uplad your csv file\r\n4. Check the checkbox labeled Existing products that match by ID or SKU will be updated. Products that do not exist will be skipped\r\n5. Click on Continue\r\n6. Check that Column names are associated with their related Product Fields \r\n7. Click on Run the importer\r\n8. Wait until the message Your products are now being imported... disappears.\r\n9. You will now see the message Import complete! 1,920 products updated. as screenshot below\r\n\r\n![import-screenshot](https://user-images.githubusercontent.com/123632125/214817608-3ebd20ea-1b22-43a3-a9fb-f1c55eadda5c.png)\r\n\n\n\n\n###\n\n","completion":" [1527866622,1891051450,3837257959]"}
{"prompt":"Right now the `createOrderedChildren()` within the components package -> utils.tsx file needs work:\r\n- It is doing a lot more than ordering children, serving as a catch-all to mutate fills\r\n- It is confusing, accepting various types of props without a lot of clarity in how they're used. Some props are made so they're available within the Slot (for ordering/etc), and others are injected into the fill. \r\n- It is not working quite right, as (among other things) it's resulting in injecting props into standard dom elements. For example, with the following fill:\r\n```js\r\n<WooProductFieldItem\r\n\tid=\"details/name\"\r\n\tsections={ [ { name: 'section/test', order: 1 } ] }\r\n\tpluginId={ PLUGIN_ID }\r\n>\r\n\t<div>Test field</div>\r\n</WooProductFieldItem>\r\n```\r\nIt is attempting to inject props into that standard DOM element `<div />` resulting in console errors.\r\n\r\n**Acceptance criteria**\r\n- Restructure props with greater clarity in how they're used, so it's clearer if you're adding props for use in the fill or the slot. \r\n- Perhaps rename or restructure function to be more single-purpose, since this is not just used for ordering.\r\n- Avoid side-effects such as injecting props into dom elements.\r\n\n\n###\n\n","completion":" [3943425992,4370024739]"}
{"prompt":"Dependent on https://github.com/woocommerce/woocommerce/issues/36609 which adds support for targeting multiple slots with the same fill. \r\n\r\nUse this to add support for variations to be targeted for extensibility separately than the general product sections.\n\n###\n\n","completion":" [3943425992,4370024739]"}
{"prompt":"\r\nRight now the `WooProductFieldItem` and `WooSectionFieldItem` component accept only a single ID of a location (field -> section, and section -> tab) to fill. We'll need to support multiple.\r\n\r\n**Acceptance Criteria**\r\n- Change the property names to make them plural (ie section -> sections)\r\n- These properties should now accept an array of objects, with each object including a `name` and `order`\r\n\n\n###\n\n","completion":" [3943425992,4370024739]"}
{"prompt":"When I have items in the cart before logging in, they overwrite the accounts cart.\r\n\r\nAs an example:\r\nI am logged in an there is 5 x Item1 in my accounts cart. \r\nI decide to add another. So I go to the shop site and add 1 x Item1. Now the cart contains 6 x Item1. \r\nThis seems right to me.  \r\nNow i log out and decide to add another 2 x item1, so I add them to the chart. During checkout I get asked to log in. I do that and now I expect the 2 x Item1 to be added to the 6 x Item1 that are in the cart of my account. \r\nBut now there are only 2 x Item1, instead of 8.\r\n\r\n### Expected behavior\r\n\r\nWhen the items from the logged-out cart get merged into the logged-in cart, items that occur in both carts should be added up.\r\n\r\ncart:\r\n3 x Item1\r\n1 x Item2\r\n\r\nlogged out\r\nadd 2 x Item1 to cart\r\nlog in\r\n\r\ncart:\r\n5 x Item1\r\n1 x Item2\r\n\r\n### Actual behavior\r\n\r\nWhen the items from the logged-out cart get merged into the logged-in cart, the number of the items that occur in both carts are replaced by the logged-out cart.\r\n\r\ncart:\r\n3 x Item1\r\n1 x Item2\r\n\r\nlogged out\r\nadd 2 x Item1 to cart\r\nlog in\r\n\r\ncart:\r\n2 x Item1 (should be 5)\r\n1 x Item2\r\n\r\nNote, that only the number of Item1 is affected\r\n\r\n### Steps to reproduce\r\n\r\nOn a minimal site with just one kind of item to choose from:\r\n\r\n**Logged in**\r\n1. have some items in the cart\r\n2. add item to the cart\r\n3. go to checkout\r\n4. go to cart\r\n\r\nThere should now be _one more_ item in the cart.\r\n\r\n**Logged out**\r\n1. have some items in the cart\r\n6. log out\r\n7. add item to the cart\r\n8. go to checkout\r\n9. login\r\n10. go to cart\r\n\r\nThere should now be _one_ item in the cart, regardless of how many there have been before.\r\n\r\n\n\n###\n\n","completion":" [1891051436,3837257959]"}
{"prompt":"1. [ ] Turn on/off the new editing experience: \r\n       - activate via WooCommerce > Settings and confirm it is active on the Products > Add New tab\r\n       - deactivate via \"use the classic editor\" menu option, and confirm the action.\r\n\r\n2. [ ] Create a simple product\r\n3. [ ] Product editing\n\n###\n\n","completion":" [4370026978]"}
{"prompt":"Hi,\r\nI am trying to update a variation product through REST API.\r\nSending this body:\r\n{\r\n     \"manage_stock\": true,\r\n    \"stock_quantity\": 78\r\n}\r\nAs PUT to this endpoint: ...wp-json/wc/v3/products/2214/variations/2217/\r\n\r\nGetting nice response:\r\n...\r\n    \"manage_stock\": true,\r\n    \"stock_quantity\": 78,\r\n    \"stock_status\": \"instock\",\r\n    \"backorders\": \"no\",\r\n    \"backorders_allowed\": false,\r\n    \"backordered\": false,\r\n    \"low_stock_amount\": null,\r\n...\r\n\r\nBut when doing get against same endpoint 5 sec later (or instantly) i see old stock:\r\n...\r\n    \"manage_stock\": true,\r\n    \"stock_quantity\": 58,\r\n    \"stock_status\": \"instock\",\r\n    \"backorders\": \"no\",\r\n    \"backorders_allowed\": false,\r\n    \"backordered\": false,\r\n    \"low_stock_amount\": null,\r\n...\r\n\r\nI am able to update the parent item. I have played around with parent item setup (setting stock to 100, setting to nothing, setting manage stock to false/true) nothing works. \r\n\r\n\n\n### Expected behavior\n\nUpdate stock quantity on variation as put in my json body, and what is replied in json message\n\n### Actual behavior\n\nA response that looks like stock has changed, but actually stock stays the same\n\n### Steps to reproduce\n\nSend PUT to variation endpoint fx ...wp-json/wc/v3/products/2214/variations/2217/\r\nWith body like this\r\n{\r\n     \"manage_stock\": true,\r\n    \"stock_quantity\": 78\r\n}\r\nDoing get on same endpoint afterwards, and seeing stock has not changed\r\n\r\nBe aware: I am not able to deactivate all plugins, since I am only external developer not WC admin\n\n\n\n###\n\n","completion":" [2444919721]"}
{"prompt":"We should create a REST API endpoint to generate a product's slug. The endpoint should take a product name string as a parameter.\n\n## Acceptance criteria\n\n- [ ] REST API endpoint to generate a unique product slug using a supplied product name string as input.\n\n###\n\n","completion":" [2258932484,4370024739,4370026978]"}
{"prompt":"We should create a few initial e2e tests for the new product management experience.\r\n\r\n## Acceptance criteria\r\n\r\n- [ ] An e2e test that enables/disables the new product management experience.\r\n    - Activate via ~WooCommerce > Settings~ e2e configuration and confirm it is active via Products > Add New\r\n    - Deactivate via \"Use the classic editor\" menu option and confirm old editor is active\r\n- ~[ ] An e2e test that adds a new simple product using the new product management experience.~\r\n- ~[ ] An e2e test that edits a simple product using the new product management experience.~\r\n\r\n## Implementation notes\r\n\r\n- Make sure slug is unique (use microtime)\n\n###\n\n","completion":" [4370024739,4370026978]"}
{"prompt":"When using Bootstrap 5 there is conflict of classes name: Since class='col-1' is Bootstrap registrated class for styling.\n\n### Expected behavior\n\nshows full with form\n\n### Actual behavior\n\nsince Bootstrap understand class 'col-1' and 'col-2' form looks like 1/12 of width and 2/12 of width.\n\n### Steps to reproduce\n\n1. Install bootstrap\r\n2. go to checkout page\n\n\n\n###\n\n","completion":" [33006876,3837257959]"}
{"prompt":"If we have invalid content for the terms and conditions page, the checkout page will be broken and there will not be a checkout button at the bottom of the checkout page.\r\n![image](https://user-images.githubusercontent.com/4906133/214340417-c3fcf3ee-99a0-48dd-ba17-f9ed6446ae14.png)\r\n\n\n### Expected behavior\n\nThe checkout button should not be affected and visible.\n\n### Actual behavior\n\nThe checkout button is hidden inside the terms and conditions div element.\n\n### Steps to reproduce\n\n1. Create a page \"Terms and Conditions\"\r\n2. Make sure that the page has these contents as minimum viable layout: \"<div>\r\n<div>\"\r\n3. Assign Privacy policy and Terms and Conditions pages for checkout page\r\n4. Add product to cart and attempt checkout\r\n5. Notice that the button for checkout is hidden\n\n\n\n###\n\n","completion":" [3837257959]"}
{"prompt":"When the orders table is authoritative and orders sync is off, deleting an order also deletes it from the orders table as if sync was on.\r\n\r\n### Steps to reproduce\r\n\r\n1. Set the orders table as authoritative (Settings - Advanced - Custom data stores) with sync on.\r\n2. Create an order, verify that it exists in both the posts table and in `wc_orders`.\r\n3. Turn sync off.\r\n4. Trash and then delete the order.\r\n5. Verify that the order has been deleted from `wc_orders` (expected) but also from posts (that shouldn't happen).\r\n\r\nThe opposite case (posts authoritative) works fine: when deleting an order with sync off the order still stays in `wc_orders`.\r\n\r\nRelated: https://github.com/woocommerce/woocommerce/issues/36580\n\n###\n\n","completion":" [3834300886,3837257959]"}
{"prompt":"When COT is authoritative and an order is deleted the order records in `wp_wc_order_tax_lookup` and `wp_wc_order_stats` aren't.\r\n\r\n### Steps to reproduce\r\n\r\n1. Set the orders table as authoritative (Settings - Advanced - Custom data stores).\r\n2. Create an order that has line items with taxes.\r\n3. Verify that records exist for the order in `wp_wc_order_tax_lookup` and `wp_wc_order_stats`.\r\n4. Trash the order, then delete it.\r\n5. Verify that the order has been deleted from `wp_wc_orders`, but the records in `wp_wc_order_tax_lookup` and `wp_wc_order_stats` still exist.\r\n\r\nWorth noting that when the posts table is authoritative, deleting an order also deletes the order records in `wp_wc_order_tax_lookup` and `wp_wc_order_stats`, both with sync on and with sync off. There's probably some code that hooks into the post deletion and deletes the records, this should be changed so that these deletions happen in the orders data store.\n\n###\n\n","completion":" [3834300886,3837257959]"}
{"prompt":"In Iran, the order of address fields for the checkout page is different from the default. users are currently using plugins to fix this order but this can easily be fixed by using the default \"get_country_locale\" method.\r\n\r\nI have fixed and asked to merge this issue in #36491\n\n### Expected behavior\n\nit's expected from checkout fields to have the order below in IR locale:\r\n\r\n![Screenshot 2023-01-21 at 17-44-50 Checkout – Level Rod](https://user-images.githubusercontent.com/6337624/213870867-62971bb3-e0fb-4558-9696-ffdcf34de8ea.png)\r\n\r\nthe convention of addressing in Iran is as described below:\r\n\r\n1. country\r\n2. state\r\n3. city \r\n4. destination address\r\n5. postcode\r\n\n\n### Actual behavior\n\nthe current default order of address fields for Iran is as shown in the image below:\r\n\r\n![Screenshot 2023-01-21 at 17-41-05 Checkout – Level Rod](https://user-images.githubusercontent.com/6337624/213870689-baccadfd-cce9-432e-90e7-cc68d541bd3b.png)\r\n\r\n\n\n### Steps to reproduce\n\n1. install woocommerce \r\n2. set the selling country to Iran or have Iran on the list of selling countries\r\n3. go to the checkout page\r\n4. as you can see the order of address fields is not as the conventional way people use in Iran\n\n\n\n###\n\n","completion":" [1527868600,3837257959,468434635]"}
{"prompt":"This is a follow-up to https://github.com/woocommerce/woocommerce/pull/36519#pullrequestreview-1263028565. We should create a unit test to ensure the filter is able to add/replace tasklists at will.\n\n###\n\n","completion":" [3837257959,3943196086,3943424887]"}
{"prompt":"### Describe the bug\r\n\r\nIt seems like [this PR](https://github.com/woocommerce/woocommerce/pull/36380) added a change that breaks some settings tables.\r\n\r\nTake a look at [this comment](https://github.com/woocommerce/woocommerce/pull/36380/files#r1080698812).\r\n\r\n\r\n### Expected behavior\r\n\r\nEvery table under settings should look good.\r\n\r\n### Steps to reproduce\r\n\r\n1. Install a plugin that adds new settings like WooCommerce Payments\r\n2. Go to WooCommerce > Settings > Subscriptions\r\n3. Verify that the table looks odd.\r\n![Screenshot 2023-01-20 at 13 27 04](https://user-images.githubusercontent.com/1314156/213751597-60ed2b2b-f458-42bf-bb3a-a195971d85d7.png)\r\n\r\nThat table should look like this\r\n![Screenshot 2023-01-20 at 13 27 43](https://user-images.githubusercontent.com/1314156/213751747-49af51f0-57b8-4ed8-b7e1-0965f00ecec6.png)\r\n\n\n###\n\n","completion":" [3837257959]"}
{"prompt":"\r\n### Describe the bug\r\n\r\nAfter pressing the three dots in the top bar, the menu is covered by the tabs.\r\n![Screenshot 2023-01-20 at 13 17 23](https://user-images.githubusercontent.com/1314156/213749861-9c0caee8-79c2-423d-8a80-38bc22fe21b6.png)\r\n\r\n### Expected behavior\r\n\r\nThe top bar menu should be fully visible\r\n![Screenshot 2023-01-06 at 15 53 57](https://user-images.githubusercontent.com/1314156/211079667-f9f42643-a889-4372-a189-0d258632fdad.png)\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Go to the new product management experience.\r\n2. Press the three dots in the top bar.\r\n3. The menu is covered by the tabs.\r\n\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"If you add a custom column based on some meta data to Order table With HPOS enabled you can not do the sorting based on that custom column\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nSorting of the order table should be allowd based on the custom columns\r\n\r\n### Actual behavior\r\n\r\nIn the wp_post based orders this feature was working we could sort the orders based on meta data \r\n\r\n### Steps to reproduce\r\n\r\nSteps to creae the issue:\r\n\r\nYou should have HPOS enabled on the site \r\n\r\nstep 1: create a custom meta data for order in this we ahave a meta data random_date that stores random date\r\n\r\n\r\nstep 2: add this mata data as a column to order table and set this column as sortable\r\n\r\nstep 3: sorting do not work on this columns\r\n\r\nhere is the test code add this code in your theme functions.php file, after adding this code place 3 test order\r\nthis code will add custom meta data random_date to those order and it will add the column Random date to order table and make it sortable as well and you can see sorting do not work based on meta data value\r\n\r\n[class-hops-sortable-bug.txt](https://github.com/woocommerce/woocommerce/files/10464572/class-hops-sortable-bug.txt)\r\n\r\n\r\nI have found that this is hpening due to this function sanitize_order_orderby()  in src\\Internal\\DataStores\\Orders\\OrdersTableQuery.php\r\n\r\n\n\n###\n\n","completion":" [3834300886,3837257959]"}
{"prompt":"Currently the `AttributesControl` component houses logic around variations.  We should remove this from the attribute control and allow consumers to control the type of attributes.\n\n**Acceptance criteria**\n\n* [ ] We should remove the `attributeType` prop\n* [ ] Copy/text specific to variations should be modifiable via props\n* [ ] `onEdit`, `onCancel` and any other events where consumers need to plug in to custom hooks should be available via props\n\n###\n\n","completion":" [1891051456,3943104021,4370024739]"}
{"prompt":"Following the merge of [PR#36282](https://github.com/woocommerce/woocommerce/pull/36282), visiting the order editor when HPOS is enabled (and authoritative) results in a number of notice-level errors:\r\n\r\n```\r\nAttempt to read property \"ID\" on null\r\nplugins/woocommerce/includes/admin/class-wc-admin-post-types.php:128\r\n```\r\n\r\nThe problem is that the [global `$post` object](https://github.com/woocommerce/woocommerce/blob/2bf9f577952d7a225365fe7728b3187b5be7b701/plugins/woocommerce/includes/admin/class-wc-admin-post-types.php#L123) is not set under these conditions, and therefore [attempts to get the `$post->ID`](https://github.com/woocommerce/woocommerce/blob/2bf9f577952d7a225365fe7728b3187b5be7b701/plugins/woocommerce/includes/admin/class-wc-admin-post-types.php#L128) (there are multiple cases of this, in this block of code) will fail. \r\n\r\nSolving this for `$messages['products']` is probably trivial, but we can see a [similar problem in `$messages['shop_order']`](https://github.com/woocommerce/woocommerce/blob/2bf9f577952d7a225365fe7728b3187b5be7b701/plugins/woocommerce/includes/admin/class-wc-admin-post-types.php#L158-L162). To solve that part elegantly, we may wish to first solve https://github.com/woocommerce/woocommerce/issues/35561.\n\n###\n\n","completion":" [3834300886,3837257959]"}
{"prompt":"Hi woocommerce team.\r\n\r\nAfter updating WooCommerce to version 7.3.0, WooCommerce settings styling is broken on RTL websites. In version 7.2.2 everything is displayed well.\r\n\r\n**in 7.2.2**\r\n\r\n![Screenshot (991)](https://user-images.githubusercontent.com/77163248/212904589-c80e6215-c22b-4faa-b400-f333e7fabb38.png)\r\n\r\nin 7.3.0\r\n\r\n![Screenshot (992)](https://user-images.githubusercontent.com/77163248/212904695-268a9fe2-51f5-47e8-b107-9a77c9d57dc4.png)\r\n\r\n**Please check this bug in other settings such as general. It seems that the settings section is affected by this bug.**\r\n\r\nthank you\r\n\n\n### Expected behavior\n\n-\n\n### Actual behavior\n\n-\n\n### Steps to reproduce\n\n1- Make sure WooCommerce version is 7.3.0\r\n2- The language of the website is RTL\r\n3- See the WooCommerce settings, especially the Payment section. Everything is broken.\n\n\n\n###\n\n","completion":" [1527866622,3837257959]"}
{"prompt":"There is a memory leakage issue/performance bug in OrderTableDataStore's `filter_raw_meta_data` method, as can be seen in the following `qcachegrind` screenshot:\r\n\r\nFor two memory dumps taken sometime after the other in the request, we can see that memory allocated by `filter_raw_meta_data` will continue to increase and is not de-allocated:\r\n\r\n![Screenshot 2023-01-17 at 4 40 14 PM](https://user-images.githubusercontent.com/7571618/212885855-22f3f54d-3f72-4058-ac7a-a4991fe9539d.png)\r\n\r\nUpon closer look, it looks like we are continue to add keys to `internal_meta_keys` prop of the datastore on every order load but are not clearing it.\r\n\r\nTo reproduce:\r\n\r\nOn a WP shell, execute following command for existing orders with ID id1 and id2:\r\n\r\n```php\r\n$ds = WC_Data_Store::load( 'order' );\r\nwc_get_order( $id1 );\r\ncount( $ds->get_internal_meta_keys() ); // 85\r\nwc_get_order($id2);\r\ncount( $ds->get_internal_meta_keys() ); // 118 \r\n```\r\n\r\n**Note**: Make sure that these orders are not cached. Otherwise, they will be loaded directly from cache, bypassing the data_store filter function.\n\n###\n\n","completion":" [1527866622,3834300886,3837257959,472334370]"}
{"prompt":"**Description**\r\nAs part of #36394 we will be creating a slot fill component to add new tabs to the product page. **Description:**\r\nPart of the https://github.com/woocommerce/woocommerce/issues/35952 epic.\r\nThis currently is not very doable with our current implementation of tabs. Currently our use of [`TabPanel`](https://github.com/WordPress/gutenberg/tree/trunk/packages/components/src/tab-panel) relies on having nested children with the `ProductFormTab` component which won't be possible with the SlotFills as fills will be wrapped by the Slot component.\r\n\r\nAlso note that the `TabPanel` component requires the tab name, title, and className as standalone data.\r\n\r\nThere could be a couple options (part of this issue is determining the best approach):\r\n- Refactor our current use of `TabPanel` within [ProductFormLayout](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce-admin/client/products/layout/product-form-layout.tsx#L15) to integrate fills, we can make use of the `useSlot` hooks for these and retrieve the necessary data from there. \r\n- Integrate tabs directly with the `WooProductFormTabItem` fill component as part #36394, asking for the additional title, name data.\r\n- Make use of a React provider within our use of `TabPanel` in [ProductFormLayout](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce-admin/client/products/layout/product-form-layout.tsx#L15) and instead of relying on Children we have `ProductFormTab` register within the provider. This way it doesn't matter if tabs are direct children and we can more freely use the SlotFill component for this.\r\n\r\n**Acceptance criteria**\r\n- [ ] Our product form tabs should be easily extendable by the use of slot fills.\r\n- [ ] The product form tabs should work and look the same as they do now.\r\n\n\n###\n\n","completion":" [3943425992,4370024739]"}
{"prompt":"There is a bug in woocommerce that appears in the Hebrew language.\r\n\r\ni notice to bugs in Hebrew:\r\n1.WooCommerece -> Setting ->Shipping -> Shipping zones |Shipping options |Shipping classes ; not working as should be,\r\nmean not show information as its need to show\r\nwhen i switch to English i see the shipping classes and everything.\r\n\r\n2.WooCommerece -> Status -> Get system report/copy system report; not working\r\n\r\n*i also tested this issues in Hebrew on Fresh Install using Twenty Twenty-Three theme\n\n### Expected behavior\n\n1.Should show Shipping information.\r\n2. Should give Website Status and option to copy.\n\n### Actual behavior\n\n1.Shipping zones |Shipping options |Shipping classes ; not working as should be, mean not show information as its need to show\r\n2.Status -> not working, cant copy and dont produces information to copy\n\n### Steps to reproduce\n\n1. your website must be in Hebrew and your WooCommerece plugin itself(the issue dont appear when WooCommerece in English)\r\n2.WooCommerece -> Setting ->Shipping -> Shipping zones |Shipping options |Shipping classes\r\n3.WooCommerece -> Status -> Get system report/copy system report; not working\r\n\n\n\n\n###\n\n","completion":" [1527866622,3837257959,468434635]"}
{"prompt":"Continue the work that was initially started as part of https://github.com/woocommerce/woocommerce/issues/36073 to create a data store for the product form data.\nWe should add the necessary selectors/resolvers for retrieving the sections, tabs.\nThis issue may depend on: https://github.com/woocommerce/woocommerce/issues/36422 to be finished.\n\n**Acceptance Criteria**\n\n- [ ] A selector should be available to retrieve the sections, tabs\n\n###\n\n","completion":" [3943425992,4370024739]"}
{"prompt":"We currently have a helper PHP function for adding new fields, subsections, and sections to the product form.\nWe will also want to ability for users to add new tabs\nThese should be added in a similar format as the current [ProductForm](https://github.com/woocommerce/woocommerce/tree/trunk/plugins/woocommerce/src/Internal/Admin/ProductForm) sections and fields.\n\n**Acceptance criteria**\n\n- [ ] An `add_tab` function should be available within the `FormFactory` for users to add new tabs and templates to the product form.\n\n###\n\n","completion":" [3943425992,4370024739]"}
{"prompt":"Similar to what is done in this PR: https://github.com/woocommerce/woocommerce/pull/36368 we want to move the shipping section and field out of the product form and have it added by a Slot fill instead.\nWe should also add a correct order separated by two from the slot fill above, this will be 1, given its the first item.\n\nThis issue should also add the initial slot item for the shipping tab -> `tab/shipping`\n\n**Acceptance criteria**\n\n- [ ] Shipping section and field should be added by the `tab/shipping` section fill.\n\n###\n\n","completion":" [3943425992,4370024739]"}
{"prompt":"Similar to what is done in this PR: https://github.com/woocommerce/woocommerce/pull/36368 we want to move the inventory section and field out of the product form and have it added by a Slot fill instead.\nWe should also add a correct order separated by two from the slot fill above, this will be 1, given its the first item.\n\nThis issue should also add the initial slot item for the inventory tab -> `tab/inventory`\n\n**Acceptance criteria**\n\n- [ ] Inventory section and field should be added by the `tab/inventory` section fill.\n\n###\n\n","completion":" [3943425992,4370024739]"}
{"prompt":"Similar to what is done in this PR: https://github.com/woocommerce/woocommerce/pull/36368 we want to move the pricing section and field out of the product form and have it added by a Slot fill instead.\nWe should also add a correct order separated by two from the slot fill above, this will probably be `1` as pricing is the first section within the pricing tab.\nAs part of this issue we should also add the Slot component to the pricing tab -> `tab/pricing`.\n\n**Acceptance criteria**\n\n- [ ] Pricing section and field should be added by the `tab/pricing` section fill.\n\n###\n\n","completion":" [3943425992,4370024739]"}
{"prompt":"Similar to what is done in this PR: https://github.com/woocommerce/woocommerce/pull/36368 we want to move the attributes section and field out of the product form and have it added by a Slot fill instead.\nWe should also add a correct order separated by two from the slot fill above (so 5 most likely if the details section is 1)\n\n**Acceptance criteria**\n\n- [ ] Attributes section and field should be added by the `tab/general` section fill.\n\n###\n\n","completion":" [3943425992,4370024739]"}
{"prompt":"Similar to what is done in this PR: https://github.com/woocommerce/woocommerce/pull/36368 we want to move the images section and field out of the product form and have it added by a Slot fill instead.\nWe should also add a correct order separated by two from the slot fill above (so 3 most likely if the details section is 1)\n\n**Acceptance criteria**\n\n- [ ] Images section and field should be added by the `tab/general` section fill.\n\n###\n\n","completion":" [3943425992,4370024739]"}
{"prompt":"### Context\r\n\r\nIn Rukib team, we are maintaining the [WooCommerce Blocks](https://github.com/woocommerce/woocommerce-blocks) plugin! Couple of months ago we did a research spike (pdFofs-mB-p2) about managing extensions that don't support the Cart & Checkout Blocks. One of our propositions was to declare (in)compatibility with the C&C Blocks (pdFofs-mB-p2#declare-in-compatibility-with-the-cart-checkout-blocks) using the same approach in [HPOS compatibility declaration](https://github.com/woocommerce/woocommerce/wiki/High-Performance-Order-Storage-Upgrade-Recipe-Book#declaring-extension-incompatibility). During one of our pair programming and brainstorming sessions (pca54o-4NP-p2#declaring-in-compatibly-with-the-c-c-blocks) we worked in creating a prouf of concept for declaring (in)compatibility with the Cart & Checkout Blocks feature.\r\n\r\nDeclaring (in)compatibility is simple:\r\n- Declare WC tested up to in the main plugin file(s)\r\n- Add the correct code snippet to the main plugin file(s)\r\n\r\nThe code snippet used for declaring (in)compatibility with [HPOS](https://github.com/woocommerce/woocommerce/wiki/High-Performance-Order-Storage-Upgrade-Recipe-Book#declaring-extension-incompatibility):\r\n\r\n```PHP\r\nadd_action( 'before_woocommerce_init', function() {\r\n    if ( class_exists( '\\Automattic\\WooCommerce\\Utilities\\FeaturesUtil' ) ) {\r\n        \\Automattic\\WooCommerce\\Utilities\\FeaturesUtil::declare_compatibility( 'custom_order_tables', __FILE__, true );\r\n    }\r\n} );\r\n```\r\n\r\nSo, the function of interest is: `declare_compatibility( 'custom_order_tables', FILE, true );`, see [function definition](https://href.li/?https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/src/Utilities/FeaturesUtil.php#L45-L67):\r\n\r\nhttps://github.com/woocommerce/woocommerce/blob/c3d62f113addbbf820ed5e8103a0a052092efc00/plugins/woocommerce/src/Utilities/FeaturesUtil.php#L45-L67\r\n\r\nIn theory, we want to replace the `custom_order_tables` feature_id by a C&C Blocks feature_id (e.g., `cart_checkout_blocks`). During our research, we realized that only the WooCommerce features in `WooCommerce -> Settings -> Advanced -> Features` can use the `declare_compatibility` function:\r\n\r\n![image](https://user-images.githubusercontent.com/14235870/212312501-2ee56ff3-b78e-4f53-93bc-675947ed8071.png)\r\n\r\nIn other words, the current implementation of the `declare_compatibility` function doesn’t work for the Cart & Checkout Blocks feature.\r\n\r\n### Solutions\r\n\r\nI this case, we have two options:\r\n\r\n- In Woo Blocks, create the compatibility declaration API from scratch. This, I believe, is a bad idea: we will duplicate the same feature, and we will not have a single source of truth!\r\n- Add support for the Cart & Checkout Blocks in the declaring compatibility feature\r\n\r\nWe eventually chose to go with the second solution!\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [3834300886,3837257959]"}
{"prompt":"On the webhook for product update, can you please add the product category to the data it sends? The product category is sent when a new product is created, but when a product is updated, the category does not seem to be sent. Even if the product category is not changed, we’d like to still be sent the product category.\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [2046308337,3837257959]"}
{"prompt":"Using `wp-admin`, when editing a comment or review that has a parent, it is showing the parent on the editor.\r\nThis is caused because when translating the `Edit Comment` title, it is running `Automattic\\WooCommerce\\Internal\\Admin\\ProductReviews\\Review:: edit_comments_screen_text` and it has when translating the `Edit Comments` title and it replaces the comment with the parent [here](https://github.com/Automattic/woocommerce.com/blob/e6e3a79c6a3565d42c4da5ead0bc425a5ce3a4ac/plugins/woocommerce/src/Internal/Admin/ProductReviews/Reviews.php#L538-L541).\n\n### Expected behavior\n\nNot replace the comment with the parent one.\n\n### Actual behavior\n\nIt replaces the current comment with the parent one [here](https://github.com/Automattic/woocommerce.com/blob/e6e3a79c6a3565d42c4da5ead0bc425a5ce3a4ac/plugins/woocommerce/src/Internal/Admin/ProductReviews/Reviews.php#L538-L541)\n\n### Steps to reproduce\n\n1. On an Atomic site, go to a published post.\r\n2. Post a comment there. Write something like \"Parent comment\".\r\n3. Leave a reply to the \"Parent comment\".\r\n4. Go to WP Admin > Comments section.\r\n5. Click Edit on the reply to \"Parent comment\".\r\n6. You will notice that it opens the parent comment in the editor instead of the reply you selected to edit (the URL is the correct one).\n\n\n\n###\n\n","completion":" [3837257959]"}
{"prompt":"**Description**\n3PD's may want to create a section from scratch and still make use of some of our fields, like category, summary, and description field. We should expose these through a package, so they can be easily re-used.\n\nAdditional info:\nThe initial `product-editor` library has been merged in ( https://github.com/woocommerce/woocommerce/pull/36600 ) so this is not blocked anymore. \n\n**Acceptance Criteria**\n\n- [ ] Name, category, feature, summary, description field components should be available through `woocommerce/components` or a similar package.\n- [ ] Each field should have the standard `value` & `onChange` props available for easy re-use.\n\n###\n\n","completion":" [3943425992,4370024739]"}
{"prompt":"**Description:**\n**Dependent on: [#36446](https://github.com/woocommerce/woocommerce/issues/36446)**\nPart of the https://github.com/woocommerce/woocommerce/issues/35952 epic.\n\nCreate a new React component `WooProductFormTabItem` that wraps a SlotFill. We can follow a similar format as the wrappers created as part of: #36015 & #36014\nThis issue depends on the outcome of #36446\n\nThe slot component should have a unique `id` for potential filtering, a `location`/`template` for when it should be displayed. Also an `order` prop to assign a specific order, and lastly a plugin id to identify where the tab came from. `order` can be optional.\nFeel free to add support for other props if you think that be useful. We can always expand on this in the future.\n\n**Acceptance criteria**\n- [ ] `Fill` wrapper component should allow consumer to provide location or a template.\n- [ ]  The id, location, and plugin id should be required for the Fill component.\n- [ ] `Slot` wrapper should sort fill items depending on `sort` property.\n- [ ] Component should be available through `@woocommerce/components` or another public package.\n\n###\n\n","completion":" [3943425992,4370024739]"}
{"prompt":"Whilst going through the test documentation I noticed that some of the variable names don't appear to have been filled in correctly.\r\nA couple of examples are:\r\n[cot_status](https://github.com/woocommerce/woocommerce/tree/trunk/plugins/woocommerce/tests/performance#test-environment:~:text=using%20order%20tables-,yes%20__ENV.C_PW,-admin_orders_base_url) should be __ENV.COT? and\r\n[admin_acc_login](https://github.com/woocommerce/woocommerce/tree/trunk/plugins/woocommerce/tests/performance#test-environment:~:text=yes-,__ENV.A_PW,-customer_username) should be __ENV.A_ACC_LOGIN?\r\n\r\nThis task is to check all variables listed and update accordingly\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [3845016070]"}
{"prompt":"This issue scopes adding another variation of unit test workflow to run it with HPOS enabled by default.\n\n###\n\n","completion":" [1527866622,3834300886]"}
{"prompt":"This issue scopes migrating queries defined in class `ReserveStock` to support HPOS data tables, specifically in function `get_query_for_reserved_stock` and `reserve_stock_for_product`.\n\n###\n\n","completion":" [1527866622,3834300886]"}
{"prompt":"Run e2e, API, and performance tests on PR merge to trunk. \n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [2444919724,3288004282,3845016070]"}
{"prompt":"Modify the entry points to the new experience.\r\n\r\n**Remove sidebar link**\r\nRemove the link `Products` > `Add New (MVP)` [here](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/src/Admin/Features/Navigation/CoreMenu.php#L220) and [here](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/includes/admin/class-wc-admin-menus.php#L428).\r\n\r\n**Modify links**\r\nThe following links should point to the new experience:\r\n- `Products` > `Add New`.\r\n- The `Add New` button under `Products` > `All Products`.\r\n- Product edition, after clicking on a product under `Products` > `All Products`. This only will be changed for simple products.\r\n- The edit button after hovering a product under `Products` > `All Products`. This only will be changed for simple products.\r\n\r\nThis [PR has](https://github.com/woocommerce/woocommerce/pull/34115) part of the logic we will need for the first 2 points.\r\n\r\n**Acceptance criteria:**\r\n- [ ] `Products` > `Add New` should point to the new experience.\r\n- [ ] The `Add New` button under `Products` > `All Products` should point to the new experience.\r\n- [ ] Product edition. Send the user to the new experience of the product edition after clicking on a simple product (under `Products` > `All Products`).\r\n- [ ] Product edition. Send the user to the new experience of the product edition after clicking on a simple product edit button (it's visible after hovering over a product under `Products` > `All Products`).\n\n###\n\n","completion":" [3837257959,4370024739,4370026978]"}
{"prompt":"**Description:** \nIn order to enable others to extend the product editor, we'll need to make several components available in packages:\n- Slot fills\n- Utilities for slot fills\n- `<ProductSectionLayout />`\n- Others needed for building fields and sections.\n\nContext: pcQJnU-X5-p2#comment-1166\n\n**Acceptance criteria:**\n- [ ] A package has been created (ie `@woocommerce/product-editor`).\n- [ ] The above listed components have been relocated to that package.\n\n###\n\n","completion":" [3943425992,4370024739]"}
{"prompt":"In order to decrease the load on Action Scheduler and improve overall site performance, instead of scheduling actions when a customer is updated (via checkout or other means), we should directly update the Analytics customer data store. The updates to the Analytics data store are not performance intensive and the expected overall performance gains outweigh the slight increase in synchronous processing when customer updates are made.\n\n### Acceptance criteria\n\n- [ ] When a new customer is created (actions: `woocommerce_new_customer`), `CustomersDataStore::update_registered_customer` should be called\n- [ ] When a customer is updated (actions: `woocommerce_update_customer`, `updated_user_meta`), `CustomersDataStore::update_registered_customer` should be called\n- [ ] When a customer is deleted (actions `delete_user`, `remove_user_from_blog`), `CustomersDataStore::delete_customer_by_user_id()` should be called\n- [ ] When personal data is removed from an order (action: `woocommerce_privacy_remove_order_personal_data`), `CustomersScheduler::anonymize()` should be called (see implementation detail below about moving this code)\n\n### Implementation details (as long as AC is met, other approaches may also be valid... take these as suggestions)\n\n- Actions listed above are currently hooked up in `CustomersScheduler` ([source](https://github.com/woocommerce/woocommerce/blob/4c236bdc37a8a8be81efe988f48a240041a86379/plugins/woocommerce/src/Internal/Admin/Schedulers/CustomersScheduler.php#L30))\n- Should probably move where actions are hooked up to in `CustomersDataStore::init()` ([source](https://github.com/woocommerce/woocommerce/blob/1ab678c13fed5df393805f0000a8fd0db991772a/plugins/woocommerce/src/Admin/API/Reports/Customers/DataStore.php#L86))\n- Should probably move `CustomersScheduler::anonymize()` implementation to `CustomersDataStore::anonymize()` (not sure why this wasn't done initially)\n\n### References \n\n- Original suggestion by @joshuatf: p7bje6-4BB-p2#comment-7613\n\n###\n\n","completion":" [1527866622,3943425133,472334370]"}
{"prompt":"Add a description field to the feedback modal that we show after pressing `Share feedback` in the bottom bar.\r\n\r\n<img width=\"929\" alt=\"Captura de ecrã 2022-10-17, às 16 29 58\" src=\"https://user-images.githubusercontent.com/3380168/196220119-4850d6a3-a0aa-4360-abb8-e6a88ce1142f.png\">\r\n\r\n**Description textarea**\r\n`Title`: How is this screen useful to you? What features would you add or change?\r\n`Placeholder`: Optional, but much appreciated. We love reading your feedback!\r\n`Design`: lj4AUMJnpMtUe7XqyvOONq-fi-501%3A6361&t=7PveV6YsBsObVtis-1\r\n\r\nAcceptance criteria:\r\n- [ ] Add a description textarea to the feedback modal that we show after pressing `Share feedback` in the bottom bar.\n\n###\n\n","completion":" [3943104021,4370024739,4370026978]"}
{"prompt":"When the new user enters the new experience for the first time, we should show them an intro modal.\r\n\r\n**Modal**\r\n`Title`: Meet the product editing form\r\n`Body`: Let us show you how to navigate the form and create this product from start to finish in no time.\r\n`Primary button`: Show me around (10 s)\r\n`Secondary button`: I’ll explore on my own\r\n\r\n`Desing`: lj4AUMJnpMtUe7XqyvOONq-fi-501%3A7172&t=7PveV6YsBsObVtis-1\r\n\r\n\r\nIf the user selects \"Show me around (10 s)\", we enable the spotlight tour with the five steps shown below.\r\nDesigns: lj4AUMJnpMtUe7XqyvOONq-fi-501%3A7372&t=npEAXmnjXwQbZ97A-0\r\n\r\n- Step 1\r\n`Design`: lj4AUMJnpMtUe7XqyvOONq-fi-501%3A7372&t=7PveV6YsBsObVtis-1\r\n`Tooltip title`: 📣  Tell a story about your product\r\n`Tooltip body`: The product form will help you describe your product field by field—from basic details like name and description to attributes the customers can use to find it on your store.\r\n\r\n- Step 2\r\n`Design`: lj4AUMJnpMtUe7XqyvOONq-fi-501%3A7248&t=7PveV6YsBsObVtis-1\r\n`Tooltip title`: ✍️  Set up pricing & more\r\n`Tooltip body`: When done, use the tabs to switch between other details and settings. In the future, you’ll also find here extensions and plugins.\r\n\r\n- Step 3\r\n`Design`: lj4AUMJnpMtUe7XqyvOONq-fi-501%3A7474&t=7PveV6YsBsObVtis-1\r\n`Tooltip title`: 🔍  Preview and publish\r\n`Tooltip body`: With all the details in place, use the buttons at the top to easily preview and publish your product. Click the arrow button for more options.\r\n\r\n- Step 4\r\n`Design`: lj4AUMJnpMtUe7XqyvOONq-fi-501%3A7614&t=7PveV6YsBsObVtis-1\r\n`Tooltip title`: ⚙️  Looking for more?\r\n`Tooltip body`: If the form doesn’t yet have all the features you need—it’s still in development—you can switch to the classic editor anytime.\r\n\r\n- Step 5\r\n`Design`: lj4AUMJnpMtUe7XqyvOONq-fi-501%3A7716&t=7PveV6YsBsObVtis-1\r\n`Tooltip title`: 🛟  We’re here to help\r\n`Tooltip body`: Check out the help panel for useful tips and links to step-by-step guides—or reach out to us with any questions.\r\n\r\n\r\n**Bottom bar**\r\nWe will display [a bar at the bottom](https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce-admin/client/customer-effort-score-tracks/product-mvp-ces-footer.tsx) that will allow the user to share feedback or disable the new experience. The bar will be shown if one of the following conditions is met:\r\n- Closes the `Meet the product editing form` modal.\r\n- Selects the \"I’ll explore on my own\" option in the modal\r\n- After the user completes the spotlight tour.\r\n- After the user closes the spotlight tour without finishing it.\r\n\r\nThe bar should be displayed permanently unless it's closed by the user.\r\n\r\n<img width=\"929\" alt=\"Captura de ecrã 2022-10-17, às 16 29 58\" src=\"https://user-images.githubusercontent.com/3380168/196220119-4850d6a3-a0aa-4360-abb8-e6a88ce1142f.png\">\r\n\r\n**Acceptance criteria:**\r\n- [ ] Show an intro modal when the new user enters the new experience for the first time.\r\n- [ ] The modal is composed of the image, title, body, and buttons described above and in the design lj4AUMJnpMtUe7XqyvOONq-fi-501%3A7172&t=7PveV6YsBsObVtis-1\r\n- [ ] If the user presses \"Show me around (10 s)\", we will enable the spotlight tour with the five steps described above.\r\n- [ ] We will show the bottom bar if the user:\r\n   - [ ] Closes the `Meet the product editing form` modal.\r\n   - [ ] Selects the \"I’ll explore on my own\" option in the modal.\r\n   - [ ] Completes the spotlight tour.\r\n   - [ ] Closes the spotlight tour without finishing it.\n\n###\n\n","completion":" [3837257959,4370024739,4370026978]"}
{"prompt":"Enable the new experience when a new user selects the \"Physical product\" option in the \"Add products\" task.\r\n\r\n**Acceptance criteria- [ ] Enable the new experience after selecting \"Physical product\" in the \"Add products\" task.\r\n- [ ] The rest of the users should get the current experience.\r\n- [ ] Redirect the user to the new experience instead of the old one.\r\n- [ ] Add Tracks events.\r\n\n\n###\n\n","completion":" [4370024739,4370026978]"}
{"prompt":"**Depends on #36589**\n\nI noticed that we'd implemented the input field's behavior in the Edit link modal differently from what I intended, but it's actually better. We can improve it further by tweaking the copy.\n\n**Design**\n\n`5sAIeTRd9Yp7nSCT33BAWz-fi-10611%3A207538&t=reVe66hOXCq7FT7t-4`\n\n<img width=\"608\" alt=\"image\" src=\"https://user-images.githubusercontent.com/79307566/211018207-c6b73c5c-42da-4d67-bcef-e31a934b0b8c.png\">\n\nWhat's changed:\n\n- Removed the field's label.\n- Moved the link preview from the label to the field's helper text.\n- Added static text with additional guidance. It is displayed about the field.\n\n**Acceptance criteria**\n\n- [ ] There's a new bit with the additional explanation that appears above the link input field.\n- [ ] The link in the field's helper text updates in real-time as the user types.\n\n###\n\n","completion":" [4370024739,4370026978]"}
{"prompt":"When working on https://github.com/woocommerce/woocommerce/pull/36308 I observed that a REST API query like the following (where we order by date, descending) may not work as expected when HPOS is authoritative:\r\n\r\n```\r\n# Implict\r\n/wp-json/wc/v3/orders\r\n\r\n# Explicit\r\n/wp-json/wc/v3/orders?orderby=date&order=desc\r\n```\r\n\r\nThis is because:\r\n\r\n- HPOS order queries do not support passing multiple order-by values in a single string (example: `date ID`).\r\n- The above is something we rely on, from within [WC_REST_CRUD_Controller](https://github.com/woocommerce/woocommerce/blob/7.2.2/plugins/woocommerce/includes/rest-api/Controllers/Version3/class-wc-rest-crud-controller.php).\r\n- The reason it works with the CPT order store is that it is built on top of `WP_Query`, which *does* support this convention.\r\n\r\nInternal discussion p1672952839476529-slack-C0E1AV8T0.\n\n###\n\n","completion":" [1527866622,3834300886]"}
{"prompt":"Before today, using the product filters feature on my website would work flawlessly. But I woke up this morning to an Adsense error saying they are unable to show ads on pages that worked before.\r\n\r\nWhen looking into the issue, I noticed when I use the product filters feature on my home page of the woocommerce shop, I’m always redirected to the “Hello World” default post that come with WordPress.\r\n\r\nHowever, if I use the product attribute filter feature while viewing a woocommerce category, then the filters work as they should\r\n\r\nIt’s only when trying to use the attribute filter on the index page of the woocommerce shop, that I’m seeing this redirect issue cropping up now.\r\n\r\nI’ve tried switching my theme back to to the default storefront and the issue still persists.\n\n### Expected behavior\n\nwhen selecting one of the many woocommerce product filter attributes, I normally see a filtered list of products based on the attribute that was selected\n\n### Actual behavior\n\ninstead, if I try to use a product attribute filter on the home page of the woocommerce shop, then I am getting redirected to the hello world post\n\n### Steps to reproduce\n\n1. Visit home page of the website\r\n2. Select a product filter\r\n3. watch as the website redirects you to the hello world post instead of filtering the products\n\n\n\n###\n\n","completion":" [1891051461]"}
{"prompt":"**Issue DescriptionAdd an optional \"InputProps\" to the experimental SelectControl component so we can pass custom props to the input component for WCCOM NUX.\r\n\r\nRelated: https://github.com/Automattic/woocommerce.com/pull/15577\n\n###\n\n","completion":" [3943185990]"}
{"prompt":"We're working to make the attributes components reusable, specifically for the options work.  The attributes components have become a little complex and prone to bugs.\n\nThis was partially refactored in https://github.com/woocommerce/woocommerce/pull/35997 into smaller components.\n\nThis issue will involve continuing to break down these components and remove data fetching and manipulation outside of this component.\n\n### Acceptance Criteria\n\n* [ ] Callbacks for various events should be available as props to the consumer.  `onAdd`, `onEdit`, etc.\n* [ ] Data fetching should occur outside of this component so consumers can decide what attributes to pass in\n* [ ] Components should be more easily tested without the need to mock data stores or other fetching utils\n\n###\n\n","completion":" [1891051456,3943104021,4370024739]"}
{"prompt":"**Describe the bug:**\r\nWhen the user is editing a variation and clicks to return to the main product, he's redirected to the respective tab in the parent product. I think it makes more sense to redirect the user to the Options tab, where he has access to all variations. \r\n\r\n**Steps to reproduce:**\r\n1. Create a new product using the new experience in the test store: pcQJnU-Lr-p2\r\n2. Create at least one variation and edit the variation\r\n3. Visit one of the tabs (Pricing, General, etc) and click \"return to the main product\"\r\n4. Confirm that you're redirected to the respective tab in the parent product\r\n\n\n###\n\n","completion":" [1891051456,4370024739]"}
{"prompt":"**Describe the bug:**\r\nWhen the user clicks to edit an individual variation it should be redirected to its general tab. We're redirecting the user to a non-existent tab. \r\n\r\n**Steps to reproduce:**\r\n1. Create a new product using the new experience in the test store: pcQJnU-Lr-p2\r\n2. Create a variation and click to edit the individual variation\r\n3. Confirm that the following screen is an empty tab\r\n\n\n###\n\n","completion":" [1891051456,4370024739]"}
{"prompt":"**Describe the bug:**\r\nThe variations are created in the admin but it looks like the product is saved as simple product.\r\n\r\n**Steps to reproduce:**\r\n1. Create a new product using the new experience in the test store: pcQJnU-Lr-p2\r\n2. Fill in the product title and add at least 1 variation\r\n3. Add the price to each variation\r\n4. Publish the product\r\n5. Check the product page and confirm that it doesn't include the variations\r\n6. Open the product using the current experience and confirm that it was saved as simple product\n\n###\n\n","completion":" [1891051456,4370024739]"}
{"prompt":"**Describe the bug:**\r\nI noticed that it was not possible to publish a simple product while I was testing the new variations flow:\r\n\r\n\r\nhttps://user-images.githubusercontent.com/3380168/210580040-d206cad6-c4b0-407c-9723-49464d5c1717.mp4\r\n\r\n**Steps to reproduce:**\r\n1. Create a new product using the new experience in the test store: pcQJnU-Lr-p2\r\n2. Fill all the fields, except the fields available in the options tab\r\n3. Try to publish the product\r\n4. See the error\n\n###\n\n","completion":" [1891051456,4370024739]"}
{"prompt":"This is a follow-up to https://github.com/woocommerce/woocommerce/issues/36248.\r\n\r\nThe objective of this task is to add a remote API endpoint for displaying shipping partners in the marketing task. This is to be hosted on WooCommerce.com, similar to `obw-free-extensions`. The data hosted are as follows:\r\n\r\n1. Shipping partner logo\r\n1. Plugin name\r\n1. Plugin slug\r\n1. Countries supported\r\n1. Learn more link\r\n1. Other copies depending on the confirmed design\r\n\r\nWe'd also need the image to be hosted on WooCommerce.com\r\n\r\n## Acceptance Criteria\r\n\r\n1. Add the ability for a remote endpoint to enable or disable the featured partners (p73Jol-1C5-p2#comment-6419)\n\n###\n\n","completion":" [3943104021]"}
{"prompt":"**Description:** we plan to start testing the simple physical product MVP with users very soon. We should add a feature flag to hide all the variations that's currently in development, as it's still not ready for external testing. \r\n\r\n\r\n**Acceptance criteria:**\r\n- [ ] Introduce a feature flag to hide the variations management flow in progress whenever we need it: options tab and all the features/fields in this tab. \r\n\n\n###\n\n","completion":" [1891051456,4370024739]"}
{"prompt":"I’ve found an issue on the recent versions of Woocommerce which displays the quantity input even though I checked the Sold Individually checkbox on the Inventory tab: https://snipboard.io/i1tDQS.jpg\n\n### Expected behavior\n\nQuantity field should be hidden if Sold Individually option is enabled\n\n### Actual behavior\n\nThe quantity field is showing which is confusing as customers do not understand why they can’t hit + and change it to 2 or 3???\n\n### Steps to reproduce\n\n1.) Woocommerce edit product\r\n2.) enable \"Sold Individually\" checkbox.\r\n\n\n\n\n###\n\n","completion":" [1891051436,3837257959]"}
{"prompt":"In order edit page with HPOS enabled, on successfully updating an order, no message is displayed.\r\n\r\nIn the posts page, this used to be displayed:\r\n\r\n<img width=\"1310\" alt=\"Screenshot 2023-01-03 at 6 16 23 PM\" src=\"https://user-images.githubusercontent.com/7571618/210360190-39267e6e-98c5-4717-9df5-b618749e28da.png\">\r\n\r\nThis issue scopes adding similar message box for HPOS screen as well (including the filter `post_updated_messages`).\n\n###\n\n","completion":" [1527868600,1891051458,3834300886]"}
{"prompt":"undefinedRecently, the `can save industry changes when navigating back to \"Store Details\"` became flaky both in the nightly smoke test site and wp-env localhost. Notice from the Allure report below (generated on Dec. 30) that this test last passed on Dec 29th but started failing since Dec. 30.\r\n<img width=\"1243\" alt=\"Screen Shot 2023-01-02 at 7 14 06 PM\" src=\"https://user-images.githubusercontent.com/4509348/210271691-e53febc3-64d8-4d29-934e-945b77eb790a.png\">\r\n\n\n###\n\n","completion":" [3845073088]"}
{"prompt":"### Describe the bug\r\n\r\nIn the `Attributes` section, reordering the first list item also moves the cover image.\r\n\r\n![Screen Capture on 2023-01-02 at 11-31-33](https://user-images.githubusercontent.com/1314156/210245334-2ba8abc8-af5e-420f-bad0-2d8dee81792c.gif)\r\n\r\n### Steps to reproduce\r\n\r\n1. Add a couple of attributes and a cover image to a product.\r\n2. Reorder the attributes, grab the first item and move it.\r\n3. The cover image will move with the draggable item.\r\n\n\n###\n\n","completion":" [1891051456,3943104021,4370024739]"}
{"prompt":"### Describe the bug\r\n\r\nThere is a problem when reordering items in attributes/options lists. Reordering items in one list removes every item in the other list.\r\n\r\n![Screen Capture on 2023-01-04 at 16-10-34](https://user-images.githubusercontent.com/1314156/210631235-5b5cefb2-b0c3-402b-a1a9-40ad74e7b06c.gif)\r\n\r\n### Expected behavior\r\n\r\nReordering items in one list shouldn't affect the other list.\r\n\r\n### Steps to reproduce\r\n\r\n1. Add some attributes and options to a product.\r\n2. Reorder the attributes.\r\n3. Go to the `Options` section and verify that the list is empty now.\r\n\n\n###\n\n","completion":" [1891051456,3943104021,4370024739]"}
{"prompt":"P2: p73Jol-1C5-p2#comment-6601\nFigma: cJQeyyhx9PraQrY3YAtCGM-fi-4001%3A345877\n\nIncorporate new shipping partners into the shipping task. The partners will be displayed dynamically based on the store's country, and the design will be modified depending on whether one or two partners are featured.\n\nExample 2-partners: France & Germany, Sendcloud & Packlink\n\n![Image](https://user-images.githubusercontent.com/3747241/215959009-56d6f507-24f0-48ce-b6c7-e6b671ee401a.png)\n\nExample 1-partner (existing ShipStation): Packlink\n\n![Image](https://user-images.githubusercontent.com/3747241/215959076-bcfdc11b-e9e7-42e0-9d19-c1c92d4c7993.png)\n\n\n## Acceptance Criteria\n\n1. Dynamically feature partners for countries based on the provided list (p73Jol-1C5-p2#comment-6601)\n1. When featuring a single partner, add their logo to the existing shipping task cJQeyyhx9PraQrY3YAtCGM-fi-4001%3A345877\n1. When featuring two partners, use a new design cJQeyyhx9PraQrY3YAtCGM-fi-4001%3A345877\n1. Currently Envia and Skydropx plugins are not available on wp.org. Replace the CTAs with opening up URLs instead and copy is `Download`\n\n## Other details\n\nFollowing are the countries with 2 partners displayed. Left-right ordering is important (p73Jol-1C5-p2#comment-6695):\n\n- France & Germany: Sendcloud & Packlink\n- Spain & Italy: Packlink & Sendcloud\n- UK: Sendcloud & Shipstation\n\nPlugin URLs:\n\n1. Sendcloud: https://wordpress.org/plugins/sendcloud-shipping/\n3. Packlink: https://wordpress.org/plugins/packlink-pro-shipping/\n4. Envia: **Opens in new URL** https://woocommerce.com/products/envia-shipping-and-fulfillment/\n5. Skydropx: https://wordpress.org/plugins/skydropx-cotizador-y-envios/\n\n###\n\n","completion":" [3943104021,3943424841]"}
{"prompt":"To enhance translatability, please add a translation context to the shipping prefix:\r\nhttps://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/includes/class-wc-countries.php#L413\r\n\r\nThe \"to\" or \"to the\" is rather generic without a context and can lead to wrong translations elsewhere.\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [3837257959]"}
{"prompt":"When navigating to a product variation, the `tab` is initially set to `options` so nothing is shown since this tab does not exist under variations.\n\n### Screenshot\n\n\n\n![Image](https://user-images.githubusercontent.com/10561050/210014703-7dada45b-c951-412d-843f-8f2defc8de0f.png)\n\n\n\n### Testing\n\n1. Create a product with a variation\n2. Navigate to the new product experience `admin.php?page=wc-admin&path=/{product_id}`\n3. Navigate to the variation by using the `edit` button under the variations section in the \"Options\" tab\n4. Note that a blank screen is shown\n\n###\n\n","completion":" [1891051456,3943104021,4370024739]"}
{"prompt":"Based on https://github.com/woocommerce/woocommerce/pull/35873#pullrequestreview-1226829517:\r\n\r\nRun the API tests first, and then run e2e tests as well as the matrix of tests. If an API test fails, it will fail faster, and will probably be indicative that something else is wrong so we could skip running the e2e tests then.\n\n### Describe alternatives you've considered\n\n_No response_\n\n### Additional context\n\n_No response_\n\n###\n\n","completion":" [3845073088]"}
{"prompt":"Post data store currently support sorting by passing a list of ids in the `post__in` param using the `includes` param as order by field. This issue scopes supporting it for HPOS as well.\n\n###\n\n","completion":" [1527866622,2258932484,3834300886]"}
{"prompt":"When searching and having HPOS enabled, REST API will only return the first 10 results.\n\n###\n\n","completion":" [1527866622,2258932484,3834300886]"}
{"prompt":"The new product header has a couple of styling conflicts:\n1. The \"more\" dropdown menu needs a higher z-index to be shown above the navigation\n2. The reminder bar upsets product (variation) actions\n\n### Screenshots\n\n\n\n![Image](https://user-images.githubusercontent.com/10561050/209744900-584b5574-e295-46c7-bccd-6a38483857b6.png)\n\n\n\n![Image](https://user-images.githubusercontent.com/10561050/209744908-4a43be44-78ab-4b90-858c-785c4f65c3f9.png)\n\n\n\n### Acceptance Criteria\n\n* [ ] The reminder bar should not conflict with header actions or change their position\n* [ ] The \"more\" menu should appear above the navigation when opened\n\n###\n\n","completion":" [1891051456,3943104021,4370024739]"}
{"prompt":"When updating the product variation description in the new experience, the legacy editor does not interpret the GB tags as expected.\n\nSimilarly, updating the description in the legacy editor does not properly set the description on mount in the new experience.\n\nIt's likely that the variation description is being sanitized by `wp_kses` on the backend, removing the necessary tags.  I also suspect that using the `edit` context may be a part of this issue.\n\n\n### Screenshot\n\n\n\n![Image](https://user-images.githubusercontent.com/10561050/209743691-af4484b3-5620-4c55-b287-eb2419ae1849.png)\n\n\n\n### Acceptance Criteria\n\n* [ ] Editing a product variation in the new experience should persist\n* [ ] Editing a product variation in the new experience should show correctly in the legacy experience\n* [ ] Editing a product variation in the legacy experience should show correctly in the new experience\n\n###\n\n","completion":" [1891051456,3943104021,4370024739]"}
{"prompt":"When navigating between product tabs, the unsaved work warning is triggered.  Since the tabs are not a true navigation away from the page, they should be navigable without this prompt.\n\n### Screenshot\n\n![Image](https://user-images.githubusercontent.com/10561050/209742633-b3afd067-3f8c-48b8-9d8a-eaf96861b543.png)\n\n\n### Acceptance criteria\n\n* [ ] Navigating between tabs should not trigger the warning\n* [ ] Navigating to other pages away from the form should still trigger the warning\n\n###\n\n","completion":" [1891051456,3943104021,4370024739]"}
{"prompt":"Creating some options and variations appears to convert a product to a variable product automatically on the back-end.  However, deleting all options/variations does not convert this back to a simple product.\n\n### Screenshot\n\n![Image](https://user-images.githubusercontent.com/10561050/209742091-ea9a1e77-092c-4b6e-8fdc-63b3ea5166be.png)\n\n### Acceptance Criteria\n\n* [ ] Deleting all options should convert the product back to a simple product\n* [ ] Product data should be correctly shown (since a `variable` product type currently does not have some data including price)\n\n\n###\n\n","completion":" [1891051456,4370024739]"}
{"prompt":"When posts are active, orders are sorted in DESC order for ID by default. While not necessarily exactly a breaking change, this is unexpected and both API should behave consistently.\n\n###\n\n","completion":" [1527866622,2258932484,3834300886]"}
{"prompt":"When reordering items in either the options or attributes list, the attribute copies its data to other attributes making all items look identical.\n\n\n![Image](https://user-images.githubusercontent.com/10561050/209590055-1e7acda5-c098-4c4c-80ae-718428849261.png)\n\n\n### Testing\n\n1. Add some attributes or options to a product\n2. Reorder the attributes\n3. See the duplicate data\n\n### Acceptance criteria\n\n* [ ] Reordering attributes should work as expected\n* [ ] Editing attributes should not cause issues either or corrupt data\n\n###\n\n","completion":" [1891051456,3943104021,4370024739]"}
{"prompt":"When dispatching an action from one component, it's difficult to check in another component if a dispatched action has completed.\n\nFor example:\n\n```\nconst ComponentA = () => {\n  const { updateProduct } = useDispatch( STORE_NAME );\n  ...\n  updateProduct( args );\n  ...\n}\nconst ComponentB = () => {\n  if ( isResolvingAction( 'updateProduct', [ args ] ) ) {\n    return <Spinner />\n  }\n}\n```\n\nSome prior art exists in the older data stores to draw inspiration from.\n\n**Acceptance criteria**\n* [ ] Checking if an action has resolved should return a boolean reflecting the current status\n* [ ] The data structure should be flexible to allow adding and checking more (custom) action names\n\n###\n\n","completion":" [1891051456,3943188171,4370024739]"}
